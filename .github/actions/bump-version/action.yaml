name: 'Bump Package Version'
description: 'Bump Package version and'

inputs:
  version-type:
    required: true
    description: 'Version type to update. [<newversion> | major | minor | patch]'
  github-token:
    required: true
    description: 'Github Auth-Token'

outputs:
  new-version:
    description: "New Root package version"
    value: ${{ steps.root-version-bump.outputs.new-version }}

runs:
  using: "composite"
  steps: 
    - uses: actions/checkout@v3
      with:  
        token: ${{ inputs.github-token }}
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x 
    # Setup git
    - name: Setup Git
      run: |
        git config --global user.email "github@kartoffelgames.com"
        git config --global user.name "Bump-Action"
      shell: bash
    # Install dependencies
    - name: Build
      run: deno install
      shell: bash
    # Bump root project version
    - name: Bump Root Package Version Numbers
      run: deno task kg bump -t="${{ inputs.version-type }}"
      shell: bash
    # Sync versions between packages.
    - name: Sync Child Package Version Numbers
      run: deno task kg sync -a
      shell: bash
    # Export new version number to action output
    - name: Bump Root Package Version Numbers
      id: root-version
      run: deno eval "console.log('new-version=v'+JSON.parse(new TextDecoder('utf-8').decode(Deno.readFileSync('./deno.json'))).version);" >> $GITHUB_OUTPUT
      shell: bash
    # Push updated version with new version number as commit message
    - name: Push updated versions
      run: |         
        git commit -am "[Version-Bump] ${{ steps.root-version.outputs.new-version }}"
        git push --no-verify
        git tag ${{ steps.root-version.outputs.new-version }}
        git push origin ${{ steps.root-version.outputs.new-version }} --no-verify
      env:
        NODE_AUTH_TOKEN: ${{ inputs.github-token }}
      shell: bash


