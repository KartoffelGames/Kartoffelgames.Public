{"version":3,"file":".././page/build/page.js","mappings":";;;;;;;;;;AAAY;;AAEZ;;AAEA;AACA,mDAAmD,IAAI,SAAS,MAAM,IAAI;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,GAAG;AACH;AACA,uBAAuB;AACvB,GAAG;AACH,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,UAAU,+BAA+B;AAChF;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;AC/KA,IAAAA,iBAAA,GAAAC,mBAAA;AACA,IAAAC,0BAAA,GAAAD,mBAAA;AACA,IAAAE,wBAAA,GAAAF,mBAAA;AACA,IAAAG,WAAA,GAAAH,mBAAA;AACA,IAAAI,sBAAA,GAAAJ,mBAAA;AACA,IAAAK,aAAA,GAAAL,mBAAA;AACA,IAAAM,kBAAA,GAAAN,mBA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,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAEX;EACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EAEV;EACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EAEX;EACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EAEV;EACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EAEV;EACA,CAAC,EAAE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B;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;AChfa;AACb;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,mBAAO,CAAC,oFAAoB;AACrD,4BAA4B,mBAAO,CAAC,0FAAuB;AAC3D,wBAAwB,mBAAO,CAAC,kFAAmB;AACnD,6CAA6C,yCAAyC,+CAA+C;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,sDAAsD;AACtD,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB,8BAA8B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KACiC,EAAE,EAGtC;AACL,aAAa,KAC4B,EAAE,EAGtC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;;ACrMD,8CAA2C,CAAC,WAAW,EAAC,CAAC,mBAAmB,EAAE,6CAA6C,qoBAAqoB,6pBAA6pB,KAAK,uBAAuB,EAAE,KAAK,UAAU,KAAK,WAAW,aAAa,aAAa,YAAY,MAAM,aAAa,SAAS,WAAW,aAAa,aAAa,YAAY,GAAG,QAAQ,UAAU,OAAO,yBAAyB,2BAA2B,yBAAyB,2BAA2B,6BAA6B,uBAAuB,6BAA6B,yBAAyB,uBAAuB,yBAAyB,yBAAyB,2BAA2B,uBAAuB,uBAAuB,uBAAuB,yBAAyB,uBAAuB,6BAA6B,yBAAyB,yBAAyB,2BAA2B,2BAA2B,yBAAyB,6BAA6B,2BAA2B,yBAAyB,yBAAyB,2BAA2B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,2BAA2B,6BAA6B,yBAAyB,2BAA2B,2BAA2B,6BAA6B,6BAA6B,6BAA6B,2BAA2B,yBAAyB,6BAA6B,6BAA6B,2BAA2B,yBAAyB,uBAAuB,6BAA6B,6BAA6B,6BAA6B,2BAA2B,6BAA6B,yBAAyB,2BAA2B,6BAA6B,6BAA6B,6BAA6B,2BAA2B,yBAAyB,6BAA6B,2BAA2B,2BAA2B,6BAA6B,6BAA6B,2BAA2B,6BAA6B,yBAAyB,2BAA2B,2BAA2B,6BAA6B,6BAA6B,6BAA6B,2BAA2B,yBAAyB,6BAA6B,6BAA6B,2BAA2B,yBAAyB,uBAAuB,6BAA6B,6BAA6B,6BAA6B,2BAA2B,6BAA6B,yBAAyB,6BAA6B,6BAA6B,6BAA6B,6BAA6B,2BAA2B,yBAAyB,6BAA6B,2BAA2B,yBAAyB,yBAAyB,uBAAuB,qBAAqB,qBAAqB,cAAc,cAAc,eAAe,eAAe,aAAa,aAAa,cAAc,aAAa,aAAa,eAAe,aAAa,YAAY,YAAY,YAAY,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,eAAe,eAAe,eAAe,eAAe,eAAe,aAAa,aAAa,cAAc,aAAa,cAAc,cAAc,gBAAgB,aAAa,YAAY,cAAc,aAAa,cAAc,eAAe,WAAW,WAAW,WAAW,gBAAgB,WAAW,YAAY,cAAc,YAAY,gBAAgB,YAAY,YAAY,YAAY,cAAc,cAAc,aAAa,cAAc,cAAc,gBAAgB,aAAa,YAAY,cAAc,aAAa,cAAc,eAAe,WAAW,WAAW,WAAW,gBAAgB,WAAW,YAAY,eAAe,cAAc,YAAY,gBAAgB,YAAY,YAAY,YAAY,cAAc,iBAAiB,cAAc,YAAY,aAAa,eAAe,cAAc,cAAc,cAAc,cAAc,eAAe,cAAc,aAAa,cAAc,gBAAgB,aAAa,aAAa,aAAa,aAAa,aAAa,cAAc,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,aAAa,cAAc,cAAc,cAAc,aAAa,cAAc,WAAW,aAAa,YAAY,cAAc,eAAe,cAAc,aAAa,cAAc,YAAY,YAAY,WAAW,YAAY,YAAY,YAAY,eAAe,YAAY,aAAa,cAAc,WAAW,cAAc,WAAW,WAAW,YAAY,YAAY,aAAa,aAAa,aAAa,cAAc,eAAe,aAAa,aAAa,cAAc,cAAc,eAAe,eAAe,aAAa,aAAa,YAAY,eAAe,cAAc,eAAe,cAAc,MAAM,aAAa,WAAW,aAAa,cAAc,aAAa,cAAc,eAAe,YAAY,eAAe,aAAa,YAAY,aAAa,aAAa,cAAc,YAAY,YAAY,YAAY,aAAa,YAAY,eAAe,aAAa,aAAa,cAAc,cAAc,aAAa,eAAe,cAAc,aAAa,aAAa,cAAc,eAAe,eAAe,eAAe,eAAe,eAAe,eAAe,cAAc,eAAe,aAAa,cAAc,cAAc,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,eAAe,cAAc,aAAa,YAAY,eAAe,eAAe,eAAe,cAAc,eAAe,aAAa,cAAc,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,cAAc,cAAc,eAAe,eAAe,cAAc,eAAe,aAAa,cAAc,cAAc,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,eAAe,cAAc,aAAa,YAAY,eAAe,eAAe,eAAe,cAAc,eAAe,aAAa,eAAe,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,cAAc,aAAa,aAAa,YAAY,WAAW,WAAW,cAAc,cAAc,eAAe,eAAe,aAAa,aAAa,cAAc,aAAa,aAAa,eAAe,aAAa,YAAY,YAAY,YAAY,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,eAAe,eAAe,eAAe,eAAe,eAAe,aAAa,aAAa,cAAc,aAAa,cAAc,cAAc,gBAAgB,aAAa,YAAY,cAAc,aAAa,cAAc,eAAe,WAAW,WAAW,WAAW,gBAAgB,WAAW,YAAY,cAAc,YAAY,gBAAgB,YAAY,YAAY,YAAY,cAAc,cAAc,aAAa,cAAc,cAAc,gBAAgB,aAAa,YAAY,cAAc,aAAa,cAAc,eAAe,WAAW,WAAW,WAAW,gBAAgB,WAAW,YAAY,eAAe,cAAc,YAAY,gBAAgB,YAAY,YAAY,YAAY,cAAc,iBAAiB,cAAc,YAAY,aAAa,eAAe,cAAc,cAAc,cAAc,cAAc,eAAe,cAAc,aAAa,cAAc,gBAAgB,aAAa,aAAa,aAAa,aAAa,aAAa,cAAc,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,aAAa,cAAc,cAAc,cAAc,aAAa,cAAc,WAAW,aAAa,YAAY,cAAc,eAAe,cAAc,aAAa,cAAc,YAAY,YAAY,WAAW,YAAY,YAAY,YAAY,eAAe,YAAY,aAAa,cAAc,WAAW,cAAc,WAAW,WAAW,YAAY,YAAY,aAAa,aAAa,aAAa,cAAc,eAAe,aAAa,aAA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AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,qDAAqD;AACpE;AACA;AACA;AACA,MAAM,mDAAQ;AACd;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,IAAI,mDAAQ;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,IAAI,iEAAW;AACf;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,+DAAS;AACb,GAAG;AACH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,mDAAQ;AACZ;AACA,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,mDAAQ;AACZ;AACA,GAAG;AACH;AACA,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA;AACA,IAAI,mDAAQ;AACZ;AACA,2BAA2B,0DAAa;AACxC;AACA;AACA,4CAA4C,+DAAS;AACrD,KAAK;AACL,IAAI,iEAAW;AACf,oBAAoB,8BAA8B;AAClD,MAAM,mDAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI,+DAAS;AACb,GAAG;AACH;AACA,aAAa,SAAS;AACtB;AACA;AACA,IAAI,oDAAS;AACb;AACA,4BAA4B,0DAAa;AACzC;AACA;AACA,4CAA4C,+DAAS;AACrD,KAAK;AACL,IAAI,iEAAW;AACf,oBAAoB,4BAA4B;AAChD,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,aAAa,OAAO;AACpB;AACA;AACA,IAAI,oDAAS;AACb,GAAG;AACH;AACA,IAAI,mDAAQ;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf;AACA;AACA,gBAAgB,qEAAe;AAC/B,sDAAM;;;;;;;;;;AC9RN,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,mFAAmF,WAAW;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA,mBAAmB,QAAQ;AAC3B;AACA,mBAAmB,QAAQ;AAC3B;AACA,kBAAkB,OAAO;AACzB;AACA,oBAAoB,SAAS;AAC7B;;AAEA,oBAAoB,SAAS;AAC7B;;AAEA,oBAAoB,SAAS;AAC7B;AACA,6BAA6B,kBAAkB;AAC/C;AACA,uBAAuB,YAAY;AACnC;;AAEA,sBAAsB,WAAW;AACjC;AACA,yBAAyB,cAAc;AACvC;;AAEA,mBAAmB,QAAQ;AAC3B;;AAEA,oBAAoB,SAAS;AAC7B;AACA,qBAAqB,UAAU;AAC/B,CAAC;;AAED;;AAEA,cAAc,sCAAsC;;AAEpD,0EAA0E,WAAW;AACrF,6EAA6E,WAAW;AACxF,wFAAwF,WAAW;AACnG;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,sDAAsD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mGAAmG,eAAe;AAClH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gFAAgF,iBAAiB;AACjG;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA,kDAAkD,gCAAmB;;AAErE;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,mFAAmF,WAAW;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA,eAAe,gCAAmB;AAClC;;AAEA,cAAc,6DAA6D;AAC3E,cAAc,yDAAyD;AACvE,cAAc,gCAAgC;;AAE9C,cAAc,2BAA2B;;AAEzC;AACA,aAAa,QAAQ;AACrB,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,yDAAyD;AACvE,cAAc,qBAAqB;AACnC,cAAc,eAAe;AAC7B;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa,4CAA4C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,mBAAmB;AACrC,aAAa,QAAQ;AACrB;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA,kDAAkD,gCAAmB;;AAErE;AACA;AACA;AACA;;;;AAIA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC,eAAe,gCAAmB;AAClC;AACA,0BAA0B,gCAAmB;;AAE7C,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAmB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,gBAAgB,gCAAmB,wBAAwB,gCAAmB;AAC9E,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,gCAAmB,2BAA2B;AACzD,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,kEAAkE,iBAAiB;AACnF;AACA,2DAA2D,aAAa;AACxE;AACA,WAAW;AACX;AACA;AACA,IAAI,0BAAmB;AACvB;AACA;AACA;AACA;AACA;AACA,gCAAmB,GAAG,0BAAmB;AACzC,qBAAqB,gCAAmB,GAAG,0BAAmB;AAC9D,+CAA+C;AAC/C,sBAAsB;AACtB,uFAAuF,gCAAmB;;AAE1G,CAAC;AACD;AACA,aAAa,0BAAmB,iCAAiC,0BAAmB;AACpF,GAAG,0BAAmB,8EAA8E,aAAa;AACjH,UAAU;AACV;;;;;;;;;;;;;;;;;;;;;;;ACvtBA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;AAC1e,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA;;AAE2C;AACJ;AAC+C;AACxB;AAC4E;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAkB;;AAElB;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY,oEAAoE,oBAAoB;AAC/G,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B,cAAc,SAAS;AACvB;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA,aAAa,sCAAsC;AACnD;AACA,aAAa,mCAAmC;AAChD;AACA,aAAa,0CAA0C;AACvD;AACA,aAAa,+BAA+B;AAC5C;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uCAAuC,2DAAW;AAClD;AACA,sCAAsC,UAAU;AAChD,iBAAiB,mBAAmB;AACpC;AACA,oCAAoC,UAAU;AAC9C,iBAAiB,mBAAmB;AACpC;AACA;AACA,iCAAiC,8DAAc;AAC/C;AACA;AACA,gCAAgC,2DAAW;AAC3C;AACA,qCAAqC,kEAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA,iBAAiB,UAAU;AAC3B,iBAAiB,mBAAmB;AACpC;AACA;AACA,2BAA2B,gBAAgB;AAC3C,OAAO;AACP;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB,gFAAgF,GAAG;AAClH,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,4CAA4C,iEAAiB,GAAG,+DAAe;AAC/E,+DAA+D,eAAe;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAY;AAC5C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,mBAAmB,0DAAQ,CAAC,qDAAM;AAClC;AACA,oCAAoC,4DAAY;AAChD;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,OAAO;AACP,KAAK;AACL;AACA,uBAAuB,qEAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA,IAAI,+EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAkB;AACnC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;ACvPA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;AAC1e,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA,aAAa,QAAQ;AACrB,eAAe,mBAAmB,gBAAgB,4BAA4B;AAC9E;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,oCAAoC;AACnD,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,4DAA4D;AAC3E;;AAEA;AACA;AACA;AACA;AACA,gFAAgF,mCAAmC;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;;AC/D5B;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7BqC;;AAErC;AACA,aAAa,QAAQ;AACrB,cAAc,qBAAqB;AACnC,cAAc,kBAAkB,gFAAgF,GAAG;AACnH;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,iCAAiC;AAC/C,cAAc,YAAY;AAC1B;;AAEA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA,uBAAuB,mDAAa;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,oBAAoB;;;;;;;;;;;;;;;;;;;;;AC9FnC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxEA;;AAE2D;AACtB;;AAErC;AACA;AACA;AACA;AACA,OAAO,6BAA6B,0BAA0B,6BAA6B,2BAA2B,6BAA6B,WAAW,6BAA6B,GAAG,mEAAe;AAC7M;;AAEA;AACA;;AAEA;AACA;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,aAAa,wDAAwD;AACrE,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mDAAQ;AACd;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,MAAM;;;;;;;;;;;;;;;ACjErB;AACA,aAAa,4IAA4I;AACzJ,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,WAAW,QAAQ,+BAA+B;AAClD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,eAAe;;;;;;;;;;;;;;;ACxH9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAe,sBAAsB;;;;;;;;;;;;;;;;;;;ACvBW;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uEAAuE;AAClF,aAAa;AACb;AACA;AACA,EAAE,sFAA6B;AAC/B;AACA,GAAG;AACH;AACA;AACA,UAAU,yEAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjCiE;;AAEjE;AACA,WAAW,QAAQ;AACnB,eAAe;AACf;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,sEAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;;;;;ACnCyB;AACjB;;AAE/B,cAAc,4BAA4B;AAC1C,cAAc,2BAA2B;;AAEzC;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,IAAI,6CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6CAAQ;AACZ,IAAI,kEAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;;AC9DxB;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;;ACftB,sDAAsD,gBAAgB,6CAA6C,oDAAoD,IAAI,IAAI,IAAI,IAAI;;AAEvL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;ACjBxB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAU;AACd;AACA;AACA,0BAA0B,uBAAgB;AAC1C;AACA,WAAW,mBAAO,CAAC,oDAAO;AAC1B;AACA,EAAE,UAAU;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,mBAAO,CAAC,8EAAoB;;AAEhC;AACA;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,kBAAkB,mBAAO,CAAC,4DAAW;AACrC;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE,KAAK,EAEN;;;;;;;;;;;ACzED,mBAAmB,mBAAO,CAAC,mDAAQ;AACnC;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,WAAW,mBAAO,CAAC,oDAAO;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3CA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB,6BAA6B;;AAE7B,uBAAuB;;AAEvB,0BAA0B;AAC1B;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC1Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,eAAe,mBAAO,CAAC,4FAAc;AACrC,oBAAoB,mBAAO,CAAC,oGAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;;ACnEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,YAAY;AACZ;;;;;;;;;;;AC/Fa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,qBAAqB,mBAAO,CAAC,oHAA0B;AACvD,eAAe,mBAAO,CAAC,4FAAc;AACrgBAAgB;AAChB;;;;;;;;;;;ACnIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,oBAAoB,mBAAO,CAAC,gGAAa;AACzC,eAAe,mBAAO,CAAC,4FAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACxDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,oBAAoB,mBAAO,CAAC,gGAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;;;;;;;;;AChBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;;ACxBa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB,GAAG,YAAY,GAAG,gBAAgB,GAAG,YAAY,GAAG,kBAAkB;AAC7H;AACA,mBAAmB,mBAAO,CAAC,kIAAwC;AACnE,8CAA6C,EAAE,qCAAqC,mCAAmC,EAAC;AACxH,aAAa,mBAAO,CAAC,0GAA4B;AACjD,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;AACtG,kBAAkB,mBAAO,CAAC,oHAAiC;AAC3D,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,aAAa,mBAAO,CAAC,0GAA4B;AACjD,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;AACtG,kBAAkB,mBAAO,CAAC,gGAAuB;AACjD,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH;AACA,kBAAkB,mBAAO,CAAC,sFAAkB;AAC5C,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,kBAAkB,mBAAO,CAAC,sFAAkB;AAC5C,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH;;;;;;;;;;;ACpBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACnDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;AChBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;;;;AC5Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD,iCAAiC,mBAAO,CAAC,sHAAgC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;;;;;;;;;;ACrDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD,iCAAiC,mBAAO,CAAC,sHAAgC;AACzE,iCAAiC,mBAAO,CAAC,yHAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iEAAiE;AACpG,kCAAkC,iEAAiE;AACnG,iCAAiC,iEAAiE;AAClG,gCAAgC,iEAAiE;AACjG,0BAA0B,iEAAiE;AAC3F,2BAA2B,iEAAiE;AAC5F,2BAA2B,iEAAiE;AAC5F,4BAA4B,iEAAiE;AAC7F,4BAA4B,iEAAiE;AAC7F,2BAA2B,iEAAiE;AAC5F,0BAA0B,kEAAkE;AAC5F,iCAAiC,kEAAkE;AACnG,oCAAoC,kEAAkE;AACtG,mCAAmC,kEAAkE;AACrG,kCAAkC,kEAAkE;AACpG,oCAAoC,kEAAkE;AACtG,mCAAmC,+DAA+D;AAClG,mCAAmC,+DAA+D;AAClG,qCAAqC,kEAAkE;AACvG,oCAAoC,+DAA+D;AACnG,oCAAoC,+DAA+D;AACnG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;;AC9Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD,+BAA+B,mBAAO,CAAC,sHAAgC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;;;;;;;;;;ACnEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B,sCAAsC,mBAAO,CAAC,oIAAuC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;;;;;;;;;;ACba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD,6BAA6B,mBAAO,CAAC,gHAA6B;AAClE,6BAA6B,mBAAO,CAAC,gHAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;;;;;AC5Ja;AACb,8CAA6C,EA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E,qCAAqC,iDAAiD,EAAC;AAC5I,2BAA2B,mBAAO,CAAC,+GAA4B;AAC/D,oDAAmD,EAAE,qCAAqC,iDAAiD,EAAC;AAC5I,6BAA6B,mBAAO,CAAC,iHAA6B;AAClE,kDAAiD,EAAE,qCAAqC,iDAAiD,EAAC;AAC1I,0BAA0B,mBAAO,CAAC,2GAA0B;AAC5D,+CAA8C,EAAE,qCAAqC,2CAA2C,EAAC;AACjI,4BAA4B,mBAAO,CAAC,+GAA4B;AAChE,iDAAgD,EAAE,qCAAqC,+CAA+C,EAAC;AACvI;;;;;;;;;;;AC1Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;UC/EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA,sBAAsB;UACtB,oDAAoD,uBAAuB;UAC3E;UACA;UACA,GAAG;UACH;UACA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;;;;;WCxCA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;;;;WCAA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCxCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;;WAED;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA,2BAA2B;WAC3B,4BAA4B;WAC5B,2BAA2B;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA,iBAAiB,qCAAqC;WACtD;;WAEA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,iBAAiB;WACrC;WACA;WACA;WACA,GAAG;WACH;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA,QAAQ;WACR;WACA,MAAM;WACN,KAAK;WACL,IAAI;WACJ,GAAG;WACH;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;;WAEA;WACA;;WAEA;;WAEA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;;WAEA;WACA;WACA,EAAE;;WAEF;WACA;;WAEA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,oBAAoB,oBAAoB;WACxC;WACA;WACA;WACA;WACA,EAAE;;WAEF;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA,IAAI;WACJ;;WAEA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ,GAAG;WACH;WACA;WACA;WACA;;;;;WCrYA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mBAAmB,2BAA2B;WAC9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,kBAAkB,cAAc;WAChC;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,cAAc,MAAM;WACpB;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA,cAAc,aAAa;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,iBAAiB,4BAA4B;WAC7C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kBAAkB,uCAAuC;WACzD;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,iCAAiC;WACpD;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,uCAAuC;WAC7D;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,sBAAsB;WAC5C;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA,WAAW;WACX,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA,YAAY;WACZ;WACA;WACA;WACA;WACA;WACA;WACA,UAAU;WACV;WACA;WACA;WACA;WACA;WACA;WACA,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,wCAAwC;WAC3D;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA;WACA,OAAO;WACP;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE,IAAI;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,EAAE;WACF;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,sCAAsC;WACtC;WACA;WACA,EAAE;WACF;;WAEA;;WAEA;;;;;UE9fA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://@kartoffelgames/web.gpu/../../node_modules/ansi-html-community/index.js","webpack://@kartoffelgames/web.gpu/./page/source/index.ts","webpack://@kartoffelgames/web.gpu/./source/base/light/ambient-light.ts","webpack://@kartoffelgames/web.gpu/./source/base/transform.ts","webpack://@kartoffelgames/web.gpu/./source/base/view_projection/projection/orthographic -projection.ts","webpack://@kartoffelgames/web.gpu/./source/base/view_projection/projection/perspective-projection.ts","webpack://@kartoffelgames/web.gpu/./source/base/view_projection/view-projection.ts","webpack://@kartoffelgames/web.gpu/./source/core/bind_group/bind-group-layout.ts","webpack://@kartoffelgames/web.gpu/./source/core/bind_group/bind-group.ts","webpack://@kartoffelgames/web.gpu/./source/core/bind_group/bind-groups.ts","webpack://@kartoffelgames/web.gpu/./source/core/buffer_type/array-buffer-type.ts","webpack://@kartoffelgames/web.gpu/./source/core/buffer_type/buffer-type.ts","webpack://@kartoffelgames/web.gpu/./source/core/buffer_type/simple-buffer-type.ts","webpack://@kartoffelgames/web.gpu/./source/core/buffer_type/struct-buffer-type.ts","webpack://@kartoffelgames/web.gpu/./source/core/enum/bind-type.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/execution/instruction-executer.ts","webpack://@kartoffelgames/web.gpu/./source/core/execution/instruction/render-instruction.ts","webpack://@kartoffelgames/web.gpu/./source/core/execution/instruction_set/render-instruction-set.ts","webpack://@kartoffelgames/web.gpu/./source/core/execution/parameter/render-parameter.ts","webpack://@kartoffelgames/web.gpu/./source/core/gpu-native-object.ts","webpack://@kartoffelgames/web.gpu/./source/core/gpu.ts","webpack://@kartoffelgames/web.gpu/./source/core/pass_descriptor/attachment-type.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/pass_descriptor/attachments.ts","webpack://@kartoffelgames/web.gpu/./source/core/pass_descriptor/render-pass-descriptor.ts","webpack://@kartoffelgames/web.gpu/./source/core/pass_descriptor/type/attachment.ts","webpack://@kartoffelgames/web.gpu/./source/core/pipeline/data/vertex-attribute.ts","webpack://@kartoffelgames/web.gpu/./source/core/pipeline/render-pipeline.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/buffer/base-buffer.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/buffer/ring-buffer.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/buffer/simple-buffer.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/external-texture.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/texture-sampler.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/texture/canvas-texture.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/texture/texture-usage.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/texture/texture-view.ts","webpack://@kartoffelgames/web.gpu/./source/core/resource/texture/texture.ts","webpack://@kartoffelgames/web.gpu/./source/core/shader/enum/wgsl-access-mode.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/shader/enum/wgsl-binding-type.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/shader/enum/wgsl-shader-stage.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/shader/enum/wgsl-type.enum.ts","webpack://@kartoffelgames/web.gpu/./source/core/shader/shader-analyzer.ts","webpack://@kartoffelgames/web.gpu/./source/core/shader/shader.ts","webpack://@kartoffelgames/web.gpu/./source/math/euler.ts","webpack://@kartoffelgames/web.gpu/./source/math/matrix.ts","webpack://@kartoffelgames/web.gpu/./source/math/quaternion.ts","webpack://@kartoffelgames/web.gpu/./source/math/vector.ts","webpack://@kartoffelgames/web.gpu/../../node_modules/events/events.js","webpack://@kartoffelgames/web.gpu/../../node_modules/html-entities/lib/index.js","webpack://@kartoffelgames/web.gpu/../../node_modules/html-entities/lib/named-references.js","webpack://@kartoffelgames/web.gpu/../../node_modules/html-entities/lib/numeric-unicode-map.js","webpack://@kartoffelgames/web.gpu/../../node_modules/html-entities/lib/surrogate-pairs.js","webpack://@kartoffelgames/web.gpu/./page/source/shader.wgsl","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/clients/WebSocketClient.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/index.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/modules/logger/index.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/overlay.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/overlay/fsm.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/overlay/runtime-error.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/overlay/state-machine.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/overlay/styles.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/socket.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/createSocketURL.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/log.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/parseURL.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/reloadApp.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/sendMessage.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack-dev-server/client/utils/stripAnsi.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack/hot/dev-server.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack/hot/emitter.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack/hot/log-apply-result.js","webpack://@kartoffelgames/web.gpu/../../node_modules/webpack/hot/log.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/data_container/dictionary/dictionary.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/data_container/list/list.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/data_container/tree/base-tree.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/data_container/tree/list-tree.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/data_container/tree/tree.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/exception/exception.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/index.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/util/enum-util.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.core.data/library/source/util/type-util.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/configuration/device-configuration.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/configuration/gamepad-button-mapping.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/configuration/input-configuration.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/connector/gamepad-connector.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/connector/mouse-keyboard-connector.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/device/base-input-device.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/device/gamepad-input-device.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/device/mouse-keyboard-input-device.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/enum/button-value-type.enum.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/enum/gamepad-button.enum.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/enum/input-device.enum.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/enum/keyboard-button.enum.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/enum/mouse-button.enum.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/event/input-action-event.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/event/input-button-event.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/index.js","webpack://@kartoffelgames/web.gpu/../kartoffelgames.web.game_input/library/source/input-devices.js","webpack://@kartoffelgames/web.gpu/webpack/bootstrap","webpack://@kartoffelgames/web.gpu/webpack/runtime/compat get default export","webpack://@kartoffelgames/web.gpu/webpack/runtime/define property getters","webpack://@kartoffelgames/web.gpu/webpack/runtime/get javascript update chunk filename","webpack://@kartoffelgames/web.gpu/webpack/runtime/get update manifest filename","webpack://@kartoffelgames/web.gpu/webpack/runtime/getFullHash","webpack://@kartoffelgames/web.gpu/webpack/runtime/global","webpack://@kartoffelgames/web.gpu/webpack/runtime/hasOwnProperty shorthand","webpack://@kartoffelgames/web.gpu/webpack/runtime/load script","webpack://@kartoffelgames/web.gpu/webpack/runtime/make namespace object","webpack://@kartoffelgames/web.gpu/webpack/runtime/hot module replacement","webpack://@kartoffelgames/web.gpu/webpack/runtime/publicPath","webpack://@kartoffelgames/web.gpu/webpack/runtime/jsonp chunk loading","webpack://@kartoffelgames/web.gpu/webpack/before-startup","webpack://@kartoffelgames/web.gpu/webpack/startup","webpack://@kartoffelgames/web.gpu/webpack/after-startup"],"sourcesContent":["'use strict'\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.5', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n","import { ViewProjection, CameraMatrix } from '../../source/base/view_projection/view-projection';\r\nimport { OrthographicProjection } from '../../source/base/view_projection/projection/orthographic -projection';\r\nimport { PerspectiveProjection } from '../../source/base/view_projection/projection/perspective-projection';\r\nimport { Transform, TransformMatrix } from '../../source/base/transform';\r\nimport { AttachmentType } from '../../source/core/pass_descriptor/attachment-type.enum';\r\nimport { Attachments } from '../../source/core/pass_descriptor/attachments';\r\nimport { RenderParameter } from '../../source/core/execution/parameter/render-parameter';\r\nimport { InstructionExecuter } from '../../source/core/execution/instruction-executer';\r\nimport { RenderInstruction } from '../../source/core/execution/instruction/render-instruction';\r\nimport { Gpu } from '../../source/core/gpu';\r\nimport { RenderPipeline } from '../../source/core/pipeline/render-pipeline';\r\nimport { SimpleBuffer } from '../../source/core/resource/buffer/simple-buffer';\r\nimport { Shader } from '../../source/core/shader/shader';\r\nimport shader from './shader.wgsl';\r\nimport { RenderPassDescriptor } from '../../source/core/pass_descriptor/render-pass-descriptor';\r\nimport { RenderInstructionSet } from '../../source/core/execution/instruction_set/render-instruction-set';\r\nimport { RingBuffer } from '../../source/core/resource/buffer/ring-buffer';\r\nimport { Texture } from '../../source/core/resource/texture/texture';\r\nimport { TextureUsage } from '../../source/core/resource/texture/texture-usage.enum';\r\nimport { TextureSampler } from '../../source/core/resource/texture-sampler';\r\nimport { BaseInputDevice, DeviceConfiguration, InputConfiguration, InputDevices, KeyboardButton, MouseButton, MouseKeyboardConnector } from '@kartoffelgames/web.game-input';\r\nimport { Dictionary } from '@kartoffelgames/core.data';\r\nimport { AmbientLight } from '../../source/base/light/ambient-light';\r\n\r\nconst gHeight: number = 10;\r\nconst gWidth: number = 10;\r\nconst gDepth: number = 10;\r\n\r\n(async () => {\r\n    const lColorPicker: HTMLInputElement = <HTMLInputElement>document.querySelector('#color');\r\n    const lFpsCounter: HTMLSpanElement = <HTMLInputElement>document.querySelector('#fpsCounter');\r\n\r\n    // Create gpu.\r\n    const lGpu: Gpu = await Gpu.create('high-performance');\r\n\r\n    // Init canvas.\r\n    const lCanvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById('canvas');\r\n\r\n    // Init shader.\r\n    const lShader: Shader = new Shader(lGpu, shader);\r\n\r\n    // Create depth and color attachments.\r\n    const lAttachments: Attachments = new Attachments(lGpu, 4);\r\n    lAttachments.resize(1200, 640);\r\n    lAttachments.addAttachment({\r\n        type: AttachmentType.Color,\r\n        name: 'MultisampleTarget',\r\n        format: lGpu.preferredFormat\r\n    });\r\n    lAttachments.addAttachment({\r\n        canvas: lCanvas,\r\n        type: AttachmentType.Color,\r\n        name: 'Canvas'\r\n    });\r\n    lAttachments.addAttachment({\r\n        type: AttachmentType.Depth,\r\n        name: 'Depth',\r\n        format: 'depth24plus'\r\n    });\r\n\r\n    // Setup render pass.\r\n    const lRenderPassDescription: RenderPassDescriptor = new RenderPassDescriptor(lGpu, lAttachments);\r\n    lRenderPassDescription.setDepthAttachment('Depth', 1);\r\n    lRenderPassDescription.setColorAttachment(0, 'MultisampleTarget', { r: 0.5, g: 0.5, b: 0.5, a: 1 }, 'clear', 'store', 'Canvas');\r\n\r\n    // Init pipeline.\r\n    const lPipeline: RenderPipeline = new RenderPipeline(lGpu, lShader, lRenderPassDescription);\r\n    lPipeline.primitiveCullMode = 'back';\r\n\r\n    // Ambient light buffer.\r\n    const lAmbientLight: AmbientLight = new AmbientLight();\r\n    lAmbientLight.setColor(0.1, 0.1, 0.1);\r\n\r\n    const lAmbientLightBuffer = new SimpleBuffer(lGpu, GPUBufferUsage.UNIFORM, new Float32Array(lAmbientLight.data));\r\n    lColorPicker.addEventListener('input', (pEvent) => {\r\n        const lBigint = parseInt((<any>pEvent.target).value.replace('#', ''), 16);\r\n        const lRed = ((lBigint >> 16) & 255) / 255;\r\n        const lGreen = ((lBigint >> 8) & 255) / 255;\r\n        const lBlue = (lBigint & 255) / 255;\r\n\r\n        // Set color to ambient light and update buffer.\r\n        lAmbientLight.setColor(lRed, lGreen, lBlue);\r\n        lAmbientLightBuffer.write(async (pBuffer) => { pBuffer.set(lAmbientLight.data); });\r\n    });\r\n\r\n    const lPointLightBuffer = new SimpleBuffer(lGpu, GPUBufferUsage.STORAGE, new Float32Array([\r\n        /* Position */1, 1, 1, 1, /* Color */1, 0, 0, 1,/* Range */ 200, 0, 0, 0,\r\n        /* Position */10, 10, 10, 1, /* Color */0, 0, 1, 1,/* Range */ 200, 0, 0, 0\r\n    ]));\r\n\r\n    // Transformation.\r\n    const lCubeTransform: Transform = new Transform();\r\n    lCubeTransform.setScale(0.1, 0.1, 0.1);\r\n    const lCubeTransformationBuffer = new RingBuffer(lGpu, GPUBufferUsage.UNIFORM, new Float32Array(lCubeTransform.getMatrix(TransformMatrix.Transformation).dataArray));\r\n\r\n    // Create instanced transformation buffer.\r\n    const lCubeInstanceTransformationData: Array<number> = new Array<number>();\r\n    for (let lWidthIndex: number = 0; lWidthIndex < gWidth; lWidthIndex++) {\r\n        for (let lHeightIndex: number = 0; lHeightIndex < gHeight; lHeightIndex++) {\r\n            for (let lDepthIndex: number = 0; lDepthIndex < gDepth; lDepthIndex++) {\r\n                lCubeInstanceTransformationData.push(lWidthIndex, lHeightIndex, lDepthIndex, 1);\r\n            }\r\n        }\r\n    }\r\n    const lCubeInstanceTransformationBuffer = new SimpleBuffer(lGpu, GPUBufferUsage.STORAGE, new Float32Array(lCubeInstanceTransformationData));\r\n\r\n    // Transformation buffer.\r\n    const lUpdaterFunctions: Array<() => void> = new Array<() => void>();\r\n    const lRegisterObjectHandler = (pId: string, pSet: (pTransform: Transform, pData: number) => void, pGet: (pTransform: Transform) => number) => {\r\n        const lSlider: HTMLInputElement = <HTMLInputElement>document.getElementById(pId);\r\n        const lInput: HTMLInputElement = <HTMLInputElement>document.getElementById(pId + 'Display');\r\n\r\n        const lUpdater = () => {\r\n            lInput.value = <any>pGet(lCubeTransform);\r\n        };\r\n        lUpdaterFunctions.push(lUpdater);\r\n        lUpdater();\r\n\r\n        let lCurrentData: number = 0;\r\n\r\n        const lSetData = (pStringData: string) => {\r\n            const lNumberData: number = parseFloat(pStringData) || 1;\r\n            lCurrentData += lNumberData;\r\n\r\n            pSet(lCubeTransform, lCurrentData);\r\n\r\n            // Reset slider.\r\n            lSlider.value = <any>0;\r\n\r\n            // Set real data.\r\n            for (const lUpdater of lUpdaterFunctions) {\r\n                lUpdater();\r\n            }\r\n\r\n            // Update transformation buffer.\r\n            lCubeTransformationBuffer.write(async (pBuffer) => { pBuffer.set(lCubeTransform.getMatrix(TransformMatrix.Transformation).dataArray); });\r\n        };\r\n\r\n        lSlider.addEventListener('input', (pEvent) => { lSetData((<any>pEvent.target).value); });\r\n        lInput.addEventListener('input', (pEvent) => { lSetData((<any>pEvent.target).value); });\r\n    };\r\n\r\n    // Scale handler.\r\n    lRegisterObjectHandler('scaleWidth', (pTransform: Transform, pData) => { pTransform.setScale(pData, null, null); }, (pTransform: Transform) => { return pTransform.scaleWidth; });\r\n    lRegisterObjectHandler('scaleHeight', (pTransform: Transform, pData) => { pTransform.setScale(null, pData, null); }, (pTransform: Transform) => { return pTransform.scaleHeight; });\r\n    lRegisterObjectHandler('scaleDepth', (pTransform: Transform, pData) => { pTransform.setScale(null, null, pData); }, (pTransform: Transform) => { return pTransform.scaleDepth; });\r\n\r\n    // Translate.\r\n    lRegisterObjectHandler('translateX', (pTransform: Transform, pData) => { pTransform.setTranslation(pData, null, null); }, (pTransform: Transform) => { return pTransform.translationX; });\r\n    lRegisterObjectHandler('translateY', (pTransform: Transform, pData) => { pTransform.setTranslation(null, pData, null); }, (pTransform: Transform) => { return pTransform.translationY; });\r\n    lRegisterObjectHandler('translateZ', (pTransform: Transform, pData) => { pTransform.setTranslation(null, null, pData); }, (pTransform: Transform) => { return pTransform.translationZ; });\r\n\r\n    // Rotate.\r\n    lRegisterObjectHandler('rotatePitch', (pTransform: Transform, pData) => { pTransform.setRotation(pData, null, null); }, (pTransform: Transform) => { return pTransform.rotationPitch; });\r\n    lRegisterObjectHandler('rotateYaw', (pTransform: Transform, pData) => { pTransform.setRotation(null, pData, null); }, (pTransform: Transform) => { return pTransform.rotationYaw; });\r\n    lRegisterObjectHandler('rotateRoll', (pTransform: Transform, pData) => { pTransform.setRotation(null, null, pData); }, (pTransform: Transform) => { return pTransform.rotationRoll; });\r\n\r\n    // Translate.\r\n    lRegisterObjectHandler('pivotX', (pTransform: Transform, pData) => { pTransform.pivotX = pData; }, (pTransform: Transform) => { return pTransform.pivotX; });\r\n    lRegisterObjectHandler('pivotY', (pTransform: Transform, pData) => { pTransform.pivotY = pData; }, (pTransform: Transform) => { return pTransform.pivotY; });\r\n    lRegisterObjectHandler('pivotZ', (pTransform: Transform, pData) => { pTransform.pivotZ = pData; }, (pTransform: Transform) => { return pTransform.pivotZ; });\r\n\r\n    // Transformation.\r\n    const lPerspectiveProjection: PerspectiveProjection = new PerspectiveProjection();\r\n    lPerspectiveProjection.aspectRatio = lAttachments.width / lAttachments.height;\r\n    lPerspectiveProjection.angleOfView = 72;\r\n    lPerspectiveProjection.near = 0.1;\r\n    lPerspectiveProjection.far = 9999999;\r\n\r\n    const lOrtoProjection: OrthographicProjection = new OrthographicProjection();\r\n    lOrtoProjection.aspectRatio = lAttachments.width / lAttachments.height;\r\n    lOrtoProjection.width = 2;\r\n    lOrtoProjection.near = 0;\r\n    lOrtoProjection.far = 999999;\r\n\r\n    const lCamera: ViewProjection = new ViewProjection(lPerspectiveProjection);\r\n    lCamera.transformation.setTranslation(0, 0, -4);\r\n\r\n    // Transformation buffer.\r\n    const lCameraBuffer = new SimpleBuffer(lGpu, GPUBufferUsage.UNIFORM, new Float32Array(lCamera.getMatrix(CameraMatrix.ViewProjection).dataArray));\r\n    const lRegisterCameraHandler = (pId: string, pSet: (pData: number) => void, pGet: () => number) => {\r\n        const lSlider: HTMLInputElement = <HTMLInputElement>document.getElementById(pId);\r\n        const lInput: HTMLInputElement = <HTMLInputElement>document.getElementById(pId + 'Display');\r\n\r\n        const lUpdater = () => {\r\n            lInput.value = <any>pGet();\r\n        };\r\n        lUpdaterFunctions.push(lUpdater);\r\n        lUpdater();\r\n\r\n        const lSetData = (pData: any) => {\r\n            pSet(parseFloat(pData) || 1);\r\n\r\n            // Reset slider.\r\n            lSlider.value = <any>0;\r\n\r\n            // Set real data.\r\n            for (const lUpdater of lUpdaterFunctions) {\r\n                lUpdater();\r\n            }\r\n\r\n            // Update transformation buffer.\r\n            lCameraBuffer.write(async (pBuffer) => { pBuffer.set(lCamera.getMatrix(CameraMatrix.ViewProjection).dataArray); });\r\n        };\r\n\r\n        lSlider.addEventListener('input', (pEvent) => { lSetData((<any>pEvent.target).value); });\r\n        lInput.addEventListener('input', (pEvent) => { lSetData((<any>pEvent.target).value); });\r\n    };\r\n    // Translate.\r\n    lRegisterCameraHandler('cameraPivotX', (pData) => { lCamera.transformation.pivotX = pData; }, () => { return lCamera.transformation.pivotX; });\r\n    lRegisterCameraHandler('cameraPivotY', (pData) => { lCamera.transformation.pivotY = pData; }, () => { return lCamera.transformation.pivotY; });\r\n    lRegisterCameraHandler('cameraPivotZ', (pData) => { lCamera.transformation.pivotZ = pData; }, () => { return lCamera.transformation.pivotZ; });\r\n\r\n    // Camera.\r\n    lRegisterCameraHandler('cameraNear', (pData) => { lPerspectiveProjection.near = pData; }, () => { return lPerspectiveProjection.near; });\r\n    lRegisterCameraHandler('cameraFar', (pData) => { lPerspectiveProjection.far = pData; }, () => { return lPerspectiveProjection.far; });\r\n    lRegisterCameraHandler('cameraAngleOfView', (pData) => { lPerspectiveProjection.angleOfView = pData; }, () => { return lPerspectiveProjection.angleOfView; });\r\n\r\n    // Register keyboard mouse movements.\r\n    const lDefaultConfiguaration: DeviceConfiguration = new DeviceConfiguration();\r\n    lDefaultConfiguaration.addAction('Forward', [KeyboardButton.KeyW]);\r\n    lDefaultConfiguaration.addAction('Back', [KeyboardButton.KeyS]);\r\n    lDefaultConfiguaration.addAction('Left', [KeyboardButton.KeyA]);\r\n    lDefaultConfiguaration.addAction('Right', [KeyboardButton.KeyD]);\r\n    lDefaultConfiguaration.addAction('Up', [KeyboardButton.ShiftLeft]);\r\n    lDefaultConfiguaration.addAction('Down', [KeyboardButton.ControlLeft]);\r\n    lDefaultConfiguaration.addAction('RotateLeft', [KeyboardButton.KeyQ]);\r\n    lDefaultConfiguaration.addAction('RotateRight', [KeyboardButton.KeyE]);\r\n    lDefaultConfiguaration.addAction('Yaw', [MouseButton.Xaxis]);\r\n    lDefaultConfiguaration.addAction('Pitch', [MouseButton.Yaxis]);\r\n    lDefaultConfiguaration.triggerTolerance = 0.2;\r\n    const lInputConfiguration: InputConfiguration = new InputConfiguration(lDefaultConfiguaration);\r\n    const lInputDevices: InputDevices = new InputDevices(lInputConfiguration);\r\n    lInputDevices.registerConnector(new MouseKeyboardConnector());\r\n\r\n    const lCurrentActionValue: Dictionary<string, number> = new Dictionary<string, number>();\r\n    const lKeyboard: BaseInputDevice = lInputDevices.devices[0];\r\n    lKeyboard.addEventListener('actionstatechange', (pEvent) => {\r\n        lCurrentActionValue.set(pEvent.action, pEvent.state);\r\n    });\r\n    window.setInterval(() => {\r\n        const lSpeed = 1;\r\n\r\n        // Z Axis\r\n        if (lCurrentActionValue.get('Forward')! > 0) {\r\n            lCamera.transformation.translateInDirection((lCurrentActionValue.get('Forward')! / 50) * lSpeed, 0, 0);\r\n        }\r\n        if (lCurrentActionValue.get('Back')! > 0) {\r\n            lCamera.transformation.translateInDirection(-(lCurrentActionValue.get('Back')! / 50) * lSpeed, 0, 0);\r\n        }\r\n\r\n        // X Axis\r\n        if (lCurrentActionValue.get('Right')! > 0) {\r\n            lCamera.transformation.translateInDirection(0, (lCurrentActionValue.get('Right')! / 50) * lSpeed, 0);\r\n        }\r\n        if (lCurrentActionValue.get('Left')! > 0) {\r\n            lCamera.transformation.translateInDirection(0, -(lCurrentActionValue.get('Left')! / 50) * lSpeed, 0);\r\n        }\r\n\r\n        // Y Axis\r\n        if (lCurrentActionValue.get('Up')! > 0) {\r\n            lCamera.transformation.translateInDirection(0, 0, (lCurrentActionValue.get('Up')! / 50) * lSpeed);\r\n        }\r\n        if (lCurrentActionValue.get('Down')! > 0) {\r\n            lCamera.transformation.translateInDirection(0, 0, -(lCurrentActionValue.get('Down')! / 50) * lSpeed);\r\n        }\r\n\r\n        // Rotation.\r\n        if (lCurrentActionValue.get('Yaw')! > 0 || lCurrentActionValue.get('Yaw')! < 0) {\r\n            lCamera.transformation.addEulerRotation(0, lCurrentActionValue.get('Yaw')! * lSpeed, 0);\r\n        }\r\n        if (lCurrentActionValue.get('Pitch')! > 0 || lCurrentActionValue.get('Pitch')! < 0) {\r\n            lCamera.transformation.addEulerRotation(lCurrentActionValue.get('Pitch')! * lSpeed, 0, 0);\r\n        }\r\n        if (lCurrentActionValue.get('RotateLeft')! > 0) {\r\n            lCamera.transformation.addEulerRotation(0, 0, lCurrentActionValue.get('RotateLeft')! * lSpeed);\r\n        }\r\n        if (lCurrentActionValue.get('RotateRight')! > 0) {\r\n            lCamera.transformation.addEulerRotation(0, 0, -lCurrentActionValue.get('RotateRight')! * lSpeed);\r\n        }\r\n\r\n        // Update transformation buffer.\r\n        lCameraBuffer.write(async (pBuffer) => { pBuffer.set(lCamera.getMatrix(CameraMatrix.ViewProjection).dataArray); });\r\n    }, 8);\r\n    lCanvas.addEventListener('click', () => {\r\n        lCanvas.requestPointerLock();\r\n    });\r\n\r\n    // Setup Texture.\r\n    const lCubeTexture: Texture = new Texture(lGpu, lGpu.preferredFormat, TextureUsage.TextureBinding | TextureUsage.RenderAttachment | TextureUsage.CopyDestination);\r\n    lCubeTexture.label = 'Cube Texture';\r\n    await lCubeTexture.load(['/source/cube_texture/cube-texture.png']);\r\n\r\n    // Setup Sampler.\r\n    const lCubeSampler: TextureSampler = new TextureSampler(lGpu);\r\n\r\n    // Create attributes data.\r\n    const lVertexPositionData: Array<number> = [ // 4x Position\r\n        // Back\r\n        -1.0, 1.0, 1.0, 1.0,\r\n        1.0, 1.0, 1.0, 1.0,\r\n        1.0, -1.0, 1.0, 1.0,\r\n        -1.0, -1.0, 1.0, 1.0,\r\n\r\n        // Front\r\n        -1.0, 1.0, -1.0, 1.0,\r\n        1.0, 1.0, -1.0, 1.0,\r\n        1.0, -1.0, -1.0, 1.0,\r\n        -1.0, -1.0, -1.0, 1.0\r\n    ];\r\n    const lVertexUvData: Array<number> = [ // 4x Position\r\n        // Front 4,5,6\r\n        0.33333, 0.25,\r\n        0.66666, 0.25,\r\n        0.66666, 0.50,\r\n        // Front 4,6,7\r\n        0.33333, 0.25,\r\n        0.66666, 0.50,\r\n        0.33333, 0.50,\r\n\r\n        // Back 1,0,3\r\n        0.66666, 1,\r\n        0.33333, 1,\r\n        0.33333, 0.75,\r\n        // Back 1,3,2\r\n        0.66666, 1,\r\n        0.33333, 0.75,\r\n        0.66666, 0.75,\r\n\r\n        // Left 0,4,7\r\n        0, 0.25,\r\n        0.33333, 0.25,\r\n        0.33333, 0.50,\r\n        // Left 0,7,3\r\n        0, 0.25,\r\n        0.33333, 0.50,\r\n        0, 0.50,\r\n\r\n        // Right 5,1,2\r\n        0.66666, 0.25,\r\n        1, 0.25,\r\n        1, 0.50,\r\n        // Right 5,2,6\r\n        0.66666, 0.25,\r\n        1, 0.50,\r\n        0.66666, 0.50,\r\n\r\n        // Top 0,1,5\r\n        0.33333, 0,\r\n        0.66666, 0,\r\n        0.66666, 0.25,\r\n        // Top 0,5,4\r\n        0.33333, 0,\r\n        0.66666, 0.25,\r\n        0.33333, 0.25,\r\n\r\n        // Bottom 7,6,2\r\n        0.33333, 0.50,\r\n        0.66666, 0.50,\r\n        0.66666, 0.75,\r\n        // Bottom 7,2,3\r\n        0.33333, 0.50,\r\n        0.66666, 0.75,\r\n        0.33333, 0.75,\r\n    ];\r\n    const lVertexNormalData: Array<number> = [ // 4x Position\r\n        // Front\r\n        0, 0, -1, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, -1, 0,\r\n        0, 0, -1, 0,\r\n\r\n        // Back 1,0,3\r\n        0, 0, 1, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 1, 0,\r\n\r\n        // Left 0,4,7\r\n        -1, 0, 0, 0,\r\n        -1, 0, 0, 0,\r\n        -1, 0, 0, 0,\r\n        -1, 0, 0, 0,\r\n        -1, 0, 0, 0,\r\n        -1, 0, 0, 0,\r\n\r\n        // Right 5,1,2\r\n        1, 0, 0, 0,\r\n        1, 0, 0, 0,\r\n        1, 0, 0, 0,\r\n        1, 0, 0, 0,\r\n        1, 0, 0, 0,\r\n        1, 0, 0, 0,\r\n\r\n        // Top 0,1,5\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 1, 0, 0,\r\n\r\n        // Bottom 7,6,2\r\n        0, -1, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, -1, 0, 0,\r\n        0, -1, 0, 0,\r\n    ];\r\n\r\n    // Create mesh.\r\n    const lMesh = new RenderParameter(lGpu, [\r\n        // Front\r\n        4, 5, 6,\r\n        4, 6, 7,\r\n        // Back\r\n        1, 0, 3,\r\n        1, 3, 2,\r\n        // Left\r\n        0, 4, 7,\r\n        0, 7, 3,\r\n        // Right\r\n        5, 1, 2,\r\n        5, 2, 6,\r\n        // Top\r\n        0, 1, 5,\r\n        0, 5, 4,\r\n        // Bottom\r\n        7, 6, 2,\r\n        7, 2, 3\r\n    ]);\r\n    lMesh.setVertexData('vertexposition', lVertexPositionData, 4);\r\n    lMesh.setIndexData('vertexuv', lVertexUvData, 2);\r\n    lMesh.setIndexData('vertexnormal', lVertexNormalData, 4);\r\n\r\n    // Setup renderer.\r\n    const lInstructionExecutioner: InstructionExecuter = new InstructionExecuter(lGpu);\r\n\r\n    // Setup instruction set.\r\n    const lInstructionSet: RenderInstructionSet = new RenderInstructionSet(lRenderPassDescription);\r\n    lInstructionExecutioner.addInstructionSet(lInstructionSet);\r\n\r\n    // Create camera bind group.\r\n    const lWorldValueBindGroup = lShader.bindGroups.getGroup(1).createBindGroup();\r\n    lWorldValueBindGroup.setData('viewProjectionMatrix', lCameraBuffer);\r\n    lWorldValueBindGroup.setData('ambientLight', lAmbientLightBuffer);\r\n    lWorldValueBindGroup.setData('pointLights', lPointLightBuffer);\r\n\r\n    const lUserInputBindGroup = lShader.bindGroups.getGroup(2).createBindGroup();\r\n    lUserInputBindGroup.setData('cubetextureSampler', lCubeSampler);\r\n    lUserInputBindGroup.setData('cubeTexture', lCubeTexture.view());\r\n\r\n    const lObjectBindGroup = lShader.bindGroups.getGroup(0).createBindGroup();\r\n    lObjectBindGroup.setData('transformationMatrix', lCubeTransformationBuffer);\r\n    lObjectBindGroup.setData('instancePositions', lCubeInstanceTransformationBuffer);\r\n\r\n    const lObjectRenderInstruction: RenderInstruction = new RenderInstruction(lPipeline, lMesh, gWidth * gHeight * gDepth);\r\n    lObjectRenderInstruction.setBindGroup(0, lObjectBindGroup);\r\n    lObjectRenderInstruction.setBindGroup(1, lWorldValueBindGroup);\r\n    lObjectRenderInstruction.setBindGroup(2, lUserInputBindGroup);\r\n\r\n    lInstructionSet.addInstruction(lObjectRenderInstruction);\r\n\r\n    let lLastTime: number = 0;\r\n    const lRender = (pTime: number) => {\r\n        // Generate encoder and add render commands.\r\n        lInstructionExecutioner.execute();\r\n\r\n        const lFps: number = 1000 / (pTime - lLastTime);\r\n        lFpsCounter.textContent = lFps.toString();\r\n        lLastTime = pTime;\r\n\r\n        // Refresh canvas\r\n        requestAnimationFrame(lRender);\r\n    };\r\n    requestAnimationFrame(lRender);\r\n})();","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Vector } from '../../math/vector';\r\n\r\nexport class AmbientLight {\r\n    private readonly mColor: Vector;\r\n\r\n    /**\r\n     * Ambient light Vector4 data.\r\n     */\r\n    public get data(): Array<number> {\r\n        return this.mColor.data;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mColor = new Vector([1, 1, 1, 1]);\r\n    }\r\n\r\n    /**\r\n     * Set ambient light color.\r\n     * @param pRed - Red.\r\n     * @param pGreen - Green.\r\n     * @param pBlue - Blue.\r\n     */\r\n    public setColor(pRed: number, pGreen: number, pBlue: number): void {\r\n        if(pRed > 1 || pRed < 0 || pGreen > 1 || pGreen < 0 || pBlue > 1 || pBlue < 0){\r\n            throw new Exception(`Color values need to be in 0 to 1 range. (R:${pRed}, G:${pGreen}, B:${pBlue})`, this);\r\n        }\r\n\r\n        this.mColor.data[0] = pRed;\r\n        this.mColor.data[1] = pGreen;\r\n        this.mColor.data[2] = pBlue;\r\n    }\r\n}","import { Matrix } from '../math/matrix';\r\nimport { Quaternion } from '../math/quaternion';\r\nimport { Vector } from '../math/vector';\r\n\r\nexport class Transform {\r\n    private readonly mPivot: Matrix;\r\n    private mRotation: Quaternion;\r\n    private readonly mScale: Matrix;\r\n    private readonly mTranslation: Matrix;\r\n\r\n    /**\r\n     * X pivot point.\r\n     */\r\n    public get pivotX(): number {\r\n        return this.mPivot.data[0][3];\r\n    } set pivotX(pValue: number) {\r\n        this.mPivot.data[0][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Y pivot point.\r\n     */\r\n    public get pivotY(): number {\r\n        return this.mPivot.data[1][3];\r\n    } set pivotY(pValue: number) {\r\n        this.mPivot.data[1][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Z pivot point.\r\n     */\r\n    public get pivotZ(): number {\r\n        return this.mPivot.data[2][3];\r\n    } set pivotZ(pValue: number) {\r\n        this.mPivot.data[2][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Rotation on X angle.\r\n     * Pitch.\r\n     */\r\n    public get rotationPitch(): number {\r\n        return this.mRotation.asEuler().x;\r\n    }\r\n\r\n    /**\r\n     * Rotation on Z angle.\r\n     * Roll.\r\n     */\r\n    public get rotationRoll(): number {\r\n        return this.mRotation.asEuler().z;\r\n    }\r\n\r\n    /**\r\n     * Rotation on Y angle.\r\n     * Yaw.\r\n     */\r\n    public get rotationYaw(): number {\r\n        return this.mRotation.asEuler().y;\r\n    }\r\n\r\n    /**\r\n     * Depth scale.\r\n     */\r\n    public get scaleDepth(): number {\r\n        return this.mScale.data[2][2];\r\n    }\r\n\r\n    /**\r\n     * Height scale.\r\n     */\r\n    public get scaleHeight(): number {\r\n        return this.mScale.data[1][1];\r\n    }\r\n\r\n    /**\r\n     * Width scale.\r\n     */\r\n    public get scaleWidth(): number {\r\n        return this.mScale.data[0][0];\r\n    }\r\n\r\n    /**\r\n     * X translation.\r\n     */\r\n    public get translationX(): number {\r\n        return this.mTranslation.data[0][3];\r\n    }\r\n\r\n    /**\r\n     * Y translation.\r\n     */\r\n    public get translationY(): number {\r\n        return this.mTranslation.data[1][3];\r\n    }\r\n\r\n    /**\r\n     * Z translation.\r\n     */\r\n    public get translationZ(): number {\r\n        return this.mTranslation.data[2][3];\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mScale = Matrix.identity(4);\r\n        this.mTranslation = Matrix.identity(4);\r\n        this.mRotation = new Quaternion(1, 0, 0, 0);\r\n        this.mPivot = Matrix.identity(4);\r\n    }\r\n\r\n    /**\r\n     * Add angles to current euler rotation angles.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addEulerRotation(pPitch: number, pYaw: number, pRoll: number): void {\r\n        // Apply rotation to current rotation.\r\n        this.mRotation = this.mRotation.addEulerRotation(pPitch, pYaw, pRoll);\r\n    }\r\n\r\n    /**\r\n     * Add rotation to already rotated object.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addRotation(pPitch: number, pYaw: number, pRoll: number): void {\r\n        // Apply rotation to current rotation.\r\n        this.mRotation = Quaternion.fromRotation(pPitch, pYaw, pRoll).mult(this.mRotation);\r\n    }\r\n\r\n    /**\r\n     * Add scale.\r\n     * @param pWidth - Width multiplier.\r\n     * @param pHeight - Height multiplier.\r\n     * @param pDepth - Depth multiplier.\r\n     */\r\n    public addScale(pWidth: number, pHeight: number, pDepth: number): void {\r\n        this.mScale.data[0][0] += pWidth;\r\n        this.mScale.data[1][1] += pHeight;\r\n        this.mScale.data[2][2] += pDepth;\r\n    }\r\n\r\n    /**\r\n     * Add translation.\r\n     * @param pX - Movement on worlds X axis.\r\n     * @param pY - Movement on worlds Y axis.\r\n     * @param pZ - Movement on worlds Z axis.\r\n     */\r\n    public addTranslation(pX: number, pY: number, pZ: number): void {\r\n        this.mTranslation.data[0][3] += pX;\r\n        this.mTranslation.data[1][3] += pY;\r\n        this.mTranslation.data[2][3] += pZ;\r\n    }\r\n\r\n    /**\r\n     * Get transformation matrix.\r\n     */\r\n    public getMatrix(pType: TransformMatrix): Matrix {\r\n        switch (pType) {\r\n            case TransformMatrix.Scale: {\r\n                return this.mScale;\r\n            }\r\n            case TransformMatrix.Translation: {\r\n                return this.mTranslation;\r\n            }\r\n            case TransformMatrix.Rotation: {\r\n                return this.mRotation.asMatrix();\r\n            }\r\n            case TransformMatrix.PivotRotation: {\r\n                const lRotationMatrix: Matrix = this.getMatrix(TransformMatrix.Rotation);\r\n\r\n                // Check if pivit point is used.\r\n                let lPivotRotation: Matrix;\r\n                if (this.pivotX !== 0 || this.pivotY !== 0 || this.pivotZ !== 0) {\r\n                    // Translate pivot => rotate => reverse pivate translation.\r\n                    lPivotRotation = this.mPivot.inverse().mult(lRotationMatrix).mult(this.mPivot);\r\n                } else {\r\n                    lPivotRotation = lRotationMatrix;\r\n                }\r\n\r\n                return lPivotRotation;\r\n            }\r\n            case TransformMatrix.Transformation: {\r\n                const lScale: Matrix = this.getMatrix(TransformMatrix.Scale);\r\n                const lTranslation: Matrix = this.getMatrix(TransformMatrix.Translation);\r\n                const lRotation: Matrix = this.getMatrix(TransformMatrix.PivotRotation);\r\n\r\n                // First scale, second rotate, third translate.\r\n                return lTranslation.mult(lRotation).mult(lScale);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset current rotation and set new rotation.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public setRotation(pPitch: number | null, pYaw: number | null, pRoll: number | null): void {\r\n        const lPitch: number = pPitch ?? this.rotationPitch;\r\n        const lYaw: number = pYaw ?? this.rotationYaw;\r\n        const lRoll: number = pRoll ?? this.rotationRoll;\r\n\r\n        // Create new rotation.\r\n        this.mRotation = Quaternion.fromRotation(lPitch, lYaw, lRoll);\r\n    }\r\n\r\n    /**\r\n     * Set scale.\r\n     * @param pWidth - Width multiplier.\r\n     * @param pHeight - Height multiplier.\r\n     * @param pDepth - Depth multiplier.\r\n     */\r\n    public setScale(pWidth: number | null, pHeight: number | null, pDepth: number | null): void {\r\n        this.mScale.data[0][0] = pWidth ?? this.scaleWidth;\r\n        this.mScale.data[1][1] = pHeight ?? this.scaleHeight;\r\n        this.mScale.data[2][2] = pDepth ?? this.scaleDepth;\r\n    }\r\n\r\n    /**\r\n     * Set translation.\r\n     * @param pX - Movement on worlds X axis.\r\n     * @param pY - Movement on worlds Y axis.\r\n     * @param pZ - Movement on worlds Z axis.\r\n     */\r\n    public setTranslation(pX: number | null, pY: number | null, pZ: number | null): void {\r\n        this.mTranslation.data[0][3] = pX ?? this.translationX;\r\n        this.mTranslation.data[1][3] = pY ?? this.translationY;\r\n        this.mTranslation.data[2][3] = pZ ?? this.translationZ;\r\n    }\r\n\r\n    /**\r\n     * Translate into rotation direction.\r\n     * @param pForward - Forward movement.\r\n     * @param pRight - Right movement.\r\n     * @param pUp - Up movement.\r\n     */\r\n    public translateInDirection(pForward: number, pRight: number, pUp: number): void {\r\n        const lTranslationVector: Vector = new Vector([pRight, pUp, pForward, 1]);\r\n        const lDirectionVector: Vector = this.getMatrix(TransformMatrix.Rotation).vectorMult(lTranslationVector);\r\n\r\n        // Add direction.\r\n        this.addTranslation(lDirectionVector.x, lDirectionVector.y, lDirectionVector.z);\r\n    }\r\n}\r\n\r\nexport enum TransformMatrix {\r\n    Rotation = 1,\r\n    PivotRotation = 2,\r\n    Translation = 3,\r\n    Scale = 4,\r\n    Transformation = 5\r\n}","import { Matrix } from '../../../math/matrix';\r\nimport { IProjection } from './i-projection.interface';\r\n\r\nexport class OrthographicProjection implements IProjection {\r\n    private mAspectRatio: number;\r\n    private mCacheProjection: Matrix|null;\r\n    private mFar: number;\r\n    private mNear: number;\r\n    private mWidth: number;\r\n\r\n    /**\r\n     * Aspect ratio plane.\r\n     */\r\n    public get aspectRatio(): number {\r\n        return this.mAspectRatio;\r\n    } set aspectRatio(pValue: number) {\r\n        this.mAspectRatio = pValue;\r\n\r\n        // Reset cache.\r\n        this.mCacheProjection = null;\r\n    }\r\n\r\n    /**\r\n     * Far plane.\r\n     */\r\n    public get far(): number {\r\n        return this.mFar;\r\n    } set far(pValue: number) {\r\n        this.mFar = pValue;\r\n\r\n        // Reset cache.\r\n        this.mCacheProjection = null;\r\n    }\r\n\r\n    /**\r\n     * Near plane.\r\n     */\r\n    public get near(): number {\r\n        return this.mNear;\r\n    } set near(pValue: number) {\r\n        this.mNear = pValue;\r\n\r\n        // Reset cache.\r\n        this.mCacheProjection = null;\r\n    }\r\n\r\n    /**\r\n     * Get projection matrix.\r\n     */\r\n    public get projectionMatrix(): Matrix {\r\n        // Check cache or create new matrix.\r\n        if (this.mCacheProjection === null) {\r\n            this.mCacheProjection = this.createMatrix();\r\n        }\r\n\r\n        return this.mCacheProjection;\r\n    }\r\n\r\n    /**\r\n     * Width of horizontal plane.\r\n     */\r\n    public get width(): number {\r\n        return this.mWidth;\r\n    } set width(pValue: number) {\r\n        this.mWidth = pValue;\r\n\r\n        // Reset cache.\r\n        this.mCacheProjection = null;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mAspectRatio = 0;\r\n        this.mFar = 0;\r\n        this.mNear = 0;\r\n        this.mWidth = 0;\r\n\r\n        // Cache.\r\n        this.mCacheProjection = null;\r\n    }\r\n\r\n    /**\r\n     * Create projection matrix.\r\n     */\r\n    private createMatrix(): Matrix {\r\n        // Calculate planes with centered camera on z-plane.\r\n        const lFar: number = this.mFar;\r\n        const lNear: number = this.mNear;\r\n\r\n        // Left right half of width.\r\n        const lRight: number = this.mWidth / 2;\r\n        const lLeft: number = -lRight;\r\n\r\n        // Top bottom calculated by width/height-aspect ratio.\r\n        const lTop: number = lRight / this.mAspectRatio;\r\n        const lBottom: number = -lTop;\r\n\r\n        // Scale volume to match NDC X[-1. 1] , y[-1. 1], Z[0. 1]. Dividend is plane size.\r\n        // SX => 2 / (Right - Left)\r\n        // SY => 2 / (Top - Bottom)\r\n        // SZ => 1 / (Far - Near)\r\n        const lScaleX: number = 2 / (lRight - lLeft);\r\n        const lScaleY: number = 2 / (lTop - lBottom);\r\n        const lScaleZ: number = 1 / (lFar - lNear);\r\n\r\n        // Center planes to webgl clip NDC with translation with near plane on Z=>0.\r\n        // TX => -(Left + Right) / 2\r\n        // TY => -(Top + Bottom) / 2\r\n        // TZ => -Near\r\n\r\n        // Multiplicate the transform and scale matrix.\r\n        // ┌ SX  0   0  0 ┐   ┌ 1  0  0  TX ┐   ┌ SX 0  0  (SX * TX) ┐\r\n        // | 0   SY  0  0 |   | 0  1  0  TY |   | 0  SY 0  (SY * TY) |\r\n        // | 0   0   SZ 0 | x | 0  0  1  TZ | = | 0  0  SZ (SZ * TZ) |\r\n        // └ 0   0   0  1 ┘   └ 0  0  0  1  ┘   └ 0  0  0      1     ┘\r\n\r\n        // Shorten multiplications.\r\n        // (SX * TX) => (2 / (Right - Left)) * (-(Left + Right) / 2) => -(Left + Right) / (Right - Left)\r\n        // (SY * TY) => (2 / (Top - Bottom)) * (-(Top + Bottom) / 2) => -(Top + Bottom) / (Top - Bottom)\r\n        // (SZ * TZ) => (1 / (Far - Near))   * -Near                 => -Near / (Far - Near)\r\n        const lScaleTransformX: number = -(lLeft + lRight) / (lRight - lLeft);\r\n        const lScaleTransformY: number = -(lTop + lBottom) / (lTop - lBottom);\r\n        const lScaleTransformZ: number = -lNear / (lFar - lNear);\r\n\r\n        // ┌ SX 0  0  -(Left + Right) / (Right - Left) ┐\r\n        // | 0  SY 0  -(Top + Bottom) / (Top - Bottom) |\r\n        // | 0  0  SZ           -Near / (Far - Near)   |\r\n        // └ 0  0  0                  1                ┘\r\n\r\n        // Build projection matrix.\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n\r\n        // Fill Scale.\r\n        lMatrix.data[0][0] = lScaleX;\r\n        lMatrix.data[1][1] = lScaleY;\r\n        lMatrix.data[2][2] = lScaleZ;\r\n\r\n        // Fill transform.\r\n        lMatrix.data[3][0] = lScaleTransformX;\r\n        lMatrix.data[3][1] = lScaleTransformY;\r\n        lMatrix.data[3][2] = lScaleTransformZ;\r\n\r\n        return lMatrix;\r\n    }\r\n} ","import { Matrix } from '../../../math/matrix';\r\nimport { IProjection } from './i-projection.interface';\r\n\r\nexport class PerspectiveProjection implements IProjection {\r\n    private mAngleOfView: number;\r\n    private mAspectRatio: number;\r\n    private mCacheProjectionMatrix: Matrix | null;\r\n    private mFar: number;\r\n    private mNear: number;\r\n\r\n    /**\r\n     * Angle of view.\r\n     */\r\n    public get angleOfView(): number {\r\n        return this.mAngleOfView;\r\n    } set angleOfView(pValue: number) {\r\n        this.mAngleOfView = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Angle of view.\r\n     */\r\n    public get aspectRatio(): number {\r\n        return this.mAspectRatio;\r\n    } set aspectRatio(pValue: number) {\r\n        this.mAspectRatio = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Far plane.\r\n     */\r\n    public get far(): number {\r\n        return this.mFar;\r\n    } set far(pValue: number) {\r\n        this.mFar = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Near plane.\r\n     */\r\n    public get near(): number {\r\n        return this.mNear;\r\n    } set near(pValue: number) {\r\n        this.mNear = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Projection matrix.\r\n     */\r\n    public get projectionMatrix(): Matrix {\r\n        if (this.mCacheProjectionMatrix === null) {\r\n            this.mCacheProjectionMatrix = this.createMatrix();\r\n        }\r\n\r\n        return this.mCacheProjectionMatrix;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mAngleOfView = 0;\r\n        this.mNear = 0;\r\n        this.mFar = 0;\r\n        this.mAspectRatio = 0;\r\n\r\n        // Cache.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Create projection matrix.\r\n     */\r\n    private createMatrix(): Matrix {\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n\r\n        // Reset identity.\r\n        lMatrix.data[0][0] = 0;\r\n        lMatrix.data[1][1] = 0;\r\n        lMatrix.data[2][2] = 0;\r\n        lMatrix.data[3][3] = 0;\r\n\r\n        // Calculate planes with centered camera on z-plane.\r\n        const lFar: number = this.mFar;\r\n        const lNear: number = this.mNear;\r\n\r\n        // Top bottom calculated by get height from vertical angle of view.\r\n        // Half angle is from y=>0 to top plane, as the angle descripes the distance between top and bottom plane.\r\n        // Tan(angleOfView / 2) = Top / Near => Near * Tan(angleOfView / 2) = Top\r\n        const lTop: number = this.mNear * Math.tan((this.angleOfView * Math.PI / 180) / 2);\r\n        const lBottom: number = -lTop;\r\n\r\n        // Left right calculated from aspect ratio.\r\n        const lRight: number = lTop * this.aspectRatio;\r\n        const lLeft: number = -lRight;\r\n\r\n        // We need to set VectorZ to VectorW to devide VectorX and VectorY by the VectorZ.\r\n        // So planes are smaller the further ways they are.\r\n        // And scale VectorX and VectorY with the near plane to start the projection not on Z=0 but on Z=Near.\r\n        // ┌ N  0  0   0  ┐   ┌ 1 ┐   ┌ 1 ┐\r\n        // | 0  N  0   0  |   | 2 |   | 2 |\r\n        // | 0  0  M1  M2 | x | 3 | = | 3 |\r\n        // └ 0  0  1   0  ┘   └ 1 ┘   └ 3 ┘\r\n\r\n        // Problem is: The VectorZ get also divided by VectorX and VectorW.\r\n        // To fix the problem set VectorZ to VectorZ² with only M1 and M2 available.\r\n        // As as M1 is the Scaling(M1 * Z) and M2 is Translating(M2 + Z) we get:\r\n        // M1*Z + M2 = Z² => Quadratic means two solutions. But we need one.\r\n        // So we constrains the equation to be only valid between Near and Far. So we set Z=Near or Z=Far.\r\n        // All other Z Values are calculated quadratic ranging from Near to Far.\r\n        // So we get:\r\n        // M1*Near + M2 = Near²  => M1 = Far + Near\r\n        // M1*Far  + M2 = Far²   => M2 = -(Far * Near)\r\n        // ┌ N  0      0         0     ┐\r\n        // | 0  N      0         0     |\r\n        // | 0  0    F + N   -(F * N)  |\r\n        // └ 0  0      1         0     ┘\r\n\r\n        // Multiplicate this perspectiv matrix with the orthigraphic to center the camera.\r\n        // ┌  2/(R-L)    0         0    -(R+L)/(R-L) ┐   ┌ N  0      0         0     ┐\r\n        // |     0     2/(T-B)     0    -(T+B)/(T-B) |   | 0  N      0         0     |\r\n        // |     0        0     1/(F-N)   -N/(F-N)   | x | 0  0    F + N   -(F * N)  |\r\n        // └     0        0        0          1      ┘   └ 0  0      1         0     ┘\r\n\r\n        // And we get.\r\n        // ┌  2N/(R-L)    0        -(R+L)/(R-L)           0      ┐\r\n        // |     0     2N/(T-B)    -(T+B)/(T-B)           0      |\r\n        // |     0        0          F/(F-N)       -(F*N)/(F-N) |\r\n        // └     0        0             1                0      ┘\r\n\r\n\r\n        // Set matrix data. Row 1:\r\n        lMatrix.data[0][0] = (2 * lNear) / (lRight - lLeft);\r\n        lMatrix.data[0][2] = -(lRight + lLeft) / (lRight - lLeft);\r\n\r\n        // Set matrix data. Row 2:\r\n        lMatrix.data[1][1] = (2 * lNear) / (lTop - lBottom);\r\n        lMatrix.data[1][2] = -(lTop + lBottom) / (lTop - lBottom);\r\n\r\n        // Set matrix data. Row 3:\r\n        lMatrix.data[2][2] = lFar / (lFar - lNear);\r\n        lMatrix.data[2][3] = -(lFar * lNear) / (lFar - lNear);\r\n\r\n        // Set matrix data. Row 4:\r\n        lMatrix.data[3][2] = 1;\r\n\r\n        return lMatrix;\r\n    }\r\n}","import { Matrix } from '../../math/matrix';\r\nimport { Transform, TransformMatrix } from '../transform';\r\nimport { IProjection } from './projection/i-projection.interface';\r\n\r\nexport class ViewProjection {\r\n    private readonly mProjection: IProjection;\r\n    private readonly mTransformation: Transform;\r\n\r\n    /**\r\n     * Camera projection.\r\n     */\r\n    public get projection(): IProjection {\r\n        return this.mProjection;\r\n    }\r\n\r\n    /**\r\n     * Camera transformation.\r\n     */\r\n    public get transformation(): Transform {\r\n        return this.mTransformation;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pProjection: IProjection) {\r\n        this.mProjection = pProjection;\r\n        this.mTransformation = new Transform();\r\n    }\r\n\r\n    /**\r\n     * Get camera matrix. \r\n     * @param pType - Matrix type. \r\n     */\r\n    public getMatrix(pType: CameraMatrix): Matrix {\r\n        switch (pType) {\r\n            case CameraMatrix.Translation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.Translation);\r\n            }\r\n            case CameraMatrix.Rotation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.Rotation);\r\n            }\r\n            case CameraMatrix.PivotRotation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.PivotRotation);\r\n            }\r\n            case CameraMatrix.Projection: {\r\n                return this.mProjection.projectionMatrix;\r\n            }\r\n            case CameraMatrix.View: {\r\n                const lTranslation: Matrix = this.getMatrix(CameraMatrix.Translation);\r\n                const lRotation: Matrix = this.getMatrix(CameraMatrix.Rotation);\r\n                return lTranslation.mult(lRotation).inverse();\r\n            }\r\n            case CameraMatrix.ViewProjection: {\r\n                const lView: Matrix = this.getMatrix(CameraMatrix.View);\r\n                const lProjection: Matrix = this.getMatrix(CameraMatrix.Projection);\r\n                return lProjection.mult(lView);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport enum CameraMatrix {\r\n    Translation = 1,\r\n    Rotation = 2,\r\n    PivotRotation = 3,\r\n    Projection = 4,\r\n    View = 5,\r\n    ViewProjection = 6\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { BindType } from '../enum/bind-type.enum';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\nimport { BindGroup } from './bind-group';\r\nimport { WgslShaderStage } from '../shader/enum/wgsl-shader-stage.enum';\r\n\r\nexport class BindGroupLayout extends GpuNativeObject<GPUBindGroupLayout> {\r\n    private readonly mGroupBinds: Dictionary<string, BindLayout>;\r\n\r\n    /**\r\n     * Get basic information of group binds.\r\n     */\r\n    public get binds(): Array<BindInformation> {\r\n        const lResult: Array<BindInformation> = new Array<BindInformation>();\r\n\r\n        // Fetch general and basic information from group bind.\r\n        for (const lBind of this.mGroupBinds.values()) {\r\n            lResult.push({\r\n                name: lBind.name,\r\n                type: lBind.bindType,\r\n                index: lBind.index\r\n            });\r\n        }\r\n\r\n        return lResult;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     */\r\n    public constructor(pGpu: Gpu) {\r\n        super(pGpu, 'BIND_GROUP_LAYOUT');\r\n        this.mGroupBinds = new Dictionary<string, BindLayout>();\r\n    }\r\n\r\n    /**\r\n     * Add buffer bind.\r\n     * @param pName - Bind name.\r\n     * @param pIndex - Bind index.\r\n     * @param pVisibility - Visibility.\r\n     * @param pBindingType - Bind type.\r\n     * @param pHasDynamicOffset - Has dynamic offset.\r\n     * @param pMinBindingSize - min binding size.\r\n     */\r\n    public addBuffer(pName: string, pIndex: number, pVisibility: WgslShaderStage, pBindingType: GPUBufferBindingType = 'uniform', pHasDynamicOffset: boolean = false, pMinBindingSize: GPUSize64 = 0): void {\r\n        this.mGroupBinds.set(pName, {\r\n            index: pIndex,\r\n            bindType: BindType.Buffer,\r\n            name: pName,\r\n            visibility: pVisibility,\r\n            type: pBindingType,\r\n            hasDynamicOffset: pHasDynamicOffset,\r\n            minBindingSize: pMinBindingSize\r\n        });\r\n\r\n        // Request native object update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Add external texture bind.\r\n     * @param pName - Bind name.\r\n     * @param pIndex - Bind index.\r\n     * @param pVisibility - Visibility.\r\n     */\r\n    public addExternalTexture(pName: string, pIndex: number, pVisibility: WgslShaderStage): void {\r\n        this.mGroupBinds.set(pName, {\r\n            index: pIndex,\r\n            bindType: BindType.ExternalTexture,\r\n            name: pName,\r\n            visibility: pVisibility,\r\n        });\r\n\r\n        // Request native object update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Add sampler bind.\r\n     * @param pName - Bind name.\r\n     * @param pIndex - Bind index.\r\n     * @param pVisibility - Visibility.\r\n     * @param pSampleType - Sample type.\r\n     */\r\n    public addSampler(pName: string, pIndex: number, pVisibility: WgslShaderStage, pSampleType: GPUSamplerBindingType = 'filtering'): void {\r\n        this.mGroupBinds.set(pName, {\r\n            index: pIndex,\r\n            bindType: BindType.Sampler,\r\n            name: pName,\r\n            visibility: pVisibility,\r\n            type: pSampleType\r\n        });\r\n\r\n        // Request native object update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Add storage texture bind.\r\n     * @param pName - Bind name.\r\n     * @param pIndex - Bind index.\r\n     * @param pVisibility - Visibility.\r\n     * @param pFormat - Color format.\r\n     * @param storageAccess - Storage access.\r\n     * @param pDimension - Texture dimension.\r\n     */\r\n    public addStorageTexture(pName: string, pIndex: number, pVisibility: WgslShaderStage, pFormat: GPUTextureFormat, pStorageAccess: GPUStorageTextureAccess = 'write-only', pDimension: GPUTextureViewDimension = '2d'): void {\r\n        this.mGroupBinds.set(pName, {\r\n            name: pName,\r\n            index: pIndex,\r\n            bindType: BindType.StorageTexture,\r\n            visibility: pVisibility,\r\n            access: pStorageAccess,\r\n            format: pFormat,\r\n            viewDimension: pDimension\r\n        });\r\n\r\n        // Request native object update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Add texture bind.\r\n     * @param pName - Bind name.\r\n     * @param pIndex - Bind index.\r\n     * @param pVisibility - Visibility.\r\n     * @param pSampleType - Sample type.\r\n     * @param pViewDimension - View dimension.\r\n     * @param pMultisampled - Is multisampled.\r\n     */\r\n    public addTexture(pName: string, pIndex: number, pVisibility: WgslShaderStage, pSampleType: GPUTextureSampleType = 'float', pViewDimension: GPUTextureViewDimension = '2d', pMultisampled: boolean = false): void {\r\n        this.mGroupBinds.set(pName, {\r\n            name: pName,\r\n            index: pIndex,\r\n            bindType: BindType.Texture,\r\n            visibility: pVisibility,\r\n            sampleType: pSampleType,\r\n            viewDimension: pViewDimension,\r\n            multisampled: pMultisampled\r\n        });\r\n\r\n        // Request native object update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Create bind group based on this layout.\r\n     */\r\n    public createBindGroup(): BindGroup {\r\n        const lBindGroup = new BindGroup(this.gpu, this);\r\n        lBindGroup.label = this.label;\r\n\r\n        return lBindGroup;\r\n    }\r\n\r\n    /**\r\n     * Get full bind information.\r\n     * @param pName - Bind name.\r\n     */\r\n    public getBind(pName: string): Readonly<BindLayout> {\r\n        if (!this.mGroupBinds.has(pName)) {\r\n            throw new Exception(`Bind ${pName} does not exist.`, this);\r\n        }\r\n\r\n        return this.mGroupBinds.get(pName)!;\r\n    }\r\n\r\n    /** \r\n     * Remove bind.\r\n     */\r\n    public removeBind(pName: string): void {\r\n        if (this.mGroupBinds.delete(pName)) {\r\n            // Request native object update.\r\n            this.triggerChange();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compare inner binds configurations.\r\n     * @param pObject - Target object.\r\n     */\r\n    protected override compare(pObject: this): boolean {\r\n        // Compare bind group size.\r\n        if (this.mGroupBinds.size !== pObject.mGroupBinds.size) {\r\n            return false;\r\n        }\r\n\r\n        for (const lBindName of this.mGroupBinds.keys()) {\r\n            const lTarget: BindLayout | undefined = pObject.mGroupBinds.get(lBindName);\r\n            const lSource: BindLayout | undefined = this.mGroupBinds.get(lBindName);\r\n\r\n            // Validate bind layout existance.\r\n            if (!lTarget || !lSource) {\r\n                return false;\r\n            }\r\n\r\n            // Validate bind layout properties.\r\n            if (lTarget.bindType !== lSource.bindType || lTarget.index !== lSource.index || lTarget.name !== lSource.name || lTarget.visibility !== lSource.visibility) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generate layout.\r\n     */\r\n    protected generate(): GPUBindGroupLayout {\r\n        const lEntryList: Array<GPUBindGroupLayoutEntry> = new Array<GPUBindGroupLayoutEntry>();\r\n\r\n        // Generate layout entry for each binding.\r\n        for (const lEntry of this.mGroupBinds.values()) {\r\n            // Generate default properties.\r\n            const lLayoutEntry: GPUBindGroupLayoutEntry = {\r\n                visibility: lEntry.visibility,\r\n                binding: lEntry.index\r\n            };\r\n\r\n            switch (lEntry.bindType) {\r\n                case BindType.Buffer: {\r\n                    const lBufferLayout: Required<GPUBufferBindingLayout> = {\r\n                        type: lEntry.type,\r\n                        minBindingSize: lEntry.minBindingSize,\r\n                        hasDynamicOffset: lEntry.hasDynamicOffset\r\n                    };\r\n                    lLayoutEntry.buffer = lBufferLayout;\r\n                    break;\r\n                }\r\n                case BindType.Texture: {\r\n                    const lTextureLayout: Required<GPUTextureBindingLayout> = {\r\n                        sampleType: lEntry.sampleType,\r\n                        multisampled: lEntry.multisampled,\r\n                        viewDimension: lEntry.viewDimension\r\n                    };\r\n                    lLayoutEntry.texture = lTextureLayout;\r\n                    break;\r\n                }\r\n                case BindType.ExternalTexture: {\r\n                    const lExternalTextureLayout: Required<GPUExternalTextureBindingLayout> = {};\r\n                    lLayoutEntry.externalTexture = lExternalTextureLayout;\r\n                    break;\r\n                }\r\n                case BindType.StorageTexture: {\r\n                    const lStorageTextureLayout: Required<GPUStorageTextureBindingLayout> = {\r\n                        access: lEntry.access,\r\n                        format: lEntry.format,\r\n                        viewDimension: lEntry.viewDimension\r\n                    };\r\n                    lLayoutEntry.storageTexture = lStorageTextureLayout;\r\n                    break;\r\n                }\r\n                case BindType.Sampler: {\r\n                    const lSamplerLayout: Required<GPUSamplerBindingLayout> = {\r\n                        type: lEntry.type\r\n                    };\r\n                    lLayoutEntry.sampler = lSamplerLayout;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            lEntryList.push(lLayoutEntry);\r\n        }\r\n\r\n        // Create binding group layout.\r\n        return this.gpu.device.createBindGroupLayout({\r\n            label: this.label,\r\n            entries: lEntryList\r\n        });\r\n    }\r\n}\r\n\r\ninterface BaseBindLayout {\r\n    index: number;\r\n    name: string;\r\n    bindType: BindType;\r\n    visibility: WgslShaderStage;\r\n}\r\n\r\ninterface BufferBindLayout extends BaseBindLayout, Required<GPUBufferBindingLayout> {\r\n    bindType: BindType.Buffer;\r\n}\r\n\r\ninterface SamplerBindLayout extends BaseBindLayout, Required<GPUSamplerBindingLayout> {\r\n    bindType: BindType.Sampler;\r\n}\r\n\r\ninterface TextureBindLayout extends BaseBindLayout, Required<GPUTextureBindingLayout> {\r\n    bindType: BindType.Texture;\r\n}\r\n\r\ninterface StorageTextureBindLayout extends BaseBindLayout, Required<GPUStorageTextureBindingLayout> {\r\n    bindType: BindType.StorageTexture;\r\n}\r\n\r\ninterface ExternalTextureBindLayout extends BaseBindLayout, Required<GPUExternalTextureBindingLayout> {\r\n    bindType: BindType.ExternalTexture;\r\n}\r\n\r\ntype BindLayout = BufferBindLayout | SamplerBindLayout | TextureBindLayout | StorageTextureBindLayout | ExternalTextureBindLayout;\r\n\r\nexport type BindInformation = {\r\n    name: string,\r\n    type: BindType,\r\n    index: number;\r\n};","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { BindType } from '../enum/bind-type.enum';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\nimport { BaseBuffer } from '../resource/buffer/base-buffer';\r\nimport { ExternalTexture } from '../resource/external-texture';\r\nimport { TextureSampler } from '../resource/texture-sampler';\r\nimport { TextureView } from '../resource/texture/texture-view';\r\nimport { BindGroupLayout } from './bind-group-layout';\r\n\r\nexport class BindGroup extends GpuNativeObject<GPUBindGroup>{\r\n    private readonly mBindData: Dictionary<string, Bind>;\r\n    private readonly mLayout: BindGroupLayout;\r\n    private readonly mNativeData: WeakMap<object, string>;\r\n\r\n    /**\r\n     * Layout of bind group.\r\n     */\r\n    public get layout(): BindGroupLayout {\r\n        return this.mLayout;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pLayout - Bind group layout.\r\n     */\r\n    public constructor(pGpu: Gpu, pLayout: BindGroupLayout) {\r\n        super(pGpu, 'BIND_GROUP');\r\n\r\n        this.mLayout = pLayout;\r\n        this.mBindData = new Dictionary<string, Bind>();\r\n        this.mNativeData = new WeakMap<object, string>();\r\n\r\n        // Register layout as internal.\r\n        this.registerInternalNative(pLayout);\r\n    }\r\n\r\n    /**\r\n     * Set data to layout binding.\r\n     * @param pBindName - Bind layout entry name.\r\n     * @param pData - Bind data.\r\n     * @param pForcedType - Forced type. Can be used to differ for Texture and StorageTexture.\r\n     */\r\n    public setData(pBindName: string, pData: BindData, pForcedType?: BindType): void {\r\n        const lLayout = this.mLayout.getBind(pBindName);\r\n        const lDataBindType: BindType = pForcedType ?? this.bindTypeOfData(pData);\r\n\r\n        // Validate bind type with data type.\r\n        if (lLayout.bindType !== lDataBindType) {\r\n            throw new Exception(`Bind data \"${pBindName}\" has wrong type`, this);\r\n        }\r\n\r\n        // Unregister possible old data and register new.\r\n        if (this.mBindData.has(pBindName)) {\r\n            this.unregisterInternalNative(this.mBindData.get(pBindName)!.data);\r\n        }\r\n        this.registerInternalNative(pData);\r\n\r\n        // Set bind type to Teture for TS type check shutup.\r\n        this.mBindData.set(pBindName, { type: <BindType.Texture>lDataBindType, name: pBindName, data: <TextureView>pData });\r\n    }\r\n\r\n    /**\r\n     * Generate native bind group.\r\n     */\r\n    protected generate(): GPUBindGroup {\r\n        const lEntryList: Array<GPUBindGroupEntry> = new Array<GPUBindGroupEntry>();\r\n\r\n        for (const lBindLayout of this.mLayout.binds) {\r\n            const lBindData: Bind | undefined = this.mBindData.get(lBindLayout.name);\r\n\r\n            // Check for \r\n            if (!lBindData) {\r\n                throw new Exception(`Bind data \"${lBindLayout.name}\" not set.`, this);\r\n            }\r\n\r\n            // Check for type change.\r\n            if (lBindData.type !== lBindLayout.type) {\r\n                throw new Exception(`Bind data \"${lBindLayout.name}\" has wrong type. The Layout might has been changed.`, this);\r\n            }\r\n\r\n            // Set resource to group entry for each \r\n            const lGroupEntry: GPUBindGroupEntry = { binding: lBindLayout.index, resource: <any>null };\r\n            switch (lBindData.type) {\r\n                case BindType.Buffer: {\r\n                    lGroupEntry.resource = { buffer: lBindData.data.native() };\r\n                    break;\r\n                }\r\n                case BindType.ExternalTexture: {\r\n                    lGroupEntry.resource = lBindData.data.native();\r\n                    break;\r\n                }\r\n                case BindType.Sampler: {\r\n                    lGroupEntry.resource = lBindData.data.native();\r\n                    break;\r\n                }\r\n                case BindType.StorageTexture: {\r\n                    lGroupEntry.resource = lBindData.data.native();\r\n                    break;\r\n                }\r\n                case BindType.Texture: {\r\n                    lGroupEntry.resource = lBindData.data.native();\r\n                    break;\r\n                }\r\n                default: {\r\n                    throw new Exception(`Type \"${(<Bind>lBindData).type}\" not supported on bind group`, this);\r\n                }\r\n            }\r\n\r\n            // Save generated native for validation state.\r\n            this.mNativeData.set(lBindData.data.native(), lBindLayout.name);\r\n\r\n            lEntryList.push(lGroupEntry);\r\n        }\r\n\r\n        return this.gpu.device.createBindGroup({\r\n            label: this.label,\r\n            layout: this.mLayout.native(),\r\n            entries: lEntryList\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get type of bind data.\r\n     * @param pData - Data object.\r\n     */\r\n    private bindTypeOfData(pData: BindData): BindType {\r\n        if (pData instanceof TextureView) {\r\n            return BindType.Texture;\r\n        } else if (pData instanceof BaseBuffer) {\r\n            return BindType.Buffer;\r\n        } else if (pData instanceof ExternalTexture) {\r\n            return BindType.ExternalTexture;\r\n        } if (pData instanceof TextureSampler) {\r\n            return BindType.Sampler;\r\n        }\r\n\r\n        throw new Exception(`Bind data \"${(<any>pData).name}\" not supported`, this);\r\n    }\r\n}\r\n\r\ntype BindData = TextureView | BaseBuffer<TypedArray> | ExternalTexture | TextureSampler;\r\n\r\ntype Bind = {\r\n    type: BindType.Buffer,\r\n    name: string,\r\n    data: BaseBuffer<TypedArray>;\r\n} | {\r\n    type: BindType.ExternalTexture,\r\n    name: string,\r\n    data: ExternalTexture;\r\n} | {\r\n    type: BindType.Sampler,\r\n    name: string,\r\n    data: TextureSampler;\r\n} | {\r\n    type: BindType.StorageTexture,\r\n    name: string,\r\n    data: TextureView;\r\n} | {\r\n    type: BindType.Texture,\r\n    name: string,\r\n    data: TextureView;\r\n};","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\nimport { BindGroupLayout } from './bind-group-layout';\r\n\r\nexport class BindGroups extends GpuNativeObject<GPUPipelineLayoutDescriptor>{\r\n    private readonly mBindGroups: Dictionary<number, BindGroupLayout>;\r\n\r\n    /**\r\n     * Bind group count.\r\n     */\r\n    public get groups(): Array<number> {\r\n        return [...this.mBindGroups.keys()];\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu  - Gpu.\r\n     */\r\n    public constructor(pGpu: Gpu) {\r\n        super(pGpu, 'PIPELINE_LAYOUT_DESCRIPTOR');\r\n        this.mBindGroups = new Dictionary<number, BindGroupLayout>();\r\n    }\r\n\r\n    /**\r\n     * Create bind group.\r\n     * @param pIndex - Group index.\r\n     * @param pLayout - [Optional] Bind group Layout.\r\n     */\r\n    public addGroup(pIndex: number, pLayout?: BindGroupLayout): BindGroupLayout {\r\n        // Create and add bind group layout.\r\n        let lBindLayout: BindGroupLayout;\r\n        if (pLayout) {\r\n            lBindLayout = pLayout;\r\n        } else {\r\n            lBindLayout = new BindGroupLayout(this.gpu);\r\n        }\r\n        this.mBindGroups.add(pIndex, lBindLayout);\r\n\r\n        // Register native object.\r\n        this.registerInternalNative(lBindLayout);\r\n\r\n        return lBindLayout;\r\n    }\r\n\r\n    /**\r\n     * Get created bind group layout.\r\n     * @param pIndex - Group index.\r\n     */\r\n    public getGroup(pIndex: number): BindGroupLayout {\r\n        // Throw on unaccessable group.\r\n        if (!this.mBindGroups.has(pIndex)) {\r\n            throw new Exception(`Bind group layout (${pIndex}) does not exists.`, this);\r\n        }\r\n\r\n        // Bind group should allways exist.\r\n        return this.mBindGroups.get(pIndex)!;\r\n    }\r\n\r\n    /**\r\n     * Generate native object.\r\n     */\r\n    protected generate(): GPUPipelineLayoutDescriptor {\r\n        // Generate pipeline layout from bind group layouts.\r\n        const lPipelineLayout = { bindGroupLayouts: new Array<GPUBindGroupLayout>() };\r\n        for (const [lIndex, lBindGroupLayout] of this.mBindGroups) {\r\n            lPipelineLayout.bindGroupLayouts[lIndex] = lBindGroupLayout.native();\r\n        }\r\n\r\n        // Validate continunity.\r\n        if (this.mBindGroups.size !== lPipelineLayout.bindGroupLayouts.length) {\r\n            throw new Exception(`Bind group gap detected. Group not set.`, this);\r\n        }\r\n        \r\n        return lPipelineLayout;\r\n    }\r\n}","import { WgslAccessMode } from '../shader/enum/wgsl-access-mode.enum';\r\nimport { WgslBindingType } from '../shader/enum/wgsl-binding-type.enum';\r\nimport { WgslType } from '../shader/enum/wgsl-type.enum';\r\nimport { BufferType } from './buffer-type';\r\n\r\nexport class ArrayBufferType extends BufferType {\r\n    private readonly mArraySize: number;\r\n    private readonly mInnerType: BufferType;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        return this.mInnerType.alignment;\r\n    }\r\n\r\n    /**\r\n     * Array size.\r\n     */\r\n    public get arraySize(): number {\r\n        return this.mArraySize;\r\n    }\r\n\r\n    /**\r\n     * Array type.\r\n     */\r\n    public get innerType(): BufferType {\r\n        return this.mInnerType;\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get size(): number {\r\n        if (this.mArraySize === -1) {\r\n            return this.mArraySize;\r\n        }\r\n\r\n        return this.mInnerType.size * this.mArraySize;\r\n    }\r\n\r\n    /**\r\n     * Wgsl type.\r\n     */\r\n    public get type(): WgslType {\r\n        return WgslType.Array;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pInnerType - Type of array.\r\n     * @param pSize - Optional array size.\r\n     */\r\n    public constructor(pName: string, pInnerType: BufferType, pSize?: number, pAccessMode?: WgslAccessMode, pBindType?: WgslBindingType, pLocation: number | null = null) {\r\n        super(pName, pAccessMode, pBindType, pLocation);\r\n\r\n        this.mInnerType = pInnerType;\r\n        this.mArraySize = pSize ?? -1;\r\n    }\r\n}","import { Dictionary } from '@kartoffelgames/core.data';\r\nimport { WgslAccessMode } from '../shader/enum/wgsl-access-mode.enum';\r\nimport { WgslBindingType } from '../shader/enum/wgsl-binding-type.enum';\r\nimport { WgslType } from '../shader/enum/wgsl-type.enum';\r\n\r\nexport abstract class BufferType {\r\n    private readonly mAccessMode: WgslAccessMode | null;\r\n    private readonly mAttributes: Dictionary<string, BufferTypeAttribute>;\r\n    private readonly mBindingType: WgslBindingType | null;\r\n    private readonly mLocation: number | null;\r\n    private readonly mName: string;\r\n\r\n    /**\r\n     * Type byte alignment.\r\n     */\r\n    public abstract readonly alignment: number;\r\n\r\n    /**\r\n     * Buffer size in bytes.\r\n     */\r\n    public abstract readonly size: number;\r\n\r\n    /**\r\n     * Wgsl type.\r\n     */\r\n    public abstract readonly type: WgslType;\r\n\r\n    /**\r\n     * Buffer type access mode.\r\n     */\r\n    public get accessMode(): WgslAccessMode | null {\r\n        return this.mAccessMode;\r\n    }\r\n\r\n    /**\r\n     * Buffer bind type.\r\n     */\r\n    public get bindingType(): WgslBindingType | null {\r\n        return this.mBindingType;\r\n    }\r\n\r\n    /**\r\n     * Get buffer location index as parameter.\r\n     */\r\n    public get location(): number | null {\r\n        return this.mLocation;\r\n    }\r\n\r\n    /**\r\n     * Variable name of buffer.\r\n     */\r\n    public get name(): string {\r\n        return this.mName;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pName: string, pAccessMode?: WgslAccessMode, pBindType?: WgslBindingType, pLocation: number | null = null) {\r\n        this.mAttributes = new Dictionary<string, BufferTypeAttribute>();\r\n\r\n        // Static properties.\r\n        this.mName = pName;\r\n        this.mLocation = pLocation;\r\n        this.mAccessMode = pAccessMode ?? null;\r\n        this.mBindingType = pBindType ?? null;\r\n    }\r\n\r\n    /**\r\n     * Get attribute by name.\r\n     * @param pName - Attribute name.\r\n     */\r\n    public getAttribute(pName: string): BufferTypeAttribute | null {\r\n        return this.mAttributes.get(pName) ?? null;\r\n    }\r\n\r\n    /**\r\n     * Set attribute\r\n     * @param pAttribute - Attribute.\r\n     */\r\n    public setAttribute(pAttribute: BufferTypeAttribute): void {\r\n        this.mAttributes.set(pAttribute.name, pAttribute);\r\n    }\r\n}\r\n\r\nexport type BufferTypeAttribute = {\r\n    name: string;\r\n    parameter: Array<string>;\r\n}; ","import { EnumUtil, Exception } from '@kartoffelgames/core.data';\r\nimport { WgslType } from '../shader/enum/wgsl-type.enum';\r\nimport { BufferType } from './buffer-type';\r\nimport { WgslAccessMode } from '../shader/enum/wgsl-access-mode.enum';\r\nimport { WgslBindingType } from '../shader/enum/wgsl-binding-type.enum';\r\n\r\nexport class SimpleBufferType extends BufferType {\r\n    private static readonly mTypeRestrictions: Record<WgslType, Array<WgslTypeSetting>> = (() => {\r\n        const lTypes: Record<WgslType, Array<WgslTypeSetting>> = <any>{};\r\n\r\n        // Scalar types.\r\n        lTypes[WgslType.Boolean] = [{ size: 1, align: 1 }];\r\n        lTypes[WgslType.Integer32] = [{ size: 4, align: 4 }];\r\n        lTypes[WgslType.UnsignedInteger32] = [{ size: 4, align: 4 }];\r\n        lTypes[WgslType.Float32] = [{ size: 4, align: 4 }];\r\n        lTypes[WgslType.Float16] = [{ size: 2, align: 2 }];\r\n\r\n        // Vector types.\r\n        lTypes[WgslType.Vector2] = [\r\n            { size: 8, align: 8, generic: [WgslType.Integer32] },\r\n            { size: 8, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 8, align: 8, generic: [WgslType.Float32] },\r\n            { size: 4, align: 4, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Vector3] = [\r\n            { size: 12, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 12, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 12, align: 16, generic: [WgslType.Float32] },\r\n            { size: 6, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Vector4] = [\r\n            { size: 16, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 16, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 16, align: 16, generic: [WgslType.Float32] },\r\n            { size: 8, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n\r\n        // Matrix types.\r\n        lTypes[WgslType.Matrix22] = [\r\n            { size: 16, align: 8, generic: [WgslType.Integer32] },\r\n            { size: 16, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 16, align: 8, generic: [WgslType.Float32] },\r\n            { size: 8, align: 4, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix23] = [\r\n            { size: 32, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 32, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 32, align: 16, generic: [WgslType.Float32] },\r\n            { size: 16, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix24] = [\r\n            { size: 32, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 32, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 32, align: 16, generic: [WgslType.Float32] },\r\n            { size: 16, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix32] = [\r\n            { size: 24, align: 8, generic: [WgslType.Integer32] },\r\n            { size: 24, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 24, align: 8, generic: [WgslType.Float32] },\r\n            { size: 12, align: 4, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix33] = [\r\n            { size: 48, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 48, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 48, align: 16, generic: [WgslType.Float32] },\r\n            { size: 24, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix34] = [\r\n            { size: 48, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 48, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 48, align: 16, generic: [WgslType.Float32] },\r\n            { size: 24, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix42] = [\r\n            { size: 32, align: 8, generic: [WgslType.Integer32] },\r\n            { size: 32, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 32, align: 8, generic: [WgslType.Float32] },\r\n            { size: 16, align: 4, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix43] = [\r\n            { size: 64, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 64, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 64, align: 16, generic: [WgslType.Float32] },\r\n            { size: 32, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n        lTypes[WgslType.Matrix44] = [\r\n            { size: 64, align: 16, generic: [WgslType.Integer32] },\r\n            { size: 64, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n            { size: 64, align: 16, generic: [WgslType.Float32] },\r\n            { size: 32, align: 8, generic: [WgslType.Float16] }\r\n        ];\r\n\r\n        lTypes[WgslType.Array] = [\r\n            { size: -1, align: -1, generic: [WgslType.Any] },\r\n            { size: -1, align: -1, generic: [WgslType.Any, WgslType.UnsignedInteger32] }\r\n        ];\r\n        lTypes[WgslType.Struct] = [{ size: -1, align: -1 }];\r\n\r\n        lTypes[WgslType.Atomic] = [\r\n            { size: 4, align: 4, generic: [WgslType.Integer32] },\r\n            { size: 4, align: 4, generic: [WgslType.UnsignedInteger32] }\r\n        ];\r\n        // Type alias.\r\n        // TODO:\r\n\r\n        // None buffer types.\r\n        //-------------------\r\n\r\n        //Special.\r\n        lTypes[WgslType.Pointer] = [{ size: -1, align: 0, generic: [WgslType.Enum, WgslType.Any, WgslType.Enum] }];\r\n        lTypes[WgslType.Reference] = [{ size: -1, align: 0, generic: [WgslType.Enum, WgslType.Any, WgslType.Enum] }];\r\n\r\n        // Textures.\r\n        lTypes[WgslType.Texture1d] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.Texture2d] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.Texture2dArray] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.Texture3d] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.TextureCube] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.TextureCubeArray] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.TextureMultisampled2d] = [\r\n            { size: -1, align: 0, generic: [WgslType.Integer32] },\r\n            { size: -1, align: 0, generic: [WgslType.UnsignedInteger32] },\r\n            { size: -1, align: 0, generic: [WgslType.Float32] }\r\n        ];\r\n        lTypes[WgslType.TextureExternal] = [{ size: -1, align: 0 }];\r\n\r\n        // Depth texture.\r\n        lTypes[WgslType.TextureDepth2d] = [{ size: -1, align: 0 }];\r\n        lTypes[WgslType.TextureDepth2dArray] = [{ size: -1, align: 0 }];\r\n        lTypes[WgslType.TextureDepthCube] = [{ size: -1, align: 0 }];\r\n        lTypes[WgslType.TextureDepthCubeArray] = [{ size: -1, align: 0 }];\r\n        lTypes[WgslType.TextureDepthMultisampled2d] = [{ size: -1, align: 0 }];\r\n\r\n        // Storage textures.\r\n        lTypes[WgslType.TextureStorage1d] = [{ size: -1, align: 0, generic: [WgslType.Enum, WgslType.Enum] }];\r\n        lTypes[WgslType.TextureStorage2d] = [{ size: -1, align: 0, generic: [WgslType.Enum, WgslType.Enum] }];\r\n        lTypes[WgslType.TextureStorage2dArray] = [{ size: -1, align: 0, generic: [WgslType.Enum, WgslType.Enum] }];\r\n        lTypes[WgslType.TextureStorage3d] = [{ size: -1, align: 0, generic: [WgslType.Enum, WgslType.Enum] }];\r\n\r\n        // Sampler.\r\n        lTypes[WgslType.Sampler] = [{ size: -1, align: 0 }];\r\n        lTypes[WgslType.SamplerComparison] = [{ size: -1, align: 0 }];\r\n\r\n        return lTypes;\r\n    })();\r\n\r\n    private readonly mAlignment: number;\r\n    private readonly mGenericList: Array<WgslType>;\r\n    private readonly mGenericRawList: Array<WgslType | string>;\r\n    private readonly mSize: number;\r\n    private readonly mType: WgslType;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        return this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Type generics.\r\n     */\r\n    public get generics(): Array<WgslType> {\r\n        return this.mGenericList;\r\n    }\r\n\r\n    /**\r\n     * Type generics.\r\n     */\r\n    public get genericsRaw(): Array<string> {\r\n        return this.mGenericRawList;\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get size(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Wgsl type.\r\n     */\r\n    public get type(): WgslType {\r\n        return this.mType;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pType - Simple type. Scalar, Atomic, Vector and Matrix types.\r\n     * @param pGenerics - Generics of type.\r\n     */\r\n    public constructor(pName: string, pType: WgslType, pGenerics?: Array<WgslType | string>, pAccessMode?: WgslAccessMode, pBindType?: WgslBindingType, pLocation: number | null = null) {\r\n        super(pName, pAccessMode, pBindType, pLocation);\r\n\r\n        // Static properties.\r\n        this.mType = pType;\r\n        this.mGenericRawList = pGenerics ?? [];\r\n\r\n        // Filter enum of generic list.\r\n        this.mGenericList = this.mGenericRawList.map(pGeneric => {\r\n            if (!EnumUtil.enumKeyByValue(WgslType, pGeneric)) {\r\n                return WgslType.Enum;\r\n            }\r\n\r\n            return <WgslType>pGeneric;\r\n        });\r\n\r\n        // Get type restrictions.\r\n        const lRestrictionList: Array<WgslTypeSetting> | undefined = SimpleBufferType.mTypeRestrictions[pType];\r\n        if (!lRestrictionList) {\r\n            throw new Exception(`Type ${pType} not supported.`, this);\r\n        }\r\n\r\n        // Find corresponding restrictions. // TODO: Check for enum or struct or any types.\r\n        const lRestriction: WgslTypeSetting | undefined = lRestrictionList.find((pRestriction) => pRestriction.generic?.toString() === pGenerics?.toString());\r\n        if (!lRestriction) {\r\n            throw new Exception(`No type (${pType}) restriction for generics [${pGenerics}] found.`, this);\r\n        }\r\n\r\n        this.mAlignment = lRestriction.align;\r\n        this.mSize = lRestriction.size;\r\n    }\r\n}\r\n\r\n\r\n\r\ntype WgslTypeSetting = { size: number, align: number, generic?: Array<WgslType>; };","import { Dictionary } from '@kartoffelgames/core.data';\r\nimport { BufferType } from './buffer-type';\r\nimport { WgslType } from '../shader/enum/wgsl-type.enum';\r\nimport { WgslAccessMode } from '../shader/enum/wgsl-access-mode.enum';\r\nimport { WgslBindingType } from '../shader/enum/wgsl-binding-type.enum';\r\n\r\nexport class StructBufferType extends BufferType {\r\n    private mAlignment: number;\r\n    private readonly mInnerTypes: Dictionary<string, [number, BufferType]>;\r\n    private mSize: number;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        return this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get size(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Wgsl type.\r\n     */\r\n    public get type(): WgslType {\r\n        return WgslType.Struct;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pName: string, pAccessMode?: WgslAccessMode, pBindType?: WgslBindingType, pLocation: number | null = null) {\r\n        super(pName, pAccessMode, pBindType, pLocation);\r\n\r\n        this.mAlignment = 0;\r\n        this.mSize = 0;\r\n        this.mInnerTypes = new Dictionary<string, [number, BufferType]>();\r\n    }\r\n\r\n    /**\r\n     * Add property to struct.\r\n     * @param pName - Property name.\r\n     * @param pIndex - Index of property.\r\n     * @param pType - Property type.\r\n     */\r\n    public addProperty(pName: string, pIndex: number, pType: BufferType): void {\r\n        this.mInnerTypes.add(pName, [pIndex, pType]);\r\n\r\n        // Recalculate alignment.\r\n        if (pType.alignment > this.mAlignment) {\r\n            this.mAlignment = pType.alignment;\r\n        }\r\n\r\n        // Get ordered types.\r\n        const lOrderedTypeList: Array<BufferType> = [...this.mInnerTypes.values()].sort(([pIndexA], [pIndexB]) => {\r\n            return pIndexA - pIndexB;\r\n        }).map(([, pType]) => pType);\r\n\r\n        // Recalculate size.\r\n        let lCurrentOffset: number = 0;\r\n        for (const lType of lOrderedTypeList) {\r\n            // Increase offset when alignment does not match.\r\n            // When alignment matches the modulo calculation is zero.\r\n            lCurrentOffset += lCurrentOffset % lType.alignment;\r\n\r\n            // Increase offset for type.\r\n            lCurrentOffset += lType.size;\r\n        }\r\n\r\n        this.mSize = lCurrentOffset;\r\n    }\r\n\r\n    /**\r\n     * Get types of properties with set location.\r\n     */\r\n    public innerLocations(): Array<BufferType> {\r\n        const lLocationTypes: Array<BufferType> = new Array<BufferType>();\r\n        for (const [, lPropertyType] of this.mInnerTypes.values()) {\r\n            // Set property as location when set.\r\n            if (lPropertyType.location) {\r\n                lLocationTypes.push(lPropertyType);\r\n            }\r\n\r\n            // Get all inner locations when property is a struct type.\r\n            if (lPropertyType instanceof StructBufferType) {\r\n                lLocationTypes.push(...lPropertyType.innerLocations());\r\n            }\r\n        }\r\n\r\n        return lLocationTypes;\r\n    }\r\n}","export enum BindType {\r\n    Texture = 'Texture',\r\n    Buffer = 'Buffer',\r\n    Sampler = 'Sampler',\r\n    StorageTexture = 'StorageTexture',\r\n    ExternalTexture = 'ExternalTexture'\r\n}","import { List } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../gpu';\r\nimport { IInstructionSet } from './instruction_set/i-instruction-set';\r\n\r\nexport class InstructionExecuter {\r\n    private readonly mGpu: Gpu;\r\n\r\n    private readonly mInstructionSetList: List<IInstructionSet>;\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - Gpu.\r\n     */\r\n    public constructor(pGpu: Gpu) {\r\n        this.mGpu = pGpu;\r\n\r\n        // Instruction sets.\r\n        this.mInstructionSetList = new List<IInstructionSet>();\r\n    }\r\n\r\n    /**\r\n     * Add instruction set.\r\n     * @param pSet - New instruction net.\r\n     */\r\n    public addInstructionSet(pSet: IInstructionSet): void {\r\n        this.mInstructionSetList.push(pSet);\r\n    }\r\n\r\n    /**\r\n     * Remove all instruction sets.\r\n     */\r\n    public clearInstructions(): void {\r\n        this.mInstructionSetList.clear();\r\n    }\r\n\r\n    public execute(): void {\r\n        // Generate encoder and add render commands.\r\n        const lEncoder = this.mGpu.device.createCommandEncoder();\r\n\r\n        // Execute instruction sets.\r\n        for (const lInstructionSet of this.mInstructionSetList) {\r\n            lInstructionSet.execute(lEncoder);\r\n        }\r\n\r\n        this.mGpu.device.queue.submit([lEncoder.finish()]);\r\n    }\r\n}","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { BindGroup } from '../../bind_group/bind-group';\r\nimport { RenderPipeline } from '../../pipeline/render-pipeline';\r\nimport { BaseBuffer } from '../../resource/buffer/base-buffer';\r\nimport { RenderParameter } from '../parameter/render-parameter';\r\nimport { IInstruction } from './i-instruction.interface';\r\n\r\nexport class RenderInstruction implements IInstruction {\r\n    private readonly mBindGroups: Dictionary<number, BindGroup>;\r\n    private readonly mInstanceCount: number;\r\n    private readonly mPipeline: RenderPipeline;\r\n    private readonly mRenderParameter: RenderParameter;\r\n    \r\n    /**\r\n     * Get bind groups.\r\n     */\r\n    public get bindGroups(): Array<BindGroup> {\r\n        const lBindGroupList: Array<BindGroup> = new Array<BindGroup>();\r\n        for (const [lIndex, lBindGroup] of this.mBindGroups) {\r\n            lBindGroupList[lIndex] = lBindGroup;\r\n        }\r\n\r\n        return lBindGroupList;\r\n    }\r\n\r\n    /**\r\n     * Instance count.\r\n     */\r\n    public get instanceCount(): number {\r\n        return this.mInstanceCount;\r\n    }\r\n\r\n    /**\r\n     * Instruction parameter.\r\n     */\r\n    public get parameter(): RenderParameter {\r\n        return this.mRenderParameter;\r\n    }\r\n\r\n    /**\r\n     * Instructions render pipeline.\r\n     */\r\n    public get pipeline(): RenderPipeline {\r\n        return this.mPipeline;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pPipeline: RenderPipeline, pRenderParameter: RenderParameter, pInstanceCount: number = 1) {\r\n        this.mBindGroups = new Dictionary<number, BindGroup>();\r\n        this.mRenderParameter = pRenderParameter;\r\n        this.mPipeline = pPipeline;\r\n        this.mInstanceCount = pInstanceCount;\r\n\r\n        // Validate mesh and pipeline attributes length.\r\n        if (pRenderParameter.attributesCount !== this.mPipeline.shader.vertexEntryPoint?.attributes.length) {\r\n            throw new Exception(`Mesh attributes (length:${pRenderParameter.attributesCount}) does not match pipeline attributes (length${this.mPipeline.shader.vertexEntryPoint?.attributes.length})`, this);\r\n        }\r\n\r\n        // Validate mesh and pipeline attributes content.\r\n        for (const lAttribute of this.mPipeline.shader.vertexEntryPoint!.attributes) {\r\n            const lMeshAttributeBuffer: BaseBuffer<TypedArray> = pRenderParameter.getBuffer(lAttribute.name);\r\n\r\n            if (lMeshAttributeBuffer.type !== lAttribute.bufferDataType) {\r\n                throw new Exception(`Mesh attributes does not match pipeline attributes`, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set bind group of pipeline.\r\n     * @param pBindGroup - Bind group.\r\n     */\r\n    public setBindGroup(pIndex: number, pBindGroup: BindGroup): void {\r\n        // Validate bind group layout.\r\n        if (!this.mPipeline.shader.bindGroups.getGroup(pIndex).equal(pBindGroup.layout)) {\r\n            throw new Exception(`Bind data layout not matched with pipeline bind group layout.`, this);\r\n        }\r\n\r\n        this.mBindGroups.set(pIndex, pBindGroup);\r\n    }\r\n} ","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { RenderPassDescriptor } from '../../pass_descriptor/render-pass-descriptor';\r\nimport { RenderInstruction } from '../instruction/render-instruction';\r\nimport { IInstructionSet } from './i-instruction-set';\r\nimport { RenderPipeline } from '../../pipeline/render-pipeline';\r\nimport { BaseBuffer } from '../../resource/buffer/base-buffer';\r\nimport { BindGroup } from '../../bind_group/bind-group';\r\n\r\nexport class RenderInstructionSet implements IInstructionSet {\r\n    private readonly mInstructionList: Array<RenderInstruction>;\r\n    private readonly mRenderPass: RenderPassDescriptor;\r\n\r\n    // TODO: Set  GPURenderPassEncoder.setScissorRect\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pRenderPass - Render pass.\r\n     */\r\n    public constructor(pRenderPass: RenderPassDescriptor) {\r\n        this.mRenderPass = pRenderPass;\r\n        this.mInstructionList = new Array<RenderInstruction>();\r\n    }\r\n\r\n    /**\r\n     * Add render instruction.\r\n     * @param pInstruction - Render instruction.\r\n     */\r\n    public addInstruction(pInstruction: RenderInstruction): void {\r\n        // Validate instruction.\r\n        if (pInstruction.pipeline.renderPass !== this.mRenderPass) {\r\n            throw new Exception('Instruction render pass not valid for instruction set.', this);\r\n        }\r\n\r\n        // Add instruction.\r\n        this.mInstructionList.push(pInstruction);\r\n    }\r\n\r\n    /**\r\n     * Execute instruction set.\r\n     * @param pCommandEncoder - Command encoder.\r\n     */\r\n    public execute(pCommandEncoder: GPUCommandEncoder): void {\r\n        // Generate pass descriptor once per set pipeline.\r\n        const lPassDescriptor: GPURenderPassDescriptor = this.mRenderPass.native();\r\n\r\n        // Pass descriptor is set, when the pipeline ist set.\r\n        const lRenderPassEncoder: GPURenderPassEncoder = pCommandEncoder.beginRenderPass(lPassDescriptor);\r\n\r\n        // Instruction cache.\r\n        let lPipeline: RenderPipeline | null = null;\r\n        const lBindGroupList: Array<BindGroup | undefined> = new Array<BindGroup | undefined>();\r\n        const lVertexBufferList: Dictionary<number, BaseBuffer<TypedArray>> = new Dictionary<number, BaseBuffer<TypedArray>>();\r\n\r\n        // Execute instructions.\r\n        for (const lInstruction of this.mInstructionList) {\r\n            // Use cached pipeline or use new.\r\n            if (lInstruction.pipeline !== lPipeline) {\r\n                lPipeline = lInstruction.pipeline;\r\n                lRenderPassEncoder.setPipeline(lInstruction.pipeline.native()!);\r\n            }\r\n\r\n            // Add bind groups.\r\n            for (const lIndex of lPipeline.shader.bindGroups.groups) {\r\n                const lNewBindGroup: BindGroup | undefined = lInstruction.bindGroups[lIndex];\r\n                const lCurrentBindGroup: BindGroup | undefined = lBindGroupList[lIndex];\r\n\r\n                // Use cached bind group or use new.\r\n                if (lNewBindGroup !== lCurrentBindGroup) {\r\n                    lBindGroupList[lIndex] = lNewBindGroup;\r\n\r\n                    if (lNewBindGroup) {\r\n                        lRenderPassEncoder.setBindGroup(lIndex, lNewBindGroup.native());\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Add vertex attribute buffer.\r\n            for (const lAttribute of lInstruction.pipeline.shader.vertexEntryPoint!.attributes) {\r\n                const lNewAttributeBuffer: BaseBuffer<TypedArray> = lInstruction.parameter.getBuffer(lAttribute.name);\r\n                const lCurrentAttributeBuffer: BaseBuffer<TypedArray> | undefined = lVertexBufferList.get(lAttribute.location);\r\n\r\n                // Use cached vertex buffer or use new.\r\n                if (lNewAttributeBuffer !== lCurrentAttributeBuffer) {\r\n                    lVertexBufferList.set(lAttribute.location, lNewAttributeBuffer);\r\n                    lRenderPassEncoder.setVertexBuffer(lAttribute.location, lNewAttributeBuffer.native());\r\n                }\r\n            }\r\n\r\n            lRenderPassEncoder.draw(lInstruction.parameter.indexCount, lInstruction.instanceCount);\r\n        }\r\n\r\n        lRenderPassEncoder.end();\r\n    }\r\n}","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../../gpu';\r\nimport { BaseBuffer } from '../../resource/buffer/base-buffer';\r\nimport { SimpleBuffer } from '../../resource/buffer/simple-buffer';\r\n\r\nexport class RenderParameter {\r\n    private readonly mGpu: Gpu;\r\n    private readonly mIndexData: Array<number>;\r\n    private readonly mMaxIndex: number;\r\n    private readonly mVertexBuffer: Dictionary<string, BaseBuffer<TypedArray>>;\r\n\r\n    /**\r\n     * Vertex attributes count.\r\n     */\r\n    public get attributesCount(): number {\r\n        return this.mVertexBuffer.size;\r\n    }\r\n\r\n    /**\r\n     * Get index count.\r\n     * Size of vertex data.\r\n     */\r\n    public get indexCount(): number {\r\n        return this.mIndexData.length;\r\n    }\r\n\r\n    /**\r\n     * Get index count.\r\n     * Size of vertex data.\r\n     */\r\n    public get maxIndex(): number {\r\n        return this.mMaxIndex;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pVertexIndices - Vertex indices.\r\n     */\r\n    public constructor(pGpu: Gpu, pVertexIndices: Array<number>) {\r\n        this.mGpu = pGpu;\r\n        this.mVertexBuffer = new Dictionary<string, BaseBuffer<TypedArray>>();\r\n        this.mIndexData = pVertexIndices;\r\n        this.mMaxIndex = Math.max(...pVertexIndices);\r\n    }\r\n\r\n    /**\r\n     * Get buffer by attribute name\r\n     * @param pName - Vertex attribute name.\r\n     */\r\n    public getBuffer(pName: string): BaseBuffer<TypedArray> {\r\n        const lBuffer: BaseBuffer<TypedArray> | undefined = this.mVertexBuffer.get(pName);\r\n        if (!lBuffer) {\r\n            throw new Exception(`Vertex buffer for attribute \"${pName}\" not set`, this);\r\n        }\r\n\r\n        return lBuffer;\r\n    }\r\n\r\n    /**\r\n     * Add data for each index.\r\n     * @param pName - Attribute name.\r\n     * @param pData - Data array.\r\n     * @param pStrideLength - Data stride length for one value. \r\n     */\r\n    public setIndexData(pName: string, pData: Array<number>, pStrideLength: number): void {\r\n        // Validate.\r\n        if (pData.length % pStrideLength !== 0) {\r\n            throw new Exception('Vertex data length offset.', this);\r\n        }\r\n\r\n        this.mVertexBuffer.set(pName, new SimpleBuffer(this.mGpu, GPUBufferUsage.VERTEX, new Float32Array(pData)));\r\n    }\r\n\r\n    /**\r\n     * Adds data for each vertex.\r\n     * Converts vertex data into index data by dublicating vertex data for each index.\r\n     * @param pName - Attribute name.\r\n     * @param pData - Data array.\r\n     * @param pStrideLength - Data stride length for one value. \r\n     */\r\n    public setVertexData(pName: string, pData: Array<number>, pStrideLength: number): void {\r\n        // Validate data strides.\r\n        if (pData.length % pStrideLength !== 0) {\r\n            throw new Exception(`Vertex data length offset: ${pName}(length: ${pData.length}, offset: ${pData.length % pStrideLength})`, this);\r\n        }\r\n        if ((this.mMaxIndex + 1) * pStrideLength !== pData.length) {\r\n            throw new Exception(`Index data ${pName}(${pData.length}) does not meet needed data length of (max index: ${this.mMaxIndex}, needed length: ${(this.mMaxIndex + 1) * pStrideLength})`, this);\r\n        }\r\n\r\n        // Dublicate index data into vertex data.\r\n        const lIndexData: Array<number> = new Array<number>();\r\n        for (const lIndex of this.mIndexData) {\r\n            // Copy data stride for index.\r\n            lIndexData.push(...pData.slice(lIndex * pStrideLength, (lIndex + 1) * pStrideLength));\r\n        }\r\n\r\n        this.mVertexBuffer.set(pName, new SimpleBuffer(this.mGpu, GPUBufferUsage.VERTEX, new Float32Array(lIndexData)));\r\n    }\r\n}","import { Dictionary } from '@kartoffelgames/core.data';\r\nimport { Gpu } from './gpu';\r\n\r\n/**\r\n * Gpu native object.\r\n */\r\nexport abstract class GpuNativeObject<T extends object> {\r\n    private readonly mChangeListener: Dictionary<GpuNativeObject<any>, GenericListener>;\r\n    private readonly mGpu: Gpu;\r\n    private readonly mInternalList: Set<GpuNativeObject<any>>;\r\n    private mLabel: string;\r\n    private readonly mNativeName: string;\r\n    private mNativeObject: T | null;\r\n    private mObjectInvalid: boolean;\r\n\r\n    /**\r\n     * Debug label.\r\n     */\r\n    public get label(): string {\r\n        let lLabel: string = this.mNativeName;\r\n        if (this.mLabel) {\r\n            lLabel += '->' + this.mLabel;\r\n        }\r\n        return lLabel;\r\n    } set label(pLabel: string) {\r\n        this.mLabel = pLabel;\r\n    }\r\n\r\n    /**\r\n     * Get global gpu.\r\n     */\r\n    protected get gpu(): Gpu {\r\n        return this.mGpu;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - Gpu object.\r\n     * @param pNativeName - Name of native label.\r\n     */\r\n    public constructor(pGpu: Gpu, pNativeName: string) {\r\n        this.mGpu = pGpu;\r\n        this.mNativeObject = null;\r\n        this.mLabel = '';\r\n        this.mNativeName = pNativeName;\r\n\r\n        // Trigger refresh on creation.\r\n        this.mObjectInvalid = true;\r\n\r\n        // Init internal native change detection.\r\n        this.mChangeListener = new Dictionary<GpuNativeObject<any>, GenericListener>();\r\n        this.mInternalList = new Set<GpuNativeObject<any>>();\r\n    }\r\n\r\n    /**\r\n     * Destroy generated native object.\r\n     */\r\n    public destroy(): void {\r\n        // Destroy old native object.\r\n        if (this.mNativeObject) {\r\n            this.destroyNative(this.mNativeObject);\r\n\r\n            // Remove destroyed native.\r\n            this.mNativeObject = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compare two native objects.\r\n     * @param pObject - Target object.\r\n     */\r\n    public equal(pObject: this): boolean {\r\n        return this.compare(pObject);\r\n    }\r\n\r\n    /**\r\n     * Get native object.\r\n     */\r\n    public native(): T {\r\n        // Invalidate oject when needed.\r\n        this.invalidate();\r\n\r\n        // Generate new native object when not already created.\r\n        if (this.mObjectInvalid) {\r\n            // Destroy native.\r\n            this.destroy();\r\n\r\n            // Reset object invalidation.\r\n            this.mObjectInvalid = false;\r\n\r\n            // Generate new native object.\r\n            this.mNativeObject = this.generate();\r\n        }\r\n\r\n        return <T>this.mNativeObject;\r\n    }\r\n\r\n    /**\r\n     * Compare objects.\r\n     * @param pObject - Target compare object.\r\n     */\r\n    protected compare(pObject: this): boolean {\r\n        return this === pObject;\r\n    }  \r\n\r\n    /**\r\n     * Destroy object.\r\n     */\r\n    protected destroyNative(_pNativeObject: T): void {\r\n        // Nothing to destroy. :)\r\n    }\r\n\r\n    /**\r\n     * Register internal native object.\r\n     * Invalidated native when internal changes.\r\n     * @param pInternalNative - Internal used native.\r\n     */\r\n    protected registerInternalNative(pInternalNative: GpuNativeObject<any>): void {\r\n        // Save internal native.\r\n        pInternalNative.addChangeListener(() => {\r\n            this.triggerChange();\r\n        }, this);\r\n        this.mInternalList.add(pInternalNative);\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Trigger native change.\r\n     */\r\n    protected triggerChange(): void {\r\n        // Trigger change.\r\n        if (!this.mObjectInvalid) {\r\n            this.mObjectInvalid = true;\r\n\r\n            // Execute change listener.\r\n            for (const lListener of this.mChangeListener.values()) {\r\n                lListener();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unregister internal native object.\r\n     * @param pInternalNative - Internal used native.\r\n     */\r\n    protected unregisterInternalNative(pInternalNative: GpuNativeObject<any>): void {\r\n        // Delete saved native.\r\n        pInternalNative.removeChangeListener(this);\r\n        this.mInternalList.delete(pInternalNative);\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Validate native object.\r\n     */\r\n    protected validate(_pNativeObject: T): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Add change listener.\r\n     * @param pListener - Change listener.\r\n     * @param pReferrer - Referrer object.\r\n     */\r\n    private addChangeListener(pListener: GenericListener, pReferrer: GpuNativeObject<any>) {\r\n        this.mChangeListener.set(pReferrer, pListener);\r\n    }\r\n\r\n    /**\r\n     * Invalidate native object.\r\n     */\r\n    private invalidate(): void {\r\n        // Invalidate internals.\r\n        for (const lInternal of this.mInternalList) {\r\n            lInternal.invalidate();\r\n        }\r\n\r\n        // Validate only when there is somthing to validate.\r\n        if (!this.mObjectInvalid && this.mNativeObject) {\r\n            if (!this.validate(this.mNativeObject)) {\r\n                this.triggerChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove change listener.\r\n     * @param pReferrer - Referrer object.\r\n     */\r\n    private removeChangeListener(pReferrer: GpuNativeObject<any>) {\r\n        this.mChangeListener.delete(pReferrer);\r\n    }\r\n\r\n    /**\r\n     * Generate native object.\r\n     */\r\n    protected abstract generate(): T;\r\n}\r\n\r\ntype GenericListener = () => void;","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\n\r\nexport class Gpu {\r\n    private static readonly mAdapters: Dictionary<string, GPUAdapter> = new Dictionary<string, GPUAdapter>();\r\n    private static readonly mDevices: Dictionary<GPUAdapter, GPUDevice> = new Dictionary<GPUAdapter, GPUDevice>();\r\n\r\n    /**\r\n     * Create GPU device.\r\n     * @param pMode - Prefered device mode.\r\n     */\r\n    public static async create(pMode: GPUPowerPreference): Promise<Gpu> {\r\n        // Try to load cached adapter. When not cached, request new one.\r\n        const lAdapter: GPUAdapter | null = Gpu.mAdapters.get(pMode) ?? await window.navigator.gpu.requestAdapter({ powerPreference: pMode });\r\n        if (lAdapter) {\r\n            Gpu.mAdapters.set(pMode, lAdapter);\r\n        } else {\r\n            throw new Exception('Error requesting GPU adapter', Gpu);\r\n        }\r\n\r\n        // Try to load cached device. When not cached, request new one.\r\n        const lDevice: GPUDevice | null = Gpu.mDevices.get(lAdapter) ?? await lAdapter.requestDevice();\r\n        if (lAdapter) {\r\n            Gpu.mDevices.set(lAdapter, lDevice);\r\n        } else {\r\n            throw new Exception('Error requesting GPU device', Gpu);\r\n        }\r\n\r\n        return new Gpu(lAdapter, lDevice);\r\n    }\r\n\r\n    private readonly mGpuAdapter: GPUAdapter;\r\n    private readonly mGpuDevice: GPUDevice;\r\n\r\n    /**\r\n     * GPU adapter.\r\n     */\r\n    public get adapter(): GPUAdapter {\r\n        return this.mGpuAdapter;\r\n    }\r\n\r\n    /**\r\n     * GPU device.\r\n     */\r\n    public get device(): GPUDevice {\r\n        return this.mGpuDevice;\r\n    }\r\n\r\n    /**\r\n     * Preferred texture format.\r\n     */\r\n    public get preferredFormat(): GPUTextureFormat {\r\n        return window.navigator.gpu.getPreferredCanvasFormat();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpuAdapter - Gpu adapter. \r\n     * @param pGpuDevice - Gpu device.\r\n     */\r\n    private constructor(pGpuAdapter: GPUAdapter, pGpuDevice: GPUDevice) {\r\n        this.mGpuAdapter = pGpuAdapter;\r\n        this.mGpuDevice = pGpuDevice;\r\n    }\r\n}","export enum AttachmentType {\r\n    Canvas = 1,\r\n    Color = 2,\r\n    Depth = 4,\r\n    Stencil = 8\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../gpu';\r\nimport { CanvasTexture } from '../resource/texture/canvas-texture';\r\nimport { ITexture } from '../resource/texture/i-texture.interface';\r\nimport { Texture } from '../resource/texture/texture';\r\nimport { TextureUsage } from '../resource/texture/texture-usage.enum';\r\nimport { AttachmentType } from './attachment-type.enum';\r\nimport { Attachment } from './type/attachment';\r\n\r\nexport class Attachments {\r\n    private readonly mAttachmentGroup: Dictionary<string, number>;\r\n    private readonly mAttachments: Dictionary<string, AttachmentData>;\r\n    private readonly mGpu: Gpu;\r\n    private readonly mMultiSampleLevel: number;\r\n    private mRebuildRequested: boolean;\r\n    private readonly mSize: TextureDimension;\r\n    private readonly mTextureGroup: Dictionary<string, ITexture>;\r\n\r\n    /**\r\n     * Attachment height.\r\n     */\r\n    public get height(): number {\r\n        return this.mSize.height;\r\n    }\r\n\r\n    /**\r\n     * Attachment width.\r\n     */\r\n    public get width(): number {\r\n        return this.mSize.width;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     */\r\n    public constructor(pGpu: Gpu, pMultiSampleLevel: number = 1) {\r\n        this.mAttachments = new Dictionary<string, AttachmentData>();\r\n        this.mAttachmentGroup = new Dictionary<string, number>();\r\n        this.mTextureGroup = new Dictionary<string, ITexture>();\r\n        this.mGpu = pGpu;\r\n        this.mRebuildRequested = false;\r\n        this.mSize = { width: 1, height: 1 };\r\n        this.mMultiSampleLevel = pMultiSampleLevel;\r\n    }\r\n\r\n    /**\r\n     * Add attachment. Forces rebuild of some groups.\r\n     * @param pAttachment - Attachment.\r\n     */\r\n    public addAttachment(pAttachment: CanvasAttachmentDescription | TextureAttachmentDescription): void {\r\n        // Filter dublicates.\r\n        if (this.mAttachments.has(pAttachment.name)) {\r\n            throw new Exception(`Attachment \"${pAttachment.name}\" already exists.`, this);\r\n        }\r\n\r\n        // Auto detect format.\r\n        const lFormat: GPUTextureFormat = pAttachment.format ?? window.navigator.gpu.getPreferredCanvasFormat();\r\n\r\n        // Special canvas treatment for fixed properties.\r\n        let lType: AttachmentType = pAttachment.type;\r\n        let lCanvas: HTMLCanvasElement | null = null;\r\n        if ('canvas' in pAttachment) {\r\n            lType |= AttachmentType.Canvas; // Inject canvas type.\r\n            lCanvas = pAttachment.canvas;\r\n        }\r\n\r\n        // Apply default value for layer count.\r\n        const lLayerCount: number = (<TextureAttachmentDescription>pAttachment).layers ?? 1;\r\n\r\n        // Force default for attachment\r\n        const lAttachment: AttachmentData = {\r\n            type: lType,\r\n            name: pAttachment.name,\r\n            format: lFormat,\r\n            layers: lLayerCount,\r\n            canvas: lCanvas,\r\n            attachment: new Attachment(this.mGpu, lFormat, lLayerCount)\r\n        };\r\n\r\n        // Set attachment.\r\n        this.mAttachments.set(pAttachment.name, lAttachment);\r\n\r\n        // Set refresh flag to refresh all textures on next load.\r\n        this.mRebuildRequested = true;\r\n    }\r\n\r\n    /**\r\n     * Get attachment by name.\r\n     * @param pName - Attachment name.\r\n     */\r\n    public getAttachment(pName: string): Attachment {\r\n        // Rebuild textures.\r\n        if (this.mRebuildRequested) {\r\n            this.rebuildTetures();\r\n        }\r\n\r\n        // Try to get attachment\r\n        const lAttachment = this.mAttachments.get(pName);\r\n        if (!lAttachment) {\r\n            throw new Exception(`No attachment \"${pName}\" found.`, this);\r\n        }\r\n\r\n        // Read cached attachments.\r\n        return lAttachment.attachment;\r\n    }\r\n\r\n    /**\r\n     * Check attachment by name.\r\n     * @param pName - Attachment name.\r\n     */\r\n    public hasAttachment(pName: string): boolean {\r\n        return this.mAttachments.has(pName);\r\n    }\r\n\r\n    /**\r\n     * Resize all attachments.\r\n     * @param pWidth - New width.\r\n     * @param pHeight - New height.\r\n     */\r\n    public resize(pWidth: number, pHeight: number): void {\r\n        // Only resize on actual size change.\r\n        if (this.mSize.width === pWidth && this.mSize.height === pHeight) {\r\n            return;\r\n        }\r\n\r\n        // Set size.\r\n        this.mSize.width = pWidth;\r\n        this.mSize.height = pHeight;\r\n\r\n        // Apply with to all created textures.\r\n        for (const lTexture of this.mTextureGroup.values()) {\r\n            lTexture.width = this.mSize.width;\r\n            lTexture.height = this.mSize.height;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Group attachments by texture format.\r\n     * @param pAttachmentList - Attachments.\r\n     */\r\n    private groupAttachments(pAttachmentList: Array<AttachmentData>): Array<AttachmentGroup> {\r\n        const lGroups: Dictionary<string, AttachmentGroup> = new Dictionary<string, AttachmentGroup>();\r\n\r\n        for (const lAttachment of pAttachmentList) {\r\n            // Get group name by format and multisamples.         \r\n            let lGroupName: string = `Format: ${lAttachment.format}`;\r\n\r\n            // Exclude canvas by setting unique group names as they should never be grouped.\r\n            let lCanvas: HTMLCanvasElement | null = null;\r\n            if ((lAttachment.type & AttachmentType.Canvas) > 0) {\r\n                lGroupName = `CANVAS--${lAttachment.name}--${lGroupName}`;\r\n                lCanvas = lAttachment.canvas;\r\n            }\r\n\r\n            // Create new group when not already created.\r\n            if (!lGroups.has(lGroupName)) {\r\n                lGroups.set(lGroupName, {\r\n                    name: lGroupName,\r\n                    format: lAttachment.format,\r\n                    attachments: new Array<AttachmentData>(),\r\n                    updatedNeeded: false,\r\n                    canvas: lCanvas\r\n                });\r\n            }\r\n\r\n            // Get group and add attachment.\r\n            lGroups.get(lGroupName)!.attachments.push(lAttachment);\r\n        }\r\n\r\n        // Groups cant be empty, as there is no detele attachment.\r\n\r\n        // Check attachment count difference since last grouping.\r\n        for (const lGroup of lGroups.values()) {\r\n            if (lGroup.attachments.length !== this.mAttachmentGroup.get(lGroup.name)) {\r\n                lGroup.updatedNeeded = true;\r\n\r\n                // Update group value.\r\n                this.mAttachmentGroup.set(lGroup.name, lGroup.attachments.length);\r\n            }\r\n        }\r\n\r\n        return [...lGroups.values()];\r\n    }\r\n\r\n    /**\r\n     * Rebuild textures that are outdated.\r\n     */\r\n    private rebuildTetures(): void {\r\n        // Group textures.\r\n        for (const lGroup of this.groupAttachments([...this.mAttachments.values()])) {\r\n            // Continue when group has not been updated.\r\n            if (!lGroup.updatedNeeded) {\r\n                continue;\r\n            }\r\n\r\n            // Destory old texture.\r\n            this.mTextureGroup.get(lGroup.name)?.destroy();\r\n\r\n            // Build new texture or clear old one.\r\n            if (lGroup.attachments.length > 0) {\r\n                // Count layers of group.\r\n                const lTextureLayerCount: number = lGroup.attachments.reduce((pCurrent, pNext) => { return pCurrent + pNext.layers; }, 0);\r\n\r\n                // Create texture and set size and concat debug label.\r\n                let lTexture: ITexture;\r\n                if (lGroup.canvas !== null) {\r\n                    const lCanvasTexture: CanvasTexture = new CanvasTexture(this.mGpu, lGroup.canvas, lGroup.format, TextureUsage.RenderAttachment | TextureUsage.TextureBinding);\r\n                    lCanvasTexture.label = lGroup.name;\r\n                    lCanvasTexture.width = this.mSize.width;\r\n                    lCanvasTexture.height = this.mSize.height;\r\n\r\n                    lTexture = lCanvasTexture;\r\n                } else {\r\n                    // Create fixed texture.\r\n                    const lFixedTexture: Texture = new Texture(this.mGpu, lGroup.format, TextureUsage.RenderAttachment | TextureUsage.TextureBinding, '2d', this.mMultiSampleLevel, lTextureLayerCount);\r\n                    lFixedTexture.label = lGroup.name;\r\n                    lFixedTexture.width = this.mSize.width;\r\n                    lFixedTexture.height = this.mSize.height;\r\n\r\n                    lTexture = lFixedTexture;\r\n                }\r\n\r\n                // Create views from same texture.\r\n                let lCurrentLayer: number = 0;\r\n                for (const lAttachment of lGroup.attachments) {\r\n                    // Update attachment texture.\r\n                    lAttachment.attachment.updateTexture(lTexture, lCurrentLayer);\r\n\r\n                    // Increment layer.\r\n                    lCurrentLayer += lAttachment.layers;\r\n                }\r\n\r\n                // Update group texture.\r\n                this.mTextureGroup.set(lGroup.name, lTexture);\r\n            } else {\r\n                // Remove group texture.\r\n                this.mTextureGroup.delete(lGroup.name);\r\n            }\r\n        }\r\n\r\n        this.mRebuildRequested = false;\r\n    }\r\n}\r\n\r\ntype TextureDimension = { width: number; height: number; };\r\ntype AttachmentGroup = {\r\n    format: GPUTextureFormat;\r\n    attachments: Array<AttachmentData>;\r\n    updatedNeeded: boolean;\r\n    name: string;\r\n    canvas: HTMLCanvasElement | null;\r\n};\r\n\r\ntype AttachmentData = {\r\n    type: AttachmentType,\r\n    name: string,\r\n    format: GPUTextureFormat;\r\n    layers: GPUIntegerCoordinate;\r\n    canvas: HTMLCanvasElement | null;\r\n    attachment: Attachment;\r\n};\r\n\r\n// Descriptive data.\r\nexport type CanvasAttachmentDescription = {\r\n    type: AttachmentType.Color | AttachmentType.Depth | AttachmentType.Stencil,\r\n    canvas: HTMLCanvasElement;\r\n    name: string,\r\n    format?: GPUTextureFormat;\r\n};\r\nexport type TextureAttachmentDescription = {\r\n    type: AttachmentType.Color | AttachmentType.Depth | AttachmentType.Stencil,\r\n    name: string,\r\n    format: GPUTextureFormat;\r\n    layers?: GPUIntegerCoordinate;\r\n    dimension?: GPUTextureViewDimension;\r\n};","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\nimport { Attachments } from './attachments';\r\nimport { Attachment } from './type/attachment';\r\n\r\nexport class RenderPassDescriptor extends GpuNativeObject<GPURenderPassDescriptor> {\r\n    private readonly mAttachments: Attachments;\r\n    private readonly mColorAttachments: Array<RenderPassColorAttachment>;\r\n    private mDepthStencilAttachment: RenderPassDepthStencilAttachment | null;\r\n\r\n    /**\r\n     * Get render targets.\r\n     */\r\n    public get colorAttachments(): Array<Attachment> {\r\n        const lTargets: Array<Attachment> = new Array<Attachment>();\r\n        for (const lColorAttachment of this.mColorAttachments) {\r\n            lTargets.push(lColorAttachment.attachment);\r\n        }\r\n\r\n        return lTargets;\r\n    }\r\n\r\n    /**\r\n     * Get depth attachment of render pass.\r\n     */\r\n    public get depthAttachment(): Attachment | undefined {\r\n        if (!this.mDepthStencilAttachment) {\r\n            return undefined;\r\n        }\r\n\r\n        return this.mDepthStencilAttachment.attachment;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - Gpu.\r\n     * @param pAttachments - Attachments. \r\n     */\r\n    public constructor(pGpu: Gpu, pAttachments: Attachments) {\r\n        super(pGpu, 'RENDER_PASS_DESCRIPTOR');\r\n\r\n        // Set statics.\r\n        this.mAttachments = pAttachments;\r\n\r\n        // Init lists and defaults.\r\n        this.mColorAttachments = new Array<RenderPassColorAttachment>();\r\n        this.mDepthStencilAttachment = null;\r\n    }\r\n\r\n    /**\r\n     * Set color attachment.\r\n     * @param pAttachmentName - Attachment name.\r\n     * @param pClearValue - Clear value.\r\n     * @param pLoadOp - Load operation.\r\n     * @param pStoreOp - Store operation.\r\n     */\r\n    public setColorAttachment(pLocation: number, pAttachmentName: string, pClearValue: GPUColor, pLoadOp?: GPULoadOp, pStoreOp?: GPUStoreOp, pResolveAttachmentName?: string): void {\r\n        // Validate attachment existence.\r\n        if (!this.mAttachments.hasAttachment(pAttachmentName)) {\r\n            throw new Exception(`Attachment \"${pAttachmentName}\" does not exist.`, this);\r\n        }\r\n        if (pResolveAttachmentName && !this.mAttachments.hasAttachment(pResolveAttachmentName)) {\r\n            throw new Exception(`Resolve attachment \"${pResolveAttachmentName}\" does not exist.`, this);\r\n        }\r\n\r\n        // Update internal attachment object.\r\n        const lAttachment: Attachment = this.mAttachments.getAttachment(pAttachmentName);\r\n        if (this.mColorAttachments[pLocation]) {\r\n            this.unregisterInternalNative(this.mColorAttachments[pLocation].attachment);\r\n        }\r\n        this.registerInternalNative(lAttachment);\r\n\r\n        // Update internal resolve attachment object.\r\n        let lResolveAttachment: Attachment | null = null;\r\n        if (pResolveAttachmentName) {\r\n            lResolveAttachment = this.mAttachments.getAttachment(pResolveAttachmentName);\r\n            if (this.mColorAttachments[pLocation] && this.mColorAttachments[pLocation].resolveTarget) {\r\n                this.unregisterInternalNative(this.mColorAttachments[pLocation].resolveTarget!);\r\n            }\r\n        }\r\n        if (lResolveAttachment) {\r\n            this.registerInternalNative(lResolveAttachment);\r\n        }\r\n\r\n        // Setup depth attachment.\r\n        this.mColorAttachments[pLocation] = {\r\n            attachment: lAttachment,\r\n            clearValue: pClearValue,\r\n            loadOp: pLoadOp ?? 'clear', // Apply default value.\r\n            storeOp: pStoreOp ?? 'store', // Apply default value.\r\n            resolveTarget: lResolveAttachment\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set depth attachment.\r\n     * @param pAttachmentName - Attachment name.\r\n     * @param pClearValue - Clear value.\r\n     * @param pLoadOp - Load operation.\r\n     * @param pStoreOp - Store operation.\r\n     */\r\n    public setDepthAttachment(pAttachmentName: string, pClearValue: number, pLoadOp?: GPULoadOp, pStoreOp?: GPUStoreOp,): void {\r\n        // Validate attachment existence.\r\n        if (!this.mAttachments.hasAttachment(pAttachmentName)) {\r\n            throw new Exception(`Attachment \"${pAttachmentName}\" does not exist.`, this);\r\n        }\r\n\r\n        const lAttachment: Attachment = this.mAttachments.getAttachment(pAttachmentName);\r\n\r\n        // Update internal object.\r\n        if (this.mDepthStencilAttachment) {\r\n            this.unregisterInternalNative(this.mDepthStencilAttachment.attachment);\r\n        }\r\n        this.registerInternalNative(lAttachment);\r\n\r\n        // Setup depth attachment.\r\n        this.mDepthStencilAttachment = {\r\n            attachment: lAttachment,\r\n            clearValue: pClearValue,\r\n            loadOp: pLoadOp ?? 'clear', // Apply default value.\r\n            storeOp: pStoreOp ?? 'store', // Apply default value.\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate render pass descriptor.\r\n     */\r\n    protected generate(): GPURenderPassDescriptor {\r\n        // Create color attachments.\r\n        const lColorAttachments: Array<GPURenderPassColorAttachment> = new Array<GPURenderPassColorAttachment>();\r\n        for (const lColorAttachment of this.mColorAttachments) {\r\n            const lPassColorAttachment: GPURenderPassColorAttachment = {\r\n                view: lColorAttachment.attachment.native(),\r\n                clearValue: lColorAttachment.clearValue,\r\n                loadOp: lColorAttachment.loadOp,\r\n                storeOp: lColorAttachment.storeOp\r\n            };\r\n\r\n            // Resolve optional resolve attachment.\r\n            if (lColorAttachment.resolveTarget) {\r\n                lPassColorAttachment.resolveTarget = lColorAttachment.resolveTarget.native();\r\n            }\r\n\r\n            lColorAttachments.push(lPassColorAttachment);\r\n        }\r\n\r\n        // Create descriptor with color attachments.\r\n        const lDescriptor: GPURenderPassDescriptor = {\r\n            colorAttachments: lColorAttachments\r\n        };\r\n\r\n        // Set optional depth attachment.\r\n        if (this.mDepthStencilAttachment) {\r\n            lDescriptor.depthStencilAttachment = {\r\n                view: this.mDepthStencilAttachment.attachment.native(),\r\n                depthClearValue: this.mDepthStencilAttachment.clearValue,\r\n                depthLoadOp: this.mDepthStencilAttachment.loadOp,\r\n                depthStoreOp: this.mDepthStencilAttachment.storeOp\r\n            };\r\n        }\r\n\r\n        return lDescriptor;\r\n    }\r\n}\r\n\r\ntype RenderPassColorAttachment = {\r\n    attachment: Attachment,\r\n    clearValue: GPUColor;\r\n    loadOp: GPULoadOp;\r\n    storeOp: GPUStoreOp;\r\n    resolveTarget: Attachment | null;\r\n};\r\n\r\ntype RenderPassDepthStencilAttachment = {\r\n    attachment: Attachment,\r\n    clearValue: number;\r\n    loadOp: GPULoadOp;\r\n    storeOp: GPUStoreOp;\r\n};","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../../gpu';\r\nimport { GpuNativeObject } from '../../gpu-native-object';\r\nimport { ITexture } from '../../resource/texture/i-texture.interface';\r\n\r\nexport class Attachment extends GpuNativeObject<GPUTextureView>{\r\n    private mBaseArrayLayer: number;\r\n    private readonly mFormat: GPUTextureFormat;\r\n    private readonly mLayers: GPUIntegerCoordinate;\r\n    private mTexture: ITexture | null;\r\n\r\n    /**\r\n     * Get texture format.\r\n     */\r\n    public get format(): GPUTextureFormat {\r\n        return this.mFormat;\r\n    }\r\n\r\n    /**\r\n     * Multisample level of attachment.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return this.mTexture?.multiSampleLevel ?? 1;\r\n    }\r\n\r\n    /**\r\n     * constructor.\r\n     * @param pAttachment - Attachment.\r\n     */\r\n    public constructor(pGpu: Gpu, pFormat: GPUTextureFormat, pLayers: number) {\r\n        super(pGpu, 'ATTACHMENT');\r\n        this.mFormat = pFormat;\r\n        this.mLayers = pLayers;\r\n\r\n        // Set default.\r\n        this.mTexture = null;\r\n        this.mBaseArrayLayer = 0;\r\n    }\r\n\r\n    /**\r\n     * Update attachment texture.\r\n     * @param pTexture - Attachment texture.\r\n     * @param pBaseArrayLayer - Starting index of first texture layer. \r\n     */\r\n    public updateTexture(pTexture: ITexture, pBaseArrayLayer: number): void {\r\n        // Remove old and add new texture as internal native.\r\n        if (this.mTexture) {\r\n            this.unregisterInternalNative(this.mTexture);\r\n        }\r\n        this.registerInternalNative(pTexture);\r\n\r\n        // Set new texture informations.\r\n        this.mBaseArrayLayer = pBaseArrayLayer;\r\n        this.mTexture = pTexture;\r\n    }\r\n\r\n    /**\r\n     * Generate color attachment.\r\n     */\r\n    protected generate(): GPUTextureView {\r\n        // Validate texture.\r\n        if (!this.mTexture) {\r\n            throw new Exception(`Attachment \"${this.label}\" has no texture.`, this);\r\n        }\r\n\r\n        const lTexture: GPUTexture = this.mTexture.native();\r\n\r\n        // Generate view.\r\n        const lView: GPUTextureView = lTexture.createView({\r\n            label: 'Texture-View' + this.mTexture.label,\r\n            dimension: '2d',\r\n            baseArrayLayer: this.mBaseArrayLayer,\r\n            arrayLayerCount: this.mLayers,\r\n        });\r\n\r\n        return lView;\r\n    }\r\n}\r\n\r\nexport type AttachmentDefinition = {\r\n    frame: ITexture;\r\n    format: GPUTextureFormat;\r\n    layers: GPUIntegerCoordinate;\r\n    baseArrayLayer: number;\r\n};","import { Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { BufferType } from '../../buffer_type/buffer-type';\r\nimport { SimpleBufferType } from '../../buffer_type/simple-buffer-type';\r\nimport { Gpu } from '../../gpu';\r\nimport { GpuNativeObject } from '../../gpu-native-object';\r\nimport { BufferDataType } from '../../resource/buffer/base-buffer';\r\nimport { WgslType } from '../../shader/enum/wgsl-type.enum';\r\n\r\nexport class VertexAttribute extends GpuNativeObject<GPUVertexBufferLayout> {\r\n    private readonly mAttribute: AttributeFormatDefinition;\r\n    private readonly mName: string;\r\n\r\n    /**\r\n     * Get underlying type of buffer.\r\n     */\r\n    public get bufferDataType(): BufferDataType<TypedArray> {\r\n        return this.mAttribute.dataType;\r\n    }\r\n\r\n    /**\r\n     * Get attribute location.\r\n     */\r\n    public get location(): number {\r\n        return this.mAttribute.type.location!;\r\n    }\r\n\r\n    /**\r\n     * Attribute name.\r\n     */\r\n    public get name(): string {\r\n        return this.mName;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pBuffer - Buffer.\r\n     */\r\n    public constructor(pGpu: Gpu, pType: SimpleBufferType) {\r\n        super(pGpu, 'VERTEX_ATTRIBUTE');\r\n\r\n        // Format by type.\r\n        const lGeneric: WgslType | undefined = pType.generics.at(0);\r\n        const lFormatStride: { format: GPUVertexFormat, type: BufferDataType<TypedArray>; } | undefined = gTypeToBufferType[pType.type]?.[lGeneric!];\r\n\r\n        // Throw on invalid parameter.\r\n        if (!lFormatStride) {\r\n            throw new Exception(`Invalid attribute type for \"${pType}<${lGeneric}>\"`, this);\r\n        }\r\n\r\n        this.mName = pType.name;\r\n        this.mAttribute = {\r\n            type: pType,\r\n            dataType: lFormatStride.type,\r\n            format: lFormatStride.format\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate native object.\r\n     */\r\n    protected generate(): GPUVertexBufferLayout {\r\n        // Generate attributes.\r\n        const lAttributes: Array<GPUVertexAttribute> = new Array<GPUVertexAttribute>();\r\n        lAttributes.push({\r\n            format: this.mAttribute.format,\r\n            offset: 0, // Current counter of bytes.\r\n            shaderLocation: this.mAttribute.type.location!\r\n        });\r\n\r\n        return {\r\n            arrayStride: this.mAttribute.type.size,\r\n            stepMode: 'vertex',\r\n            attributes: lAttributes\r\n        };\r\n    }\r\n}\r\n\r\nconst gTypeToBufferType: { [type: string]: { [generic: string]: { format: GPUVertexFormat, type: BufferDataType<TypedArray>; }; }; } = {\r\n    // Single types.\r\n    [WgslType.Float32]: {\r\n        [WgslType.Any]: { format: 'float32', type: Float32Array }\r\n    },\r\n    [WgslType.Integer32]: {\r\n        [WgslType.Any]: { format: 'sint32', type: Int32Array }\r\n    },\r\n    [WgslType.UnsignedInteger32]: {\r\n        [WgslType.Any]: { format: 'uint32', type: Uint32Array }\r\n    },\r\n\r\n    // Vector types.\r\n    [WgslType.Vector2]: {\r\n        [WgslType.Float16]: { format: 'float16x2', type: Float32Array },\r\n        [WgslType.Float32]: { format: 'float32x2', type: Float32Array },\r\n        [WgslType.Integer32]: { format: 'sint32x2', type: Int32Array },\r\n        [WgslType.UnsignedInteger32]: { format: 'uint32x2', type: Uint32Array }\r\n    },\r\n    [WgslType.Vector3]: {\r\n        // [WgslType.Float16]: { format: 'float16x3', stride: 3 },\r\n        [WgslType.Float32]: { format: 'float32x3', type: Float32Array },\r\n        [WgslType.Integer32]: { format: 'sint32x3', type: Int32Array },\r\n        [WgslType.UnsignedInteger32]: { format: 'uint32x3', type: Uint32Array }\r\n    },\r\n    [WgslType.Vector4]: {\r\n        [WgslType.Float16]: { format: 'float16x4', type: Float32Array },\r\n        [WgslType.Float32]: { format: 'float32x4', type: Float32Array },\r\n        [WgslType.Integer32]: { format: 'sint32x4', type: Int32Array },\r\n        [WgslType.UnsignedInteger32]: { format: 'uint32x3', type: Uint32Array }\r\n    }\r\n};\r\n\r\ntype AttributeFormatDefinition = {\r\n    type: BufferType;\r\n    format: GPUVertexFormat;\r\n    dataType: BufferDataType<TypedArray>;\r\n};","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\nimport { Shader } from '../shader/shader';\r\nimport { IPipeline } from './i-pipeline.interface';\r\nimport { RenderPassDescriptor } from '../pass_descriptor/render-pass-descriptor';\r\nimport { Attachment } from '../pass_descriptor/type/attachment';\r\n\r\nexport class RenderPipeline extends GpuNativeObject<GPURenderPipeline> implements IPipeline {\r\n    private mDepthCompare: GPUCompareFunction;\r\n    private mDepthWriteEnabled: boolean;\r\n    private readonly mPrimitive: GPUPrimitiveState;\r\n    private readonly mRenderPass: RenderPassDescriptor;\r\n    private readonly mShader: Shader;\r\n\r\n    /**\r\n     * Set depth compare function.\r\n     */\r\n    public get depthCompare(): GPUCompareFunction {\r\n        return this.mDepthCompare;\r\n    } set depthCompare(pValue: GPUCompareFunction) {\r\n        this.mDepthCompare = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Defines which polygon orientation will be culled.\r\n     */\r\n    public get primitiveCullMode(): GPUCullMode {\r\n        return this.mPrimitive.cullMode!;\r\n    } set primitiveCullMode(pValue: GPUCullMode) {\r\n        this.mPrimitive.cullMode = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Defines which polygons are considered front-facing.\r\n     */\r\n    public get primitiveFrontFace(): GPUFrontFace {\r\n        return this.mPrimitive.frontFace!;\r\n    } set primitiveFrontFace(pValue: GPUFrontFace) {\r\n        this.mPrimitive.frontFace = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * The type of primitive to be constructed from the vertex inputs.\r\n     */\r\n    public get primitiveTopology(): GPUPrimitiveTopology {\r\n        return this.mPrimitive.topology!;\r\n    } set primitiveTopology(pValue: GPUPrimitiveTopology) {\r\n        this.mPrimitive.topology = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Render pass of pipeline.\r\n     */\r\n    public get renderPass(): RenderPassDescriptor {\r\n        return this.mRenderPass;\r\n    }\r\n\r\n    /**\r\n     * Shader.\r\n     */\r\n    public get shader(): Shader {\r\n        return this.mShader;\r\n    }\r\n\r\n    /**\r\n     * Set depth to never clip.\r\n     */\r\n    public get unclipedDepth(): boolean {\r\n        return this.mPrimitive.unclippedDepth ?? false;\r\n    } set unclipedDepth(pValue: boolean) {\r\n        this.mPrimitive.unclippedDepth = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Set depth write enabled / disabled.\r\n     */\r\n    public get writeDepth(): boolean {\r\n        return this.mDepthWriteEnabled;\r\n    } set writeDepth(pValue: boolean) {\r\n        this.mDepthWriteEnabled = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     */\r\n    public constructor(pGpu: Gpu, pShader: Shader, pRenderPass: RenderPassDescriptor) {\r\n        super(pGpu, 'RENDER_PIPELINE');\r\n\r\n        // Set statics.\r\n        this.mRenderPass = pRenderPass;\r\n\r\n        // Set and register shader.\r\n        this.mShader = pShader;\r\n        this.registerInternalNative(pShader);\r\n\r\n        // Validate vertex shader.\r\n        if (!pShader.vertexEntryPoint) {\r\n            throw new Exception('Vertex shader has no entry point.', this);\r\n        }\r\n\r\n        // Validate render pass to has same render target count as fragment.\r\n        if (pShader.fragmentEntryPoint) {\r\n            if (pRenderPass.colorAttachments.length !== pShader.fragmentEntryPoint.renderTargetCount) {\r\n                throw new Exception(`Render pass(${pRenderPass.colorAttachments.length}) and shader(${pShader.fragmentEntryPoint.renderTargetCount}) are having unmatching render targets`, this);\r\n            }\r\n        }\r\n\r\n        // Set default values.\r\n        this.mPrimitive = {\r\n            frontFace: 'cw',\r\n            cullMode: 'back',\r\n            topology: 'triangle-list',\r\n            unclippedDepth: false\r\n        };\r\n        this.mDepthWriteEnabled = true;\r\n        this.mDepthCompare = 'less';\r\n    }\r\n\r\n    /**\r\n     * Generate native render pipeline.\r\n     */\r\n    protected generate(): GPURenderPipeline {\r\n        // Generate pipeline layout from bind group layouts.\r\n        const lPipelineLayout: GPUPipelineLayoutDescriptor = this.mShader.bindGroups.native();\r\n\r\n        // Generate vertex buffer layouts.\r\n        const lVertexBufferLayoutList: Array<GPUVertexBufferLayout> = new Array<GPUVertexBufferLayout>();\r\n        for (const lAttribute of this.mShader.vertexEntryPoint!.attributes) {\r\n            // Set location offset based on previous  vertex attributes.\r\n            lVertexBufferLayoutList.push(lAttribute.native());\r\n        }\r\n\r\n        // Construct basic GPURenderPipelineDescriptor.\r\n        const lPipelineDescriptor: GPURenderPipelineDescriptor = {\r\n            label: this.label,\r\n            layout: this.gpu.device.createPipelineLayout(lPipelineLayout),\r\n            vertex: {\r\n                module: this.mShader.native(),\r\n                entryPoint: this.mShader.vertexEntryPoint!.name, // It allways should has an entry point.\r\n                buffers: lVertexBufferLayoutList\r\n                // No constants. Yes.\r\n            },\r\n            primitive: this.mPrimitive\r\n        };\r\n\r\n        // Buffer render pass formats.\r\n        const lRenderPassBuffer: RenderpassFormats = {\r\n            color: new Array<GPUTextureFormat>()\r\n        };\r\n\r\n        // Save highest multisample count.\r\n        let lMultisampleCount: number = 1;\r\n\r\n        // Optional fragment state.\r\n        if (this.mShader.fragmentEntryPoint) {\r\n            // Generate fragment targets only when fragment state is needed.\r\n            const lFragmentTargetList: Array<GPUColorTargetState> = new Array<GPUColorTargetState>();\r\n            for (const lRenderTarget of this.mRenderPass.colorAttachments) {\r\n                lFragmentTargetList.push({\r\n                    format: lRenderTarget.format,\r\n                    // blend?: GPUBlendState;   // TODO: GPUBlendState\r\n                    // writeMask?: GPUColorWriteFlags; // TODO: GPUColorWriteFlags\r\n                });\r\n\r\n                // Save highest multisample count.\r\n                if (lMultisampleCount < lRenderTarget.multiSampleLevel) {\r\n                    lMultisampleCount = lRenderTarget.multiSampleLevel;\r\n                }\r\n\r\n                // Save last render pass targets.\r\n                lRenderPassBuffer.color.push(lRenderTarget.format);\r\n            }\r\n\r\n            lPipelineDescriptor.fragment = {\r\n                module: this.mShader.native(),\r\n                entryPoint: this.mShader.fragmentEntryPoint.name,\r\n                targets: lFragmentTargetList\r\n            };\r\n        }\r\n\r\n        // Setup optional depth attachment.\r\n        const lDepthAttachment: Attachment | undefined = this.mRenderPass.depthAttachment;\r\n        if (lDepthAttachment) {\r\n            lPipelineDescriptor.depthStencil = {\r\n                depthWriteEnabled: this.mDepthWriteEnabled,\r\n                depthCompare: this.mDepthCompare,\r\n                format: lDepthAttachment.format,\r\n                // TODO: Stencil settings. \r\n            };\r\n\r\n            // Save last render pass depth.\r\n            lRenderPassBuffer.depth = lDepthAttachment.format;\r\n        }\r\n\r\n        // Set multisample count.\r\n        if (lMultisampleCount > 1) {\r\n            lPipelineDescriptor.multisample = {\r\n                count: lMultisampleCount\r\n            };\r\n        }\r\n\r\n        // Async is none GPU stalling.\r\n        return this.gpu.device.createRenderPipeline(lPipelineDescriptor); // TODO: Async somehow.\r\n    }\r\n}\r\n\r\ntype RenderpassFormats = {\r\n    color: Array<GPUTextureFormat>;\r\n    depth?: GPUTextureFormat;\r\n};","import { Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../../gpu';\r\nimport { GpuNativeObject } from '../../gpu-native-object';\r\n\r\nexport abstract class BaseBuffer<T extends TypedArray> extends GpuNativeObject<GPUBuffer> {\r\n    private readonly mBufferLength: number;\r\n    private readonly mBufferUsage: GPUFlagsConstant;\r\n    private readonly mDataType: BufferDataType<T>;\r\n    private mInitData: T | null;\r\n\r\n    /**\r\n     * Buffer size in items.\r\n     */\r\n    public get length(): number {\r\n        return this.mBufferLength;\r\n    }\r\n\r\n    /**\r\n     * Buffer size in bytes aligned to 4 bytes.\r\n     */\r\n    public get size(): number {\r\n        return ((this.mBufferLength * this.type.BYTES_PER_ELEMENT) + 3) & ~3;\r\n    }\r\n\r\n    /**\r\n     * Underlying data type.\r\n     */\r\n    public get type(): BufferDataType<T> {\r\n        return this.mDataType;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pUsage - Buffer usage beside COPY_DST.\r\n     * @param pData  - Inital data. Can be empty.\r\n     */\r\n    public constructor(pGpu: Gpu, pUsage: GPUFlagsConstant, pData: T) {\r\n        super(pGpu, 'BUFFER');\r\n\r\n        this.mBufferUsage = pUsage;\r\n        this.mInitData = pData;\r\n        this.mBufferLength = pData.length;\r\n        this.mDataType = <BufferDataType<T>>pData.constructor;\r\n    }\r\n\r\n    /**\r\n     * Destroy native object.\r\n     * @param pNativeObject - Native object.\r\n     */\r\n    protected override destroyNative(pNativeObject: GPUBuffer): void {\r\n        pNativeObject.destroy();\r\n    }\r\n\r\n    /**\r\n     * Generate native object.\r\n     */\r\n    protected generate(): GPUBuffer {\r\n        // Generate new empty init data.\r\n        if (!this.mInitData) {\r\n            this.mInitData = new this.mDataType(this.mBufferLength);\r\n        }\r\n\r\n        // Create gpu buffer mapped\r\n        const lBuffer: GPUBuffer = this.gpu.device.createBuffer({\r\n            label: this.label,\r\n            size: this.size,\r\n            usage: this.mBufferUsage,\r\n            mappedAtCreation: this.mInitData.length > 0 // Map data when buffer would receive initial data.\r\n        });\r\n\r\n        // Copy only when data is available.\r\n        if (this.mInitData.length > 0) {\r\n            if (this.mInitData.length > this.size) {\r\n                throw new Exception('Buffer data exeedes buffer size.', this);\r\n            }\r\n\r\n            const lData = new this.mDataType(lBuffer.getMappedRange());\r\n            lData.set(this.mInitData, 0);\r\n\r\n            // unmap buffer.\r\n            lBuffer.unmap();\r\n        }\r\n\r\n        // Clear init data.\r\n        this.mInitData = null;\r\n\r\n        return lBuffer;\r\n    }\r\n\r\n    /**\r\n     * Request buffer write.\r\n     * @param pBufferCallback - Callback called on buffer access.\r\n     */\r\n    public abstract write(pBufferCallback: (pBuffer: T) => void): void;\r\n}\r\n\r\nexport type BufferDataType<T extends TypedArray> = {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    BYTES_PER_ELEMENT: number;\r\n    new(pInitValues: ArrayBuffer | number | TypedArray): T;\r\n};","import { TypedArray } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../../gpu';\r\nimport { BaseBuffer } from './base-buffer';\r\n\r\nexport class RingBuffer<T extends TypedArray> extends BaseBuffer<T> {\r\n    private readonly mReadyBufferList: Array<GPUBuffer>;\r\n    private readonly mWavingBufferList: Array<GPUBuffer>;\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pUsage - Buffer usage beside COPY_DST.\r\n     * @param pInitialData  - Inital data. Can be empty.\r\n     */\r\n    public constructor(pGpu: Gpu, pUsage: GPUFlagsConstant, pInitialData: T) {\r\n        super(pGpu, pUsage | GPUBufferUsage.COPY_DST, pInitialData);\r\n\r\n        // Waving buffer list.\r\n        this.mReadyBufferList = new Array<GPUBuffer>();\r\n        this.mWavingBufferList = new Array<GPUBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Request buffer write.\r\n     * @param pBufferCallback - Callback called on buffer access.\r\n     */\r\n    public write(pBufferCallback: (pBuffer: T) => void): void {\r\n        // Create new buffer when no mapped buffer is available. \r\n        let lStagingBuffer: GPUBuffer;\r\n        if (this.mReadyBufferList.length === 0) {\r\n            lStagingBuffer = this.gpu.device.createBuffer({\r\n                label: 'RingBuffer-WaveBuffer-' + this.label,\r\n                size: this.size,\r\n                usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\r\n                mappedAtCreation: true,\r\n            });\r\n\r\n            // Add new buffer to complete list.\r\n            this.mWavingBufferList.push(lStagingBuffer);\r\n        } else {\r\n            lStagingBuffer = this.mReadyBufferList.pop()!;\r\n        }\r\n\r\n        // Execute write operations.\r\n        const lBufferArray: T = new this.type(lStagingBuffer.getMappedRange());\r\n        pBufferCallback(lBufferArray);\r\n\r\n        // Unmap for copying data.\r\n        lStagingBuffer.unmap();\r\n\r\n        // Copy buffer data from staging into wavig buffer.\r\n        const lCommandDecoder: GPUCommandEncoder = this.gpu.device.createCommandEncoder();\r\n        lCommandDecoder.copyBufferToBuffer(lStagingBuffer, 0, this.native(), 0, this.size);\r\n        this.gpu.device.queue.submit([lCommandDecoder.finish()]);\r\n\r\n        // Shedule staging buffer remaping.\r\n        lStagingBuffer.mapAsync(GPUMapMode.WRITE).then(() => {\r\n            this.mReadyBufferList.push(lStagingBuffer);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destory all buffers.\r\n     * @param pNativeObject - Native buffer object.\r\n     */\r\n    protected override destroyNative(pNativeObject: GPUBuffer): void {\r\n        super.destroyNative(pNativeObject);\r\n\r\n        // Destroy all wave buffer and clear list.\r\n        for (let lCount: number = 0; this.mWavingBufferList.length < lCount; lCount++) {\r\n            this.mWavingBufferList.pop()?.destroy();\r\n        }\r\n\r\n        // Clear ready buffer list.\r\n        for (let lCount: number = 0; this.mReadyBufferList.length < lCount; lCount++) {\r\n            this.mReadyBufferList.pop();\r\n        }\r\n    }\r\n}\r\n","import { TypedArray } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../../gpu';\r\nimport { BaseBuffer } from './base-buffer';\r\n\r\nexport class SimpleBuffer<T extends TypedArray> extends BaseBuffer<T> {\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pUsage - Buffer usage beside COPY_DST.\r\n     * @param pInitialData  - Inital data. Can be empty.\r\n     */\r\n    public constructor(pGpu: Gpu, pUsage: GPUFlagsConstant, pInitialData: T) {\r\n        super(pGpu, pUsage | GPUBufferUsage.COPY_DST, pInitialData);\r\n    }\r\n\r\n    /**\r\n     * Request buffer write.\r\n     * @param pBufferCallback - Callback called on buffer access.\r\n     */\r\n    public write(pBufferCallback: (pBuffer: T) => void): void {\r\n        const lBuffer: GPUBuffer = this.native();\r\n\r\n        // Create new typed array and add new data to this new array.\r\n        const lSourceBuffer: T = new this.type(this.length);\r\n        pBufferCallback(lSourceBuffer);\r\n\r\n        // Write copied buffer.\r\n        this.gpu.device.queue.writeBuffer(lBuffer, 0, lSourceBuffer, 0, lSourceBuffer.length);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\n\r\nexport class ExternalTexture extends GpuNativeObject<GPUExternalTexture> {\r\n    private mVideoElement: HTMLVideoElement | null;\r\n\r\n    /**\r\n     * Loaded video element.\r\n     */\r\n    public get video(): HTMLVideoElement {\r\n        if (!this.mVideoElement) {\r\n            throw new Exception('No video element is loaded or old video is expired.', this);\r\n        }\r\n\r\n        return this.mVideoElement;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     */\r\n    public constructor(pGpu: Gpu) {\r\n        super(pGpu, 'EXTERNAL_TEXTURE');\r\n        this.mVideoElement = null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param pSource - Video source.\r\n     * @param pLoop - Loop video.\r\n     * @param pMuted - Mute video.\r\n     */\r\n    public async load(pSource: string, pLoop: boolean = false, pMuted: boolean = false): Promise<void> {\r\n        const lVideo = new HTMLVideoElement();\r\n        lVideo.loop = pLoop;\r\n        lVideo.muted = pMuted;\r\n        lVideo.src = pSource;\r\n\r\n        // Wait for resource load and pause right after.\r\n        await lVideo.play();\r\n        lVideo.pause();\r\n\r\n        this.mVideoElement = lVideo;\r\n    }\r\n\r\n    /**\r\n     * Generate new external texture.\r\n     */\r\n    protected generate(): GPUExternalTexture {\r\n        if (!this.mVideoElement) {\r\n            throw new Exception('No video element is loaded or old video is expired.', this);\r\n        }\r\n\r\n        return this.gpu.device.importExternalTexture({\r\n            label: this.label,\r\n            source: this.mVideoElement,\r\n            colorSpace: 'srgb'\r\n        });\r\n    }\r\n}","import { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\n\r\nexport class TextureSampler extends GpuNativeObject<GPUSampler>{\r\n    private mCompare: GPUCompareFunction | null;\r\n    private mFitMode: GPUAddressMode;\r\n    private mLodMaxClamp: number;\r\n    private mLodMinClamp: number;\r\n    private mMagFilter: GPUFilterMode;\r\n    private mMaxAnisotropy: number;\r\n    private mMinFilter: GPUFilterMode;\r\n    private mMipmapFilter: GPUMipmapFilterMode;\r\n\r\n    /**\r\n     * When provided the sampler will be a comparison sampler with the specified compare function.\r\n     */\r\n    public get compareFunction(): GPUCompareFunction | null {\r\n        return this.mCompare;\r\n    } set compareFunction(pValue: GPUCompareFunction | null) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mCompare === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mCompare = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Texture sampler edge fit mode.\r\n     */\r\n    public get fitMode(): GPUAddressMode {\r\n        return this.mFitMode;\r\n    } set fitMode(pValue: GPUAddressMode) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mFitMode === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mFitMode = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Specifies the maximum levels of detail, respectively, used internally when sampling a texture.\r\n     */\r\n    public get lodMaxClamp(): number {\r\n        return this.mLodMaxClamp;\r\n    } set lodMaxClamp(pValue: number) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mLodMaxClamp === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mLodMaxClamp = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Specifies the minimum levels of detail, respectively, used internally when sampling a texture.\r\n     */\r\n    public get lodMinClamp(): number {\r\n        return this.mLodMinClamp;\r\n    } set lodMinClamp(pValue: number) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mLodMinClamp === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mLodMinClamp = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * How the texture is sampled when a texel covers more than one pixel.\r\n     */\r\n    public get magFilter(): GPUFilterMode {\r\n        return this.mMagFilter;\r\n    } set magFilter(pValue: GPUFilterMode) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mMagFilter === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mMagFilter = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Specifies the maximum anisotropy value clamp used by the sampler.\r\n     */\r\n    public get maxAnisotropy(): number {\r\n        return this.mMaxAnisotropy;\r\n    } set maxAnisotropy(pValue: number) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mMaxAnisotropy === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mMaxAnisotropy = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * How the texture is sampled when a texel covers less than one pixel.\r\n     */\r\n    public get minFilter(): GPUFilterMode {\r\n        return this.mMinFilter;\r\n    } set minFilter(pValue: GPUFilterMode) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mMinFilter === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mMinFilter = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Specifies behavior for sampling between mipmap levels.\r\n     */\r\n    public get mipmapFilter(): GPUMipmapFilterMode {\r\n        return this.mMipmapFilter;\r\n    } set mipmapFilter(pValue: GPUMipmapFilterMode) {\r\n        // Do nothing on assigning old an value.\r\n        if (this.mMipmapFilter === pValue) {\r\n            return;\r\n        }\r\n\r\n        this.mMipmapFilter = pValue;\r\n\r\n        // Request native rebuild.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     */\r\n    public constructor(pGpu: Gpu) {\r\n        super(pGpu, 'TEXTURE_SAMPLER');\r\n\r\n        // Set defaults.\r\n        this.mCompare = null;\r\n        this.mFitMode = 'clamp-to-edge';\r\n        this.mMagFilter = 'nearest';\r\n        this.mMinFilter = 'nearest';\r\n        this.mMipmapFilter = 'nearest';\r\n        this.mLodMinClamp = 0;\r\n        this.mLodMaxClamp = 32;\r\n        this.mMaxAnisotropy = 1;\r\n    }\r\n\r\n    /**\r\n     * Generate txture sampler.\r\n     */\r\n    protected generate(): GPUSampler {\r\n        const lSamplerOptions: GPUSamplerDescriptor = {\r\n            label: this.label,\r\n            addressModeU: this.mFitMode,\r\n            addressModeV: this.mFitMode,\r\n            addressModeW: this.mFitMode,\r\n            magFilter: this.magFilter,\r\n            minFilter: this.minFilter,\r\n            mipmapFilter: this.mipmapFilter,\r\n            lodMaxClamp: this.lodMaxClamp,\r\n            lodMinClamp: this.lodMinClamp,\r\n            maxAnisotropy: this.mMaxAnisotropy\r\n        };\r\n\r\n        if (this.compareFunction) {\r\n            lSamplerOptions.compare = this.compareFunction;\r\n        }\r\n\r\n        return this.gpu.device.createSampler(lSamplerOptions);\r\n    }\r\n}","import { TextureUsage } from './texture-usage.enum';\r\nimport { Gpu } from '../../gpu';\r\nimport { GpuNativeObject } from '../../gpu-native-object';\r\nimport { ITexture } from './i-texture.interface';\r\nimport { TextureView } from './texture-view';\r\n\r\nexport class CanvasTexture extends GpuNativeObject<GPUTexture> implements ITexture {\r\n    private readonly mCanvas: HTMLCanvasElement;\r\n    private readonly mContext: GPUCanvasContext;\r\n    private readonly mFormat: GPUTextureFormat;\r\n    private readonly mUsage: TextureUsage;\r\n\r\n    /**\r\n     * Texture dimension.\r\n     * Fixed to 2D.\r\n     */\r\n    public get dimension(): GPUTextureDimension {\r\n        return '2d';\r\n    }\r\n\r\n    /**\r\n     * Texture format.\r\n     */\r\n    public get format(): GPUTextureFormat {\r\n        return this.mFormat;\r\n    }\r\n\r\n    /**\r\n     * Texture and canvas height.\r\n     */\r\n    public get height(): number {\r\n        return this.mCanvas.height;\r\n    } set height(pHeight: number) {\r\n        this.mCanvas.height = pHeight;\r\n    }\r\n\r\n    /**\r\n     * Texture layers.\r\n     * Fixed to one.\r\n     */\r\n    public get layer(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Texture multi sample level.\r\n     * Fixed to one.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Texture usage.\r\n     */\r\n    public get usage(): TextureUsage {\r\n        return this.mUsage;\r\n    }\r\n\r\n    /**\r\n     * Texture and canvas height.\r\n     */\r\n    public get width(): number {\r\n        return this.mCanvas.width;\r\n    } set width(pWidth: number) {\r\n        this.mCanvas.width = pWidth;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pCanvas - HTML Canvas.\r\n     * @param pFormat - Texture color format.\r\n     * @param pUsage - Texture usage.\r\n     */\r\n    public constructor(pGpu: Gpu, pCanvas: HTMLCanvasElement, pFormat: GPUTextureFormat, pUsage: TextureUsage) {\r\n        super(pGpu, 'CANVAS_TEXTURE');\r\n\r\n        this.mCanvas = pCanvas;\r\n        this.mFormat = pFormat;\r\n        this.mUsage = pUsage;\r\n\r\n        // Get and configure context.\r\n        this.mContext = <GPUCanvasContext><any>pCanvas.getContext('webgpu')!;\r\n        this.mContext.configure({\r\n            device: this.gpu.device,\r\n            format: pFormat,\r\n            usage: pUsage,\r\n            alphaMode: 'opaque'\r\n        });\r\n\r\n        (<any>window).aaa = this.mContext;\r\n    }\r\n\r\n    /**\r\n     * Create view of this texture.\r\n     */\r\n    public view(pBaseLayer?: number, pLayerCount?: number): TextureView {\r\n        const lView = new TextureView(this.gpu, this, pBaseLayer, pLayerCount);\r\n        lView.label = this.label;\r\n\r\n        return lView;\r\n    }\r\n\r\n    /**\r\n     * Get current canvas texture.\r\n     */\r\n    protected generate(): GPUTexture {\r\n        const lTexture = this.mContext.getCurrentTexture();\r\n        lTexture.label = this.label;\r\n\r\n        return lTexture;\r\n    }\r\n\r\n    /**\r\n     * Allways invalidate current texture to generate latest texture.\r\n     */\r\n    protected override validate(pNativeObject: GPUTexture): boolean {\r\n        return this.mContext.getCurrentTexture() === pNativeObject;\r\n    }\r\n}","export enum TextureUsage {\r\n    CopySource = GPUTextureUsage.COPY_SRC,\r\n    CopyDestination = GPUTextureUsage.COPY_DST,\r\n    TextureBinding = GPUTextureUsage.TEXTURE_BINDING,\r\n    StorageBinding = GPUTextureUsage.STORAGE_BINDING,\r\n    RenderAttachment = GPUTextureUsage.RENDER_ATTACHMENT\r\n}","import { Gpu } from '../../gpu';\r\nimport { GpuNativeObject } from '../../gpu-native-object';\r\nimport { ITexture } from './i-texture.interface';\r\n\r\nexport class TextureView extends GpuNativeObject<GPUTextureView>{\r\n    private mAspect: GPUTextureAspect;\r\n    private readonly mBaseLayer: GPUIntegerCoordinate;\r\n    private mBaseMipLevel: GPUIntegerCoordinate;\r\n    private mDimension: GPUTextureViewDimension;\r\n    private readonly mLayerCount: GPUIntegerCoordinate;\r\n    private mMipLevelCount: GPUIntegerCoordinate;\r\n    private readonly mTexture: ITexture;\r\n\r\n    /**\r\n     * Which aspecs of the texture are accessible to the texture view.\r\n     */\r\n    public get aspect(): GPUTextureAspect {\r\n        return this.mAspect;\r\n    } set aspect(pAspect: GPUTextureAspect) {\r\n        // Do nothing on assigning old an value.\r\n        if(this.mAspect === pAspect){\r\n            return;\r\n        }\r\n\r\n        this.mAspect = pAspect;\r\n        \r\n        // Trigger update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * The index of the first array layer accessible to the texture view.\r\n     */\r\n    public get baseLayer(): GPUIntegerCoordinate {\r\n        return this.mBaseLayer;\r\n    }\r\n\r\n    /**\r\n     * The first (most detailed) mipmap level accessible to the texture view.\r\n     */\r\n    public get baseMipLevel(): GPUIntegerCoordinate {\r\n        return this.mBaseMipLevel;\r\n    } set baseMipLevel(pLevel: GPUIntegerCoordinate) {\r\n        // Do nothing on assigning old an value.\r\n        if(this.mBaseMipLevel === pLevel){\r\n            return;\r\n        }\r\n\r\n        this.mBaseMipLevel = pLevel;\r\n        \r\n        // Trigger update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * The dimension to view the texture as.\r\n     */\r\n    public get dimension(): GPUTextureViewDimension {\r\n        return this.mDimension;\r\n    } set dimension(pDimension: GPUTextureViewDimension) {\r\n        // Do nothing on assigning old an value.\r\n        if(this.mDimension === pDimension){\r\n            return;\r\n        }\r\n\r\n        this.mDimension = pDimension;\r\n        \r\n        // Trigger update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * How many array layers, starting with {@link TextureView#baseLayer}, are accessible\r\n     * to the texture view.\r\n     */\r\n    public get layerCount(): GPUIntegerCoordinate {\r\n        return this.mBaseLayer;\r\n    }\r\n\r\n    /**\r\n     * How many mipmap levels, starting with {@link TextureView#baseMipLevel}, are accessible to\r\n     * the texture view.\r\n     */\r\n    public get mipLevelCount(): GPUIntegerCoordinate {\r\n        return this.mMipLevelCount;\r\n    } set mipLevelCount(pLevel: GPUIntegerCoordinate) {\r\n        // Do nothing on assigning old an value.\r\n        if(this.mMipLevelCount === pLevel){\r\n            return;\r\n        }\r\n\r\n        this.mMipLevelCount = pLevel;\r\n        \r\n        // Trigger update.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pTexture - Texture of view.\r\n     * @param pBaseLayer - Base layer of view.\r\n     * @param pLayerCount - Depth of view.\r\n     */\r\n    public constructor(pGpu: Gpu, pTexture: ITexture, pBaseLayer?: number, pLayerCount?: number) {\r\n        super(pGpu, 'TEXTURE_VIEW');\r\n\r\n        this.mTexture = pTexture;\r\n        this.mBaseLayer = pBaseLayer ?? 0;\r\n        this.mLayerCount = pLayerCount ?? this.mTexture.layer;\r\n\r\n        // Set default values.\r\n        this.mDimension = '2d';\r\n        this.mAspect = 'all';\r\n        this.mBaseMipLevel = 0;\r\n        this.mMipLevelCount = 1;\r\n\r\n        // Register texture as internal.\r\n        this.registerInternalNative(pTexture);\r\n    }\r\n\r\n    /**\r\n     * Generate new texture view.\r\n     */\r\n    protected generate(): GPUTextureView {\r\n        const lTexture: GPUTexture = this.mTexture.native();\r\n        return lTexture.createView({\r\n            label: this.label,\r\n            format: this.mTexture.format,\r\n            dimension: this.mDimension,\r\n            aspect: this.mAspect,\r\n            baseMipLevel: this.mBaseMipLevel,\r\n            mipLevelCount: this.mMipLevelCount,\r\n            baseArrayLayer: this.mBaseLayer,\r\n            arrayLayerCount: this.mLayerCount\r\n        });\r\n    }\r\n}\r\n","import { TextureUsage } from './texture-usage.enum';\r\nimport { Gpu } from '../../gpu';\r\nimport { GpuNativeObject } from '../../gpu-native-object';\r\nimport { ITexture } from './i-texture.interface';\r\nimport { TextureView } from './texture-view';\r\nimport { Exception } from '@kartoffelgames/core.data';\r\n\r\nexport class Texture extends GpuNativeObject<GPUTexture> implements ITexture {\r\n    private readonly mDimension: GPUTextureDimension;\r\n    private readonly mFormat: GPUTextureFormat;\r\n    private mHeight: number;\r\n    private mImageBitmapList: Array<ImageBitmap>;\r\n    private readonly mLayerCount: number;\r\n    private readonly mMultiSampleLevel: number;\r\n    private readonly mUsage: TextureUsage;\r\n    private mWidth: number;\r\n\r\n    /**\r\n     * Texture dimension.\r\n     */\r\n    public get dimension(): GPUTextureDimension {\r\n        return this.mDimension;\r\n    }\r\n\r\n    /**\r\n     * Texture format.\r\n     */\r\n    public get format(): GPUTextureFormat {\r\n        return this.mFormat;\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mHeight;\r\n    } set height(pHeight: number) {\r\n        this.mHeight = pHeight;\r\n\r\n        // Trigger change.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Texture depth.\r\n     */\r\n    public get layer(): number {\r\n        return this.mLayerCount;\r\n    }\r\n\r\n    /**\r\n     * Texture multi sample level.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return this.mMultiSampleLevel;\r\n    }\r\n\r\n    /**\r\n     * Texture usage.\r\n     */\r\n    public get usage(): TextureUsage {\r\n        return this.mUsage;\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mWidth;\r\n    } set width(pWidth: number) {\r\n        this.mWidth = pWidth;\r\n\r\n        // Trigger change.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - Gpu.\r\n     * @param pFormat - Texture format.\r\n     * @param pDimension - Texture dimension.\r\n     */\r\n    public constructor(pGpu: Gpu, pFormat: GPUTextureFormat, pUsage: TextureUsage, pDimension: GPUTextureDimension = '2d', pMultiSampleLevel: number = 1, pLayerCount: number = 1) {\r\n        super(pGpu, 'TEXTURE');\r\n\r\n        this.mFormat = pFormat;\r\n        this.mUsage = pUsage;\r\n        this.mImageBitmapList = new Array<ImageBitmap>();\r\n        this.mDimension = pDimension;\r\n        this.mLayerCount = pLayerCount;\r\n\r\n        // Set and validate multisample level.\r\n        this.mMultiSampleLevel = pMultiSampleLevel;\r\n        if (pMultiSampleLevel < 1) {\r\n            throw new Exception('Multi sample level must be greater than zero.', this);\r\n        }\r\n\r\n        // Set defaults.\r\n        this.mHeight = 1;\r\n        this.mWidth = 1;\r\n        this.mLayerCount = 1;\r\n    }\r\n\r\n    /**\r\n     * Load images into texture.\r\n     * Each image get loaded into seperate depth layer.\r\n     * @param pSourceList - Image source list.\r\n     */\r\n    public async load(pSourceList: Array<string>): Promise<void> {\r\n        let lHeight: number = 0;\r\n        let lWidth: number = 0;\r\n\r\n        // Parallel load images.\r\n        const lBitmapResolvePromiseList: Array<Promise<ImageBitmap>> = pSourceList.map(async (pSource) => {\r\n            // Load image with html image element.\r\n            const lImage: HTMLImageElement = new Image();\r\n            lImage.src = pSource;\r\n            await lImage.decode();\r\n\r\n            // Init size.\r\n            if (lHeight === 0 || lWidth === 0) {\r\n                lWidth = lImage.naturalWidth;\r\n                lHeight = lImage.naturalHeight;\r\n            }\r\n\r\n            // Validate same image size for all layers.\r\n            if (lHeight !== lImage.naturalHeight || lWidth !== lImage.naturalWidth) {\r\n                throw new Exception(`Texture image layers are not the same size. (${lImage.naturalWidth}, ${lImage.naturalHeight}) needs (${lWidth}, ${lHeight}).`, this);\r\n            }\r\n\r\n            // Resolve image into bitmap.\r\n            return createImageBitmap(lImage);\r\n        });\r\n\r\n        // Resolve all bitmaps.\r\n        this.mImageBitmapList = await Promise.all(lBitmapResolvePromiseList);\r\n\r\n        // Set new size.\r\n        this.width = lWidth;\r\n        this.height = lHeight;\r\n\r\n        // Trigger change.\r\n        this.triggerChange();\r\n    }\r\n\r\n    /**\r\n     * Create view of this texture.\r\n     */\r\n    public view(pBaseLayer?: number, pLayerCount?: number): TextureView {\r\n        const lView = new TextureView(this.gpu, this, pBaseLayer, pLayerCount);\r\n        lView.label = this.label;\r\n\r\n        return lView;\r\n    }\r\n\r\n    /**\r\n     * Destroy native object.\r\n     * @param pNativeObject - Native object.\r\n     */\r\n    protected override destroyNative(pNativeObject: GPUTexture): void {\r\n        pNativeObject.destroy();\r\n    }\r\n\r\n    /**\r\n     * Generate texture based on parameters.\r\n     */\r\n    protected generate(): GPUTexture {\r\n        // Extend usage by CopyDestination when a bitmap should be copied into the texture.\r\n        let lUsage: TextureUsage = this.mUsage;\r\n        if (this.mImageBitmapList.length > 0) {\r\n            lUsage |= TextureUsage.CopyDestination;\r\n        }\r\n\r\n        // Create texture with set size, format and usage.\r\n        const lTexture: GPUTexture = this.gpu.device.createTexture({\r\n            label: this.label,\r\n            size: [this.mWidth, this.mHeight, this.mLayerCount],\r\n            format: this.mFormat,\r\n            usage: lUsage,\r\n            dimension: this.mDimension,\r\n            sampleCount: this.mMultiSampleLevel\r\n        });\r\n\r\n        // Copy bitmap into texture.\r\n        if (this.mImageBitmapList.length > 0) {\r\n            // Loop image bitmaps for each layer.\r\n            for (let lBitmapIndex = 0; lBitmapIndex < this.mImageBitmapList.length; lBitmapIndex++) {\r\n                const lBitmap = this.mImageBitmapList[lBitmapIndex];\r\n\r\n                // Copy image into depth layer.\r\n                this.gpu.device.queue.copyExternalImageToTexture(\r\n                    { source: lBitmap },\r\n                    { texture: lTexture, origin: [0, 0, lBitmapIndex] },\r\n                    [lBitmap.width, lBitmap.height]\r\n                );\r\n\r\n                // Release image data.\r\n                lBitmap.close();\r\n            }\r\n        }\r\n\r\n        // Clear closed bitmap list.\r\n        this.mImageBitmapList = new Array<ImageBitmap>();\r\n\r\n        return lTexture;\r\n    }\r\n}","export enum WgslAccessMode {\r\n    None = '_None',\r\n    AccessModeRead = 'read',\r\n    AccessModeWrite = 'write',\r\n    AccessModeReadWrite = 'read_write',\r\n}","export enum WgslBindingType {\r\n    None = '_None',\r\n    Uniform = 'uniform',\r\n    Storage = 'storage',\r\n    ReadonlyStorage = 'read-only-storage'\r\n}","export enum WgslShaderStage {\r\n    Fragment = GPUShaderStage.FRAGMENT,\r\n    Vertex = GPUShaderStage.VERTEX,\r\n    Compute = GPUShaderStage.COMPUTE,\r\n}\r\n","export enum WgslType {\r\n    Any = '_Any',\r\n    Enum = '_Enum',\r\n    \r\n    // Scalar types.\r\n    Boolean = 'bool',\r\n    Integer32 = 'i32',\r\n    UnsignedInteger32 = 'u32',\r\n    Float32 = 'f32',\r\n    Float16 = 'f16',\r\n\r\n    // Vector types.\r\n    Vector2 = 'vec2',\r\n    Vector3 = 'vec3',\r\n    Vector4 = 'vec4',\r\n\r\n    // Matrix types.\r\n    Matrix22 = 'mat2x2',\r\n    Matrix23 = 'mat2x3',\r\n    Matrix24 = 'mat2x4',\r\n    Matrix32 = 'mat3x2',\r\n    Matrix33 = 'mat3x3',\r\n    Matrix34 = 'mat3x4',\r\n    Matrix42 = 'mat4x2',\r\n    Matrix43 = 'mat4x3',\r\n    Matrix44 = 'mat4x4',\r\n\r\n    // Container.\r\n    Struct = 'struct',\r\n    Atomic = 'atomic',\r\n\r\n    //Special.\r\n    Array = 'array',\r\n    Pointer = 'ptr',\r\n    Reference = 'ref',\r\n\r\n    // Textures.\r\n    Texture1d = 'texture_1d',\r\n    Texture2d = 'texture_2d',\r\n    Texture2dArray = 'texture_2d_array',\r\n    Texture3d = 'texture_3d',\r\n    TextureCube = 'texture_cube',\r\n    TextureCubeArray = 'texture_cube_array',\r\n    TextureMultisampled2d = 'texture_multisampled_2d',\r\n    TextureExternal = 'texture_external',\r\n\r\n    // Depth texture.\r\n    TextureDepth2d = 'texture_depth_2d',\r\n    TextureDepth2dArray = 'texture_depth_2d_array',\r\n    TextureDepthCube = 'texture_depth_cube',\r\n    TextureDepthCubeArray = 'texture_depth_cube_array',\r\n    TextureDepthMultisampled2d = 'texture_depth_multisampled_2d',\r\n\r\n    // Storage textures.\r\n    TextureStorage1d = 'texture_storage_1d',\r\n    TextureStorage2d = 'texture_storage_2d',\r\n    TextureStorage2dArray = 'texture_storage_2d_array',\r\n    TextureStorage3d = 'texture_storage_3d',\r\n\r\n    // Sampler.\r\n    Sampler = 'sampler',\r\n    SamplerComparison = 'sampler_comparison'\r\n}","import { Dictionary, EnumUtil, Exception } from '@kartoffelgames/core.data';\r\nimport { ArrayBufferType } from '../buffer_type/array-buffer-type';\r\nimport { BufferType } from '../buffer_type/buffer-type';\r\nimport { SimpleBufferType } from '../buffer_type/simple-buffer-type';\r\nimport { StructBufferType } from '../buffer_type/struct-buffer-type';\r\nimport { WgslAccessMode } from './enum/wgsl-access-mode.enum';\r\nimport { WgslBindingType } from './enum/wgsl-binding-type.enum';\r\nimport { WgslShaderStage } from './enum/wgsl-shader-stage.enum';\r\nimport { WgslType } from './enum/wgsl-type.enum';\r\n\r\nexport class ShaderInformation {\r\n    private readonly mBindings: Array<WgslBindGroup>;\r\n    private readonly mEntryPoints: Dictionary<WgslShaderStage, WgslFunction>;\r\n    private readonly mSource: string;\r\n\r\n    /**\r\n     * Binding information.\r\n     */\r\n    public get bindings(): Array<WgslBindGroup> {\r\n        return this.mBindings;\r\n    }\r\n\r\n    /**\r\n     * Shader entry points.\r\n     */\r\n    public get entryPoints(): Dictionary<WgslShaderStage, WgslFunction> {\r\n        return this.mEntryPoints;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pSource - WGSL Source code.\r\n     */\r\n    public constructor(pSource: string) {\r\n        this.mSource = pSource;\r\n\r\n        this.mEntryPoints = this.fetchEntryPoints();\r\n        this.mBindings = this.fetchBindGroups();\r\n    }\r\n\r\n    /**\r\n     * Create buffer type from variable definition.\r\n     * @param pVariable - Variable definition.\r\n     */\r\n    private createBufferType(pVariable: WgslVariable): BufferType {\r\n        // String to type. Undefined must be an struct type.\r\n        const lType: WgslType | null = this.wgslTypeByName(pVariable.type);\r\n        if (lType === WgslType.Enum) {\r\n            throw new Exception('Enum cant be fetched as variable type.', this);\r\n        }\r\n\r\n        // Try to parse access and bind setings. Set with defaults.\r\n        let lBindingType: WgslBindingType | undefined = WgslBindingType.None;\r\n        let lAccessMode: WgslAccessMode | undefined = WgslAccessMode.None;\r\n        if (pVariable.access) {\r\n            lBindingType = EnumUtil.enumKeyByValue(WgslBindingType, pVariable.access.bindingType);\r\n            if (!lBindingType) {\r\n                throw new Exception(`Bind type \"${pVariable.access.bindingType}\" does not exist.`, this);\r\n            }\r\n            lAccessMode = EnumUtil.enumKeyByValue(WgslAccessMode, pVariable.access.accessMode);\r\n            if (!lAccessMode) {\r\n                throw new Exception(`Access mode \"${pVariable.access.accessMode}\" does not exist.`, this);\r\n            }\r\n        }\r\n\r\n        // Try to get location from attributes.\r\n        let lLocationIndex: number | null = null;\r\n        const lLocationValue: string = pVariable.attributes.find(pAttribute => pAttribute.startsWith('@location'))?.replace(/[^\\\\d]+/g, '') ?? '';\r\n        if (isNaN(<any>lLocationValue)) {\r\n            lLocationIndex = parseInt(lLocationValue);\r\n        }\r\n\r\n        switch (lType) {\r\n            case WgslType.Struct: {\r\n                const lStructType: StructBufferType = new StructBufferType(pVariable.name, lAccessMode, lBindingType, lLocationIndex);\r\n\r\n                // Get struct body and fetch types.\r\n                const lStructBody: string = this.getStructBody(pVariable.type);\r\n                this.fetchVariableDefinitions(lStructBody).forEach((pPropertyVariable, pIndex) => {\r\n                    const lProperyBufferType: BufferType = this.createBufferType(pPropertyVariable);\r\n\r\n                    // Add property to struct buffer type.\r\n                    lStructType.addProperty(pPropertyVariable.name, pIndex, lProperyBufferType);\r\n                });\r\n\r\n                return lStructType;\r\n            }\r\n            case WgslType.Array: {\r\n                // Validate generic range.\r\n                if (pVariable.generics.length !== 1 && pVariable.generics.length !== 2) {\r\n                    throw new Exception('Array type must have one or two generic types.', this);\r\n                }\r\n\r\n                // Fetch first generic by extending generic type to a variable definition and parse recursive.\r\n                const lTypeGeneric: WgslVariable | undefined = this.fetchVariableDefinitions(`PLACEHOLDER: ${pVariable.generics.at(0)!};`).at(0)!;\r\n                const lTypeGenericBufferType: BufferType = this.createBufferType(lTypeGeneric);\r\n\r\n                // Fetch optional size gerneric.\r\n                let lSizeGeneric: number = -1;\r\n                if (pVariable.generics.at(1)) {\r\n                    if (!isNaN(<any>pVariable.generics.at(1))) {\r\n                        throw new Exception('Array size parameter needs to be a number.', this);\r\n                    }\r\n                    lSizeGeneric = parseInt(pVariable.generics.at(1)!);\r\n                }\r\n\r\n                // Create array buffer type.\r\n                return new ArrayBufferType(pVariable.name, lTypeGenericBufferType, lSizeGeneric, lAccessMode, lBindingType, lLocationIndex);\r\n            }\r\n            default: {\r\n                // Map generics to struct like body. Fetch variable definitions and save only type.\r\n                const lPseudoStructBody: string = pVariable.generics.reduce((pCurrent, pGeneric) => {\r\n                    return pCurrent + `PLACEHOLDER: ${pGeneric};`;\r\n                }, '');\r\n                const lPseudoVariableList: Array<WgslVariable> = this.fetchVariableDefinitions(lPseudoStructBody);\r\n                const lGenericList: Array<WgslType> = lPseudoVariableList.map((pVariable) => { return this.wgslTypeByName(pVariable.type); });\r\n\r\n                return new SimpleBufferType(pVariable.name, lType, lGenericList, lAccessMode, lBindingType, lLocationIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch all bind groups of source.\r\n     */\r\n    private fetchBindGroups(): Array<WgslBindGroup> {\r\n        // Get only lines with group attributes.\r\n        const lAllGroupLines: string = [...this.mSource.matchAll(/^.*@group.*$/gm)].reduce((pCurrent, pLine) => {\r\n            return pCurrent + pLine;\r\n        }, '');\r\n\r\n        // Available shader states based on entry points.\r\n        // Not the best, but better than nothing.\r\n        let lShaderStage: WgslShaderStage = 0;\r\n        if (/(@compute(.|\\r?\\n)*?fn )(?<name>\\w*)/gm.test(this.mSource)) {\r\n            lShaderStage |= WgslShaderStage.Compute;\r\n        }\r\n        if (/(@fragment(.|\\r?\\n)*?fn )(?<name>\\w*)/gm.test(this.mSource)) {\r\n            lShaderStage |= WgslShaderStage.Fragment;\r\n        }\r\n        if (/(@vertex(.|\\r?\\n)*?fn )(?<name>\\w*)/gm.test(this.mSource)) {\r\n            lShaderStage |= WgslShaderStage.Vertex;\r\n        }\r\n\r\n        // Fetch all group variables.\r\n        const lBindGroups: Dictionary<number, Array<WgslBind>> = new Dictionary<number, Array<WgslBind>>();\r\n        for (const lVariable of this.fetchVariableDefinitions(lAllGroupLines)) {\r\n            const lGroupAttribute: string | undefined = lVariable.attributes.find(pAttribute => pAttribute.startsWith('@group'));\r\n            const lBindAttribute: string | undefined = lVariable.attributes.find(pAttribute => pAttribute.startsWith('@binding'));\r\n            if (!lGroupAttribute || !lBindAttribute) {\r\n                throw new Exception('Bindind variable needs an binding and group attribute.', this);\r\n            }\r\n\r\n            const lGroupIndex: number = parseInt(lGroupAttribute.replace(/[^\\\\d]+/g, ''));\r\n            const lBindIndex: number = parseInt(lBindAttribute.replace(/[^\\\\d]+/g, ''));\r\n\r\n            // Init group.\r\n            if (!lBindGroups.has(lGroupIndex)) {\r\n                lBindGroups.set(lGroupIndex, new Array<WgslBind>());\r\n            }\r\n\r\n            // Append bind.\r\n            lBindGroups.get(lGroupIndex)!.push({\r\n                visibility: lShaderStage,\r\n                variable: this.createBufferType(lVariable),\r\n                index: lBindIndex\r\n            });\r\n        }\r\n\r\n        // Add BindGroupInformation to bind group.\r\n        const lBindGroupList: Array<WgslBindGroup> = new Array<WgslBindGroup>();\r\n        for (const [lGroupIndex, lBindList] of lBindGroups) {\r\n            lBindGroupList.push({ group: lGroupIndex, binds: lBindList });\r\n        }\r\n\r\n        return lBindGroupList;\r\n    }\r\n\r\n    /**\r\n     * Fetch entry points.\r\n     */\r\n    private fetchEntryPoints(): Dictionary<WgslShaderStage, WgslFunction> {\r\n        // Get all functions.\r\n        const lFunctionList: Array<WgslFunction> = this.fetchFunctions(this.mSource);\r\n\r\n        const lEntryPoints: Dictionary<WgslShaderStage, WgslFunction> = new Dictionary<WgslShaderStage, WgslFunction>();\r\n        for (const lFunction of lFunctionList) {\r\n            // Assemble shaderstage.\r\n            if (lFunction.attributes.find(pAttribute => pAttribute.startsWith('@compute'))) {\r\n                lEntryPoints.set(WgslShaderStage.Compute, lFunction);\r\n            }\r\n            if (lFunction.attributes.find(pAttribute => pAttribute.startsWith('@fragment'))) {\r\n                lEntryPoints.set(WgslShaderStage.Fragment, lFunction);\r\n            }\r\n            if (lFunction.attributes.find(pAttribute => pAttribute.startsWith('@vertex'))) {\r\n                lEntryPoints.set(WgslShaderStage.Vertex, lFunction);\r\n            }\r\n        }\r\n\r\n        return lEntryPoints;\r\n    }\r\n\r\n    /**\r\n     * Fetch all function declarations of source snipped.\r\n     * @param pSourceSnipped - Source snipped with function declarations.\r\n     */\r\n    private fetchFunctions(pSourceSnipped: string): Array<WgslFunction> {\r\n        const lFunctionRegex: RegExp = /(?<attributes>(?:@[\\w]+(?:\\([^)]*\\))?\\s+)+)?(?:\\s)*?fn\\s+(?<name>\\w*)\\s*\\((?<parameter>(?:.|\\r?\\n)*?)\\)(?:\\s*->\\s*(?<result>[^{]+))?\\s*{/gm;\r\n\r\n        const lFunctionList: Array<WgslFunction> = new Array<WgslFunction>();\r\n        for (const lFunctionMatch of pSourceSnipped.matchAll(lFunctionRegex)) {\r\n            // Fetch attributes.\r\n            const lAttributeList: Array<string> = new Array<string>();\r\n            if (lFunctionMatch.groups!['attributes']) {\r\n                // Split string of multiple attributes.\r\n                for (const lAttributeMatch of lFunctionMatch.groups!['attributes'].matchAll(/@[\\w]+\\([^)]*\\)/g)) {\r\n                    lAttributeList.push(lAttributeMatch[0]);\r\n                }\r\n            }\r\n\r\n            // Fetch Parameter.\r\n            const lParameterVariableList: Array<WgslVariable> = this.fetchVariableDefinitions(lFunctionMatch.groups!['parameter']!);\r\n            const lParameterList: Array<BufferType> = lParameterVariableList.map((pVariable) => { return this.createBufferType(pVariable); });\r\n\r\n            // Fetch result type.\r\n            let lResult: BufferType | null = null;\r\n            if (lFunctionMatch.groups!['result']) {\r\n                const lResultVariable: WgslVariable = this.fetchVariableDefinitions(lFunctionMatch.groups!['result']!).at(0)!;\r\n                lResult = this.createBufferType(lResultVariable);\r\n            }\r\n\r\n            lFunctionList.push({\r\n                name: lFunctionMatch.groups!['name'],\r\n                return: lResult,\r\n                parameter: lParameterList,\r\n                attributes: lAttributeList\r\n            });\r\n        }\r\n\r\n        return lFunctionList;\r\n    }\r\n\r\n    /**\r\n     * Find all variable definitions and fetch data.\r\n     * @param pSourceSnipped - Source snipped with variables.\r\n     */\r\n    private fetchVariableDefinitions(pSourceSnipped: string): Array<WgslVariable> {\r\n        const lDefinitionRegex: RegExp = /(?<attributes>(?:@[\\w]+(?:\\([^)]*\\))?\\s+)+)?(?:var(?:<(?<access>[\\w\\s,]+)?>)?\\s+)?(?:(?<variable>\\w+)\\s*:\\s*)?(?<type>(?<typename>\\w+)(?:<(?<generics>[<>\\w\\s,]+)>)?)/gm;\r\n\r\n        const lVariableList: Array<WgslVariable> = new Array<WgslVariable>();\r\n        for (const lDefinitionMatch of pSourceSnipped.matchAll(lDefinitionRegex)) {\r\n            // Fetch attributes.\r\n            const lAttributes: Array<string> = new Array<string>();\r\n            if (lDefinitionMatch.groups!['attributes']) {\r\n                // Split string of multiple attributes.\r\n                for (const lAttributeMatch of lDefinitionMatch.groups!['attributes'].matchAll(/@[\\w]+\\([^)]*\\)/g)) {\r\n                    lAttributes.push(lAttributeMatch[0]);\r\n                }\r\n            }\r\n\r\n            // Parse optional acccess modifier.\r\n            let lAccess: { bindingType: string; accessMode: string; } | null = null;\r\n            if (lDefinitionMatch.groups!['access']) {\r\n                // var<addressSpace [,accessMode]>\r\n                const lAccessList: Array<string> = lDefinitionMatch.groups!['access'].split(',').map((pValue: string) => pValue.trim()).filter((pValue: string) => pValue.length);\r\n                lAccess = {\r\n                    bindingType: lAccessList[0],\r\n                    accessMode: lAccessList[1] ?? ''\r\n                };\r\n            }\r\n\r\n            // Split generic types.\r\n            const lGenericList: Array<string> = new Array<string>();\r\n            if (lDefinitionMatch.groups!['generics']) {\r\n                for (const lGenericMatch of lDefinitionMatch.groups!['generics'].matchAll(/(?<generictype>(?:\\w+(?:<.+>)?))[,\\s]*/g)) {\r\n                    lGenericList.push(lGenericMatch.groups!['generictype']);\r\n                }\r\n            }\r\n\r\n            lVariableList.push({\r\n                name: lDefinitionMatch.groups!['variable'] ?? '',\r\n                type: lDefinitionMatch.groups!['typename'],\r\n                generics: lGenericList,\r\n                attributes: lAttributes,\r\n                access: lAccess\r\n            });\r\n        }\r\n\r\n        return lVariableList;\r\n    }\r\n\r\n    /**\r\n     * Get struct information of struct name.\r\n     * @param pSource - Source.\r\n     * @param pStructName - Struct name.\r\n     */\r\n    private getStructBody(pStructName: string): string {\r\n        const lStuctRegex: RegExp = /^\\s*struct\\s+(?<name>\\w+)\\s*{(?<typeinfo>[^}]*)}$/smg;\r\n\r\n        let lStructBody: string | null = null;\r\n\r\n        // Find struct name and body.\r\n        for (const lStructMatch of this.mSource.matchAll(lStuctRegex)) {\r\n            if (lStructMatch.groups!['name'] === pStructName) {\r\n                lStructBody = lStructMatch.groups!['typeinfo'];\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Validate found struct body.\r\n        if (!lStructBody) {\r\n            throw new Exception(`Struct \"${pStructName}\" not found.`, this);\r\n        }\r\n\r\n        return lStructBody;\r\n    }\r\n\r\n    /**\r\n     * Get wgsl type by name without generics.\r\n     * @param pName - Type name.\r\n     */\r\n    private wgslTypeByName(pName: string): WgslType {\r\n        let lType: WgslType | undefined = EnumUtil.enumKeyByValue(WgslType, pName);\r\n        if (!lType) {\r\n            try {\r\n                // Try to find struct. Throws error on missing struct declaration.\r\n                this.getStructBody(pName);\r\n\r\n                lType = WgslType.Struct;\r\n            } catch (_ex) {\r\n                // On error (when struct not found). It can only be an enum.\r\n                lType = WgslType.Enum;\r\n            }\r\n        }\r\n\r\n        return lType;\r\n    }\r\n}\r\n\r\nexport type WgslBind = {\r\n    visibility: WgslShaderStage;\r\n    variable: BufferType;\r\n    index: number;\r\n};\r\n\r\nexport type WgslBindGroup = {\r\n    group: number;\r\n    binds: Array<WgslBind>;\r\n};\r\n\r\nexport type WgslFunction = {\r\n    attributes: Array<string>;\r\n    name: string;\r\n    parameter: Array<BufferType>;\r\n    return: BufferType | null;\r\n};\r\n\r\ntype WgslVariable = {\r\n    name: string;\r\n    type: string;\r\n    generics: Array<string>;\r\n    attributes: Array<string>;\r\n    access: { bindingType: string; accessMode: string; } | null;\r\n};","import { Exception } from '@kartoffelgames/core.data';\r\nimport { BindGroupLayout } from '../bind_group/bind-group-layout';\r\nimport { BindGroups } from '../bind_group/bind-groups';\r\nimport { BufferType } from '../buffer_type/buffer-type';\r\nimport { SimpleBufferType } from '../buffer_type/simple-buffer-type';\r\nimport { StructBufferType } from '../buffer_type/struct-buffer-type';\r\nimport { BindType } from '../enum/bind-type.enum';\r\nimport { Gpu } from '../gpu';\r\nimport { GpuNativeObject } from '../gpu-native-object';\r\nimport { VertexAttribute } from '../pipeline/data/vertex-attribute';\r\nimport { WgslShaderStage } from './enum/wgsl-shader-stage.enum';\r\nimport { WgslTexelFormat } from './enum/wgsl-texel-format.enum';\r\nimport { WgslType } from './enum/wgsl-type.enum';\r\nimport { ShaderInformation, WgslBind, WgslFunction } from './shader-analyzer';\r\n\r\nexport class Shader extends GpuNativeObject<GPUShaderModule>{\r\n    private readonly mBindGroups: BindGroups;\r\n    private readonly mEntryPoints: EntryPoints;\r\n    private readonly mShaderInformation: ShaderInformation;\r\n    private readonly mSource: string;\r\n\r\n    /**\r\n     * Get bind groups of shader.\r\n     */\r\n    public get bindGroups(): BindGroups {\r\n        return this.mBindGroups;\r\n    }\r\n\r\n    /**\r\n     * Compute entry point name.\r\n     */\r\n    public get computeEntryPoint(): ShaderComputeEntryPoint | undefined {\r\n        return this.mEntryPoints.compute;\r\n    }\r\n\r\n    /**\r\n     * Fragment entry point name.\r\n     */\r\n    public get fragmentEntryPoint(): ShaderFragmentEntryPoint | undefined {\r\n        return this.mEntryPoints.fragment;\r\n    }\r\n\r\n    /**\r\n     * Vertex entry point name.\r\n     */\r\n    public get vertexEntryPoint(): ShaderVertexEntryPoint | undefined {\r\n        return this.mEntryPoints.vertex;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGpu - GPU.\r\n     * @param pSource - Shader module source code.\r\n     */\r\n    public constructor(pGpu: Gpu, pSource: string) {\r\n        super(pGpu, 'SHADER');\r\n\r\n        this.mSource = pSource;\r\n        this.mShaderInformation = new ShaderInformation(pSource);\r\n\r\n        // Generate from ShaderInformation. \r\n        this.mBindGroups = this.generateBindGroups(this.mShaderInformation);\r\n        this.mEntryPoints = {\r\n            vertex: this.generateVertexEntryPoint(this.mShaderInformation),\r\n            fragment: this.generateFragmentEntryPoint(this.mShaderInformation),\r\n            compute: this.generateComputeEntryPoint(this.mShaderInformation)\r\n        };\r\n    }\r\n\r\n    /***\r\n     * Generate shader module.\r\n     */\r\n    protected generate(): GPUShaderModule {\r\n        return this.gpu.device.createShaderModule({ code: this.mSource });\r\n    }\r\n\r\n    /**\r\n     * Generate bind groups based on shader information.\r\n     * @param pShaderInformation - Shader information.\r\n     */\r\n    private generateBindGroups(pShaderInformation: ShaderInformation): BindGroups {\r\n        const lBindGroups: BindGroups = new BindGroups(this.gpu);\r\n\r\n        // Create new bing groups.\r\n        for (const lBindGroupInformation of pShaderInformation.bindings) {\r\n            const lBindGroup: BindGroupLayout = lBindGroups.addGroup(lBindGroupInformation.group);\r\n\r\n            // Create each binding of group.\r\n            for (const lWgslBind of lBindGroupInformation.binds) {\r\n                const lShaderBind: ShaderBind = this.getBindBasedOnType(lWgslBind);\r\n                switch (lShaderBind.bindType) {\r\n                    case BindType.Texture: {\r\n                        lBindGroup.addTexture(lShaderBind.name, lShaderBind.index, lShaderBind.visibility, lShaderBind.sampleType, lShaderBind.viewDimension, lShaderBind.multisampled);\r\n                        break;\r\n                    }\r\n                    case BindType.Buffer: {\r\n                        lBindGroup.addBuffer(lShaderBind.name, lShaderBind.index, lShaderBind.visibility, lShaderBind.type, lShaderBind.hasDynamicOffset, lShaderBind.minBindingSize);\r\n                        break;\r\n                    }\r\n                    case BindType.Sampler: {\r\n                        lBindGroup.addSampler(lShaderBind.name, lShaderBind.index, lShaderBind.visibility, lShaderBind.type);\r\n                        break;\r\n                    }\r\n                    case BindType.StorageTexture: {\r\n                        lBindGroup.addStorageTexture(lShaderBind.name, lShaderBind.index, lShaderBind.visibility, lShaderBind.format, lShaderBind.access, lShaderBind.viewDimension);\r\n                        break;\r\n                    }\r\n                    case BindType.ExternalTexture: {\r\n                        lBindGroup.addExternalTexture(lShaderBind.name, lShaderBind.index, lShaderBind.visibility);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return lBindGroups;\r\n    }\r\n\r\n    /**\r\n     * Generate compute entry point.\r\n     * @param pShaderInformation - Shader information.\r\n     */\r\n    private generateComputeEntryPoint(pShaderInformation: ShaderInformation): ShaderComputeEntryPoint | undefined {\r\n        // Find entry point information.\r\n        const lShaderEntryPointFunction: WgslFunction | undefined = pShaderInformation.entryPoints.get(WgslShaderStage.Compute);\r\n        if (!lShaderEntryPointFunction) {\r\n            return undefined;\r\n        }\r\n\r\n        const lShaderEntryPoint: ShaderComputeEntryPoint = {\r\n            name: lShaderEntryPointFunction.name\r\n        };\r\n\r\n        return lShaderEntryPoint;\r\n    }\r\n\r\n    /**\r\n     * Generate compute entry point.\r\n     * @param pShaderInformation - Shader information.\r\n     */\r\n    private generateFragmentEntryPoint(pShaderInformation: ShaderInformation): ShaderFragmentEntryPoint | undefined {\r\n        // Find entry point information.\r\n        const lShaderEntryPointFunction: WgslFunction | undefined = pShaderInformation.entryPoints.get(WgslShaderStage.Fragment);\r\n        if (!lShaderEntryPointFunction) {\r\n            return undefined;\r\n        }\r\n\r\n        // Get count of all result types with location attribute.\r\n        let lResultLength: number = 1;\r\n        if (lShaderEntryPointFunction.return instanceof StructBufferType) {\r\n            lResultLength = lShaderEntryPointFunction.return.innerLocations().length;\r\n        }\r\n\r\n        const lShaderEntryPoint: ShaderFragmentEntryPoint = {\r\n            name: lShaderEntryPointFunction.name,\r\n            renderTargetCount: lResultLength\r\n        };\r\n\r\n        return lShaderEntryPoint;\r\n    }\r\n\r\n    /**\r\n     * Generate vertex entry point.\r\n     * @param pShaderInformation - Shader information.\r\n     */\r\n    private generateVertexEntryPoint(pShaderInformation: ShaderInformation): ShaderVertexEntryPoint | undefined {\r\n        // Find entry point information.\r\n        const lShaderEntryPointFunction: WgslFunction | undefined = pShaderInformation.entryPoints.get(WgslShaderStage.Fragment);\r\n        if (!lShaderEntryPointFunction) {\r\n            return undefined;\r\n        }\r\n\r\n        const lShaderEntryPoint: ShaderVertexEntryPoint = {\r\n            name: lShaderEntryPointFunction.name,\r\n            attributes: new Array<VertexAttribute>()\r\n        };\r\n\r\n        // Get all parameter locations of entry point.\r\n        const lParameterLocationTypes: Array<BufferType> = new Array<BufferType>();\r\n        for (const lParameter of lShaderEntryPointFunction.parameter) {\r\n            if (lParameter instanceof StructBufferType) {\r\n                for (const lType of lParameter.innerLocations()) {\r\n                    lParameterLocationTypes.push(lType);\r\n                }\r\n            } else if (lParameter?.location) {\r\n                lParameterLocationTypes.push(lParameter);\r\n            }\r\n        }\r\n\r\n\r\n        // Generate new vertex attribute for each location.\r\n        for (const lParameter of lParameterLocationTypes) {\r\n            if (!(lParameter instanceof SimpleBufferType)) {\r\n                throw new Exception('Vertex attributes can only be of a simple type.', this);\r\n            }\r\n\r\n            // Add generated attribute to shader entry point.\r\n            lShaderEntryPoint.attributes.push(new VertexAttribute(this.gpu, lParameter));\r\n        }\r\n\r\n        return lShaderEntryPoint;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get bind based on binding information.\r\n     * @param pBindGroup - Bind group.\r\n     * @param pBindInformation - Bind information.\r\n     */\r\n    private getBindBasedOnType(pBind: WgslBind): ShaderBind {\r\n        const lNumberTypeList: Array<WgslType> = [WgslType.Boolean, WgslType.Integer32, WgslType.UnsignedInteger32, WgslType.Float32, WgslType.Float16];\r\n        const lVectorTypeList: Array<WgslType> = [WgslType.Vector2, WgslType.Vector3, WgslType.Vector4];\r\n        const lMatrixTypeList: Array<WgslType> = [WgslType.Matrix22, WgslType.Matrix23, WgslType.Matrix24, WgslType.Matrix32, WgslType.Matrix33, WgslType.Matrix34, WgslType.Matrix42, WgslType.Matrix43, WgslType.Matrix44];\r\n        const lTextureStorageTypeList: Array<WgslType> = [WgslType.TextureStorage1d, WgslType.TextureStorage2d, WgslType.TextureStorage2dArray, WgslType.TextureStorage3d,];\r\n        const lTextureTypeList = [WgslType.Texture1d, WgslType.Texture2d, WgslType.Texture2dArray, WgslType.Texture3d, WgslType.TextureCube, WgslType.TextureCubeArray, WgslType.TextureMultisampled2d, WgslType.TextureExternal];\r\n        const lDepthTextureTypeList = [WgslType.TextureDepth2d, WgslType.TextureDepth2dArray, WgslType.TextureDepthCube, WgslType.TextureDepthCubeArray, WgslType.TextureDepthMultisampled2d];\r\n\r\n        // Buffer types.\r\n        // Number, matrix, vector and array types.\r\n        if ([...lNumberTypeList, ...lVectorTypeList, ...lMatrixTypeList, WgslType.Array, WgslType.Struct].includes(pBind.variable.type)) {\r\n            // Validate address space.\r\n            if (!pBind.variable.bindingType) {\r\n                throw new Exception(`Buffer bind type needs to be set for buffer bindings (${pBind.variable.name}).`, this);\r\n            }\r\n\r\n            // Bind \r\n            return <ShaderBufferBind>{\r\n                bindType: BindType.Buffer,\r\n                index: pBind.index,\r\n                name: pBind.variable.name,\r\n                visibility: pBind.visibility,\r\n                type: pBind.variable.bindingType,\r\n                hasDynamicOffset: false,\r\n                minBindingSize: 0\r\n            };\r\n        }\r\n\r\n        // Bind only external textures.\r\n        if (pBind.variable.type === WgslType.TextureExternal) {\r\n            return <ShaderExternalTextureBind>{\r\n                bindType: BindType.ExternalTexture,\r\n                index: pBind.index,\r\n                name: pBind.variable.name,\r\n                visibility: pBind.visibility\r\n            };\r\n        }\r\n\r\n        // Sampler types.\r\n        else if ([WgslType.Sampler, WgslType.SamplerComparison].includes(pBind.variable.type)) {\r\n            // Sampler bind type by sampler or comparison type.\r\n            const lFilterType: GPUSamplerBindingType = (pBind.variable.type === WgslType.Sampler) ? 'filtering' : 'comparison';\r\n\r\n            // Exit.\r\n            return <ShaderSamplerBind>{\r\n                bindType: BindType.Sampler,\r\n                index: pBind.index,\r\n                name: pBind.variable.name,\r\n                visibility: pBind.visibility,\r\n                type: lFilterType\r\n            };\r\n        }\r\n\r\n        // First generic texture is a wgsl type on color textures or nothing on depth textures.\r\n        if (!(pBind.variable instanceof SimpleBufferType)) {\r\n            throw new Exception('Texture buffers can only be of simple buffer type', this);\r\n        }\r\n\r\n        // Storage texture.\r\n        if (lTextureStorageTypeList.includes(pBind.variable.type)) {\r\n            if (pBind.variable.generics.at(0) !== WgslType.Enum) {\r\n                throw new Exception('Storage texture needs texel enum as first generic.', this);\r\n            }\r\n\r\n            // Storage texture first generics is allways the texel format.\r\n            const lTexelFormat: GPUTextureFormat = <WgslTexelFormat>pBind.variable.genericsRaw.at(0)!;\r\n            const lTextureAccess: GPUStorageTextureAccess = 'write-only';\r\n            const lTextureDimension: GPUTextureViewDimension = this.texureDimensionFromType(pBind.variable.type);\r\n\r\n            // Bind.\r\n            return <ShaderStorageTextureBind>{\r\n                bindType: BindType.StorageTexture,\r\n                index: pBind.index,\r\n                name: pBind.variable.name,\r\n                visibility: pBind.visibility,\r\n                access: lTextureAccess,\r\n                format: lTexelFormat,\r\n                viewDimension: lTextureDimension\r\n            };\r\n        }\r\n\r\n        // Depth or color texture.\r\n        if ([...lTextureTypeList, ...lDepthTextureTypeList].includes(pBind.variable.type)) {\r\n            const lTextureDimension: GPUTextureViewDimension = this.texureDimensionFromType(pBind.variable.type);\r\n            const lMultisampled: boolean = [WgslType.TextureMultisampled2d, WgslType.TextureDepthMultisampled2d].includes(pBind.variable.type);\r\n\r\n            const lTextureWgslType: WgslType | undefined = pBind.variable.generics.at(0);\r\n            let lTextureSampleType: GPUTextureSampleType;\r\n\r\n            // Color textures. Based on generic type.\r\n            if (lTextureTypeList.includes(pBind.variable.type)) {\r\n                switch (lTextureWgslType) {\r\n                    case WgslType.Float32: {\r\n                        lTextureSampleType = 'float';\r\n                        break;\r\n                    }\r\n                    case WgslType.Integer32: {\r\n                        lTextureSampleType = 'sint';\r\n                        break;\r\n                    }\r\n                    case WgslType.UnsignedInteger32: {\r\n                        lTextureSampleType = 'uint';\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        // Ignored \"unfiltered float\"\r\n                        lTextureSampleType = 'unfilterable-float';\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                // Musst be and depth type.\r\n                lTextureSampleType = 'depth';\r\n            }\r\n\r\n            // Exit.\r\n            return <ShaderTextureBind>{\r\n                bindType: BindType.Texture,\r\n                index: pBind.index,\r\n                name: pBind.variable.name,\r\n                visibility: pBind.visibility,\r\n                sampleType: lTextureSampleType,\r\n                viewDimension: lTextureDimension,\r\n                multisampled: lMultisampled\r\n            };\r\n        }\r\n\r\n        throw new Exception(`Not implemented. Upps \"${pBind.variable.type}\"`, this);\r\n    }\r\n\r\n    /**\r\n     * Get view dimension based on WGSL texture type.\r\n     * @param pTextureType - Texture type.\r\n     */\r\n    private texureDimensionFromType(pTextureType: WgslType): GPUTextureViewDimension {\r\n        // Map every texture type for view dimension.\r\n        switch (pTextureType) {\r\n            case WgslType.Texture1d:\r\n            case WgslType.TextureStorage1d: {\r\n                return '1d';\r\n            }\r\n            case WgslType.TextureDepth2d:\r\n            case WgslType.Texture2d:\r\n            case WgslType.TextureStorage2d:\r\n            case WgslType.TextureDepthMultisampled2d:\r\n            case WgslType.TextureMultisampled2d: {\r\n                return '2d';\r\n            }\r\n            case WgslType.TextureDepth2dArray:\r\n            case WgslType.Texture2dArray:\r\n            case WgslType.TextureStorage2dArray: {\r\n                return '2d-array';\r\n            }\r\n            case WgslType.Texture3d:\r\n            case WgslType.TextureStorage3d: {\r\n                return '3d';\r\n            }\r\n            case WgslType.TextureCube:\r\n            case WgslType.TextureDepthCube: {\r\n                return 'cube';\r\n            }\r\n            case WgslType.TextureCubeArray: {\r\n                return 'cube-array';\r\n            }\r\n            default: {\r\n                throw new Exception(`Texture type \"${pTextureType}\" not supported for any dimension.`, this);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type ShaderVertexEntryPoint = {\r\n    name: string,\r\n    attributes: Array<VertexAttribute>;\r\n};\r\n\r\nexport type ShaderFragmentEntryPoint = {\r\n    name: string,\r\n    renderTargetCount: number;\r\n};\r\n\r\nexport type ShaderComputeEntryPoint = {\r\n    name: string,\r\n    // TODO: Compute sizes.\r\n};\r\n\r\ntype EntryPoints = {\r\n    fragment?: ShaderFragmentEntryPoint | undefined;\r\n    vertex?: ShaderVertexEntryPoint | undefined;\r\n    compute?: ShaderComputeEntryPoint | undefined;\r\n};\r\n\r\ninterface ShaderBaseBind {\r\n    index: number;\r\n    name: string;\r\n    bindType: BindType;\r\n    visibility: WgslShaderStage;\r\n}\r\n\r\ninterface ShaderBufferBind extends ShaderBaseBind, Required<GPUBufferBindingLayout> {\r\n    bindType: BindType.Buffer;\r\n}\r\n\r\ninterface ShaderSamplerBind extends ShaderBaseBind, Required<GPUSamplerBindingLayout> {\r\n    bindType: BindType.Sampler;\r\n}\r\n\r\ninterface ShaderTextureBind extends ShaderBaseBind, Required<GPUTextureBindingLayout> {\r\n    bindType: BindType.Texture;\r\n}\r\n\r\ninterface ShaderStorageTextureBind extends ShaderBaseBind, Required<GPUStorageTextureBindingLayout> {\r\n    bindType: BindType.StorageTexture;\r\n}\r\n\r\ninterface ShaderExternalTextureBind extends ShaderBaseBind, Required<GPUExternalTextureBindingLayout> {\r\n    bindType: BindType.ExternalTexture;\r\n}\r\n\r\nexport type ShaderBind = ShaderBufferBind | ShaderSamplerBind | ShaderTextureBind | ShaderStorageTextureBind | ShaderExternalTextureBind;\r\n\r\nexport type ShaderBindGroup = {\r\n    groupIndex: number;\r\n    binds: Array<ShaderBind>;\r\n};","export class Euler {\r\n    private mX: number;\r\n    private mY: number;\r\n    private mZ: number;\r\n\r\n    /**\r\n     * X axis degree.\r\n     */\r\n    public get x(): number {\r\n        return this.mX;\r\n    } set x(pValue: number) {\r\n        this.mX = pValue;\r\n    }\r\n\r\n    /**\r\n     * Y axis degree.\r\n     */\r\n    public get y(): number {\r\n        return this.mY;\r\n    } set y(pValue: number) {\r\n        this.mY = pValue;\r\n    }\r\n\r\n    /**\r\n     * Z axis degree.\r\n     */\r\n    public get z(): number {\r\n        return this.mZ;\r\n    } set z(pValue: number) {\r\n        this.mZ = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mX = 0;\r\n        this.mY = 0;\r\n        this.mZ = 0;\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Vector } from './vector';\r\n\r\nexport class Matrix {\r\n    /**\r\n     * Create matrix from data array.\r\n     * Direction from reading columns than rows.\r\n     * @param pArray - Array data. \r\n     * @param pHeight \r\n     * @param pWidth \r\n     * @returns \r\n     */\r\n    public static fromArray(pArray: Array<number>, pHeight: number, pWidth: number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        for (let lRowIndex = 0; lRowIndex < pHeight; lRowIndex++) {\r\n            const lRowData: Array<number> = new Array<number>(pWidth);\r\n\r\n            for (let lColumnIndex = 0; lColumnIndex < pWidth; lColumnIndex++) {\r\n                lRowData[lColumnIndex] = pArray[(lColumnIndex * pHeight) + lRowIndex];\r\n            }\r\n\r\n            // Add row to data array.\r\n            lData.push(lRowData);\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Create identity matrix.\r\n     * @param pSize - Matix size: nxn\r\n     * @param pValue - Value of identity. \r\n     */\r\n    public static identity(pSize: number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n        for (let lRowIndex = 0; lRowIndex < pSize; lRowIndex++) {\r\n            // Create Array filled with zeros.\r\n            const lRowData: Array<number> = new Array<number>(pSize).fill(0);\r\n\r\n            // Set identity column to value.\r\n            lRowData[lRowIndex] = 1;\r\n\r\n            // Add row to data array.\r\n            lData.push(lRowData);\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    private readonly mData: Array<Array<number>>;\r\n\r\n    /**\r\n     * Get matix raw data.\r\n     */\r\n    public get data(): Array<Array<number>> {\r\n        return this.mData;\r\n    }\r\n\r\n    /**\r\n     * Data as number array.\r\n     */\r\n    public get dataArray(): Array<number> {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        // Read from columns to rows.\r\n        for (let lColumnIndex = 0; lColumnIndex < this.width; lColumnIndex++) {\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lData.push(this.mData[lRowIndex][lColumnIndex]);\r\n            }\r\n        }\r\n\r\n        return lData;\r\n    }\r\n\r\n    /**\r\n     * Get matrix height.\r\n     */\r\n    public get height(): number {\r\n        return this.mData.length;\r\n    }\r\n\r\n    /**\r\n     * Get matrix width.\r\n     */\r\n    public get width(): number {\r\n        return this.mData[0]?.length ?? 0;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pData - Matrix data.\r\n     */\r\n    public constructor(pData: Array<Array<number>>) {\r\n        this.mData = pData;\r\n    }\r\n\r\n    /**\r\n     * Add value to matrix.\r\n     * @param pAddData - Matrix or scalar value.\r\n     */\r\n    public add(pAddData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pAddData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.height !== pAddData.height && this.width !== pAddData.width) {\r\n                throw new Exception('Matrices need to be the same size for calculation.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] + pAddData.data[lRowIndex][lColumnIndex];\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Add scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] + pAddData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Adjoint matrix.\r\n     */\r\n    public adjoint(): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Allways use first row and iterate over columns.\r\n        for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n            const lMatrixRow: Array<number> = new Array<number>();\r\n            for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n                // Calculate determant of matrix with omitted column and row.\r\n                // Toggle sign on each new row or column.\r\n                let lDeterminant: number = this.omit(lRowIndex, lColumIndex).determinant();\r\n                lDeterminant *= Math.pow(-1, (lRowIndex + 1) + (lColumIndex + 1));\r\n\r\n\r\n                lMatrixRow.push(lDeterminant);\r\n            }\r\n\r\n            // Add row to matrix data.\r\n            lMatrixData.push(lMatrixRow);\r\n        }\r\n\r\n        // Calculate transpose from cofactor matrix to get adjoint. \r\n        const lCofactorMatrix = new Matrix(lMatrixData);\r\n        return lCofactorMatrix.transpose();\r\n    }\r\n\r\n    /**\r\n     * Calculate determant of matrix.\r\n     */\r\n    public determinant(): number {\r\n        // Super fast determinant calculation of a 1x1 matrix.\r\n        if (this.height === 1 && this.width === 1) {\r\n            return this.data[0][0];\r\n        }\r\n\r\n        let lDeterminant: number = 0;\r\n        for (let lIterationIndex = 0; lIterationIndex < this.width; lIterationIndex++) {\r\n            // Get number of row iteration to detect if any calculation musst be done.\r\n            let lSignedNumber: number = this.data[0][lIterationIndex];\r\n            lSignedNumber *= (lIterationIndex % 2) ? -1 : 1; // Toggle sign between iteration. Begin with plus.\r\n\r\n            // Check if any calculation needs to be done. Zero multiplicated is allways zero.\r\n            if (lSignedNumber !== 0) {\r\n                // Calculate determinant of new matrix. Allways use first row.\r\n                const lDeterminantMatrix: Matrix = this.omit(0, lIterationIndex);\r\n                lDeterminant += lSignedNumber * lDeterminantMatrix.determinant();\r\n            }\r\n        }\r\n\r\n        return lDeterminant;\r\n    }\r\n\r\n    /**\r\n     * Inverse matrix.\r\n     */\r\n    public inverse(): Matrix {\r\n        const lAdjoint: Matrix = this.adjoint();\r\n        const lDeterminant: number = this.determinant();\r\n\r\n        // Devide each adjoint matrix component by determinant.\r\n        for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lAdjoint.data[lRowIndex][lColumIndex] /= lDeterminant;\r\n            }\r\n        }\r\n\r\n        return lAdjoint;\r\n    }\r\n\r\n    /**\r\n     * Multiplicate matrix.\r\n     * @param pMultData - Matrix or scalar value.\r\n     */\r\n    public mult(pMultData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pMultData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.width !== pMultData.height) {\r\n                throw new Exception('Matrices A width and B height must match for multiplication.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(pMultData.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n\r\n                    // Multiplicate target row with source column components.\r\n                    // Iteration length is eighter target.height or source.width.\r\n                    let lProduct: number = 0;\r\n                    for (let lComponentIndex = 0; lComponentIndex < this.height; lComponentIndex++) {\r\n                        lProduct += this.mData[lRowIndex][lComponentIndex] * pMultData.data[lComponentIndex][lColumnIndex];\r\n                    }\r\n                    lRowData[lColumnIndex] = lProduct;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Multiplicate scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < this.width; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] * pMultData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Omit row and column from matrix.\r\n     * @param pOmitRow - Omitting row.\r\n     * @param pOmitColumn - Omiting column\r\n     */\r\n    public omit(pOmitRow: number, pOmitColumn: number): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Allways use first row and iterate over columns.\r\n        for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n            if (lRowIndex !== pOmitRow) {\r\n                const lMatrixRow: Array<number> = new Array<number>();\r\n                for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n                    // Skip column of\r\n                    if (lColumIndex !== pOmitColumn) {\r\n                        lMatrixRow.push(this.data[lRowIndex][lColumIndex]);\r\n                    }\r\n                }\r\n\r\n                // Add row to matrix data.\r\n                lMatrixData.push(lMatrixRow);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lMatrixData);\r\n    }\r\n\r\n    /**\r\n     * Substract value to matrix.\r\n     * @param pAddData - Matrix or scalar value.\r\n     */\r\n    public sub(pAddData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pAddData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.height !== pAddData.height && this.width !== pAddData.width) {\r\n                throw new Exception('Matrices need to be the same size for calculation.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] - pAddData.data[lRowIndex][lColumnIndex];\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Add scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] - pAddData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Transpose matrix.\r\n     */\r\n    public transpose(): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Transpose by copying column into row.\r\n        for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n            const lMatrixRow: Array<number> = new Array<number>();\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lMatrixRow.push(this.data[lRowIndex][lColumIndex]);\r\n            }\r\n\r\n            // Add row to matrix data.\r\n            lMatrixData.push(lMatrixRow);\r\n        }\r\n\r\n        return new Matrix(lMatrixData);\r\n    }\r\n\r\n    /**\r\n     * Multiplicate matrix with vector.\r\n     * @param pMultData - Vector.\r\n     * @returns \r\n     */\r\n    public vectorMult(pMultData: Vector): Vector {\r\n        // Restrict on same length.\r\n        if (this.width !== pMultData.data.length) {\r\n            throw new Exception('Matrices A width and B height must match for multiplication.', this);\r\n        }\r\n\r\n        // Convert vector to matrix by creating a \r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n        for (const lVectorComponent of pMultData.data) {\r\n            lMatrixData.push([lVectorComponent]);\r\n        }\r\n\r\n        // Multiplicate\r\n        const lMutiplicatedMatrix = this.mult(new Matrix(lMatrixData));\r\n\r\n        const lVectorData: Array<number> = new Array<number>();\r\n        for (let lRowIndex = 0; lRowIndex < lMutiplicatedMatrix.height; lRowIndex++) {\r\n            lVectorData.push(lMutiplicatedMatrix.data[lRowIndex][0]);\r\n        }\r\n\r\n        return new Vector(lVectorData);\r\n    }\r\n}","import { Euler } from './euler';\r\nimport { Matrix } from './matrix';\r\nimport { Vector } from './vector';\r\n\r\nexport class Quaternion {\r\n    /**\r\n     * Create new quaternion from degree rotation.\r\n     * Rotate order XYZ (Pitch, Yaw, Roll)\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public static fromRotation(pPitch: number, pYaw: number, pRoll: number): Quaternion {\r\n        // Conversion to radian.\r\n        const lPitchRadian: number = (pPitch % 360) * Math.PI / 180;\r\n        const lYawRadian: number = (pYaw % 360) * Math.PI / 180;\r\n        const lRollRadian: number = (pRoll % 360) * Math.PI / 180;\r\n\r\n        // Pre calculate.\r\n        const lCosPitch = Math.cos(lPitchRadian * 0.5);\r\n        const lSinPitch = Math.sin(lPitchRadian * 0.5);\r\n        const lCosYaw = Math.cos(lYawRadian * 0.5);\r\n        const lSinYaw = Math.sin(lYawRadian * 0.5);\r\n        const lCosRoll = Math.cos(lRollRadian * 0.5);\r\n        const lSinRoll = Math.sin(lRollRadian * 0.5);\r\n\r\n        // Create quaternion.\r\n        const lQuaternion = Quaternion.identity();\r\n        lQuaternion.w = lCosPitch * lCosYaw * lCosRoll + lSinPitch * lSinYaw * lSinRoll;\r\n        lQuaternion.x = lSinPitch * lCosYaw * lCosRoll - lCosPitch * lSinYaw * lSinRoll;\r\n        lQuaternion.y = lCosPitch * lSinYaw * lCosRoll + lSinPitch * lCosYaw * lSinRoll;\r\n        lQuaternion.z = lCosPitch * lCosYaw * lSinRoll - lSinPitch * lSinYaw * lCosRoll;\r\n\r\n        return lQuaternion;\r\n    }\r\n\r\n    /**\r\n     * Create identity quaternion.\r\n     */\r\n    public static identity(): Quaternion {\r\n        return new Quaternion(1, 0, 0, 0);\r\n    }\r\n\r\n    public mW: number;\r\n    public mX: number;\r\n    public mY: number;\r\n    public mZ: number;\r\n\r\n    /**\r\n     * Rotation forward vector.\r\n     */\r\n    public get vectorForward(): Vector {\r\n        // Products.\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lProductXz: number = 2 * this.mX * this.mZ;\r\n        const lProductYw: number = 2 * this.mY * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = lProductXz + lProductYw;\r\n        const lY: number = lProductYz - lProductXw;\r\n        const lZ: number = 1 - lSquareX - lSquareY;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Rotation vector right.\r\n     */\r\n    public get vectorRight(): Vector {\r\n        // Products.\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = 1 - lSquareY - lSquareZ;\r\n        const lY: number = lProductXy + lProductZw;\r\n        const lZ: number = lProductYz + lProductXw;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Rotation up vector.\r\n     */\r\n    public get vectorUp(): Vector {\r\n        // Products.\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = lProductXy - lProductZw;\r\n        const lY: number = 1 - lSquareX - lSquareZ;\r\n        const lZ: number = lProductYz + lProductXw;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Get w value.\r\n     */\r\n    public get w(): number {\r\n        return this.mW;\r\n    } set w(pValue: number) {\r\n        this.mW = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get x value.\r\n     */\r\n    public get x(): number {\r\n        return this.mX;\r\n    } set x(pValue: number) {\r\n        this.mX = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get y value.\r\n     */\r\n    public get y(): number {\r\n        return this.mY;\r\n    } set y(pValue: number) {\r\n        this.mY = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get z value.\r\n     */\r\n    public get z(): number {\r\n        return this.mZ;\r\n    } set z(pValue: number) {\r\n        this.mZ = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pW - W.\r\n     * @param pX - X.\r\n     * @param pY - Y.\r\n     * @param pZ - Z.\r\n     */\r\n    public constructor(pW: number, pX: number, pY: number, pZ: number) {\r\n        this.mX = pX;\r\n        this.mY = pY;\r\n        this.mZ = pZ;\r\n        this.mW = pW;\r\n    }\r\n\r\n    /**\r\n     * Add angles to current euler rotation.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addEulerRotation(pPitch: number, pYaw: number, pRoll: number): Quaternion {\r\n        // Apply current rotation after setting new rotation to apply rotation as absolute euler rotation and not as relative quaternion.\r\n        return this.mult(Quaternion.fromRotation(pPitch, pYaw, pRoll));\r\n    }\r\n\r\n    /**\r\n     * Quaternion rotation as euler rotation\r\n     */\r\n    public asEuler(): Euler {\r\n        const lEuler: Euler = new Euler();\r\n\r\n        // Pitch (x-axis rotation)\r\n        const lSinPitchCosYaw = 2 * (this.mW * this.mX + this.mY * this.mZ);\r\n        const lCosPitchCosYaw = 1 - 2 * (this.mX * this.mX + this.mY * this.mY);\r\n        const lPitchRadian = Math.atan2(lSinPitchCosYaw, lCosPitchCosYaw);\r\n        const lPitchDegree = (lPitchRadian * 180 / Math.PI) % 360;\r\n        lEuler.x = (lPitchDegree < 0) ? lPitchDegree + 360 : lPitchDegree;\r\n\r\n        // Yaw (y-axis rotation)\r\n        const lSinYaw = Math.sqrt(1 + 2 * (this.mW * this.mY - this.mX * this.mZ));\r\n        const lCosYaw = Math.sqrt(1 - 2 * (this.mW * this.mY - this.mX * this.mZ));\r\n        const lYawRadian = 2 * Math.atan2(lSinYaw, lCosYaw) - Math.PI / 2;\r\n        const lYawDegree = (lYawRadian * 180 / Math.PI) % 360;\r\n        lEuler.y = (lYawDegree < 0) ? lYawDegree + 360 : lYawDegree;\r\n\r\n        // Roll (z-axis rotation)\r\n        const lSinRollCosYaw = 2 * (this.mW * this.mZ + this.mX * this.mY);\r\n        const lCosRollCosYaw = 1 - 2 * (this.mY * this.mY + this.mZ * this.mZ);\r\n        const lRollRadian = Math.atan2(lSinRollCosYaw, lCosRollCosYaw);\r\n        const lRollDegree = (lRollRadian * 180 / Math.PI) % 360;\r\n        lEuler.z = (lRollDegree < 0) ? lRollDegree + 360 : lRollDegree;\r\n\r\n        return lEuler;\r\n    }\r\n\r\n    /**\r\n     * Convert quaternion to a 4x4 rotation matrix.\r\n     */\r\n    public asMatrix(): Matrix {\r\n        /*\r\n            1 - 2*qy² - 2*qz²\t2*qx*qy - 2*qz*qw\t2*qx*qz + 2*qy*qw\r\n            2*qx*qy + 2*qz*qw\t1 - 2*qx² - 2*qz²\t2*qy*qz - 2*qx*qw\r\n            2*qx*qz - 2*qy*qw\t2*qy*qz + 2*qx*qw\t1 - 2*qx² - 2*qy²\r\n        */\r\n        // Sqares\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n\r\n        // Products.\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n        const lProductXz: number = 2 * this.mX * this.mZ;\r\n        const lProductYw: number = 2 * this.mY * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        // Fill matrix\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n        lMatrix.data[0][0] = 1 - lSquareY - lSquareZ;\r\n        lMatrix.data[0][1] = lProductXy - lProductZw;\r\n        lMatrix.data[0][2] = lProductXz + lProductYw;\r\n\r\n        lMatrix.data[1][0] = lProductXy + lProductZw;\r\n        lMatrix.data[1][1] = 1 - lSquareX - lSquareZ;\r\n        lMatrix.data[1][2] = lProductYz - lProductXw;\r\n\r\n        lMatrix.data[2][0] = lProductXz - lProductYw;\r\n        lMatrix.data[2][1] = lProductYz + lProductXw;\r\n        lMatrix.data[2][2] = 1 - lSquareX - lSquareY;\r\n\r\n        return lMatrix;\r\n    }\r\n\r\n    /**\r\n     * Multiplicate with quaternion.\r\n     * @param pQuaternion - Quaterion source.\r\n     */\r\n    public mult(pQuaternion: Quaternion): Quaternion {\r\n        const lW: number = this.mW * pQuaternion.w - this.mX * pQuaternion.x - this.mY * pQuaternion.y - this.mZ * pQuaternion.z;\r\n        const lX: number = this.mW * pQuaternion.x + this.mX * pQuaternion.w + this.mY * pQuaternion.z - this.mZ * pQuaternion.y;\r\n        const lY: number = this.mW * pQuaternion.y - this.mX * pQuaternion.z + this.mY * pQuaternion.w + this.mZ * pQuaternion.x;\r\n        const lZ: number = this.mW * pQuaternion.z + this.mX * pQuaternion.y - this.mY * pQuaternion.x + this.mZ * pQuaternion.w;\r\n\r\n        return new Quaternion(lW, lX, lY, lZ);\r\n    }\r\n\r\n    /**\r\n     * Normalize quaternion.\r\n     */\r\n    public normalize(): Quaternion {\r\n        // Calculate length.\r\n        const lLength = Math.hypot(Math.pow(this.mW, 2), Math.pow(this.mX, 2), Math.pow(this.mY, 2), Math.pow(this.mZ, 2));\r\n\r\n        // Create new quaternion by dividing each dimension by length.\r\n        return new Quaternion(this.mW / lLength, this.mX / lLength, this.mY / lLength, this.mZ / lLength);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\n\r\nexport class Vector {\r\n    private readonly mData: Array<number>;\r\n\r\n    /**\r\n     * Get vector data.\r\n     */\r\n    public get data(): Array<number> {\r\n        return this.mData;\r\n    }\r\n\r\n    /**\r\n     * W value quick access. \r\n     */\r\n    public get w(): number {\r\n        return this.mData[3];\r\n    }\r\n\r\n    /**\r\n     * X value quick access. \r\n     */\r\n    public get x(): number {\r\n        return this.mData[0];\r\n    }\r\n\r\n    /**\r\n     * Y value quick access. \r\n     */\r\n    public get y(): number {\r\n        return this.mData[1];\r\n    }\r\n\r\n    /**\r\n     * Z value quick access. \r\n     */\r\n    public get z(): number {\r\n        return this.mData[2];\r\n    }\r\n    \r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pData - Vector data.\r\n     */\r\n    public constructor(pData: Array<number>) {\r\n        this.mData = [...pData];\r\n    }\r\n\r\n    /**\r\n     * Add two vectors.\r\n     * @param pAddData - Vector or scalar.\r\n     */\r\n    public add(pAddData: Vector | number): Vector {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        if (pAddData instanceof Vector) {\r\n            // Restrict on same length.\r\n            if (this.mData.length !== pAddData.data.length) {\r\n                throw new Exception('Vectors need to be the same length for calculation.', this);\r\n            }\r\n\r\n            // Add values.\r\n            for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n                lData.push(this.mData[lIndex] + pAddData.data[lIndex]);\r\n            }\r\n        } else {\r\n            // Add scalar to each vector component.\r\n            for (const lItem of this.mData) {\r\n                lData.push(lItem + pAddData);\r\n            }\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n\r\n    /**\r\n     * Get length of vector.\r\n     */\r\n    public length(): number {\r\n        // Square root sum.\r\n        return Math.hypot(...this.mData);\r\n    }\r\n\r\n    /**\r\n     * Calulate cross product of two vector3.\r\n     * @param pVector - Vector3.\r\n     */\r\n    public multCross(pVector: Vector): Vector {\r\n        // Restrict on same length.\r\n        if (this.mData.length !== pVector.data.length && this.mData.length !== 3) {\r\n            throw new Exception('Vectors need to be the length of 3 for corss product calculation.', this);\r\n        }\r\n\r\n        /*\r\n         * cx = ay*bz − az*by\r\n         * cy = az*bx − ax*bz\r\n         * cz = ax*by − ay*bx\r\n         */\r\n        return new Vector([\r\n            this.mData[1] * pVector.data[2] - this.mData[2] * pVector.data[1],\r\n            this.mData[2] * pVector.data[0] - this.mData[0] * pVector.data[2],\r\n            this.mData[0] * pVector.data[1] - this.mData[1] * pVector.data[0]\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Multiply with dot procedure.\r\n     * @param pVector - Vector.\r\n     */\r\n    public multDot(pVector: Vector): number {\r\n        // Restrict on same length.\r\n        if (this.mData.length !== pVector.data.length) {\r\n            throw new Exception('Vectors need to be the same length for calculation.', this);\r\n        }\r\n\r\n        // Calculate dot product.\r\n        let lProduct: number = 0;\r\n        for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n            lProduct += this.mData[lIndex] * pVector.data[lIndex];\r\n        }\r\n\r\n        return lProduct;\r\n    }\r\n\r\n    /**\r\n     * Normalize vector.\r\n     */\r\n    public normalize(): Vector {\r\n        const lLength: number = this.length();\r\n\r\n        // Devide each vector component with it vector length.\r\n        const lData: Array<number> = new Array<number>();\r\n        for (const lItem of this.mData) {\r\n            lData.push(lItem / lLength);\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n\r\n    /**\r\n     * Substract two vectors.\r\n     * @param pSubData - Vector or scalar\r\n     */\r\n    public sub(pSubData: Vector | number): Vector {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        if (pSubData instanceof Vector) {\r\n            // Restrict on same length.\r\n            if (this.mData.length !== pSubData.data.length) {\r\n                throw new Exception('Vectors need to be the same length for calculation.', this);\r\n            }\r\n\r\n            // Add values.\r\n            for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n                lData.push(this.mData[lIndex] - pSubData.data[lIndex]);\r\n            }\r\n        } else {\r\n            // Substract scalar to each vector component.\r\n            for (const lItem of this.mData) {\r\n                lData.push(lItem - pSubData);\r\n            }\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n};\nvar defaultEncodeOptions = {\n    mode: 'specialChars',\n    level: 'all',\n    numeric: 'decimal'\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */\nfunction encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;\n    if (!text) {\n        return '';\n    }\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === 'hexadecimal';\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = '';\n        var _d = 0;\n        do {\n            if (_d !== _b.index) {\n                _c += text.substring(_d, _b.index);\n            }\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        } while ((_b = encodeRegExp.exec(text)));\n        if (_d !== text.length) {\n            _c += text.substring(_d);\n        }\n    }\n    else {\n        _c =\n            text;\n    }\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: 'body',\n    level: 'all'\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: 'all'\n};\n/** Decodes a single entity */\nfunction decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;\n    if (!entity) {\n        return '';\n    }\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    if (false\n        && decodeEntityLastChar_1 === '=') {\n        _b =\n            entity;\n    }\n    else if (false\n        && decodeEntityLastChar_1 !== ';') {\n        _b =\n            entity;\n    }\n    else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n            _b = decodeResultByReference_1;\n        }\n        else if (entity[0] === '&' && entity[1] === '#') {\n            var decodeSecondChar_1 = entity[2];\n            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'\n                ? parseInt(entity.substr(3), 16)\n                : parseInt(entity.substr(2));\n            _b =\n                decodeCode_1 >= 0x10ffff\n                    ? outOfBoundsChar\n                    : decodeCode_1 > 65535\n                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)\n                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */\nfunction decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;\n    if (!text) {\n        return '';\n    }\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === 'attribute';\n    var isStrict = scope === 'strict';\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = '';\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) {\n                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            }\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute\n                && decodeEntityLastChar_2 === '=') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else if (isStrict\n                && decodeEntityLastChar_2 !== ';') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) {\n                    decodeResult_1 = decodeResultByReference_2;\n                }\n                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'\n                        ? parseInt(replaceInput_1.substr(3), 16)\n                        : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 =\n                        decodeCode_2 >= 0x10ffff\n                            ? outOfBoundsChar\n                            : decodeCode_2 > 65535\n                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)\n                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while ((replaceMatch_1 = decodeRegExp.exec(text)));\n        if (replaceLastIndex_1 !== text.length) {\n            replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n    }\n    else {\n        replaceResult_1 =\n            text;\n    }\n    return replaceResult_1;\n}\nexports.decode = decode;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;","export default \"// ------------------------- Object Values ---------------------- //\\r\\n@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\\r\\n@group(0) @binding(1) var<storage, read> instancePositions: array<vec4<f32>>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- World Values ---------------------- //\\r\\n@group(1) @binding(0) var<uniform> viewProjectionMatrix: mat4x4<f32>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- User Inputs ------------------------ //\\r\\n@group(2) @binding(0) var cubetextureSampler: sampler;\\r\\n@group(2) @binding(1) var cubeTexture: texture_2d<f32>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// --------------------- Light calculations --------------------- //\\r\\nstruct AmbientLight {\\r\\n    color: vec4<f32>\\r\\n}\\r\\n@group(1) @binding(1) var<uniform> ambientLight: AmbientLight;\\r\\n\\r\\nstruct PointLight {\\r\\n    position: vec4<f32>,\\r\\n    color: vec4<f32>,\\r\\n    range: f32\\r\\n}\\r\\n@group(1) @binding(2) var<storage, read> pointLights: array<PointLight>;\\r\\n\\r\\n/**\\r\\n * Calculate point light output.\\r\\n */\\r\\nfn calculatePointLights(fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\\r\\n    // Count of point lights.\\r\\n    let pointLightCount: u32 = arrayLength(&pointLights);\\r\\n\\r\\n    var lightResult: vec4<f32> = vec4<f32>(0, 0, 0, 1);\\r\\n\\r\\n    for (var index: u32 = 0; index < pointLightCount; index++) {\\r\\n        var pointLight: PointLight = pointLights[index];\\r\\n\\r\\n        // Calculate light strength based on angle of incidence.\\r\\n        let lightDirection: vec4<f32> = normalize(pointLight.position - fragmentPosition);\\r\\n        let diffuse: f32 = max(dot(normal, lightDirection), 0.0);\\r\\n\\r\\n        lightResult += pointLight.color * diffuse;\\r\\n    }\\r\\n\\r\\n    return lightResult;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Apply lights to fragment color.\\r\\n */\\r\\nfn applyLight(colorIn: vec4<f32>, fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\\r\\n    var lightColor: vec4<f32> = vec4<f32>(0, 0, 0, 1);\\r\\n\\r\\n    lightColor += ambientLight.color;\\r\\n    lightColor += calculatePointLights(fragmentPosition, normal);\\r\\n\\r\\n    return lightColor * colorIn;\\r\\n}\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\nstruct VertexOut {\\r\\n    @builtin(position) position: vec4<f32>,\\r\\n    @location(0) uv: vec2<f32>,\\r\\n    @location(1) normal: vec4<f32>,\\r\\n    @location(2) fragmentPosition: vec4<f32>\\r\\n}\\r\\n\\r\\nstruct VertexIn {\\r\\n    @builtin(instance_index) instanceId : u32,\\r\\n    @location(0) position: vec4<f32>,\\r\\n    @location(1) uv: vec2<f32>,\\r\\n    @location(2) normal: vec4<f32>\\r\\n}\\r\\n\\r\\n@vertex\\r\\nfn vertex_main(vertex: VertexIn) -> VertexOut {\\r\\n    var instancePosition: vec4<f32> = instancePositions[vertex.instanceId];\\r\\n    var instancePositionMatrix: mat4x4<f32> = mat4x4<f32>(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, instancePosition.x * 5, instancePosition.y * 5, instancePosition.z * 5, 1);\\r\\n\\r\\n    var out: VertexOut;\\r\\n    out.position = viewProjectionMatrix * transformationMatrix * instancePositionMatrix * vertex.position;\\r\\n    out.uv = vertex.uv;\\r\\n    out.normal = vertex.normal;\\r\\n    out.fragmentPosition = transformationMatrix * instancePositionMatrix * vertex.position;\\r\\n\\r\\n    return out;\\r\\n}\\r\\n\\r\\nstruct FragmentIn {\\r\\n    @location(0) uv: vec2<f32>,\\r\\n    @location(1) normal: vec4<f32>,\\r\\n    @location(2) fragmentPosition: vec4<f32>\\r\\n}\\r\\n\\r\\n@fragment\\r\\nfn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\\r\\n    return applyLight(textureSample(cubeTexture, cubetextureSampler, fragment.uv), fragment.fragmentPosition, fragment.normal);\\r\\n}\";","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { log } from \"../utils/log.js\";\nvar WebSocketClient = /*#__PURE__*/function () {\n  /**\n   * @param {string} url\n   */\n  function WebSocketClient(url) {\n    _classCallCheck(this, WebSocketClient);\n    this.client = new WebSocket(url);\n    this.client.onerror = function (error) {\n      log.error(error);\n    };\n  }\n\n  /**\n   * @param {(...args: any[]) => void} f\n   */\n  _createClass(WebSocketClient, [{\n    key: \"onOpen\",\n    value: function onOpen(f) {\n      this.client.onopen = f;\n    }\n\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onClose\",\n    value: function onClose(f) {\n      this.client.onclose = f;\n    }\n\n    // call f with the message string as the first argument\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(f) {\n      this.client.onmessage = function (e) {\n        f(e.data);\n      };\n    }\n  }]);\n  return WebSocketClient;\n}();\nexport { WebSocketClient as default };","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* global __resourceQuery, __webpack_hash__ */\n/// <reference types=\"webpack/module\" />\nimport webpackHotLog from \"webpack/hot/log.js\";\nimport stripAnsi from \"./utils/stripAnsi.js\";\nimport parseURL from \"./utils/parseURL.js\";\nimport socket from \"./socket.js\";\nimport { formatProblem, createOverlay } from \"./overlay.js\";\nimport { log, logEnabledFeatures, setLogLevel } from \"./utils/log.js\";\nimport sendMessage from \"./utils/sendMessage.js\";\nimport reloadApp from \"./utils/reloadApp.js\";\nimport createSocketURL from \"./utils/createSocketURL.js\";\n\n/**\n * @typedef {Object} Options\n * @property {boolean} hot\n * @property {boolean} liveReload\n * @property {boolean} progress\n * @property {boolean | { warnings?: boolean, errors?: boolean, runtimeErrors?: boolean, trustedTypesPolicyName?: string }} overlay\n * @property {string} [logging]\n * @property {number} [reconnect]\n */\n\n/**\n * @typedef {Object} Status\n * @property {boolean} isUnloading\n * @property {string} currentHash\n * @property {string} [previousHash]\n */\n\n/**\n * @type {Status}\n */\nvar status = {\n  isUnloading: false,\n  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n  // eslint-disable-next-line camelcase\n  currentHash: typeof __webpack_hash__ !== \"undefined\" ? __webpack_hash__ : \"\"\n};\n\n/** @type {Options} */\nvar options = {\n  hot: false,\n  liveReload: false,\n  progress: false,\n  overlay: false\n};\nvar parsedResourceQuery = parseURL(__resourceQuery);\nvar enabledFeatures = {\n  \"Hot Module Replacement\": false,\n  \"Live Reloading\": false,\n  Progress: false,\n  Overlay: false\n};\nif (parsedResourceQuery.hot === \"true\") {\n  options.hot = true;\n  enabledFeatures[\"Hot Module Replacement\"] = true;\n}\nif (parsedResourceQuery[\"live-reload\"] === \"true\") {\n  options.liveReload = true;\n  enabledFeatures[\"Live Reloading\"] = true;\n}\nif (parsedResourceQuery.progress === \"true\") {\n  options.progress = true;\n  enabledFeatures.Progress = true;\n}\nif (parsedResourceQuery.overlay) {\n  try {\n    options.overlay = JSON.parse(parsedResourceQuery.overlay);\n  } catch (e) {\n    log.error(\"Error parsing overlay options from resource query:\", e);\n  }\n\n  // Fill in default \"true\" params for partially-specified objects.\n  if (typeof options.overlay === \"object\") {\n    options.overlay = _objectSpread({\n      errors: true,\n      warnings: true,\n      runtimeErrors: true\n    }, options.overlay);\n  }\n  enabledFeatures.Overlay = true;\n}\nif (parsedResourceQuery.logging) {\n  options.logging = parsedResourceQuery.logging;\n}\nif (typeof parsedResourceQuery.reconnect !== \"undefined\") {\n  options.reconnect = Number(parsedResourceQuery.reconnect);\n}\n\n/**\n * @param {string} level\n */\nfunction setAllLogLevel(level) {\n  // This is needed because the HMR logger operate separately from dev server logger\n  webpackHotLog.setLogLevel(level === \"verbose\" || level === \"log\" ? \"info\" : level);\n  setLogLevel(level);\n}\nif (options.logging) {\n  setAllLogLevel(options.logging);\n}\nlogEnabledFeatures(enabledFeatures);\nself.addEventListener(\"beforeunload\", function () {\n  status.isUnloading = true;\n});\nvar overlay = typeof window !== \"undefined\" ? createOverlay(typeof options.overlay === \"object\" ? {\n  trustedTypesPolicyName: options.overlay.trustedTypesPolicyName,\n  catchRuntimeError: options.overlay.runtimeErrors\n} : {\n  trustedTypesPolicyName: false,\n  catchRuntimeError: options.overlay\n}) : {\n  send: function send() {}\n};\nvar onSocketMessage = {\n  hot: function hot() {\n    if (parsedResourceQuery.hot === \"false\") {\n      return;\n    }\n    options.hot = true;\n  },\n  liveReload: function liveReload() {\n    if (parsedResourceQuery[\"live-reload\"] === \"false\") {\n      return;\n    }\n    options.liveReload = true;\n  },\n  invalid: function invalid() {\n    log.info(\"App updated. Recompiling...\");\n\n    // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"Invalid\");\n  },\n  /**\n   * @param {string} hash\n   */\n  hash: function hash(_hash) {\n    status.previousHash = status.currentHash;\n    status.currentHash = _hash;\n  },\n  logging: setAllLogLevel,\n  /**\n   * @param {boolean} value\n   */\n  overlay: function overlay(value) {\n    if (typeof document === \"undefined\") {\n      return;\n    }\n    options.overlay = value;\n  },\n  /**\n   * @param {number} value\n   */\n  reconnect: function reconnect(value) {\n    if (parsedResourceQuery.reconnect === \"false\") {\n      return;\n    }\n    options.reconnect = value;\n  },\n  /**\n   * @param {boolean} value\n   */\n  progress: function progress(value) {\n    options.progress = value;\n  },\n  /**\n   * @param {{ pluginName?: string, percent: number, msg: string }} data\n   */\n  \"progress-update\": function progressUpdate(data) {\n    if (options.progress) {\n      log.info(\"\".concat(data.pluginName ? \"[\".concat(data.pluginName, \"] \") : \"\").concat(data.percent, \"% - \").concat(data.msg, \".\"));\n    }\n    sendMessage(\"Progress\", data);\n  },\n  \"still-ok\": function stillOk() {\n    log.info(\"Nothing changed.\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"StillOk\");\n  },\n  ok: function ok() {\n    sendMessage(\"Ok\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    reloadApp(options, status);\n  },\n  // TODO: remove in v5 in favor of 'static-changed'\n  /**\n   * @param {string} file\n   */\n  \"content-changed\": function contentChanged(file) {\n    log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {string} file\n   */\n  \"static-changed\": function staticChanged(file) {\n    log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {Error[]} warnings\n   * @param {any} params\n   */\n  warnings: function warnings(_warnings, params) {\n    log.warn(\"Warnings while compiling.\");\n    var printableWarnings = _warnings.map(function (error) {\n      var _formatProblem = formatProblem(\"warning\", error),\n        header = _formatProblem.header,\n        body = _formatProblem.body;\n      return \"\".concat(header, \"\\n\").concat(stripAnsi(body));\n    });\n    sendMessage(\"Warnings\", printableWarnings);\n    for (var i = 0; i < printableWarnings.length; i++) {\n      log.warn(printableWarnings[i]);\n    }\n    var needShowOverlayForWarnings = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.warnings;\n    if (needShowOverlayForWarnings) {\n      overlay.send({\n        type: \"BUILD_ERROR\",\n        level: \"warning\",\n        messages: _warnings\n      });\n    }\n    if (params && params.preventReloading) {\n      return;\n    }\n    reloadApp(options, status);\n  },\n  /**\n   * @param {Error[]} errors\n   */\n  errors: function errors(_errors) {\n    log.error(\"Errors while compiling. Reload prevented.\");\n    var printableErrors = _errors.map(function (error) {\n      var _formatProblem2 = formatProblem(\"error\", error),\n        header = _formatProblem2.header,\n        body = _formatProblem2.body;\n      return \"\".concat(header, \"\\n\").concat(stripAnsi(body));\n    });\n    sendMessage(\"Errors\", printableErrors);\n    for (var i = 0; i < printableErrors.length; i++) {\n      log.error(printableErrors[i]);\n    }\n    var needShowOverlayForErrors = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.errors;\n    if (needShowOverlayForErrors) {\n      overlay.send({\n        type: \"BUILD_ERROR\",\n        level: \"error\",\n        messages: _errors\n      });\n    }\n  },\n  /**\n   * @param {Error} error\n   */\n  error: function error(_error) {\n    log.error(_error);\n  },\n  close: function close() {\n    log.info(\"Disconnected!\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"Close\");\n  }\n};\nvar socketURL = createSocketURL(parsedResourceQuery);\nsocket(socketURL, onSocketMessage, options.reconnect);","/******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./client-src/modules/logger/SyncBailHookFake.js\":\n/*!*******************************************************!*\\\n  !*** ./client-src/modules/logger/SyncBailHookFake.js ***!\n  \\*******************************************************/\n/***/ (function(module) {\n\n\n\n/**\n * Client stub for tapable SyncBailHook\n */\nmodule.exports = function clientTapableSyncBailHook() {\n  return {\n    call: function call() {}\n  };\n};\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/Logger.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/Logger.js ***!\n  \\****************************************************/\n/***/ (function(__unused_webpack_module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar LogType = Object.freeze({\n  error: /** @type {\"error\"} */\"error\",\n  // message, c style arguments\n  warn: /** @type {\"warn\"} */\"warn\",\n  // message, c style arguments\n  info: /** @type {\"info\"} */\"info\",\n  // message, c style arguments\n  log: /** @type {\"log\"} */\"log\",\n  // message, c style arguments\n  debug: /** @type {\"debug\"} */\"debug\",\n  // message, c style arguments\n\n  trace: /** @type {\"trace\"} */\"trace\",\n  // no arguments\n\n  group: /** @type {\"group\"} */\"group\",\n  // [label]\n  groupCollapsed: /** @type {\"groupCollapsed\"} */\"groupCollapsed\",\n  // [label]\n  groupEnd: /** @type {\"groupEnd\"} */\"groupEnd\",\n  // [label]\n\n  profile: /** @type {\"profile\"} */\"profile\",\n  // [profileName]\n  profileEnd: /** @type {\"profileEnd\"} */\"profileEnd\",\n  // [profileName]\n\n  time: /** @type {\"time\"} */\"time\",\n  // name, time as [seconds, nanoseconds]\n\n  clear: /** @type {\"clear\"} */\"clear\",\n  // no arguments\n  status: /** @type {\"status\"} */\"status\" // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nvar LOG_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger raw log method\");\nvar TIMERS_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger times\");\nvar TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger aggregated times\");\nvar WebpackLogger = /*#__PURE__*/function () {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n   */\n  function WebpackLogger(log, getChildLogger) {\n    _classCallCheck(this, WebpackLogger);\n    this[LOG_SYMBOL] = log;\n    this.getChildLogger = getChildLogger;\n  }\n  _createClass(WebpackLogger, [{\n    key: \"error\",\n    value: function error() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this[LOG_SYMBOL](LogType.warn, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this[LOG_SYMBOL](LogType.info, args);\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this[LOG_SYMBOL](LogType.log, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this[LOG_SYMBOL](LogType.debug, args);\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(assertion) {\n      if (!assertion) {\n        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          args[_key6 - 1] = arguments[_key6];\n        }\n        this[LOG_SYMBOL](LogType.error, args);\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this[LOG_SYMBOL](LogType.clear);\n    }\n  }, {\n    key: \"status\",\n    value: function status() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this[LOG_SYMBOL](LogType.status, args);\n    }\n  }, {\n    key: \"group\",\n    value: function group() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this[LOG_SYMBOL](LogType.group, args);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this[LOG_SYMBOL](LogType.groupCollapsed, args);\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this[LOG_SYMBOL](LogType.groupEnd, args);\n    }\n  }, {\n    key: \"profile\",\n    value: function profile(label) {\n      this[LOG_SYMBOL](LogType.profile, [label]);\n    }\n  }, {\n    key: \"profileEnd\",\n    value: function profileEnd(label) {\n      this[LOG_SYMBOL](LogType.profileEnd, [label]);\n    }\n  }, {\n    key: \"time\",\n    value: function time(label) {\n      this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n      this[TIMERS_SYMBOL].set(label, process.hrtime());\n    }\n  }, {\n    key: \"timeLog\",\n    value: function timeLog(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeLog()\"));\n      }\n      var time = process.hrtime(prev);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeEnd()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeAggregate\",\n    value: function timeAggregate(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeAggregate()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();\n      var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n      if (current !== undefined) {\n        if (time[1] + current[1] > 1e9) {\n          time[0] += current[0] + 1;\n          time[1] = time[1] - 1e9 + current[1];\n        } else {\n          time[0] += current[0];\n          time[1] += current[1];\n        }\n      }\n      this[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n    }\n  }, {\n    key: \"timeAggregateEnd\",\n    value: function timeAggregateEnd(label) {\n      if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n      var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n      if (time === undefined) return;\n      this[TIMERS_AGGREGATES_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }]);\n  return WebpackLogger;\n}();\nexports.Logger = WebpackLogger;\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/createConsoleLogger.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!\n  \\*****************************************************************/\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar _require = __webpack_require__(/*! ./Logger */ \"./node_modules/webpack/lib/logging/Logger.js\"),\n  LogType = _require.LogType;\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n/** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n\n/** @typedef {function(string): boolean} FilterFunction */\n\n/**\n * @typedef {Object} LoggerConsole\n * @property {function(): void} clear\n * @property {function(): void} trace\n * @property {(...args: any[]) => void} info\n * @property {(...args: any[]) => void} log\n * @property {(...args: any[]) => void} warn\n * @property {(...args: any[]) => void} error\n * @property {(...args: any[]) => void=} debug\n * @property {(...args: any[]) => void=} group\n * @property {(...args: any[]) => void=} groupCollapsed\n * @property {(...args: any[]) => void=} groupEnd\n * @property {(...args: any[]) => void=} status\n * @property {(...args: any[]) => void=} profile\n * @property {(...args: any[]) => void=} profileEnd\n * @property {(...args: any[]) => void=} logTime\n */\n\n/**\n * @typedef {Object} LoggerOptions\n * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} level loglevel\n * @property {FilterTypes|boolean} debug filter for debug logging\n * @property {LoggerConsole} console the console to log to\n */\n\n/**\n * @param {FilterItemTypes} item an input item\n * @returns {FilterFunction} filter function\n */\nvar filterToFunction = function filterToFunction(item) {\n  if (typeof item === \"string\") {\n    var regExp = new RegExp(\"[\\\\\\\\/]\".concat(item.replace(\n    // eslint-disable-next-line no-useless-escape\n    /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\"), \"([\\\\\\\\/]|$|!|\\\\?)\"));\n    return function (ident) {\n      return regExp.test(ident);\n    };\n  }\n  if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n    return function (ident) {\n      return item.test(ident);\n    };\n  }\n  if (typeof item === \"function\") {\n    return item;\n  }\n  if (typeof item === \"boolean\") {\n    return function () {\n      return item;\n    };\n  }\n};\n\n/**\n * @enum {number}\n */\nvar LogLevel = {\n  none: 6,\n  false: 6,\n  error: 5,\n  warn: 4,\n  info: 3,\n  log: 2,\n  true: 2,\n  verbose: 1\n};\n\n/**\n * @param {LoggerOptions} options options object\n * @returns {function(string, LogTypeEnum, any[]): void} logging function\n */\nmodule.exports = function (_ref) {\n  var _ref$level = _ref.level,\n    level = _ref$level === void 0 ? \"info\" : _ref$level,\n    _ref$debug = _ref.debug,\n    debug = _ref$debug === void 0 ? false : _ref$debug,\n    console = _ref.console;\n  var debugFilters = typeof debug === \"boolean\" ? [function () {\n    return debug;\n  }] : /** @type {FilterItemTypes[]} */[].concat(debug).map(filterToFunction);\n  /** @type {number} */\n  var loglevel = LogLevel[\"\".concat(level)] || 0;\n\n  /**\n   * @param {string} name name of the logger\n   * @param {LogTypeEnum} type type of the log entry\n   * @param {any[]} args arguments of the log entry\n   * @returns {void}\n   */\n  var logger = function logger(name, type, args) {\n    var labeledArgs = function labeledArgs() {\n      if (Array.isArray(args)) {\n        if (args.length > 0 && typeof args[0] === \"string\") {\n          return [\"[\".concat(name, \"] \").concat(args[0])].concat(_toConsumableArray(args.slice(1)));\n        } else {\n          return [\"[\".concat(name, \"]\")].concat(_toConsumableArray(args));\n        }\n      } else {\n        return [];\n      }\n    };\n    var debug = debugFilters.some(function (f) {\n      return f(name);\n    });\n    switch (type) {\n      case LogType.debug:\n        if (!debug) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.debug === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.debug.apply(console, _toConsumableArray(labeledArgs()));\n        } else {\n          console.log.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.log:\n        if (!debug && loglevel > LogLevel.log) return;\n        console.log.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.info:\n        if (!debug && loglevel > LogLevel.info) return;\n        console.info.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.warn:\n        if (!debug && loglevel > LogLevel.warn) return;\n        console.warn.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.error:\n        if (!debug && loglevel > LogLevel.error) return;\n        console.error.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.trace:\n        if (!debug) return;\n        console.trace();\n        break;\n      case LogType.groupCollapsed:\n        if (!debug && loglevel > LogLevel.log) return;\n        if (!debug && loglevel > LogLevel.verbose) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.groupCollapsed === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));\n          } else {\n            console.log.apply(console, _toConsumableArray(labeledArgs()));\n          }\n          break;\n        }\n      // falls through\n      case LogType.group:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.group === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.group.apply(console, _toConsumableArray(labeledArgs()));\n        } else {\n          console.log.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.groupEnd:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.groupEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.groupEnd();\n        }\n        break;\n      case LogType.time:\n        {\n          if (!debug && loglevel > LogLevel.log) return;\n          var ms = args[1] * 1000 + args[2] / 1000000;\n          var msg = \"[\".concat(name, \"] \").concat(args[0], \": \").concat(ms, \" ms\");\n          if (typeof console.logTime === \"function\") {\n            console.logTime(msg);\n          } else {\n            console.log(msg);\n          }\n          break;\n        }\n      case LogType.profile:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profile === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profile.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.profileEnd:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profileEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.clear:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.clear === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.clear();\n        }\n        break;\n      case LogType.status:\n        if (!debug && loglevel > LogLevel.info) return;\n        if (typeof console.status === \"function\") {\n          if (args.length === 0) {\n            console.status();\n          } else {\n            console.status.apply(console, _toConsumableArray(labeledArgs()));\n          }\n        } else {\n          if (args.length !== 0) {\n            console.info.apply(console, _toConsumableArray(labeledArgs()));\n          }\n        }\n        break;\n      default:\n        throw new Error(\"Unexpected LogType \".concat(type));\n    }\n  };\n  return logger;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/runtime.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/runtime.js ***!\n  \\*****************************************************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar SyncBailHook = __webpack_require__(/*! tapable/lib/SyncBailHook */ \"./client-src/modules/logger/SyncBailHookFake.js\");\nvar _require = __webpack_require__(/*! ./Logger */ \"./node_modules/webpack/lib/logging/Logger.js\"),\n  Logger = _require.Logger;\nvar createConsoleLogger = __webpack_require__(/*! ./createConsoleLogger */ \"./node_modules/webpack/lib/logging/createConsoleLogger.js\");\n\n/** @type {createConsoleLogger.LoggerOptions} */\nvar currentDefaultLoggerOptions = {\n  level: \"info\",\n  debug: false,\n  console: console\n};\nvar currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n\n/**\n * @param {string} name name of the logger\n * @returns {Logger} a logger\n */\nexports.getLogger = function (name) {\n  return new Logger(function (type, args) {\n    if (exports.hooks.log.call(name, type, args) === undefined) {\n      currentDefaultLogger(name, type, args);\n    }\n  }, function (childName) {\n    return exports.getLogger(\"\".concat(name, \"/\").concat(childName));\n  });\n};\n\n/**\n * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options\n * @returns {void}\n */\nexports.configureDefaultLogger = function (options) {\n  _extends(currentDefaultLoggerOptions, options);\n  currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n};\nexports.hooks = {\n  log: new SyncBailHook([\"origin\", \"type\", \"args\"])\n};\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t!function() {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = function(exports) {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n!function() {\n/*!********************************************!*\\\n  !*** ./client-src/modules/logger/index.js ***!\n  \\********************************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default export from named module */ webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__; }\n/* harmony export */ });\n/* harmony import */ var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/lib/logging/runtime.js */ \"./node_modules/webpack/lib/logging/runtime.js\");\n\n}();\nvar __webpack_export_target__ = exports;\nfor(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];\nif(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \"__esModule\", { value: true });\n/******/ })()\n;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n\nimport ansiHTML from \"ansi-html-community\";\nimport { encode } from \"html-entities\";\nimport { listenToRuntimeError, parseErrorToStacks } from \"./overlay/runtime-error.js\";\nimport createOverlayMachine from \"./overlay/state-machine.js\";\nimport { containerStyle, dismissButtonStyle, headerStyle, iframeStyle, msgStyles, msgTextStyle, msgTypeStyle } from \"./overlay/styles.js\";\nvar colors = {\n  reset: [\"transparent\", \"transparent\"],\n  black: \"181818\",\n  red: \"E36049\",\n  green: \"B3CB74\",\n  yellow: \"FFD080\",\n  blue: \"7CAFC2\",\n  magenta: \"7FACCA\",\n  cyan: \"C3C2EF\",\n  lightgrey: \"EBE7E3\",\n  darkgrey: \"6D7891\"\n};\nansiHTML.setColors(colors);\n\n/**\n * @param {string} type\n * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string; stack?: string[] }} item\n * @returns {{ header: string, body: string }}\n */\nfunction formatProblem(type, item) {\n  var header = type === \"warning\" ? \"WARNING\" : \"ERROR\";\n  var body = \"\";\n  if (typeof item === \"string\") {\n    body += item;\n  } else {\n    var file = item.file || \"\";\n    // eslint-disable-next-line no-nested-ternary\n    var moduleName = item.moduleName ? item.moduleName.indexOf(\"!\") !== -1 ? \"\".concat(item.moduleName.replace(/^(\\s|\\S)*!/, \"\"), \" (\").concat(item.moduleName, \")\") : \"\".concat(item.moduleName) : \"\";\n    var loc = item.loc;\n    header += \"\".concat(moduleName || file ? \" in \".concat(moduleName ? \"\".concat(moduleName).concat(file ? \" (\".concat(file, \")\") : \"\") : file).concat(loc ? \" \".concat(loc) : \"\") : \"\");\n    body += item.message || \"\";\n  }\n  if (Array.isArray(item.stack)) {\n    item.stack.forEach(function (stack) {\n      if (typeof stack === \"string\") {\n        body += \"\\r\\n\".concat(stack);\n      }\n    });\n  }\n  return {\n    header: header,\n    body: body\n  };\n}\n\n/**\n * @typedef {Object} CreateOverlayOptions\n * @property {string | null} trustedTypesPolicyName\n * @property {boolean} [catchRuntimeError]\n */\n\n/**\n *\n * @param {CreateOverlayOptions} options\n */\nvar createOverlay = function createOverlay(options) {\n  /** @type {HTMLIFrameElement | null | undefined} */\n  var iframeContainerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var containerElement;\n  /** @type {Array<(element: HTMLDivElement) => void>} */\n  var onLoadQueue = [];\n  /** @type {TrustedTypePolicy | undefined} */\n  var overlayTrustedTypesPolicy;\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {CSSStyleDeclaration} style\n   */\n  function applyStyle(element, style) {\n    Object.keys(style).forEach(function (prop) {\n      element.style[prop] = style[prop];\n    });\n  }\n\n  /**\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function createContainer(trustedTypesPolicyName) {\n    // Enable Trusted Types if they are available in the current browser.\n    if (window.trustedTypes) {\n      overlayTrustedTypesPolicy = window.trustedTypes.createPolicy(trustedTypesPolicyName || \"webpack-dev-server#overlay\", {\n        createHTML: function createHTML(value) {\n          return value;\n        }\n      });\n    }\n    iframeContainerElement = document.createElement(\"iframe\");\n    iframeContainerElement.id = \"webpack-dev-server-client-overlay\";\n    iframeContainerElement.src = \"about:blank\";\n    applyStyle(iframeContainerElement, iframeStyle);\n    iframeContainerElement.onload = function () {\n      var contentElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      containerElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      contentElement.id = \"webpack-dev-server-client-overlay-div\";\n      applyStyle(contentElement, containerStyle);\n      var headerElement = document.createElement(\"div\");\n      headerElement.innerText = \"Compiled with problems:\";\n      applyStyle(headerElement, headerStyle);\n      var closeButtonElement = document.createElement(\"button\");\n      applyStyle(closeButtonElement, dismissButtonStyle);\n      closeButtonElement.innerText = \"×\";\n      closeButtonElement.ariaLabel = \"Dismiss\";\n      closeButtonElement.addEventListener(\"click\", function () {\n        // eslint-disable-next-line no-use-before-define\n        overlayService.send({\n          type: \"DISMISS\"\n        });\n      });\n      contentElement.appendChild(headerElement);\n      contentElement.appendChild(closeButtonElement);\n      contentElement.appendChild(containerElement);\n\n      /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.body.appendChild(contentElement);\n      onLoadQueue.forEach(function (onLoad) {\n        onLoad( /** @type {HTMLDivElement} */contentElement);\n      });\n      onLoadQueue = [];\n\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.onload = null;\n    };\n    document.body.appendChild(iframeContainerElement);\n  }\n\n  /**\n   * @param {(element: HTMLDivElement) => void} callback\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function ensureOverlayExists(callback, trustedTypesPolicyName) {\n    if (containerElement) {\n      containerElement.innerHTML = \"\";\n      // Everything is ready, call the callback right away.\n      callback(containerElement);\n      return;\n    }\n    onLoadQueue.push(callback);\n    if (iframeContainerElement) {\n      return;\n    }\n    createContainer(trustedTypesPolicyName);\n  }\n\n  // Successful compilation.\n  function hide() {\n    if (!iframeContainerElement) {\n      return;\n    }\n\n    // Clean up and reset internal state.\n    document.body.removeChild(iframeContainerElement);\n    iframeContainerElement = null;\n    containerElement = null;\n  }\n\n  // Compilation with errors (e.g. syntax error or missing modules).\n  /**\n   * @param {string} type\n   * @param {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function show(type, messages, trustedTypesPolicyName) {\n    ensureOverlayExists(function () {\n      messages.forEach(function (message) {\n        var entryElement = document.createElement(\"div\");\n        var msgStyle = type === \"warning\" ? msgStyles.warning : msgStyles.error;\n        applyStyle(entryElement, _objectSpread(_objectSpread({}, msgStyle), {}, {\n          padding: \"1rem 1rem 1.5rem 1rem\"\n        }));\n        var typeElement = document.createElement(\"div\");\n        var _formatProblem = formatProblem(type, message),\n          header = _formatProblem.header,\n          body = _formatProblem.body;\n        typeElement.innerText = header;\n        applyStyle(typeElement, msgTypeStyle);\n        if (message.moduleIdentifier) {\n          applyStyle(typeElement, {\n            cursor: \"pointer\"\n          });\n          // element.dataset not supported in IE\n          typeElement.setAttribute(\"data-can-open\", true);\n          typeElement.addEventListener(\"click\", function () {\n            fetch(\"/webpack-dev-server/open-editor?fileName=\".concat(message.moduleIdentifier));\n          });\n        }\n\n        // Make it look similar to our terminal.\n        var text = ansiHTML(encode(body));\n        var messageTextNode = document.createElement(\"div\");\n        applyStyle(messageTextNode, msgTextStyle);\n        messageTextNode.innerHTML = overlayTrustedTypesPolicy ? overlayTrustedTypesPolicy.createHTML(text) : text;\n        entryElement.appendChild(typeElement);\n        entryElement.appendChild(messageTextNode);\n\n        /** @type {HTMLDivElement} */\n        containerElement.appendChild(entryElement);\n      });\n    }, trustedTypesPolicyName);\n  }\n  var overlayService = createOverlayMachine({\n    showOverlay: function showOverlay(_ref) {\n      var _ref$level = _ref.level,\n        level = _ref$level === void 0 ? \"error\" : _ref$level,\n        messages = _ref.messages;\n      return show(level, messages, options.trustedTypesPolicyName);\n    },\n    hideOverlay: hide\n  });\n  if (options.catchRuntimeError) {\n    listenToRuntimeError(function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      var errorObject = error instanceof Error ? error : new Error(error || message);\n      overlayService.send({\n        type: \"RUNTIME_ERROR\",\n        messages: [{\n          message: errorObject.message,\n          stack: parseErrorToStacks(errorObject)\n        }]\n      });\n    });\n  }\n  return overlayService;\n};\nexport { formatProblem, createOverlay };","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * @typedef {Object} StateDefinitions\n * @property {{[event: string]: { target: string; actions?: Array<string> }}} [on]\n */\n\n/**\n * @typedef {Object} Options\n * @property {{[state: string]: StateDefinitions}} states\n * @property {object} context;\n * @property {string} initial\n */\n\n/**\n * @typedef {Object} Implementation\n * @property {{[actionName: string]: (ctx: object, event: any) => object}} actions\n */\n\n/**\n * A simplified `createMachine` from `@xstate/fsm` with the following differences:\n *\n *  - the returned machine is technically a \"service\". No `interpret(machine).start()` is needed.\n *  - the state definition only support `on` and target must be declared with { target: 'nextState', actions: [] } explicitly.\n *  - event passed to `send` must be an object with `type` property.\n *  - actions implementation will be [assign action](https://xstate.js.org/docs/guides/context.html#assign-action) if you return any value.\n *  Do not return anything if you just want to invoke side effect.\n *\n * The goal of this custom function is to avoid installing the entire `'xstate/fsm'` package, while enabling modeling using\n * state machine. You can copy the first parameter into the editor at https://stately.ai/viz to visualize the state machine.\n *\n * @param {Options} options\n * @param {Implementation} implementation\n */\nfunction createMachine(_ref, _ref2) {\n  var states = _ref.states,\n    context = _ref.context,\n    initial = _ref.initial;\n  var actions = _ref2.actions;\n  var currentState = initial;\n  var currentContext = context;\n  return {\n    send: function send(event) {\n      var currentStateOn = states[currentState].on;\n      var transitionConfig = currentStateOn && currentStateOn[event.type];\n      if (transitionConfig) {\n        currentState = transitionConfig.target;\n        if (transitionConfig.actions) {\n          transitionConfig.actions.forEach(function (actName) {\n            var actionImpl = actions[actName];\n            var nextContextValue = actionImpl && actionImpl(currentContext, event);\n            if (nextContextValue) {\n              currentContext = _objectSpread(_objectSpread({}, currentContext), nextContextValue);\n            }\n          });\n        }\n      }\n    }\n  };\n}\nexport default createMachine;","/**\n *\n * @param {Error} error\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  }\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    });\n  }\n}\n\n/**\n * @callback ErrorCallback\n * @param {ErrorEvent} error\n * @returns {void}\n */\n\n/**\n * @param {ErrorCallback} callback\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  };\n}\nexport { listenToRuntimeError, parseErrorToStacks };","import createMachine from \"./fsm.js\";\n\n/**\n * @typedef {Object} ShowOverlayData\n * @property {'warning' | 'error'} level\n * @property {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n */\n\n/**\n * @typedef {Object} CreateOverlayMachineOptions\n * @property {(data: ShowOverlayData) => void} showOverlay\n * @property {() => void} hideOverlay\n */\n\n/**\n * @param {CreateOverlayMachineOptions} options\n */\nvar createOverlayMachine = function createOverlayMachine(options) {\n  var hideOverlay = options.hideOverlay,\n    showOverlay = options.showOverlay;\n  var overlayMachine = createMachine({\n    initial: \"hidden\",\n    context: {\n      level: \"error\",\n      messages: []\n    },\n    states: {\n      hidden: {\n        on: {\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayBuildError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayRuntimeError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      dismissMessages: function dismissMessages() {\n        return {\n          messages: [],\n          level: \"error\"\n        };\n      },\n      appendMessages: function appendMessages(context, event) {\n        return {\n          messages: context.messages.concat(event.messages),\n          level: event.level || context.level\n        };\n      },\n      setMessages: function setMessages(context, event) {\n        return {\n          messages: event.messages,\n          level: event.level || context.level\n        };\n      },\n      hideOverlay: hideOverlay,\n      showOverlay: showOverlay\n    }\n  });\n  return overlayMachine;\n};\nexport default createOverlayMachine;","// styles are inspired by `react-error-overlay`\n\nvar msgStyles = {\n  error: {\n    backgroundColor: \"rgba(206, 17, 38, 0.1)\",\n    color: \"#fccfcf\"\n  },\n  warning: {\n    backgroundColor: \"rgba(251, 245, 180, 0.1)\",\n    color: \"#fbf5b4\"\n  }\n};\nvar iframeStyle = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  border: \"none\",\n  \"z-index\": 9999999999\n};\nvar containerStyle = {\n  position: \"fixed\",\n  boxSizing: \"border-box\",\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  fontSize: \"large\",\n  padding: \"2rem 2rem 4rem 2rem\",\n  lineHeight: \"1.2\",\n  whiteSpace: \"pre-wrap\",\n  overflow: \"auto\",\n  backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n  color: \"white\"\n};\nvar headerStyle = {\n  color: \"#e83b46\",\n  fontSize: \"2em\",\n  whiteSpace: \"pre-wrap\",\n  fontFamily: \"sans-serif\",\n  margin: \"0 2rem 2rem 0\",\n  flex: \"0 0 auto\",\n  maxHeight: \"50%\",\n  overflow: \"auto\"\n};\nvar dismissButtonStyle = {\n  color: \"#ffffff\",\n  lineHeight: \"1rem\",\n  fontSize: \"1.5rem\",\n  padding: \"1rem\",\n  cursor: \"pointer\",\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  backgroundColor: \"transparent\",\n  border: \"none\"\n};\nvar msgTypeStyle = {\n  color: \"#e83b46\",\n  fontSize: \"1.2em\",\n  marginBottom: \"1rem\",\n  fontFamily: \"sans-serif\"\n};\nvar msgTextStyle = {\n  lineHeight: \"1.5\",\n  fontSize: \"1rem\",\n  fontFamily: \"Menlo, Consolas, monospace\"\n};\nexport { msgStyles, iframeStyle, containerStyle, headerStyle, dismissButtonStyle, msgTypeStyle, msgTextStyle };","/* global __webpack_dev_server_client__ */\n\nimport WebSocketClient from \"./clients/WebSocketClient.js\";\nimport { log } from \"./utils/log.js\";\n\n// this WebsocketClient is here as a default fallback, in case the client is not injected\n/* eslint-disable camelcase */\nvar Client =\n// eslint-disable-next-line no-nested-ternary\ntypeof __webpack_dev_server_client__ !== \"undefined\" ? typeof __webpack_dev_server_client__.default !== \"undefined\" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n/* eslint-enable camelcase */\n\nvar retries = 0;\nvar maxRetries = 10;\n\n// Initialized client is exported so external consumers can utilize the same instance\n// It is mutable to enforce singleton\n// eslint-disable-next-line import/no-mutable-exports\nexport var client = null;\n\n/**\n * @param {string} url\n * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n * @param {number} [reconnect]\n */\nvar socket = function initSocket(url, handlers, reconnect) {\n  client = new Client(url);\n  client.onOpen(function () {\n    retries = 0;\n    if (typeof reconnect !== \"undefined\") {\n      maxRetries = reconnect;\n    }\n  });\n  client.onClose(function () {\n    if (retries === 0) {\n      handlers.close();\n    }\n\n    // Try to reconnect.\n    client = null;\n\n    // After 10 retries stop trying, to prevent logspam.\n    if (retries < maxRetries) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      log.info(\"Trying to reconnect...\");\n      setTimeout(function () {\n        socket(url, handlers, reconnect);\n      }, retryInMs);\n    }\n  });\n  client.onMessage(\n  /**\n   * @param {any} data\n   */\n  function (data) {\n    var message = JSON.parse(data);\n    if (handlers[message.type]) {\n      handlers[message.type](message.data, message.params);\n    }\n  });\n};\nexport default socket;","/**\n * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL\n * @returns {string}\n */\nfunction format(objURL) {\n  var protocol = objURL.protocol || \"\";\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  var auth = objURL.auth || \"\";\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, \":\");\n    auth += \"@\";\n  }\n  var host = \"\";\n  if (objURL.hostname) {\n    host = auth + (objURL.hostname.indexOf(\":\") === -1 ? objURL.hostname : \"[\".concat(objURL.hostname, \"]\"));\n    if (objURL.port) {\n      host += \":\".concat(objURL.port);\n    }\n  }\n  var pathname = objURL.pathname || \"\";\n  if (objURL.slashes) {\n    host = \"//\".concat(host || \"\");\n    if (pathname && pathname.charAt(0) !== \"/\") {\n      pathname = \"/\".concat(pathname);\n    }\n  } else if (!host) {\n    host = \"\";\n  }\n  var search = objURL.search || \"\";\n  if (search && search.charAt(0) !== \"?\") {\n    search = \"?\".concat(search);\n  }\n  var hash = objURL.hash || \"\";\n  if (hash && hash.charAt(0) !== \"#\") {\n    hash = \"#\".concat(hash);\n  }\n  pathname = pathname.replace(/[?#]/g,\n  /**\n   * @param {string} match\n   * @returns {string}\n   */\n  function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace(\"#\", \"%23\");\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}\n\n/**\n * @param {URL & { fromCurrentScript?: boolean }} parsedURL\n * @returns {string}\n */\nfunction createSocketURL(parsedURL) {\n  var hostname = parsedURL.hostname;\n\n  // Node.js module parses it as `::`\n  // `new URL(urlString, [baseURLString])` parses it as '[::]'\n  var isInAddrAny = hostname === \"0.0.0.0\" || hostname === \"::\" || hostname === \"[::]\";\n\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf(\"http\") === 0) {\n    hostname = self.location.hostname;\n  }\n  var socketURLProtocol = parsedURL.protocol || self.location.protocol;\n\n  // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.\n  if (socketURLProtocol === \"auto:\" || hostname && isInAddrAny && self.location.protocol === \"https:\") {\n    socketURLProtocol = self.location.protocol;\n  }\n  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, \"ws\");\n  var socketURLAuth = \"\";\n\n  // `new URL(urlString, [baseURLstring])` doesn't have `auth` property\n  // Parse authentication credentials in case we need them\n  if (parsedURL.username) {\n    socketURLAuth = parsedURL.username;\n\n    // Since HTTP basic authentication does not allow empty username,\n    // we only include password if the username is not empty.\n    if (parsedURL.password) {\n      // Result: <username>:<password>\n      socketURLAuth = socketURLAuth.concat(\":\", parsedURL.password);\n    }\n  }\n\n  // In case the host is a raw IPv6 address, it can be enclosed in\n  // the brackets as the brackets are needed in the final URL string.\n  // Need to remove those as url.format blindly adds its own set of brackets\n  // if the host string contains colons. That would lead to non-working\n  // double brackets (e.g. [[::]]) host\n  //\n  // All of these web socket url params are optionally passed in through resourceQuery,\n  // so we need to fall back to the default if they are not provided\n  var socketURLHostname = (hostname || self.location.hostname || \"localhost\").replace(/^\\[(.*)\\]$/, \"$1\");\n  var socketURLPort = parsedURL.port;\n  if (!socketURLPort || socketURLPort === \"0\") {\n    socketURLPort = self.location.port;\n  }\n\n  // If path is provided it'll be passed in via the resourceQuery as a\n  // query param so it has to be parsed out of the querystring in order for the\n  // client to open the socket to the correct location.\n  var socketURLPathname = \"/ws\";\n  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {\n    socketURLPathname = parsedURL.pathname;\n  }\n  return format({\n    protocol: socketURLProtocol,\n    auth: socketURLAuth,\n    hostname: socketURLHostname,\n    port: socketURLPort,\n    pathname: socketURLPathname,\n    slashes: true\n  });\n}\nexport default createSocketURL;","/**\n * @returns {string}\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to find the current script,\n  // but is not supported in all browsers.\n  if (document.currentScript) {\n    return document.currentScript.getAttribute(\"src\");\n  }\n\n  // Fallback to getting all scripts running in the document.\n  var scriptElements = document.scripts || [];\n  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {\n    return element.getAttribute(\"src\");\n  });\n  if (scriptElementsWithSrc.length > 0) {\n    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];\n    return currentScript.getAttribute(\"src\");\n  }\n\n  // Fail as there was no script to use.\n  throw new Error(\"[webpack-dev-server] Failed to get current script source.\");\n}\nexport default getCurrentScriptSource;","import logger from \"../modules/logger/index.js\";\nvar name = \"webpack-dev-server\";\n// default level is set on the client side, so it does not need\n// to be set by the CLI or API\nvar defaultLevel = \"info\";\n\n// options new options, merge with old options\n/**\n * @param {false | true | \"none\" | \"error\" | \"warn\" | \"info\" | \"log\" | \"verbose\"} level\n * @returns {void}\n */\nfunction setLogLevel(level) {\n  logger.configureDefaultLogger({\n    level: level\n  });\n}\nsetLogLevel(defaultLevel);\nvar log = logger.getLogger(name);\nvar logEnabledFeatures = function logEnabledFeatures(features) {\n  var enabledFeatures = Object.keys(features);\n  if (!features || enabledFeatures.length === 0) {\n    return;\n  }\n  var logString = \"Server started:\";\n\n  // Server started: Hot Module Replacement enabled, Live Reloading enabled, Overlay disabled.\n  for (var i = 0; i < enabledFeatures.length; i++) {\n    var key = enabledFeatures[i];\n    logString += \" \".concat(key, \" \").concat(features[key] ? \"enabled\" : \"disabled\", \",\");\n  }\n  // replace last comma with a period\n  logString = logString.slice(0, -1).concat(\".\");\n  log.info(logString);\n};\nexport { log, logEnabledFeatures, setLogLevel };","import getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    var scriptSourceURL;\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {\n      // URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nexport default parseURL;","import hotEmitter from \"webpack/hot/emitter.js\";\nimport { log } from \"./log.js\";\n\n/** @typedef {import(\"../index\").Options} Options\n/** @typedef {import(\"../index\").Status} Status\n\n/**\n * @param {Options} options\n * @param {Status} status\n */\nfunction reloadApp(_ref, status) {\n  var hot = _ref.hot,\n    liveReload = _ref.liveReload;\n  if (status.isUnloading) {\n    return;\n  }\n  var currentHash = status.currentHash,\n    previousHash = status.previousHash;\n  var isInitial = currentHash.indexOf( /** @type {string} */previousHash) >= 0;\n  if (isInitial) {\n    return;\n  }\n\n  /**\n   * @param {Window} rootWindow\n   * @param {number} intervalId\n   */\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info(\"App updated. Reloading...\");\n    rootWindow.location.reload();\n  }\n  var search = self.location.search.toLowerCase();\n  var allowToHot = search.indexOf(\"webpack-dev-server-hot=false\") === -1;\n  var allowToLiveReload = search.indexOf(\"webpack-dev-server-live-reload=false\") === -1;\n  if (hot && allowToHot) {\n    log.info(\"App hot update...\");\n    hotEmitter.emit(\"webpackHotUpdate\", status.currentHash);\n    if (typeof self !== \"undefined\" && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(status.currentHash), \"*\");\n    }\n  }\n  // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload && allowToLiveReload) {\n    var rootWindow = self;\n\n    // use parent window for reload (in case we're in an iframe with no valid src)\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== \"about:\") {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n}\nexport default reloadApp;","/* global __resourceQuery WorkerGlobalScope */\n\n// Send messages to the outside, so plugins can consume it.\n/**\n * @param {string} type\n * @param {any} [data]\n */\nfunction sendMsg(type, data) {\n  if (typeof self !== \"undefined\" && (typeof WorkerGlobalScope === \"undefined\" || !(self instanceof WorkerGlobalScope))) {\n    self.postMessage({\n      type: \"webpack\".concat(type),\n      data: data\n    }, \"*\");\n  }\n}\nexport default sendMsg;","var ansiRegex = new RegExp([\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\"].join(\"|\"), \"g\");\n\n/**\n *\n * Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string.\n * Adapted from code originally released by Sindre Sorhus\n * Licensed the MIT License\n *\n * @param {string} string\n * @return {string}\n */\nfunction stripAnsi(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Expected a `string`, got `\".concat(typeof string, \"`\"));\n  }\n  return string.replace(ansiRegex, \"\");\n}\nexport default stripAnsi;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/* globals __webpack_hash__ */\nif (module.hot) {\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check(true)\n\t\t\t.then(function (updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot find update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot apply update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","var EventEmitter = require(\"events\");\nmodule.exports = new EventEmitter();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function (updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function (moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function (moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function (moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function (moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t'[HMR] Consider using the optimization.moduleIds: \"named\" for module names.'\n\t\t\t);\n\t}\n};\n","var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function (level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function (level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Dictionary = void 0;\r\nconst list_1 = require(\"../list/list\");\r\nconst exception_1 = require(\"../../exception/exception\");\r\n/**\r\n * Default dictionary.\r\n */\r\nclass Dictionary extends Map {\r\n    /**\r\n     * Add value and key to dictionary.\r\n     * @param pKey - Key of item.\r\n     * @param pValue - value of item.\r\n     */\r\n    add(pKey, pValue) {\r\n        // Add value and key to containers.\r\n        if (!this.has(pKey)) {\r\n            this.set(pKey, pValue);\r\n        }\r\n        else {\r\n            throw new exception_1.Exception(\"Can't add dublicate key to dictionary.\", this);\r\n        }\r\n    }\r\n    /**\r\n     * Get all keys that have the set value.\r\n     * @param pValue - Value.\r\n     */\r\n    getAllKeysOfValue(pValue) {\r\n        // Add entires iterator to list and filter for pValue = Value\r\n        const lKeyValuesWithValue = list_1.List.newListWith(...this.entries()).filter((pItem) => {\r\n            return pItem[1] === pValue;\r\n        });\r\n        // Get only keys of key values.\r\n        const lKeysOfKeyValue = lKeyValuesWithValue.map((pItem) => {\r\n            return pItem[0];\r\n        });\r\n        return lKeysOfKeyValue;\r\n    }\r\n    /**\r\n     * Get item of dictionary. If key does not exists the default value gets returned.\r\n     * @param pKey - key of item.\r\n     * @param pDefault - Default value if key was not found.\r\n     */\r\n    getOrDefault(pKey, pDefault) {\r\n        const lValue = this.get(pKey);\r\n        if (typeof lValue !== 'undefined') {\r\n            return lValue;\r\n        }\r\n        else {\r\n            return pDefault;\r\n        }\r\n    }\r\n    /**\r\n     * Maps information into new list.\r\n     * @param pFunction - Mapping funktion.\r\n     */\r\n    map(pFunction) {\r\n        const lResultList = new list_1.List();\r\n        for (const lKeyValuePair of this) {\r\n            // Execute callback and add result to list.\r\n            const lMappingResult = pFunction(lKeyValuePair[0], lKeyValuePair[1]);\r\n            lResultList.push(lMappingResult);\r\n        }\r\n        return lResultList;\r\n    }\r\n}\r\nexports.Dictionary = Dictionary;\r\n//# sourceMappingURL=dictionary.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.List = void 0;\r\n/**\r\n * Extended array functionality.\r\n */\r\nclass List extends Array {\r\n    /**\r\n     * Create list and add items.\r\n     * @param pItemList - Items.\r\n     */\r\n    static newListWith(...pItemList) {\r\n        const lNewList = new List();\r\n        lNewList.push(...pItemList);\r\n        return lNewList;\r\n    }\r\n    /**\r\n     * Clear list.\r\n     */\r\n    clear() {\r\n        this.splice(0, this.length);\r\n    }\r\n    /**\r\n     * Copy first layer of object.\r\n     */\r\n    clone() {\r\n        return List.newListWith(...this);\r\n    }\r\n    /**\r\n     * Distinct values inside list.\r\n     */\r\n    distinct() {\r\n        const lSelf = this;\r\n        // Get all values where index is same index as first index of first appearance.\r\n        const lDistinctArray = this.filter((pValue, pIndex) => {\r\n            return lSelf.indexOf(pValue) === pIndex;\r\n        });\r\n        return List.newListWith(...lDistinctArray);\r\n    }\r\n    /**\r\n     * Check if arrays are the same.\r\n     * @param pArray - Array.\r\n     */\r\n    equals(pArray) {\r\n        // Check if array are same, dont null and have same length.\r\n        if (this === pArray) {\r\n            return true;\r\n        }\r\n        else if (!pArray || this.length !== pArray.length) {\r\n            return false;\r\n        }\r\n        // Check each item.\r\n        for (let lIndex = 0; lIndex < this.length; ++lIndex) {\r\n            if (this[lIndex] !== pArray[lIndex]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Removes the first appearence of value.\r\n     * @param pValue - value requested for removement.\r\n     */\r\n    remove(pValue) {\r\n        const lFoundIndex = this.indexOf(pValue);\r\n        // Only remove if found.\r\n        if (lFoundIndex !== -1) {\r\n            return this.splice(lFoundIndex, 1)[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Replace first appearence of value.\r\n     * @param pOldValue - Target value to replace.\r\n     * @param pNewValue - Replacement value.\r\n     */\r\n    replace(pOldValue, pNewValue) {\r\n        const lFoundIndex = this.indexOf(pOldValue);\r\n        // Only replace if found.\r\n        if (lFoundIndex !== -1) {\r\n            // Save old value and replace it with new value.\r\n            const lOldValue = this[lFoundIndex];\r\n            this[lFoundIndex] = pNewValue;\r\n            return lOldValue;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * List to string.\r\n     */\r\n    toString() {\r\n        return `[${super.join(', ')}]`;\r\n    }\r\n}\r\nexports.List = List;\r\n//# sourceMappingURL=list.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseTree = void 0;\r\nconst dictionary_1 = require(\"../dictionary/dictionary\");\r\nconst list_1 = require(\"../list/list\");\r\n/**\r\n * BaseTree with generic path.\r\n */\r\nclass BaseTree {\r\n    /**\r\n     * Constructor.\r\n     * Basic initialization.\r\n     */\r\n    constructor() {\r\n        this.mBranches = new dictionary_1.Dictionary();\r\n        this.mParent = null;\r\n    }\r\n    /**\r\n     * Get all child branches of branch.\r\n     */\r\n    get branchList() {\r\n        return list_1.List.newListWith(...this.mBranches.values());\r\n    }\r\n    /**\r\n     * Get parent branch.\r\n     */\r\n    get parent() {\r\n        return this.mParent;\r\n    }\r\n    /**\r\n     * Adds new branch to tree.\r\n     * Does nothing if branch already exists.\r\n     * Returns last added branch.\r\n     * @param pBranchPath -  Branch to add.\r\n     */\r\n    addBranch(...pBranchPath) {\r\n        // If new branch can be added.\r\n        if (pBranchPath.length !== 0) {\r\n            const lCurrentBranchKey = pBranchPath.splice(0, 1)[0];\r\n            // Create new branch if not created.\r\n            if (!this.mBranches.has(lCurrentBranchKey)) {\r\n                // Set this as new branch parent.\r\n                const lNewBranch = this.createNewBranch(lCurrentBranchKey);\r\n                lNewBranch.mParent = this;\r\n                this.mBranches.add(lCurrentBranchKey, lNewBranch);\r\n            }\r\n            // Add next branch path.\r\n            const lCurrentBranch = this.mBranches.get(lCurrentBranchKey);\r\n            return lCurrentBranch.addBranch(...pBranchPath);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Get all paths of tree.\r\n     * @param pPath - Additional paths.\r\n     */\r\n    getAllPaths() {\r\n        return this.extendPath(new list_1.List());\r\n    }\r\n    /**\r\n     * Get Tree by branch path. Return undefined if no branch was found.\r\n     * @param pBranchPath - Branch path.\r\n     */\r\n    getBranch(...pBranchPath) {\r\n        // If no path was specified. Return this tree.\r\n        if (pBranchPath.length === 0) {\r\n            return this;\r\n        }\r\n        // Check if this tree has branch\r\n        if (this.mBranches.has(pBranchPath[0])) {\r\n            // remove first item in branch and safe.\r\n            const lCurrentLocationBranchValue = pBranchPath.splice(0, 1)[0];\r\n            const lCurrentLocationBranch = this.mBranches.get(lCurrentLocationBranchValue);\r\n            // Seach branch in next tree with modified path.\r\n            return lCurrentLocationBranch.getBranch(...pBranchPath);\r\n        }\r\n        // No branch found.\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Check if path exists.\r\n     * Path specifed path doesn't need to have values.\r\n     * @param pBranchPath - Path to branch.\r\n     */\r\n    hasPath(...pBranchPath) {\r\n        return !!this.getBranch(...pBranchPath);\r\n    }\r\n    /**\r\n     * Removes branch by path.\r\n     * Returns undefined if branch does not exist.\r\n     * @param pBranchPath - Path to branch.\r\n     */\r\n    removeBranch(...pBranchPath) {\r\n        const lFoundBranch = this.getBranch(...pBranchPath);\r\n        // Check if parameter or branch exists.\r\n        if (pBranchPath.length === 0 || !lFoundBranch) {\r\n            return undefined;\r\n        }\r\n        else if (pBranchPath.length === 1) {\r\n            const lFirstBranchPathValue = pBranchPath[0];\r\n            // Remove branch if path has only one level.\r\n            // Does not throw if no element was found.\r\n            const lRemovedBranch = this.mBranches.get(lFirstBranchPathValue);\r\n            this.mBranches.delete(lFirstBranchPathValue);\r\n            // Remove parent and return.\r\n            lRemovedBranch.mParent = null;\r\n            return lRemovedBranch;\r\n        }\r\n        // Get parent and remove branch last path element. Parent of child is always set.\r\n        const lParentBranch = lFoundBranch.parent;\r\n        return lParentBranch.removeBranch(pBranchPath.pop());\r\n    }\r\n    /**\r\n     * Extends specified path with all possible paths of current tree branches.\r\n     * @param pStartingPath - Staring path.\r\n     */\r\n    extendPath(pStartingPath) {\r\n        const lExtendedPaths = new Array();\r\n        // Get extended path of all branches.\r\n        for (const lBranchKey of this.mBranches.keys()) {\r\n            const lBranchPath = list_1.List.newListWith(...pStartingPath, lBranchKey);\r\n            // Add path to current branch.\r\n            lExtendedPaths.push(lBranchPath);\r\n            // Get all paths of branch.\r\n            const lBranch = this.mBranches.get(lBranchKey);\r\n            lExtendedPaths.push(...lBranch.extendPath(lBranchPath));\r\n        }\r\n        return lExtendedPaths;\r\n    }\r\n}\r\nexports.BaseTree = BaseTree;\r\n//# sourceMappingURL=base-tree.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ListTree = void 0;\r\nconst base_tree_1 = require(\"./base-tree\");\r\nconst list_1 = require(\"../list/list\");\r\n/**\r\n * Tree with additional item list.\r\n */\r\nclass ListTree extends base_tree_1.BaseTree {\r\n    /**\r\n     * Initialise list.\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.mItemList = new list_1.List();\r\n    }\r\n    /**\r\n     * Get all items of this branch and all of its childs.\r\n     */\r\n    get deepItemList() {\r\n        return this.getDeepItemList();\r\n    }\r\n    /**\r\n     * Get item of this branch\r\n     */\r\n    get itemList() {\r\n        return this.mItemList.clone();\r\n    }\r\n    /**\r\n     * Add items to branch.\r\n     * @param pItemList - Item list.\r\n     */\r\n    addItem(...pItemList) {\r\n        this.mItemList.push(...pItemList);\r\n        return this;\r\n    }\r\n    /**\r\n     * Creates new branch.\r\n     * @param pBranchKey - Branch key for new branch.\r\n     */\r\n    createNewBranch(_pBranchKey) {\r\n        return new ListTree();\r\n    }\r\n    /**\r\n     * Get all listed items on branch and its childs.\r\n     */\r\n    getDeepItemList() {\r\n        const lFoundItems = list_1.List.newListWith(...this.mItemList);\r\n        // Find all items recurive.\r\n        for (const lBranch of this.branchList) {\r\n            lFoundItems.push(...lBranch.getDeepItemList());\r\n        }\r\n        return lFoundItems;\r\n    }\r\n}\r\nexports.ListTree = ListTree;\r\n//# sourceMappingURL=list-tree.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tree = void 0;\r\nconst base_tree_1 = require(\"./base-tree\");\r\n/**\r\n * Tree with generic path.\r\n */\r\nclass Tree extends base_tree_1.BaseTree {\r\n    /**\r\n     * Create new emtpy branch.\r\n     */\r\n    createNewBranch(_pBranchKey) {\r\n        return new Tree();\r\n    }\r\n}\r\nexports.Tree = Tree;\r\n//# sourceMappingURL=tree.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Exception = void 0;\r\n/**\r\n * Basic exception.\r\n */\r\nclass Exception extends Error {\r\n    /**\r\n     * Constructor. Create exception.\r\n     * @param pMessage - Messsage of exception.\r\n     * @param pTarget - Target exception throws.\r\n     */\r\n    constructor(pMessage, pTarget) {\r\n        super(pMessage);\r\n        this.mTarget = pTarget;\r\n    }\r\n    /**\r\n     * Target exception throws.\r\n     */\r\n    get target() {\r\n        return this.mTarget;\r\n    }\r\n}\r\nexports.Exception = Exception;\r\n//# sourceMappingURL=exception.js.map","\"use strict\";\r\n/* istanbul ignore file */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypeUtil = exports.EnumUtil = exports.Exception = exports.Tree = exports.ListTree = exports.List = exports.Dictionary = void 0;\r\n// Container.\r\nvar dictionary_1 = require(\"./data_container/dictionary/dictionary\");\r\nObject.defineProperty(exports, \"Dictionary\", { enumerable: true, get: function () { return dictionary_1.Dictionary; } });\r\nvar list_1 = require(\"./data_container/list/list\");\r\nObject.defineProperty(exports, \"List\", { enumerable: true, get: function () { return list_1.List; } });\r\nvar list_tree_1 = require(\"./data_container/tree/list-tree\");\r\nObject.defineProperty(exports, \"ListTree\", { enumerable: true, get: function () { return list_tree_1.ListTree; } });\r\nvar tree_1 = require(\"./data_container/tree/tree\");\r\nObject.defineProperty(exports, \"Tree\", { enumerable: true, get: function () { return tree_1.Tree; } });\r\nvar exception_1 = require(\"./exception/exception\");\r\nObject.defineProperty(exports, \"Exception\", { enumerable: true, get: function () { return exception_1.Exception; } });\r\n// Handler.\r\nvar enum_util_1 = require(\"./util/enum-util\");\r\nObject.defineProperty(exports, \"EnumUtil\", { enumerable: true, get: function () { return enum_util_1.EnumUtil; } });\r\nvar type_util_1 = require(\"./util/type-util\");\r\nObject.defineProperty(exports, \"TypeUtil\", { enumerable: true, get: function () { return type_util_1.TypeUtil; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EnumUtil = void 0;\r\n/**\r\n * Enumaration helper.\r\n */\r\nclass EnumUtil {\r\n    /**\r\n     * Return enum of enum value.\r\n     * @param pEnum - typeof Enum object.\r\n     * @param pValue - Value of enum.\r\n     */\r\n    static enumKeyByValue(pEnum, pValue) {\r\n        // Thats it... :)\r\n        if (EnumUtil.enumValueExists(pEnum, pValue)) {\r\n            return pValue;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Return all keys of an enum as array.\r\n     * @param pEnum - typeof Enum object.\r\n     */\r\n    static enumNamesToArray(pEnum) {\r\n        // Convert enum to key array.\r\n        return Object.keys(pEnum).filter((pKey) => isNaN(Number(pKey)));\r\n    }\r\n    /**\r\n     * Check if value exists in enum object.\r\n     * @param pEnum - typeof Enum object.\r\n     * @param pValue - Value of enum.\r\n     */\r\n    static enumValueExists(pEnum, pValue) {\r\n        return EnumUtil.enumValuesToArray(pEnum).includes(pValue);\r\n    }\r\n    /**\r\n     * Return all values of an enum as array.\r\n     * @param pEnum - typeof Enum object.\r\n     */\r\n    static enumValuesToArray(pEnum) {\r\n        const lEnumValues = new Array();\r\n        // Convert enum to vaue array by iterating over all keys.\r\n        for (const lKey of EnumUtil.enumNamesToArray(pEnum)) {\r\n            lEnumValues.push(pEnum[lKey]);\r\n        }\r\n        return lEnumValues;\r\n    }\r\n}\r\nexports.EnumUtil = EnumUtil;\r\n//# sourceMappingURL=enum-util.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypeUtil = void 0;\r\n/**\r\n * Type helper.\r\n */\r\nclass TypeUtil {\r\n    /**\r\n     * Check existence of a member name and return that name.\r\n     * @param pName - Property name.\r\n     */\r\n    static nameOf(pName) {\r\n        return pName;\r\n    }\r\n}\r\nexports.TypeUtil = TypeUtil;\r\n//# sourceMappingURL=type-util.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DeviceConfiguration = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nclass DeviceConfiguration {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        this.mTriggerTolerance = 0;\r\n        this.mButtonActions = new core_data_1.Dictionary();\r\n        this.mActionsButtons = new core_data_1.Dictionary();\r\n    }\r\n    /**\r\n     * Get all key actions.\r\n     */\r\n    get keyActions() {\r\n        return this.mButtonActions.map((pKey, pValue) => {\r\n            return { name: pKey, buttons: [...pValue] };\r\n        });\r\n    }\r\n    /**\r\n     * Tolerance on wich buttons and axis are marked as pressed.\r\n     */\r\n    get triggerTolerance() {\r\n        return this.mTriggerTolerance;\r\n    }\r\n    set triggerTolerance(pTolerance) {\r\n        this.mTriggerTolerance = pTolerance;\r\n    }\r\n    /**\r\n     * Add key actions.\r\n     * @param pName - Action name.\r\n     * @param pButtons - Buttons binded to action.\r\n     */\r\n    addAction(pName, pButtons) {\r\n        this.mButtonActions.set(pName, new Set(pButtons));\r\n        // Map keys to actions. \r\n        for (const lKey of pButtons) {\r\n            // Init action list.\r\n            if (!this.mActionsButtons.has(lKey)) {\r\n                this.mActionsButtons.set(lKey, new Set());\r\n            }\r\n            this.mActionsButtons.get(lKey).add(pName);\r\n        }\r\n    }\r\n    /**\r\n     * Clone device configuration.\r\n     */\r\n    clone() {\r\n        const lClone = new DeviceConfiguration();\r\n        // Trigger tolerance.\r\n        lClone.triggerTolerance = this.triggerTolerance;\r\n        // Copy actions.\r\n        for (const lAction of this.mButtonActions) {\r\n            lClone.addAction(lAction[0], [...lAction[1]]);\r\n        }\r\n        return lClone;\r\n    }\r\n    /**\r\n     * Get keys of actions.\r\n     * @param pActionName - Action name.\r\n     */\r\n    getActionButtons(pActionName) {\r\n        return [...(this.mButtonActions.get(pActionName) ?? [])];\r\n    }\r\n    /**\r\n     * Get all actions asigned to button.\r\n     * @param pButton - Button.\r\n     */\r\n    getActionOfButton(pButton) {\r\n        // Copy Set to array.\r\n        return [...(this.mActionsButtons.get(pButton) ?? [])];\r\n    }\r\n}\r\nexports.DeviceConfiguration = DeviceConfiguration;\r\n//# sourceMappingURL=device-configuration.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GamepadButtonMapping = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nconst button_value_type_enum_1 = require(\"../enum/button-value-type.enum\");\r\n/**\r\n * Gamepad mapping.\r\n */\r\nclass GamepadButtonMapping {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor(pMapping) {\r\n        this.mMapping = new core_data_1.Dictionary();\r\n        // Apply optional mapping.\r\n        if (pMapping) {\r\n            for (const lButton of Object.keys(pMapping)) {\r\n                const lButtonMapping = pMapping[lButton];\r\n                this.addMapping(lButton, lButtonMapping.type, lButtonMapping.index);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Add button mapping.\r\n     * @param pButton - Button.\r\n     * @param pButtonType - Type of button.\r\n     * @param pButtonIndex - Mapped index.\r\n     */\r\n    addMapping(pButton, pButtonType, pButtonIndex) {\r\n        this.mMapping.set(pButton, { type: pButtonType, index: pButtonIndex });\r\n    }\r\n    /**\r\n     * Get button value of mapped button.\r\n     * Unmapped buttons return allways zero.\r\n     * @param pButton - Button.\r\n     * @param pGamepad - Gamepad data.\r\n     */\r\n    executeMapping(pButton, pGamepad) {\r\n        const lButtonMapping = this.mMapping.get(pButton);\r\n        // Return unpressed value on all unmapped buttons. \r\n        if (!lButtonMapping) {\r\n            return 0;\r\n        }\r\n        // Access correct button array for axis or button  buttons.\r\n        if (lButtonMapping.type === button_value_type_enum_1.ButtonValueType.Button) {\r\n            return pGamepad.buttons[lButtonMapping.index]?.value ?? 0;\r\n        }\r\n        else { // Axis.   \r\n            return pGamepad.axes[lButtonMapping.index] ?? 0;\r\n        }\r\n    }\r\n}\r\nexports.GamepadButtonMapping = GamepadButtonMapping;\r\n//# sourceMappingURL=gamepad-button-mapping.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputConfiguration = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nconst button_value_type_enum_1 = require(\"../enum/button-value-type.enum\");\r\nconst gamepad_button_mapping_1 = require(\"./gamepad-button-mapping\");\r\nclass InputConfiguration {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor(pDefault) {\r\n        this.mGampadMappingList = new Array();\r\n        this.mDeviceSettings = new core_data_1.Dictionary();\r\n        this.mDefaultDevice = pDefault;\r\n        // Gamepad mapping.\r\n        this.mGampadMappingList = new Array();\r\n        this.mStandardGamepadMapping = new gamepad_button_mapping_1.GamepadButtonMapping({\r\n            clusterButtonBottom: { type: button_value_type_enum_1.ButtonValueType.Button, index: 0 },\r\n            clusterButtonRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 1 },\r\n            clusterButtonLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 2 },\r\n            clusterButtonTop: { type: button_value_type_enum_1.ButtonValueType.Button, index: 3 },\r\n            buttonLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 4 },\r\n            buttonRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 5 },\r\n            triggerLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 6 },\r\n            triggerRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 7 },\r\n            selectButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 8 },\r\n            startButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 9 },\r\n            homeButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 16 },\r\n            directionalPadTop: { type: button_value_type_enum_1.ButtonValueType.Button, index: 12 },\r\n            directionalPadBottom: { type: button_value_type_enum_1.ButtonValueType.Button, index: 13 },\r\n            directionalPadRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 15 },\r\n            directionalPadLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 14 },\r\n            leftThumbStickButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 10 },\r\n            leftThumbStickXaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 0 },\r\n            leftThumbStickYaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 1 },\r\n            rightThumbStickButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 11 },\r\n            rightThumbStickXaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 2 },\r\n            rightThumbStickYaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 3 },\r\n        });\r\n    }\r\n    /**\r\n     * Add gamepad mapping by id matching.\r\n     * @param pIdAssignment - Regex for assigning to matching gamepad ids.\r\n     * @param pMapping - Gamepad mapping.\r\n     */\r\n    addGamepadMapping(pIdAssignment, pMapping) {\r\n        this.mGampadMappingList.push({ mapping: pMapping, idMatch: pIdAssignment });\r\n    }\r\n    /**\r\n     * Get device settings.\r\n     * @param pDeviceId - Device id.\r\n     */\r\n    deviceConfiguration(pDeviceId) {\r\n        // Init device with cloned default configuration.\r\n        if (!this.mDeviceSettings.has(pDeviceId)) {\r\n            const lDefaultClone = this.mDefaultDevice.clone();\r\n            this.mDeviceSettings.set(pDeviceId, lDefaultClone);\r\n        }\r\n        return this.mDeviceSettings.get(pDeviceId);\r\n    }\r\n    /**\r\n     * Get mapping of gamepad.\r\n     * @param pGamepadId - Manufacturer id of gamepad.\r\n     */\r\n    getGampadMapping(pGamepadId, pGamepadMappingType) {\r\n        for (const lMappingAssignment of this.mGampadMappingList) {\r\n            if (lMappingAssignment.idMatch.test(pGamepadId)) {\r\n                return lMappingAssignment.mapping;\r\n            }\r\n        }\r\n        // Map with gamepad mapping type.\r\n        if (pGamepadMappingType === 'standard') {\r\n            return this.mStandardGamepadMapping;\r\n        }\r\n        return this.mStandardGamepadMapping;\r\n    }\r\n}\r\nexports.InputConfiguration = InputConfiguration;\r\n//# sourceMappingURL=input-configuration.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GamepadConnector = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nconst gamepad_input_device_1 = require(\"../device/gamepad-input-device\");\r\n/**\r\n * Handles connect and disconnection of gamepads.\r\n */\r\nclass GamepadConnector {\r\n    /**\r\n     * Constructor.\r\n     * Initialize connecting and disconnecting gamepads.\r\n     */\r\n    init(pDevices) {\r\n        // Init connected gamepads.\r\n        window.addEventListener('gamepadconnected', (pEvent) => {\r\n            this.connectGamepad(pEvent.gamepad, pDevices);\r\n        });\r\n        // Deconstruct disconnected gamepads.\r\n        window.addEventListener('gamepaddisconnected', (pEvent) => {\r\n            this.disconnectGamepad(pEvent.gamepad, pDevices);\r\n        });\r\n        // Init gamepads that are connected before constructor call.\r\n        for (const lGamepad of globalThis.navigator.getGamepads()) {\r\n            if (lGamepad !== null) {\r\n                this.connectGamepad(lGamepad, pDevices);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Init gamepad.\r\n     * Applies gamepad button mapping.\r\n     * @param pGamepad - Gamepad\r\n     */\r\n    connectGamepad(pGamepad, pDevices) {\r\n        // Enable gamepad when already created.\r\n        if (GamepadConnector.mGamepads.has(pGamepad.index)) {\r\n            pDevices.registerDevice(GamepadConnector.mGamepads.get(pGamepad.index));\r\n            return;\r\n        }\r\n        // Try to find mappig by id assignment.\r\n        const lFoundMapping = pDevices.configuration.getGampadMapping(pGamepad.id, pGamepad.mapping);\r\n        // Build general gamepad information.\r\n        const lGamepadInformation = {\r\n            index: pGamepad.index,\r\n            id: pGamepad.id,\r\n            mapping: lFoundMapping\r\n        };\r\n        const lGamepadInput = new gamepad_input_device_1.GamepadInputDevice(lGamepadInformation, pDevices.configuration);\r\n        // Add GamepadGameInput to local store.\r\n        GamepadConnector.mGamepads.add(pGamepad.index, lGamepadInput);\r\n        // Add gamepad to global input devices.\r\n        pDevices.registerDevice(lGamepadInput);\r\n    }\r\n    /**\r\n     * Desconstruct gamepad.\r\n     * @param pGamepad - Gamepad.\r\n     */\r\n    disconnectGamepad(pGamepad, pDevices) {\r\n        // Only disconnect GamepadInput\r\n        if (GamepadConnector.mGamepads.has(pGamepad.index)) {\r\n            pDevices.unregisterDevice(GamepadConnector.mGamepads.get(pGamepad.index));\r\n        }\r\n    }\r\n}\r\nexports.GamepadConnector = GamepadConnector;\r\nGamepadConnector.mGamepads = new core_data_1.Dictionary();\r\n//# sourceMappingURL=gamepad-connector.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MouseKeyboardConnector = void 0;\r\nconst mouse_keyboard_input_device_1 = require(\"../device/mouse-keyboard-input-device\");\r\nclass MouseKeyboardConnector {\r\n    /**\r\n     * Init keyboard and mouse input devices.\r\n     */\r\n    init(pDevices) {\r\n        pDevices.registerDevice(new mouse_keyboard_input_device_1.MouseKeyboardInputDevice(pDevices.configuration));\r\n    }\r\n}\r\nexports.MouseKeyboardConnector = MouseKeyboardConnector;\r\n//# sourceMappingURL=mouse-keyboard-connector.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseInputDevice = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nconst input_action_event_1 = require(\"../event/input-action-event\");\r\nconst input_button_event_1 = require(\"../event/input-button-event\");\r\nclass BaseInputDevice extends EventTarget {\r\n    /**\r\n     * Constructor.s\r\n     * @param pId - Game input id.\r\n     */\r\n    constructor(pId, pDeviceType, pDeviceConfiguration) {\r\n        super();\r\n        this.mId = pId;\r\n        this.mConnected = false;\r\n        this.mDeviceType = pDeviceType;\r\n        this.mButtonState = new core_data_1.Dictionary();\r\n        this.mActionStates = new core_data_1.Dictionary();\r\n        this.mDeviceConfiguration = pDeviceConfiguration;\r\n    }\r\n    /**\r\n     * Get connection state.\r\n     */\r\n    get connected() {\r\n        return this.mConnected;\r\n    }\r\n    set connected(pConnected) {\r\n        this.mConnected = pConnected;\r\n        // Call state change method.\r\n        this.onConnectionStateChange();\r\n    }\r\n    /**\r\n     * Device configuration.\r\n     */\r\n    get deviceConfiguration() {\r\n        return this.mDeviceConfiguration;\r\n    }\r\n    /**\r\n     * Device type.\r\n     */\r\n    get deviceType() {\r\n        return this.mDeviceType;\r\n    }\r\n    /**\r\n     * Unique game input id.\r\n     * Consistent on reconnect.\r\n     */\r\n    get id() {\r\n        return this.mId;\r\n    }\r\n    addEventListener(pType, pCallback, pOptions) {\r\n        super.addEventListener(pType, pCallback, pOptions);\r\n    }\r\n    /**\r\n     * Get float value of button state. Range between 0..1.\r\n     * @param pButton - Button\r\n     */\r\n    getButtonState(pButton) {\r\n        return this.mButtonState.get(pButton) ?? 0;\r\n    }\r\n    /**\r\n     * Check for button pressed.\r\n     * @param pButton - Button.\r\n     */\r\n    isPressed(pButton) {\r\n        return this.getButtonState(pButton) !== 0;\r\n    }\r\n    /**\r\n     * Set button state.\r\n     * Updates states of alias buttons.\r\n     * @param pButton - Target button.\r\n     * @param pValue - New state value of button.\r\n     */\r\n    setButtonState(pButton, pValue) {\r\n        // Exit when input is not connected.\r\n        if (!this.connected) {\r\n            return;\r\n        }\r\n        // Save current state.\r\n        const lLastButtonState = this.mButtonState.get(pButton) ?? 0;\r\n        // Apply tolerance. Absolute values for negative axis.\r\n        let lButtonState = pValue;\r\n        if (Math.abs(lButtonState) < this.mDeviceConfiguration.triggerTolerance) {\r\n            lButtonState = 0;\r\n        }\r\n        // Exit when values has not changed.\r\n        if (lLastButtonState === lButtonState) {\r\n            return;\r\n        }\r\n        // Set next target button state and trigger button change.\r\n        this.mButtonState.set(pButton, lButtonState);\r\n        this.dispatchButtonChangeEvent(pButton, lButtonState, lLastButtonState);\r\n        // Check all actions of this buttons.\r\n        for (const lAction of this.deviceConfiguration.getActionOfButton(pButton)) {\r\n            const lActionButtonList = this.deviceConfiguration.getActionButtons(lAction);\r\n            // Get lowest state of all alias buttons.\r\n            const lActionState = lActionButtonList.reduce((pCurrentValue, pNextValue) => {\r\n                const lNextValue = this.mButtonState.get(pNextValue) ?? 0;\r\n                // Save changes closer to zero.\r\n                if (Math.abs(lNextValue) < Math.abs(pCurrentValue)) {\r\n                    return lNextValue;\r\n                }\r\n                else {\r\n                    return pCurrentValue;\r\n                }\r\n            }, 999);\r\n            // Set highest state to alias target state.\r\n            const lActionLastState = this.mActionStates.get(lAction) ?? 0;\r\n            // Exit when values has not changed.\r\n            if (lActionLastState === lActionState) {\r\n                return;\r\n            }\r\n            // Update action state.\r\n            this.mActionStates.set(lAction, lActionState);\r\n            // Trigger events.\r\n            this.dispatchActionChangeEvent(lAction, lActionState, lActionLastState, lActionButtonList);\r\n        }\r\n    }\r\n    /**\r\n     * Dispatch action events based on changed state.\r\n     * @param pAction - Target action.\r\n     * @param pCurrentState - Current set state.\r\n     * @param pLastState - Last state.\r\n     */\r\n    dispatchActionChangeEvent(pAction, pCurrentState, pLastState, pAffectedButtons) {\r\n        // Trigger pressed event when last state was zero.\r\n        if (pLastState === 0) {\r\n            this.dispatchEvent(new input_action_event_1.InputActionEvent('actiondown', pAction, pCurrentState, pAffectedButtons));\r\n        }\r\n        else if (Math.abs(pLastState) > 0 && pCurrentState === 0) {\r\n            this.dispatchEvent(new input_action_event_1.InputActionEvent('actionup', pAction, pCurrentState, pAffectedButtons));\r\n        }\r\n        // Trigger value change event.\r\n        this.dispatchEvent(new input_action_event_1.InputActionEvent('actionstatechange', pAction, pCurrentState, pAffectedButtons));\r\n        return true;\r\n    }\r\n    /**\r\n     * Dispatch button events based on changed state.\r\n     * @param pButton - Target button.\r\n     * @param pCurrentState - Current set state.\r\n     * @param pLastState - Last state.\r\n     */\r\n    dispatchButtonChangeEvent(pButton, pCurrentState, pLastState) {\r\n        // Trigger pressed event when last state was zero.\r\n        if (pLastState === 0) {\r\n            this.dispatchEvent(new input_button_event_1.InputButtonEvent('buttondown', pButton, pCurrentState));\r\n        }\r\n        else if (Math.abs(pLastState) > 0 && pCurrentState === 0) {\r\n            this.dispatchEvent(new input_button_event_1.InputButtonEvent('buttonup', pButton, pCurrentState));\r\n        }\r\n        // Trigger value change event.\r\n        this.dispatchEvent(new input_button_event_1.InputButtonEvent('buttonstatechange', pButton, pCurrentState));\r\n        return true;\r\n    }\r\n}\r\nexports.BaseInputDevice = BaseInputDevice;\r\n//# sourceMappingURL=base-input-device.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GamepadInputDevice = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nconst gamepad_button_enum_1 = require(\"../enum/gamepad-button.enum\");\r\nconst input_device_enum_1 = require(\"../enum/input-device.enum\");\r\nconst base_input_device_1 = require(\"./base-input-device\");\r\nclass GamepadInputDevice extends base_input_device_1.BaseInputDevice {\r\n    /**\r\n     * Constructor.\r\n     * @param pGamepad - Gamepad object.\r\n     */\r\n    constructor(pGamepad, pConfiguration) {\r\n        const lDeviceId = `gamepad_${pGamepad.index}`;\r\n        const lDeviceConfiguration = pConfiguration.deviceConfiguration(lDeviceId);\r\n        super(lDeviceId, input_device_enum_1.InputDevice.Gamepad, lDeviceConfiguration);\r\n        this.mGamepadInformation = pGamepad;\r\n        this.mLoopRunning = false;\r\n    }\r\n    /**\r\n     * On connection state change.\r\n     */\r\n    onConnectionStateChange() {\r\n        if (this.connected && !this.mLoopRunning) {\r\n            this.startScanLoop();\r\n        }\r\n    }\r\n    /**\r\n     * Start scanning for pressed buttons.\r\n     */\r\n    startScanLoop() {\r\n        // Get all gamepad buttons.\r\n        const lGamepadButtonList = core_data_1.EnumUtil.enumValuesToArray(gamepad_button_enum_1.GamepadButton);\r\n        const lLoop = () => {\r\n            // Only scan on connected gamepads.\r\n            if (this.connected) {\r\n                // Find connected gamepad. Gamepad does allways exists. Even after disconnect.\r\n                const lGamepad = globalThis.navigator.getGamepads().find((pGamepad) => {\r\n                    return pGamepad.index === this.mGamepadInformation.index;\r\n                });\r\n                // Scan each gamepad button.\r\n                for (const lButton of lGamepadButtonList) {\r\n                    // Read button value.\r\n                    const lButtonValue = this.mGamepadInformation.mapping.executeMapping(lButton, lGamepad);\r\n                    // Set button value.\r\n                    this.setButtonState(lButton, lButtonValue);\r\n                }\r\n            }\r\n            // Stop loop on disconnect.\r\n            if (this.connected) {\r\n                globalThis.requestAnimationFrame(lLoop);\r\n            }\r\n            else {\r\n                this.mLoopRunning = false;\r\n            }\r\n        };\r\n        // Request starting animation frame.\r\n        globalThis.requestAnimationFrame(lLoop);\r\n        this.mLoopRunning = true;\r\n    }\r\n}\r\nexports.GamepadInputDevice = GamepadInputDevice;\r\n//# sourceMappingURL=gamepad-input-device.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MouseKeyboardInputDevice = void 0;\r\nconst input_device_enum_1 = require(\"../enum/input-device.enum\");\r\nconst mouse_button_enum_1 = require(\"../enum/mouse-button.enum\");\r\nconst base_input_device_1 = require(\"./base-input-device\");\r\nclass MouseKeyboardInputDevice extends base_input_device_1.BaseInputDevice {\r\n    /**\r\n     * Constructor.\r\n     * @param pConfiguration - Iput configuration.\r\n     */\r\n    constructor(pConfiguration) {\r\n        const lDeviceId = 'KEYBOARD_MOUSE_1';\r\n        const lDeviceConfiguration = pConfiguration.deviceConfiguration(lDeviceId);\r\n        super(lDeviceId, input_device_enum_1.InputDevice.MouseKeyboard, lDeviceConfiguration);\r\n        this.mMovementX = 0;\r\n        this.mMovementY = 0;\r\n        this.mLoopRunning = false;\r\n        this.setupCaptureListener();\r\n    }\r\n    /**\r\n     * On connection state change.\r\n     */\r\n    onConnectionStateChange() {\r\n        if (this.connected && !this.mLoopRunning) {\r\n            this.startMouseMoveScanLoop();\r\n        }\r\n    }\r\n    /**\r\n     * Set value of mouse button.\r\n     * @param pButtonNumber - Button number of MouseEvent.button.\r\n     * @param pValue - Button values.\r\n     */\r\n    setMouseButtonValue(pButtonNumber, pValue) {\r\n        switch (pButtonNumber) {\r\n            case 0: {\r\n                this.setButtonState(mouse_button_enum_1.MouseButton.MainLeft, pValue);\r\n                break;\r\n            }\r\n            case 1: {\r\n                this.setButtonState(mouse_button_enum_1.MouseButton.MainMiddle, pValue);\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.setButtonState(mouse_button_enum_1.MouseButton.MainRight, pValue);\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.setButtonState(mouse_button_enum_1.MouseButton.SecondaryBack, pValue);\r\n                break;\r\n            }\r\n            case 4: {\r\n                this.setButtonState(mouse_button_enum_1.MouseButton.SecondaryForward, pValue);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Setup event listener for keyboard and mouse events.\r\n     */\r\n    setupCaptureListener() {\r\n        // Capture mouse movement for next frame.\r\n        document.addEventListener('mousemove', (pMouseEvent) => {\r\n            this.mMovementX += pMouseEvent.movementX;\r\n            this.mMovementY += pMouseEvent.movementY;\r\n        });\r\n        // Mouse button events.\r\n        document.addEventListener('mouseup', (pMouseEvent) => {\r\n            this.setMouseButtonValue(pMouseEvent.button, 0);\r\n        });\r\n        document.addEventListener('mousedown', (pMouseEvent) => {\r\n            this.setMouseButtonValue(pMouseEvent.button, 1);\r\n        });\r\n        // Keyboard event.\r\n        document.addEventListener('keydown', (pKeyboardEvent) => {\r\n            const lInputKey = pKeyboardEvent.code;\r\n            this.setButtonState(lInputKey, 1);\r\n        });\r\n        document.addEventListener('keyup', (pKeyboardEvent) => {\r\n            const lInputKey = pKeyboardEvent.code;\r\n            this.setButtonState(lInputKey, 0);\r\n        });\r\n    }\r\n    /**\r\n     * Start scanning mouse movements.\r\n     */\r\n    startMouseMoveScanLoop() {\r\n        // Reset mouse movement.\r\n        this.mMovementX = 0;\r\n        this.mMovementY = 0;\r\n        const lMouseMoveReport = () => {\r\n            // Calculate to axis value by set base value to 10 pixels.\r\n            this.setButtonState(mouse_button_enum_1.MouseButton.Xaxis, this.mMovementX / 10);\r\n            this.setButtonState(mouse_button_enum_1.MouseButton.Yaxis, this.mMovementY / 10);\r\n            // Reset mouse movement.\r\n            this.mMovementX = 0;\r\n            this.mMovementY = 0;\r\n            if (this.connected) {\r\n                globalThis.requestAnimationFrame(lMouseMoveReport);\r\n            }\r\n            else {\r\n                this.mLoopRunning = false;\r\n            }\r\n        };\r\n        globalThis.requestAnimationFrame(lMouseMoveReport);\r\n        this.mLoopRunning = true;\r\n    }\r\n}\r\nexports.MouseKeyboardInputDevice = MouseKeyboardInputDevice;\r\n//# sourceMappingURL=mouse-keyboard-input-device.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ButtonValueType = void 0;\r\nvar ButtonValueType;\r\n(function (ButtonValueType) {\r\n    ButtonValueType[ButtonValueType[\"Button\"] = 1] = \"Button\";\r\n    ButtonValueType[ButtonValueType[\"Axis\"] = 2] = \"Axis\";\r\n})(ButtonValueType = exports.ButtonValueType || (exports.ButtonValueType = {}));\r\n//# sourceMappingURL=button-value-type.enum.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GamepadButton = void 0;\r\nvar GamepadButton;\r\n(function (GamepadButton) {\r\n    GamepadButton[\"ClusterButtonBottom\"] = \"clusterButtonBottom\";\r\n    GamepadButton[\"ClusterButtonRight\"] = \"clusterButtonRight\";\r\n    GamepadButton[\"ClusterButtonLeft\"] = \"clusterButtonLeft\";\r\n    GamepadButton[\"ClusterButtonTop\"] = \"clusterButtonTop\";\r\n    GamepadButton[\"ButtonLeft\"] = \"buttonLeft\";\r\n    GamepadButton[\"ButtonRight\"] = \"buttonRight\";\r\n    GamepadButton[\"TriggerLeft\"] = \"triggerLeft\";\r\n    GamepadButton[\"TriggerRight\"] = \"triggerRight\";\r\n    GamepadButton[\"SelectButton\"] = \"selectButton\";\r\n    GamepadButton[\"StartButton\"] = \"startButton\";\r\n    GamepadButton[\"HomeButton\"] = \"homeButton\";\r\n    GamepadButton[\"DirectionalPadTop\"] = \"directionalPadTop\";\r\n    GamepadButton[\"DirectionalPadBottom\"] = \"directionalPadBottom\";\r\n    GamepadButton[\"DirectionalPadRight\"] = \"directionalPadRight\";\r\n    GamepadButton[\"DirectionalPadLeft\"] = \"directionalPadLeft\";\r\n    GamepadButton[\"LeftThumbStickButton\"] = \"leftThumbStickButton\";\r\n    GamepadButton[\"LeftThumbStickXaxis\"] = \"leftThumbStickXaxis\";\r\n    GamepadButton[\"LeftThumbStickYaxis\"] = \"leftThumbStickYaxis\";\r\n    GamepadButton[\"RightThumbStickButton\"] = \"rightThumbStickButton\";\r\n    GamepadButton[\"RightThumbStickXaxis\"] = \"rightThumbStickXaxis\";\r\n    GamepadButton[\"RightThumbStickYaxis\"] = \"rightThumbStickYaxis\";\r\n})(GamepadButton = exports.GamepadButton || (exports.GamepadButton = {}));\r\n//# sourceMappingURL=gamepad-button.enum.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputDevice = void 0;\r\nvar InputDevice;\r\n(function (InputDevice) {\r\n    InputDevice[InputDevice[\"MouseKeyboard\"] = 1] = \"MouseKeyboard\";\r\n    InputDevice[InputDevice[\"Gamepad\"] = 2] = \"Gamepad\";\r\n})(InputDevice = exports.InputDevice || (exports.InputDevice = {}));\r\n//# sourceMappingURL=input-device.enum.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KeyboardButton = void 0;\r\nvar KeyboardButton;\r\n(function (KeyboardButton) {\r\n    // Letter keys.\r\n    KeyboardButton[\"KeyA\"] = \"KeyA\";\r\n    KeyboardButton[\"KeyB\"] = \"KeyB\";\r\n    KeyboardButton[\"KeyC\"] = \"KeyC\";\r\n    KeyboardButton[\"KeyD\"] = \"KeyD\";\r\n    KeyboardButton[\"KeyE\"] = \"KeyE\";\r\n    KeyboardButton[\"KeyF\"] = \"KeyF\";\r\n    KeyboardButton[\"KeyG\"] = \"KeyG\";\r\n    KeyboardButton[\"KeyH\"] = \"KeyH\";\r\n    KeyboardButton[\"KeyI\"] = \"KeyI\";\r\n    KeyboardButton[\"KeyJ\"] = \"KeyJ\";\r\n    KeyboardButton[\"KeyK\"] = \"KeyK\";\r\n    KeyboardButton[\"KeyL\"] = \"KeyL\";\r\n    KeyboardButton[\"KeyM\"] = \"KeyM\";\r\n    KeyboardButton[\"KeyN\"] = \"KeyN\";\r\n    KeyboardButton[\"KeyO\"] = \"KeyO\";\r\n    KeyboardButton[\"KeyP\"] = \"KeyP\";\r\n    KeyboardButton[\"KeyQ\"] = \"KeyQ\";\r\n    KeyboardButton[\"KeyR\"] = \"KeyR\";\r\n    KeyboardButton[\"KeyS\"] = \"KeyS\";\r\n    KeyboardButton[\"KeyT\"] = \"KeyT\";\r\n    KeyboardButton[\"KeyU\"] = \"KeyU\";\r\n    KeyboardButton[\"KeyV\"] = \"KeyV\";\r\n    KeyboardButton[\"KeyW\"] = \"KeyW\";\r\n    KeyboardButton[\"KeyX\"] = \"KeyX\";\r\n    KeyboardButton[\"KeyY\"] = \"KeyY\";\r\n    KeyboardButton[\"KeyZ\"] = \"KeyZ\";\r\n    // Digit keys.\r\n    KeyboardButton[\"Digit0\"] = \"Digit0\";\r\n    KeyboardButton[\"Digit1\"] = \"Digit1\";\r\n    KeyboardButton[\"Digit2\"] = \"Digit2\";\r\n    KeyboardButton[\"Digit3\"] = \"Digit3\";\r\n    KeyboardButton[\"Digit4\"] = \"Digit4\";\r\n    KeyboardButton[\"Digit5\"] = \"Digit5\";\r\n    KeyboardButton[\"Digit6\"] = \"Digit6\";\r\n    KeyboardButton[\"Digit7\"] = \"Digit7\";\r\n    KeyboardButton[\"Digit8\"] = \"Digit8\";\r\n    KeyboardButton[\"Digit9\"] = \"Digit9\";\r\n    // Numberpad key.\r\n    KeyboardButton[\"NumLock\"] = \"NumLock\";\r\n    KeyboardButton[\"Numpad0\"] = \"Numpad0\";\r\n    KeyboardButton[\"Numpad1\"] = \"Numpad1\";\r\n    KeyboardButton[\"Numpad2\"] = \"Numpad2\";\r\n    KeyboardButton[\"Numpad3\"] = \"Numpad3\";\r\n    KeyboardButton[\"Numpad4\"] = \"Numpad4\";\r\n    KeyboardButton[\"Numpad5\"] = \"Numpad5\";\r\n    KeyboardButton[\"Numpad6\"] = \"Numpad6\";\r\n    KeyboardButton[\"Numpad7\"] = \"Numpad7\";\r\n    KeyboardButton[\"Numpad8\"] = \"Numpad8\";\r\n    KeyboardButton[\"Numpad9\"] = \"Numpad9\";\r\n    KeyboardButton[\"NumpadAdd\"] = \"NumpadAdd\";\r\n    KeyboardButton[\"NumpadComma\"] = \"NumpadComma\";\r\n    KeyboardButton[\"NumpadDecimal\"] = \"NumpadDecimal\";\r\n    KeyboardButton[\"NumpadDivide\"] = \"NumpadDivide\";\r\n    KeyboardButton[\"NumpadEnter\"] = \"NumpadEnter\";\r\n    KeyboardButton[\"NumpadMultiply\"] = \"NumpadMultiply\";\r\n    KeyboardButton[\"NumpadSubtract\"] = \"NumpadSubtract\";\r\n    // Function keys.\r\n    KeyboardButton[\"F1\"] = \"F1\";\r\n    KeyboardButton[\"F2\"] = \"F2\";\r\n    KeyboardButton[\"F3\"] = \"F3\";\r\n    KeyboardButton[\"F4\"] = \"F4\";\r\n    KeyboardButton[\"F5\"] = \"F5\";\r\n    KeyboardButton[\"F6\"] = \"F6\";\r\n    KeyboardButton[\"F7\"] = \"F7\";\r\n    KeyboardButton[\"F8\"] = \"F8\";\r\n    KeyboardButton[\"F9\"] = \"F9\";\r\n    KeyboardButton[\"F10\"] = \"F10\";\r\n    KeyboardButton[\"F11\"] = \"F11\";\r\n    KeyboardButton[\"F12\"] = \"F12\";\r\n    KeyboardButton[\"F13\"] = \"F13\";\r\n    KeyboardButton[\"F14\"] = \"F14\";\r\n    KeyboardButton[\"F15\"] = \"F15\";\r\n    KeyboardButton[\"F16\"] = \"F16\";\r\n    KeyboardButton[\"F17\"] = \"F17\";\r\n    KeyboardButton[\"F18\"] = \"F18\";\r\n    KeyboardButton[\"F19\"] = \"F19\";\r\n    KeyboardButton[\"F20\"] = \"F20\";\r\n    KeyboardButton[\"F21\"] = \"F21\";\r\n    KeyboardButton[\"F22\"] = \"F22\";\r\n    KeyboardButton[\"F23\"] = \"F23\";\r\n    KeyboardButton[\"F24\"] = \"F24\";\r\n    // Arrow keys.\r\n    KeyboardButton[\"ArrowDown\"] = \"ArrowDown\";\r\n    KeyboardButton[\"ArrowLeft\"] = \"ArrowLeft\";\r\n    KeyboardButton[\"ArrowRight\"] = \"ArrowRight\";\r\n    KeyboardButton[\"ArrowUp\"] = \"ArrowUp\";\r\n    // Main metas\r\n    KeyboardButton[\"Escape\"] = \"Escape\";\r\n    KeyboardButton[\"AltLeft\"] = \"AltLeft\";\r\n    KeyboardButton[\"AltRight\"] = \"AltRight\";\r\n    KeyboardButton[\"CapsLock\"] = \"CapsLock\";\r\n    KeyboardButton[\"MetaLeft\"] = \"MetaLeft\";\r\n    KeyboardButton[\"MetaRight\"] = \"MetaRight\";\r\n    KeyboardButton[\"OsLeft\"] = \"OSLeft\";\r\n    KeyboardButton[\"OsRight\"] = \"OSRight\";\r\n    KeyboardButton[\"ShiftLeft\"] = \"ShiftLeft\";\r\n    KeyboardButton[\"ShiftRight\"] = \"ShiftRight\";\r\n    KeyboardButton[\"ControlLeft\"] = \"ControlLeft\";\r\n    KeyboardButton[\"ControlRight\"] = \"ControlRight\";\r\n    // White space key.s\r\n    KeyboardButton[\"Enter\"] = \"Enter\";\r\n    KeyboardButton[\"Space\"] = \"Space\";\r\n    KeyboardButton[\"Tab\"] = \"Tab\";\r\n    // Center meta\r\n    KeyboardButton[\"Delete\"] = \"Delete\";\r\n    KeyboardButton[\"End\"] = \"End\";\r\n    KeyboardButton[\"PageDown\"] = \"PageDown\";\r\n    KeyboardButton[\"PageUp\"] = \"PageUp\";\r\n    KeyboardButton[\"Insert\"] = \"Insert\";\r\n    KeyboardButton[\"ScrollLock\"] = \"ScrollLock\";\r\n    // Media keys.\r\n    KeyboardButton[\"AudioVolumeUp\"] = \"AudioVolumeUp\";\r\n    KeyboardButton[\"Home\"] = \"Home\";\r\n    KeyboardButton[\"ContextMenu\"] = \"ContextMenu\";\r\n    // Brackes, slash and dot keys.\r\n    KeyboardButton[\"Backquote\"] = \"Backquote\";\r\n    KeyboardButton[\"Backslash\"] = \"Backslash\";\r\n    KeyboardButton[\"Backspace\"] = \"Backspace\";\r\n    KeyboardButton[\"BracketLeft\"] = \"BracketLeft\";\r\n    KeyboardButton[\"BracketRight\"] = \"BracketRight\";\r\n    KeyboardButton[\"Comma\"] = \"Comma\";\r\n    KeyboardButton[\"IntlBackslash\"] = \"IntlBackslash\";\r\n    KeyboardButton[\"Period\"] = \"Period\";\r\n    KeyboardButton[\"Quote\"] = \"Quote\";\r\n    KeyboardButton[\"Semicolon\"] = \"Semicolon\";\r\n    KeyboardButton[\"Slash\"] = \"Slash\";\r\n    KeyboardButton[\"Minus\"] = \"Minus\";\r\n    KeyboardButton[\"Equal\"] = \"Equal\";\r\n})(KeyboardButton = exports.KeyboardButton || (exports.KeyboardButton = {}));\r\n//# sourceMappingURL=keyboard-button.enum.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MouseButton = void 0;\r\nvar MouseButton;\r\n(function (MouseButton) {\r\n    // Main trigger.\r\n    MouseButton[\"MainLeft\"] = \"mainLeft\";\r\n    MouseButton[\"MainRight\"] = \"mainRight\";\r\n    MouseButton[\"MainMiddle\"] = \"mainMiddle\";\r\n    MouseButton[\"SecondaryBack\"] = \"secondaryBack\";\r\n    MouseButton[\"SecondaryForward\"] = \"secondaryForward\";\r\n    // Axis.\r\n    MouseButton[\"Xaxis\"] = \"xAxis\";\r\n    MouseButton[\"Yaxis\"] = \"yAxis\";\r\n})(MouseButton = exports.MouseButton || (exports.MouseButton = {}));\r\n//# sourceMappingURL=mouse-button.enum.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputActionEvent = void 0;\r\nclass InputActionEvent extends Event {\r\n    /**\r\n     * Constructor.\r\n     * @param pType - Event type.\r\n     * @param pState - Button state.\r\n     */\r\n    constructor(pType, pAction, pState, pButtons) {\r\n        super(pType);\r\n        this.mAction = pAction;\r\n        this.mState = pState;\r\n        this.mButtons = pButtons;\r\n    }\r\n    /**\r\n     * Triggered action.\r\n     */\r\n    get action() {\r\n        return this.mAction;\r\n    }\r\n    /**\r\n     * Action Buttons.\r\n     */\r\n    get buttons() {\r\n        return this.mButtons;\r\n    }\r\n    /**\r\n     * Button pressed state.\r\n     */\r\n    get isPressed() {\r\n        return this.mState > 0;\r\n    }\r\n    /**\r\n     * Button state.\r\n     */\r\n    get state() {\r\n        return this.mState;\r\n    }\r\n}\r\nexports.InputActionEvent = InputActionEvent;\r\n//# sourceMappingURL=input-action-event.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputButtonEvent = void 0;\r\nclass InputButtonEvent extends Event {\r\n    /**\r\n     * Constructor.\r\n     * @param pType - Event type.\r\n     * @param pState - Button state.\r\n     */\r\n    constructor(pType, pButton, pState) {\r\n        super(pType);\r\n        this.mState = pState;\r\n        this.mButton = pButton;\r\n    }\r\n    /**\r\n     * Button.\r\n     */\r\n    get button() {\r\n        return this.mButton;\r\n    }\r\n    /**\r\n     * Button pressed state.\r\n     */\r\n    get isPressed() {\r\n        return this.mState > 0;\r\n    }\r\n    /**\r\n     * Button state.\r\n     */\r\n    get state() {\r\n        return this.mState;\r\n    }\r\n}\r\nexports.InputButtonEvent = InputButtonEvent;\r\n//# sourceMappingURL=input-button-event.js.map","\"use strict\";\r\n/* istanbul ignore file */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GamepadButton = exports.MouseButton = exports.KeyboardButton = exports.InputButtonEvent = exports.InputActionEvent = exports.BaseInputDevice = exports.InputConfiguration = exports.InputDevices = exports.GamepadConnector = exports.MouseKeyboardConnector = exports.DeviceConfiguration = void 0;\r\nvar device_configuration_1 = require(\"./configuration/device-configuration\");\r\nObject.defineProperty(exports, \"DeviceConfiguration\", { enumerable: true, get: function () { return device_configuration_1.DeviceConfiguration; } });\r\nvar mouse_keyboard_connector_1 = require(\"./connector/mouse-keyboard-connector\");\r\nObject.defineProperty(exports, \"MouseKeyboardConnector\", { enumerable: true, get: function () { return mouse_keyboard_connector_1.MouseKeyboardConnector; } });\r\nvar gamepad_connector_1 = require(\"./connector/gamepad-connector\");\r\nObject.defineProperty(exports, \"GamepadConnector\", { enumerable: true, get: function () { return gamepad_connector_1.GamepadConnector; } });\r\nvar input_devices_1 = require(\"./input-devices\");\r\nObject.defineProperty(exports, \"InputDevices\", { enumerable: true, get: function () { return input_devices_1.InputDevices; } });\r\nvar input_configuration_1 = require(\"./configuration/input-configuration\");\r\nObject.defineProperty(exports, \"InputConfiguration\", { enumerable: true, get: function () { return input_configuration_1.InputConfiguration; } });\r\nvar base_input_device_1 = require(\"./device/base-input-device\");\r\nObject.defineProperty(exports, \"BaseInputDevice\", { enumerable: true, get: function () { return base_input_device_1.BaseInputDevice; } });\r\nvar input_action_event_1 = require(\"./event/input-action-event\");\r\nObject.defineProperty(exports, \"InputActionEvent\", { enumerable: true, get: function () { return input_action_event_1.InputActionEvent; } });\r\nvar input_button_event_1 = require(\"./event/input-button-event\");\r\nObject.defineProperty(exports, \"InputButtonEvent\", { enumerable: true, get: function () { return input_button_event_1.InputButtonEvent; } });\r\nvar keyboard_button_enum_1 = require(\"./enum/keyboard-button.enum\");\r\nObject.defineProperty(exports, \"KeyboardButton\", { enumerable: true, get: function () { return keyboard_button_enum_1.KeyboardButton; } });\r\nvar mouse_button_enum_1 = require(\"./enum/mouse-button.enum\");\r\nObject.defineProperty(exports, \"MouseButton\", { enumerable: true, get: function () { return mouse_button_enum_1.MouseButton; } });\r\nvar gamepad_button_enum_1 = require(\"./enum/gamepad-button.enum\");\r\nObject.defineProperty(exports, \"GamepadButton\", { enumerable: true, get: function () { return gamepad_button_enum_1.GamepadButton; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputDevices = void 0;\r\nconst core_data_1 = require(\"@kartoffelgames/core.data\");\r\nclass InputDevices {\r\n    /**\r\n     * Constructor.\r\n     * @param pConfiguration - input configuration.\r\n     */\r\n    constructor(pConfiguration) {\r\n        this.mConnectionChangeListenerList = new Array();\r\n        this.mInputDevices = new core_data_1.Dictionary();\r\n        this.mConfiguration = pConfiguration;\r\n    }\r\n    /**\r\n     * Get input device configuration.\r\n     */\r\n    get configuration() {\r\n        return this.mConfiguration;\r\n    }\r\n    /**\r\n     * Get all input devices.\r\n     */\r\n    get devices() {\r\n        return [...this.mInputDevices.values()];\r\n    }\r\n    /**\r\n     * On connection change.\r\n     * @param pListener - Connection change listener.\r\n     */\r\n    onConnectionChange(pListener) {\r\n        this.mConnectionChangeListenerList.push(pListener);\r\n    }\r\n    /**\r\n     * Register input connector.\r\n     * @param pConnector - Input connector.\r\n     */\r\n    registerConnector(pConnector) {\r\n        pConnector.init(this);\r\n    }\r\n    /**\r\n     * Register new device.\r\n     * @param pDevice - Device.\r\n     */\r\n    registerDevice(pDevice) {\r\n        let lDevice;\r\n        // Init new device or reconnect old.\r\n        if (this.mInputDevices.has(pDevice.id)) {\r\n            lDevice = this.mInputDevices.get(pDevice.id);\r\n        }\r\n        else {\r\n            this.mInputDevices.set(pDevice.id, pDevice);\r\n            lDevice = pDevice;\r\n        }\r\n        lDevice.connected = true;\r\n        this.dispatchConnectionChangeEvent(lDevice);\r\n    }\r\n    /**\r\n     * Unregister device.\r\n     * @param pDevice - Device.\r\n     */\r\n    unregisterDevice(pDevice) {\r\n        if (this.mInputDevices.has(pDevice.id)) {\r\n            const lDevice = this.mInputDevices.get(pDevice.id);\r\n            lDevice.connected = false;\r\n            this.dispatchConnectionChangeEvent(lDevice);\r\n        }\r\n    }\r\n    /**\r\n     * Call all connection change listener.\r\n     * @param pDevice - Changed device.\r\n     */\r\n    dispatchConnectionChangeEvent(pDevice) {\r\n        for (const lCallback of this.mConnectionChangeListenerList) {\r\n            lCallback.apply(this, [pDevice]);\r\n        }\r\n    }\r\n}\r\nexports.InputDevices = InputDevices;\r\n//# sourceMappingURL=input-devices.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\tif (cachedModule.error !== undefined) throw cachedModule.error;\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\ttry {\n\t\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\t\tmodule = execOptions.module;\n\t\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\t} catch(e) {\n\t\tmodule.error = e;\n\t\tthrow e;\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference all chunks\n__webpack_require__.hu = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".hot-update.js\";\n};","__webpack_require__.hmrF = () => (\"main.\" + __webpack_require__.h() + \".hot-update.json\");","__webpack_require__.h = () => (\"2f59fc4360d34aca6ef8\")","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"@kartoffelgames/web.gpu:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var currentModuleData = {};\nvar installedModules = __webpack_require__.c;\n\n// module and require creation\nvar currentChildModule;\nvar currentParents = [];\n\n// status\nvar registeredStatusHandlers = [];\nvar currentStatus = \"idle\";\n\n// while downloading\nvar blockingPromises = 0;\nvar blockingPromisesWaiting = [];\n\n// The update info\nvar currentUpdateApplyHandlers;\nvar queuedInvalidatedModules;\n\n// eslint-disable-next-line no-unused-vars\n__webpack_require__.hmrD = currentModuleData;\n\n__webpack_require__.i.push(function (options) {\n\tvar module = options.module;\n\tvar require = createRequire(options.require, options.id);\n\tmodule.hot = createModuleHotObject(options.id, module);\n\tmodule.parents = currentParents;\n\tmodule.children = [];\n\tcurrentParents = [];\n\toptions.require = require;\n});\n\n__webpack_require__.hmrC = {};\n__webpack_require__.hmrI = {};\n\nfunction createRequire(require, moduleId) {\n\tvar me = installedModules[moduleId];\n\tif (!me) return require;\n\tvar fn = function (request) {\n\t\tif (me.hot.active) {\n\t\t\tif (installedModules[request]) {\n\t\t\t\tvar parents = installedModules[request].parents;\n\t\t\t\tif (parents.indexOf(moduleId) === -1) {\n\t\t\t\t\tparents.push(moduleId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentParents = [moduleId];\n\t\t\t\tcurrentChildModule = request;\n\t\t\t}\n\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\tme.children.push(request);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\trequest +\n\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\tmoduleId\n\t\t\t);\n\t\t\tcurrentParents = [];\n\t\t}\n\t\treturn require(request);\n\t};\n\tvar createPropertyDescriptor = function (name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn require[name];\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\trequire[name] = value;\n\t\t\t}\n\t\t};\n\t};\n\tfor (var name in require) {\n\t\tif (Object.prototype.hasOwnProperty.call(require, name) && name !== \"e\") {\n\t\t\tObject.defineProperty(fn, name, createPropertyDescriptor(name));\n\t\t}\n\t}\n\tfn.e = function (chunkId) {\n\t\treturn trackBlockingPromise(require.e(chunkId));\n\t};\n\treturn fn;\n}\n\nfunction createModuleHotObject(moduleId, me) {\n\tvar _main = currentChildModule !== moduleId;\n\tvar hot = {\n\t\t// private stuff\n\t\t_acceptedDependencies: {},\n\t\t_acceptedErrorHandlers: {},\n\t\t_declinedDependencies: {},\n\t\t_selfAccepted: false,\n\t\t_selfDeclined: false,\n\t\t_selfInvalidated: false,\n\t\t_disposeHandlers: [],\n\t\t_main: _main,\n\t\t_requireSelf: function () {\n\t\t\tcurrentParents = me.parents.slice();\n\t\t\tcurrentChildModule = _main ? undefined : moduleId;\n\t\t\t__webpack_require__(moduleId);\n\t\t},\n\n\t\t// Module API\n\t\tactive: true,\n\t\taccept: function (dep, callback, errorHandler) {\n\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\telse if (typeof dep === \"object\" && dep !== null) {\n\t\t\t\tfor (var i = 0; i < dep.length; i++) {\n\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function () {};\n\t\t\t\t\thot._acceptedErrorHandlers[dep[i]] = errorHandler;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thot._acceptedDependencies[dep] = callback || function () {};\n\t\t\t\thot._acceptedErrorHandlers[dep] = errorHandler;\n\t\t\t}\n\t\t},\n\t\tdecline: function (dep) {\n\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t},\n\t\tdispose: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\taddDisposeHandler: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\tremoveDisposeHandler: function (callback) {\n\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t},\n\t\tinvalidate: function () {\n\t\t\tthis._selfInvalidated = true;\n\t\t\tswitch (currentStatus) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\tcurrentUpdateApplyHandlers = [];\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetStatus(\"ready\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prepare\":\n\t\t\t\tcase \"check\":\n\t\t\t\tcase \"dispose\":\n\t\t\t\tcase \"apply\":\n\t\t\t\t\t(queuedInvalidatedModules = queuedInvalidatedModules || []).push(\n\t\t\t\t\t\tmoduleId\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// ignore requests in error states\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// Management API\n\t\tcheck: hotCheck,\n\t\tapply: hotApply,\n\t\tstatus: function (l) {\n\t\t\tif (!l) return currentStatus;\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\taddStatusHandler: function (l) {\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\tremoveStatusHandler: function (l) {\n\t\t\tvar idx = registeredStatusHandlers.indexOf(l);\n\t\t\tif (idx >= 0) registeredStatusHandlers.splice(idx, 1);\n\t\t},\n\n\t\t//inherit from previous dispose call\n\t\tdata: currentModuleData[moduleId]\n\t};\n\tcurrentChildModule = undefined;\n\treturn hot;\n}\n\nfunction setStatus(newStatus) {\n\tcurrentStatus = newStatus;\n\tvar results = [];\n\n\tfor (var i = 0; i < registeredStatusHandlers.length; i++)\n\t\tresults[i] = registeredStatusHandlers[i].call(null, newStatus);\n\n\treturn Promise.all(results);\n}\n\nfunction unblock() {\n\tif (--blockingPromises === 0) {\n\t\tsetStatus(\"ready\").then(function () {\n\t\t\tif (blockingPromises === 0) {\n\t\t\t\tvar list = blockingPromisesWaiting;\n\t\t\t\tblockingPromisesWaiting = [];\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlist[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction trackBlockingPromise(promise) {\n\tswitch (currentStatus) {\n\t\tcase \"ready\":\n\t\t\tsetStatus(\"prepare\");\n\t\t/* fallthrough */\n\t\tcase \"prepare\":\n\t\t\tblockingPromises++;\n\t\t\tpromise.then(unblock, unblock);\n\t\t\treturn promise;\n\t\tdefault:\n\t\t\treturn promise;\n\t}\n}\n\nfunction waitForBlockingPromises(fn) {\n\tif (blockingPromises === 0) return fn();\n\treturn new Promise(function (resolve) {\n\t\tblockingPromisesWaiting.push(function () {\n\t\t\tresolve(fn());\n\t\t});\n\t});\n}\n\nfunction hotCheck(applyOnUpdate) {\n\tif (currentStatus !== \"idle\") {\n\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t}\n\treturn setStatus(\"check\")\n\t\t.then(__webpack_require__.hmrM)\n\t\t.then(function (update) {\n\t\t\tif (!update) {\n\t\t\t\treturn setStatus(applyInvalidatedModules() ? \"ready\" : \"idle\").then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn setStatus(\"prepare\").then(function () {\n\t\t\t\tvar updatedModules = [];\n\t\t\t\tcurrentUpdateApplyHandlers = [];\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tObject.keys(__webpack_require__.hmrC).reduce(function (\n\t\t\t\t\t\tpromises,\n\t\t\t\t\t\tkey\n\t\t\t\t\t) {\n\t\t\t\t\t\t__webpack_require__.hmrC[key](\n\t\t\t\t\t\t\tupdate.c,\n\t\t\t\t\t\t\tupdate.r,\n\t\t\t\t\t\t\tupdate.m,\n\t\t\t\t\t\t\tpromises,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers,\n\t\t\t\t\t\t\tupdatedModules\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn promises;\n\t\t\t\t\t},\n\t\t\t\t\t[])\n\t\t\t\t).then(function () {\n\t\t\t\t\treturn waitForBlockingPromises(function () {\n\t\t\t\t\t\tif (applyOnUpdate) {\n\t\t\t\t\t\t\treturn internalApply(applyOnUpdate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn setStatus(\"ready\").then(function () {\n\t\t\t\t\t\t\t\treturn updatedModules;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n}\n\nfunction hotApply(options) {\n\tif (currentStatus !== \"ready\") {\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow new Error(\n\t\t\t\t\"apply() is only allowed in ready status (state: \" +\n\t\t\t\t\tcurrentStatus +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t});\n\t}\n\treturn internalApply(options);\n}\n\nfunction internalApply(options) {\n\toptions = options || {};\n\n\tapplyInvalidatedModules();\n\n\tvar results = currentUpdateApplyHandlers.map(function (handler) {\n\t\treturn handler(options);\n\t});\n\tcurrentUpdateApplyHandlers = undefined;\n\n\tvar errors = results\n\t\t.map(function (r) {\n\t\t\treturn r.error;\n\t\t})\n\t\t.filter(Boolean);\n\n\tif (errors.length > 0) {\n\t\treturn setStatus(\"abort\").then(function () {\n\t\t\tthrow errors[0];\n\t\t});\n\t}\n\n\t// Now in \"dispose\" phase\n\tvar disposePromise = setStatus(\"dispose\");\n\n\tresults.forEach(function (result) {\n\t\tif (result.dispose) result.dispose();\n\t});\n\n\t// Now in \"apply\" phase\n\tvar applyPromise = setStatus(\"apply\");\n\n\tvar error;\n\tvar reportError = function (err) {\n\t\tif (!error) error = err;\n\t};\n\n\tvar outdatedModules = [];\n\tresults.forEach(function (result) {\n\t\tif (result.apply) {\n\t\t\tvar modules = result.apply(reportError);\n\t\t\tif (modules) {\n\t\t\t\tfor (var i = 0; i < modules.length; i++) {\n\t\t\t\t\toutdatedModules.push(modules[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn Promise.all([disposePromise, applyPromise]).then(function () {\n\t\t// handle errors in accept handlers and self accepted module load\n\t\tif (error) {\n\t\t\treturn setStatus(\"fail\").then(function () {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\n\t\tif (queuedInvalidatedModules) {\n\t\t\treturn internalApply(options).then(function (list) {\n\t\t\t\toutdatedModules.forEach(function (moduleId) {\n\t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n\t\t\t\t});\n\t\t\t\treturn list;\n\t\t\t});\n\t\t}\n\n\t\treturn setStatus(\"idle\").then(function () {\n\t\t\treturn outdatedModules;\n\t\t});\n\t});\n}\n\nfunction applyInvalidatedModules() {\n\tif (queuedInvalidatedModules) {\n\t\tif (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];\n\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\tqueuedInvalidatedModules.forEach(function (moduleId) {\n\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tqueuedInvalidatedModules = undefined;\n\t\treturn true;\n\t}\n}","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../dist/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\nvar currentUpdatedModulesList;\nvar waitingUpdateResolves = {};\nfunction loadUpdateChunk(chunkId, updatedModulesList) {\n\tcurrentUpdatedModulesList = updatedModulesList;\n\treturn new Promise((resolve, reject) => {\n\t\twaitingUpdateResolves[chunkId] = resolve;\n\t\t// start update chunk loading\n\t\tvar url = __webpack_require__.p + __webpack_require__.hu(chunkId);\n\t\t// create error before stack unwound to get useful stacktrace later\n\t\tvar error = new Error();\n\t\tvar loadingEnded = (event) => {\n\t\t\tif(waitingUpdateResolves[chunkId]) {\n\t\t\t\twaitingUpdateResolves[chunkId] = undefined\n\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\terror.message = 'Loading hot update chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\terror.type = errorType;\n\t\t\t\terror.request = realSrc;\n\t\t\t\treject(error);\n\t\t\t}\n\t\t};\n\t\t__webpack_require__.l(url, loadingEnded);\n\t});\n}\n\nself[\"webpackHotUpdate_kartoffelgames_web_gpu\"] = (chunkId, moreModules, runtime) => {\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\tcurrentUpdate[moduleId] = moreModules[moduleId];\n\t\t\tif(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\n\t\t}\n\t}\n\tif(runtime) currentUpdateRuntime.push(runtime);\n\tif(waitingUpdateResolves[chunkId]) {\n\t\twaitingUpdateResolves[chunkId]();\n\t\twaitingUpdateResolves[chunkId] = undefined;\n\t}\n};\n\nvar currentUpdateChunks;\nvar currentUpdate;\nvar currentUpdateRemovedChunks;\nvar currentUpdateRuntime;\nfunction applyHandler(options) {\n\tif (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;\n\tcurrentUpdateChunks = undefined;\n\tfunction getAffectedModuleEffects(updateModuleId) {\n\t\tvar outdatedModules = [updateModuleId];\n\t\tvar outdatedDependencies = {};\n\n\t\tvar queue = outdatedModules.map(function (id) {\n\t\t\treturn {\n\t\t\t\tchain: [id],\n\t\t\t\tid: id\n\t\t\t};\n\t\t});\n\t\twhile (queue.length > 0) {\n\t\t\tvar queueItem = queue.pop();\n\t\t\tvar moduleId = queueItem.id;\n\t\t\tvar chain = queueItem.chain;\n\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\tif (\n\t\t\t\t!module ||\n\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n\t\t\t)\n\t\t\t\tcontinue;\n\t\t\tif (module.hot._selfDeclined) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"self-declined\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (module.hot._main) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"unaccepted\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n\t\t\t\tvar parentId = module.parents[i];\n\t\t\t\tvar parent = __webpack_require__.c[parentId];\n\t\t\t\tif (!parent) continue;\n\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"declined\",\n\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n\t\t\t\t\tif (!outdatedDependencies[parentId])\n\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdelete outdatedDependencies[parentId];\n\t\t\t\toutdatedModules.push(parentId);\n\t\t\t\tqueue.push({\n\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\tid: parentId\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"accepted\",\n\t\t\tmoduleId: updateModuleId,\n\t\t\toutdatedModules: outdatedModules,\n\t\t\toutdatedDependencies: outdatedDependencies\n\t\t};\n\t}\n\n\tfunction addAllToSet(a, b) {\n\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\tvar item = b[i];\n\t\t\tif (a.indexOf(item) === -1) a.push(item);\n\t\t}\n\t}\n\n\t// at begin all updates modules are outdated\n\t// the \"outdated\" status can propagate to parents if they don't accept the children\n\tvar outdatedDependencies = {};\n\tvar outdatedModules = [];\n\tvar appliedUpdate = {};\n\n\tvar warnUnexpectedRequire = function warnUnexpectedRequire(module) {\n\t\tconsole.warn(\n\t\t\t\"[HMR] unexpected require(\" + module.id + \") to disposed module\"\n\t\t);\n\t};\n\n\tfor (var moduleId in currentUpdate) {\n\t\tif (__webpack_require__.o(currentUpdate, moduleId)) {\n\t\t\tvar newModuleFactory = currentUpdate[moduleId];\n\t\t\t/** @type {TODO} */\n\t\t\tvar result;\n\t\t\tif (newModuleFactory) {\n\t\t\t\tresult = getAffectedModuleEffects(moduleId);\n\t\t\t} else {\n\t\t\t\tresult = {\n\t\t\t\t\ttype: \"disposed\",\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\t/** @type {Error|false} */\n\t\t\tvar abortError = false;\n\t\t\tvar doApply = false;\n\t\t\tvar doDispose = false;\n\t\t\tvar chainInfo = \"\";\n\t\t\tif (result.chain) {\n\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n\t\t\t}\n\t\t\tswitch (result.type) {\n\t\t\t\tcase \"self-declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\t\t\tresult.parentId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unaccepted\":\n\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n\t\t\t\t\tif (!options.ignoreUnaccepted)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"accepted\":\n\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n\t\t\t\t\tdoApply = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disposed\":\n\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n\t\t\t\t\tdoDispose = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n\t\t\t}\n\t\t\tif (abortError) {\n\t\t\t\treturn {\n\t\t\t\t\terror: abortError\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (doApply) {\n\t\t\t\tappliedUpdate[moduleId] = newModuleFactory;\n\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n\t\t\t\t\tif (__webpack_require__.o(result.outdatedDependencies, moduleId)) {\n\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n\t\t\t\t\t\taddAllToSet(\n\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (doDispose) {\n\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentUpdate = undefined;\n\n\t// Store self accepted outdated modules to require them later by the module system\n\tvar outdatedSelfAcceptedModules = [];\n\tfor (var j = 0; j < outdatedModules.length; j++) {\n\t\tvar outdatedModuleId = outdatedModules[j];\n\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\tif (\n\t\t\tmodule &&\n\t\t\t(module.hot._selfAccepted || module.hot._main) &&\n\t\t\t// removed self-accepted modules should not be required\n\t\t\tappliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&\n\t\t\t// when called invalidate self-accepting is not possible\n\t\t\t!module.hot._selfInvalidated\n\t\t) {\n\t\t\toutdatedSelfAcceptedModules.push({\n\t\t\t\tmodule: outdatedModuleId,\n\t\t\t\trequire: module.hot._requireSelf,\n\t\t\t\terrorHandler: module.hot._selfAccepted\n\t\t\t});\n\t\t}\n\t}\n\n\tvar moduleOutdatedDependencies;\n\n\treturn {\n\t\tdispose: function () {\n\t\t\tcurrentUpdateRemovedChunks.forEach(function (chunkId) {\n\t\t\t\tdelete installedChunks[chunkId];\n\t\t\t});\n\t\t\tcurrentUpdateRemovedChunks = undefined;\n\n\t\t\tvar idx;\n\t\t\tvar queue = outdatedModules.slice();\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tvar moduleId = queue.pop();\n\t\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\t\tif (!module) continue;\n\n\t\t\t\tvar data = {};\n\n\t\t\t\t// Call dispose handlers\n\t\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n\t\t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n\t\t\t\t\tdisposeHandlers[j].call(null, data);\n\t\t\t\t}\n\t\t\t\t__webpack_require__.hmrD[moduleId] = data;\n\n\t\t\t\t// disable module (this disables requires from this module)\n\t\t\t\tmodule.hot.active = false;\n\n\t\t\t\t// remove module from cache\n\t\t\t\tdelete __webpack_require__.c[moduleId];\n\n\t\t\t\t// when disposing there is no need to call dispose handler\n\t\t\t\tdelete outdatedDependencies[moduleId];\n\n\t\t\t\t// remove \"parents\" references from all children\n\t\t\t\tfor (j = 0; j < module.children.length; j++) {\n\t\t\t\t\tvar child = __webpack_require__.c[module.children[j]];\n\t\t\t\t\tif (!child) continue;\n\t\t\t\t\tidx = child.parents.indexOf(moduleId);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tchild.parents.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove outdated dependency from module children\n\t\t\tvar dependency;\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tmodule = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tidx = module.children.indexOf(dependency);\n\t\t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tapply: function (reportError) {\n\t\t\t// insert new code\n\t\t\tfor (var updateModuleId in appliedUpdate) {\n\t\t\t\tif (__webpack_require__.o(appliedUpdate, updateModuleId)) {\n\t\t\t\t\t__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// run new runtime modules\n\t\t\tfor (var i = 0; i < currentUpdateRuntime.length; i++) {\n\t\t\t\tcurrentUpdateRuntime[i](__webpack_require__);\n\t\t\t}\n\n\t\t\t// call accept handlers\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tvar callbacks = [];\n\t\t\t\t\t\tvar errorHandlers = [];\n\t\t\t\t\t\tvar dependenciesForCallbacks = [];\n\t\t\t\t\t\tfor (var j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tvar acceptCallback =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedDependencies[dependency];\n\t\t\t\t\t\t\tvar errorHandler =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedErrorHandlers[dependency];\n\t\t\t\t\t\t\tif (acceptCallback) {\n\t\t\t\t\t\t\t\tif (callbacks.indexOf(acceptCallback) !== -1) continue;\n\t\t\t\t\t\t\t\tcallbacks.push(acceptCallback);\n\t\t\t\t\t\t\t\terrorHandlers.push(errorHandler);\n\t\t\t\t\t\t\t\tdependenciesForCallbacks.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var k = 0; k < callbacks.length; k++) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcallbacks[k].call(null, moduleOutdatedDependencies);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (typeof errorHandlers[k] === \"function\") {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\terrorHandlers[k](err, {\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k]\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Load self accepted modules\n\t\t\tfor (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {\n\t\t\t\tvar item = outdatedSelfAcceptedModules[o];\n\t\t\t\tvar moduleId = item.module;\n\t\t\t\ttry {\n\t\t\t\t\titem.require(moduleId);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (typeof item.errorHandler === \"function\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\titem.errorHandler(err, {\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\tmodule: __webpack_require__.c[moduleId]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\ttype: \"self-accept-errored\",\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn outdatedModules;\n\t\t}\n\t};\n}\n__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {\n\tif (!currentUpdate) {\n\t\tcurrentUpdate = {};\n\t\tcurrentUpdateRuntime = [];\n\t\tcurrentUpdateRemovedChunks = [];\n\t\tapplyHandlers.push(applyHandler);\n\t}\n\tif (!__webpack_require__.o(currentUpdate, moduleId)) {\n\t\tcurrentUpdate[moduleId] = __webpack_require__.m[moduleId];\n\t}\n};\n__webpack_require__.hmrC.jsonp = function (\n\tchunkIds,\n\tremovedChunks,\n\tremovedModules,\n\tpromises,\n\tapplyHandlers,\n\tupdatedModulesList\n) {\n\tapplyHandlers.push(applyHandler);\n\tcurrentUpdateChunks = {};\n\tcurrentUpdateRemovedChunks = removedChunks;\n\tcurrentUpdate = removedModules.reduce(function (obj, key) {\n\t\tobj[key] = false;\n\t\treturn obj;\n\t}, {});\n\tcurrentUpdateRuntime = [];\n\tchunkIds.forEach(function (chunkId) {\n\t\tif (\n\t\t\t__webpack_require__.o(installedChunks, chunkId) &&\n\t\t\tinstalledChunks[chunkId] !== undefined\n\t\t) {\n\t\t\tpromises.push(loadUpdateChunk(chunkId, updatedModulesList));\n\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t} else {\n\t\t\tcurrentUpdateChunks[chunkId] = false;\n\t\t}\n\t});\n\tif (__webpack_require__.f) {\n\t\t__webpack_require__.f.jsonpHmr = function (chunkId, promises) {\n\t\t\tif (\n\t\t\t\tcurrentUpdateChunks &&\n\t\t\t\t__webpack_require__.o(currentUpdateChunks, chunkId) &&\n\t\t\t\t!currentUpdateChunks[chunkId]\n\t\t\t) {\n\t\t\t\tpromises.push(loadUpdateChunk(chunkId));\n\t\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t\t}\n\t\t};\n\t}\n};\n\n__webpack_require__.hmrM = () => {\n\tif (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");\n\treturn fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {\n\t\tif(response.status === 404) return; // no update available\n\t\tif(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);\n\t\treturn response.json();\n\t});\n};\n\n// no on chunks loaded\n\n// no jsonp function","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__(\"../../node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=5500&pathname=%2Fws&logging=info&overlay=true&reconnect=10&hot=true&live-reload=true\");\n__webpack_require__(\"../../node_modules/webpack/hot/dev-server.js\");\nvar __webpack_exports__ = __webpack_require__(\"./page/source/index.ts\");\n",""],"names":["view_projection_1","require","orthographic__projection_1","perspective_projection_1","transform_1","attachment_type_enum_1","attachments_1","render_parameter_1","instruction_executer_1","render_instruction_1","gpu_1","render_pipeline_1","simple_buffer_1","shader_1","shader_wgsl_1","render_pass_descriptor_1","render_instruction_set_1","ring_buffer_1","texture_1","texture_usage_enum_1","texture_sampler_1","web_game_input_1","core_data_1","ambient_light_1","gHeight","gWidth","gDepth","_asyncToGenerator","lColorPicker","document","querySelector","lFpsCounter","lGpu","Gpu","create","lCanvas","getElementById","lShader","Shader","default","lAttachments","Attachments","resize","addAttachment","type","AttachmentType","Color","name","format","preferredFormat","canvas","Depth","lRenderPassDescription","RenderPassDescriptor","setDepthAttachment","setColorAttachment","r","g","b","a","lPipeline","RenderPipeline","primitiveCullMode","lAmbientLight","AmbientLight","setColor","lAmbientLightBuffer","SimpleBuffer","GPUBufferUsage","UNIFORM","Float32Array","data","addEventListener","pEvent","lBigint","parseInt","target","value","replace","lRed","lGreen","lBlue","write","_ref2","pBuffer","set","_x","apply","arguments","lPointLightBuffer","STORAGE","lCubeTransform","Transform","setScale","lCubeTransformationBuffer","RingBuffer","getMatrix","TransformMatrix","Transformation","dataArray","lCubeInstanceTransformationData","Array","lWidthIndex","lHeightIndex","lDepthIndex","push","lCubeInstanceTransformationBuffer","lUpdaterFunctions","lRegisterObjectHandler","pId","pSet","pGet","lSlider","lInput","lUpdater","lCurrentData","lSetData","pStringData","lNumberData","parseFloat","_ref3","_x2","pTransform","pData","scaleWidth","scaleHeight","scaleDepth","setTranslation","translationX","translationY","translationZ","setRotation","rotationPitch","rotationYaw","rotationRoll","pivotX","pivotY","pivotZ","lPerspectiveProjection","PerspectiveProjection","aspectRatio","width","height","angleOfView","near","far","lOrtoProjection","OrthographicProjection","lCamera","ViewProjection","transformation","lCameraBuffer","CameraMatrix","lRegisterCameraHandler","_ref4","_x3","lDefaultConfiguaration","DeviceConfiguration","addAction","KeyboardButton","KeyW","KeyS","KeyA","KeyD","ShiftLeft","ControlLeft","KeyQ","KeyE","MouseButton","Xaxis","Yaxis","triggerTolerance","lInputConfiguration","InputConfiguration","lInputDevices","InputDevices","registerConnector","MouseKeyboardConnector","lCurrentActionValue","Dictionary","lKeyboard","devices","action","state","window","setInterval","lSpeed","get","translateInDirection","addEulerRotation","_ref5","_x4","requestPointerLock","lCubeTexture","Texture","TextureUsage","TextureBinding","RenderAttachment","CopyDestination","label","load","lCubeSampler","TextureSampler","lVertexPositionData","lVertexUvData","lVertexNormalData","lMesh","RenderParameter","setVertexData","setIndexData","lInstructionExecutioner","InstructionExecuter","lInstructionSet","RenderInstructionSet","addInstructionSet","lWorldValueBindGroup","bindGroups","getGroup","createBindGroup","setData","lUserInputBindGroup","view","lObjectBindGroup","lObjectRenderInstruction","RenderInstruction","setBindGroup","addInstruction","lLastTime","lRender","pTime","execute","lFps","textContent","toString","requestAnimationFrame","vector_1","constructor","mColor","Vector","pRed","pGreen","pBlue","Exception","concat","exports","matrix_1","quaternion_1","mScale","Matrix","identity","mTranslation","mRotation","Quaternion","mPivot","pValue","asEuler","x","z","y","pPitch","pYaw","pRoll","addRotation","fromRotation","mult","addScale","pWidth","pHeight","pDepth","addTranslation","pX","pY","pZ","pType","Scale","Translation","Rotation","asMatrix","PivotRotation","lRotationMatrix","lPivotRotation","inverse","lScale","lTranslation","lRotation","lPitch","lYaw","lRoll","pForward","pRight","pUp","lTranslationVector","lDirectionVector","vectorMult","mAspectRatio","mFar","mNear","mWidth","mCacheProjection","projectionMatrix","createMatrix","lFar","lNear","lRight","lLeft","lTop","lBottom","lScaleX","lScaleY","lScaleZ","lScaleTransformX","lScaleTransformY","lScaleTransformZ","lMatrix","mAngleOfView","mCacheProjectionMatrix","Math","tan","PI","pProjection","mProjection","mTransformation","projection","Projection","View","lView","lProjection","bind_type_enum_1","gpu_native_object_1","bind_group_1","BindGroupLayout","GpuNativeObject","pGpu","mGroupBinds","binds","lResult","lBind","values","bindType","index","addBuffer","pName","pIndex","pVisibility","pBindingType","length","undefined","pHasDynamicOffset","pMinBindingSize","BindType","Buffer","visibility","hasDynamicOffset","minBindingSize","triggerChange","addExternalTexture","ExternalTexture","addSampler","pSampleType","Sampler","addStorageTexture","pFormat","pStorageAccess","pDimension","StorageTexture","access","viewDimension","addTexture","pViewDimension","pMultisampled","sampleType","multisampled","lBindGroup","BindGroup","gpu","getBind","has","removeBind","delete","compare","pObject","size","lBindName","keys","lTarget","lSource","generate","lEntryList","lEntry","lLayoutEntry","binding","lBufferLayout","buffer","lTextureLayout","texture","lExternalTextureLayout","externalTexture","lStorageTextureLayout","storageTexture","lSamplerLayout","sampler","device","createBindGroupLayout","entries","base_buffer_1","external_texture_1","texture_view_1","pLayout","mLayout","mBindData","mNativeData","WeakMap","registerInternalNative","layout","pBindName","pForcedType","lLayout","lDataBindType","bindTypeOfData","unregisterInternalNative","lBindLayout","lBindData","lGroupEntry","resource","native","TextureView","BaseBuffer","bind_group_layout_1","BindGroups","mBindGroups","groups","addGroup","add","lPipelineLayout","bindGroupLayouts","lIndex","lBindGroupLayout","wgsl_type_enum_1","buffer_type_1","ArrayBufferType","BufferType","pInnerType","pSize","pAccessMode","pBindType","pLocation","mInnerType","mArraySize","alignment","arraySize","innerType","WgslType","mAttributes","mName","mLocation","mAccessMode","mBindingType","accessMode","bindingType","location","getAttribute","_this$mAttributes$get","setAttribute","pAttribute","SimpleBufferType","pGenerics","mType","mGenericRawList","mGenericList","map","pGeneric","EnumUtil","enumKeyByValue","Enum","lRestrictionList","mTypeRestrictions","lRestriction","find","pRestriction","_pRestriction$generic","generic","mAlignment","align","mSize","generics","genericsRaw","lTypes","Boolean","Integer32","UnsignedInteger32","Float32","Float16","Vector2","Vector3","Vector4","Matrix22","Matrix23","Matrix24","Matrix32","Matrix33","Matrix34","Matrix42","Matrix43","Matrix44","Any","Struct","Atomic","Pointer","Reference","Texture1d","Texture2d","Texture2dArray","Texture3d","TextureCube","TextureCubeArray","TextureMultisampled2d","TextureExternal","TextureDepth2d","TextureDepth2dArray","TextureDepthCube","TextureDepthCubeArray","TextureDepthMultisampled2d","TextureStorage1d","TextureStorage2d","TextureStorage2dArray","TextureStorage3d","SamplerComparison","StructBufferType","mInnerTypes","addProperty","lOrderedTypeList","sort","_ref","pIndexA","pIndexB","lCurrentOffset","lType","innerLocations","lLocationTypes","lPropertyType","mGpu","mInstructionSetList","List","clearInstructions","clear","lEncoder","createCommandEncoder","queue","submit","finish","pPipeline","pRenderParameter","_this$mPipeline$shade","pInstanceCount","mRenderParameter","mPipeline","mInstanceCount","attributesCount","shader","vertexEntryPoint","attributes","_this$mPipeline$shade2","lAttribute","lMeshAttributeBuffer","getBuffer","bufferDataType","lBindGroupList","instanceCount","parameter","pipeline","pBindGroup","equal","pRenderPass","mRenderPass","mInstructionList","pInstruction","renderPass","pCommandEncoder","lPassDescriptor","lRenderPassEncoder","beginRenderPass","lVertexBufferList","lInstruction","setPipeline","lNewBindGroup","lCurrentBindGroup","lNewAttributeBuffer","lCurrentAttributeBuffer","setVertexBuffer","draw","indexCount","end","pVertexIndices","mVertexBuffer","mIndexData","mMaxIndex","max","maxIndex","lBuffer","pStrideLength","VERTEX","lIndexData","slice","pNativeName","mNativeObject","mLabel","mNativeName","mObjectInvalid","mChangeListener","mInternalList","Set","lLabel","pLabel","destroy","destroyNative","invalidate","_pNativeObject","pInternalNative","addChangeListener","lListener","removeChangeListener","validate","pListener","pReferrer","lInternal","pGpuAdapter","pGpuDevice","mGpuAdapter","mGpuDevice","pMode","_Gpu$mAdapters$get","_Gpu$mDevices$get","lAdapter","mAdapters","navigator","requestAdapter","powerPreference","lDevice","mDevices","requestDevice","adapter","getPreferredCanvasFormat","canvas_texture_1","attachment_1","pMultiSampleLevel","mAttachments","mAttachmentGroup","mTextureGroup","mRebuildRequested","mMultiSampleLevel","pAttachment","_pAttachment$format","_pAttachment$layers","lFormat","Canvas","lLayerCount","layers","lAttachment","attachment","Attachment","getAttachment","rebuildTetures","hasAttachment","lTexture","groupAttachments","pAttachmentList","lGroups","lGroupName","attachments","updatedNeeded","lGroup","_this$mTextureGroup$g","lTextureLayerCount","reduce","pCurrent","pNext","lCanvasTexture","CanvasTexture","lFixedTexture","lCurrentLayer","updateTexture","pAttachments","mColorAttachments","mDepthStencilAttachment","colorAttachments","lTargets","lColorAttachment","depthAttachment","pAttachmentName","pClearValue","pLoadOp","pStoreOp","pResolveAttachmentName","lResolveAttachment","resolveTarget","clearValue","loadOp","storeOp","lColorAttachments","lPassColorAttachment","lDescriptor","depthStencilAttachment","depthClearValue","depthLoadOp","depthStoreOp","pLayers","mFormat","mLayers","mTexture","mBaseArrayLayer","multiSampleLevel","_this$mTexture$multiS","_this$mTexture","pTexture","pBaseArrayLayer","createView","dimension","baseArrayLayer","arrayLayerCount","VertexAttribute","_gTypeToBufferType$pT","lGeneric","at","lFormatStride","gTypeToBufferType","mAttribute","dataType","lAttributes","offset","shaderLocation","arrayStride","stepMode","Int32Array","Uint32Array","pShader","mShader","fragmentEntryPoint","renderTargetCount","mPrimitive","frontFace","cullMode","topology","unclippedDepth","mDepthWriteEnabled","mDepthCompare","depthCompare","primitiveFrontFace","primitiveTopology","unclipedDepth","_this$mPrimitive$uncl","writeDepth","lVertexBufferLayoutList","lPipelineDescriptor","createPipelineLayout","vertex","module","entryPoint","buffers","primitive","lRenderPassBuffer","color","lMultisampleCount","lFragmentTargetList","lRenderTarget","fragment","targets","lDepthAttachment","depthStencil","depthWriteEnabled","depth","multisample","count","createRenderPipeline","pUsage","mBufferUsage","mInitData","mBufferLength","mDataType","BYTES_PER_ELEMENT","pNativeObject","createBuffer","usage","mappedAtCreation","lData","getMappedRange","unmap","pInitialData","COPY_DST","mReadyBufferList","mWavingBufferList","pBufferCallback","lStagingBuffer","MAP_WRITE","COPY_SRC","pop","lBufferArray","lCommandDecoder","copyBufferToBuffer","mapAsync","GPUMapMode","WRITE","then","lCount","_this$mWavingBufferLi","lSourceBuffer","writeBuffer","mVideoElement","video","pSource","_this","pLoop","pMuted","lVideo","HTMLVideoElement","loop","muted","src","play","pause","importExternalTexture","source","colorSpace","mCompare","mFitMode","mMagFilter","mMinFilter","mMipmapFilter","mLodMinClamp","mLodMaxClamp","mMaxAnisotropy","compareFunction","fitMode","lodMaxClamp","lodMinClamp","magFilter","maxAnisotropy","minFilter","mipmapFilter","lSamplerOptions","addressModeU","addressModeV","addressModeW","createSampler","pCanvas","mCanvas","mUsage","mContext","getContext","configure","alphaMode","aaa","layer","pBaseLayer","pLayerCount","getCurrentTexture","GPUTextureUsage","TEXTURE_BINDING","STORAGE_BINDING","RENDER_ATTACHMENT","mBaseLayer","mLayerCount","mDimension","mAspect","mBaseMipLevel","mMipLevelCount","aspect","pAspect","baseLayer","baseMipLevel","pLevel","layerCount","mipLevelCount","mImageBitmapList","mHeight","pSourceList","lHeight","lWidth","lBitmapResolvePromiseList","lImage","Image","decode","naturalWidth","naturalHeight","createImageBitmap","Promise","all","lUsage","createTexture","sampleCount","lBitmapIndex","lBitmap","copyExternalImageToTexture","origin","close","WgslAccessMode","WgslBindingType","WgslShaderStage","GPUShaderStage","FRAGMENT","COMPUTE","array_buffer_type_1","simple_buffer_type_1","struct_buffer_type_1","wgsl_access_mode_enum_1","wgsl_binding_type_enum_1","wgsl_shader_stage_enum_1","ShaderInformation","mSource","mEntryPoints","fetchEntryPoints","mBindings","fetchBindGroups","bindings","entryPoints","createBufferType","pVariable","_pVariable$attributes","_pVariable$attributes2","wgslTypeByName","lBindingType","None","lAccessMode","lLocationIndex","lLocationValue","startsWith","isNaN","lStructType","lStructBody","getStructBody","fetchVariableDefinitions","forEach","pPropertyVariable","lProperyBufferType","lTypeGeneric","lTypeGenericBufferType","lSizeGeneric","lPseudoStructBody","lPseudoVariableList","lGenericList","lAllGroupLines","matchAll","pLine","lShaderStage","test","Compute","Fragment","Vertex","lBindGroups","lVariable","lGroupAttribute","lBindAttribute","lGroupIndex","lBindIndex","variable","lBindList","group","lFunctionList","fetchFunctions","lEntryPoints","lFunction","pSourceSnipped","lFunctionRegex","_wrapRegExp","result","lFunctionMatch","lAttributeList","lAttributeMatch","lParameterVariableList","lParameterList","lResultVariable","return","lDefinitionRegex","typename","lVariableList","lDefinitionMatch","_lDefinitionMatch$gro","lAccess","_lAccessList$","lAccessList","split","trim","filter","lGenericMatch","generictype","pStructName","lStuctRegex","typeinfo","lStructMatch","_ex","bind_groups_1","vertex_attribute_1","shader_analyzer_1","mShaderInformation","generateBindGroups","generateVertexEntryPoint","generateFragmentEntryPoint","compute","generateComputeEntryPoint","computeEntryPoint","createShaderModule","code","pShaderInformation","lBindGroupInformation","lWgslBind","lShaderBind","getBindBasedOnType","lShaderEntryPointFunction","lShaderEntryPoint","lResultLength","lParameterLocationTypes","lParameter","pBind","lNumberTypeList","lVectorTypeList","lMatrixTypeList","lTextureStorageTypeList","lTextureTypeList","lDepthTextureTypeList","includes","lFilterType","lTexelFormat","lTextureAccess","lTextureDimension","texureDimensionFromType","lMultisampled","lTextureWgslType","lTextureSampleType","pTextureType","Euler","mX","mY","mZ","mData","fromArray","pArray","lRowIndex","lRowData","lColumnIndex","fill","_this$mData$0$length","_this$mData$","pAddData","adjoint","lMatrixData","lMatrixRow","lColumIndex","lDeterminant","omit","determinant","pow","lCofactorMatrix","transpose","lIterationIndex","lSignedNumber","lDeterminantMatrix","lAdjoint","pMultData","lProduct","lComponentIndex","pOmitRow","pOmitColumn","sub","lVectorComponent","lMutiplicatedMatrix","lVectorData","euler_1","pW","mW","lPitchRadian","lYawRadian","lRollRadian","lCosPitch","cos","lSinPitch","sin","lCosYaw","lSinYaw","lCosRoll","lSinRoll","lQuaternion","w","vectorForward","lSquareX","lSquareY","lProductXz","lProductYw","lProductYz","lProductXw","lX","lY","lZ","vectorRight","lSquareZ","lProductXy","lProductZw","vectorUp","lEuler","lSinPitchCosYaw","lCosPitchCosYaw","atan2","lPitchDegree","sqrt","lYawDegree","lSinRollCosYaw","lCosRollCosYaw","lRollDegree","pQuaternion","lW","normalize","lLength","hypot","lItem","multCross","pVector","multDot","pSubData"],"sourceRoot":""}