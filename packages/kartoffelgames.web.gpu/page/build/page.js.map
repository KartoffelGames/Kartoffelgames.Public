{"version":3,"file":".././page/build/page.js","mappings":";;;;;;;;;;;AAAY;;AAEZ;;AAEA;AACA,mDAAmD,IAAI,SAAS,MAAM,IAAI;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,GAAG;AACH;AACA,uBAAuB;AACvB,GAAG;AACH,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,UAAU,+BAA+B;AAChF;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AC/KA;AACaA,8BAAsB,GAAkB;AACjD;AACA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACnB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EACnB,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;AAEpB;AACA,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EACpB,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EACnB,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EACpB,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CACxB;AAEYA,wBAAgB,GAAkB;AAC3C;AACA,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI;AACb;AACA,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI;AAEb;AACA,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,IAAI;AACb;AACA,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI;AAEb;AACA,CAAC,EAAE,IAAI,EACP,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI;AACb;AACA,CAAC,EAAE,IAAI,EACP,OAAO,EAAE,IAAI,EACb,CAAC,EAAE,IAAI;AAEP;AACA,OAAO,EAAE,IAAI,EACb,CAAC,EAAE,IAAI,EACP,CAAC,EAAE,IAAI;AACP;AACA,OAAO,EAAE,IAAI,EACb,CAAC,EAAE,IAAI,EACP,OAAO,EAAE,IAAI;AAEb;AACA,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,IAAI;AACb;AACA,OAAO,EAAE,CAAC,EACV,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI;AAEb;AACA,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI;AACb;AACA,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,CAChB;AAEYA,4BAAoB,GAAkB;AAC/C;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;AAEX;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEV;AACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEX;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEV;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEV;AACA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC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;AALD,WAAYA,YAAY;EACpBA,+CAAQ;EACRA,mEAAkB;EAClBA,mEAAkB;EAClBA,uEAAoB;AACxB,CAAC,EALWA,YAAY,4BAAZA,YAAY;;;;;;;;;;;;;;;;;ACAxB,IAAYC,YAIX;AAJD,WAAYA,YAAY;EACpBA,6CAA6B;EAC7BA,iCAAiB;EACjBA,8CAA8B;AAClC,CAAC,EAJWA,YAAY,4BAAZA,YAAY;;;;;;;;;;;ACAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;AChfa;AACb;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,mBAAO,CAAC,oFAAoB;AACrD,4BAA4B,mBAAO,CAAC,0FAAuB;AAC3D,wBAAwB,mBAAO,CAAC,kFAAmB;AACnD,6CAA6C,yCAAyC,+CAA+C;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,sDAAsD;AACtD,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB,8BAA8B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KACiC,EAAE,EAGtC;AACL,aAAa,KAC4B,EAAE,EAGtC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AA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OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA;AAC+C;AACF;AACF;AACV;AAC2B;AACU;AACrB;AACJ;AACY;;AAEzD;AACA,aAAa,QAAQ;AACrB,cAAc,qCAAqC;AACnD,cAAc,qCAAqC;AACnD,cAAc,qCAAqC;AACnD,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,0BAA0B;AACxC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,WAAW,YAAY,6BAA6B,2BAA2B,qCAAqC;AACpH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,eAAe,KAAuC,GAAG,uBAAgB,GAAG,CAAE;AAC9E;;AAEA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8DAAQ,CAAC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI,8CAAG;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,EAAE,qEAAyB;AAC3B,EAAE,0DAAW;AACb;AACA;AACA;AACA;AACA,iEAAkB;AAClB;AACA;AACA,CAAC;AACD,8CAA8C,0DAAa;AAC3D;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,IAAI,8CAAG;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,qDAAqD;AACpE;AACA;AACA;AACA,MAAM,8CAAG;AACT;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,IAAI,8CAAG;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,IAAI,iEAAW;AACf;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,+DAAS;AACb,GAAG;AACH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,8CAAG;AACP;AACA,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,8CAAG;AACP;AACA,GAAG;AACH;AACA,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA;AACA,IAAI,8CAAG;AACP;AACA,2BAA2B,0DAAa;AACxC;AACA;AACA,4CAA4C,+DAAS;AACrD,KAAK;AACL,IAAI,iEAAW;AACf,oBAAoB,8BAA8B;AAClD,MAAM,8CAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAS;AACb,GAAG;AACH;AACA,aAAa,SAAS;AACtB;AACA;AACA,IAAI,8CAAG;AACP;AACA,4BAA4B,0DAAa;AACzC;AACA;AACA,4CAA4C,+DAAS;AACrD,KAAK;AACL,IAAI,iEAAW;AACf,oBAAoB,4BAA4B;AAChD,MAAM,8CAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA,aAAa,OAAO;AACpB;AACA;AACA,IAAI,8CAAG;AACP,GAAG;AACH;AACA,IAAI,8CAAG;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf;AACA;AACA,gBAAgB,qEAAe;AAC/B,sDAAM;;;;;;;;;;AC/TN,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,mFAAmF,WAAW;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA,mBAAmB,QAAQ;AAC3B;AACA,mBAAmB,QAAQ;AAC3B;AACA,kBAAkB,OAAO;AACzB;AACA,oBAAoB,SAAS;AAC7B;;AAEA,oBAAoB,SAAS;AAC7B;;AAEA,oBAAoB,SAAS;AAC7B;AACA,6BAA6B,kBAAkB;AAC/C;AACA,uBAAuB,YAAY;AACnC;;AAEA,sBAAsB,WAAW;AACjC;AACA,yBAAyB,cAAc;AACvC;;AAEA,mBAAmB,QAAQ;AAC3B;;AAEA,oBAAoB,SAAS;AAC7B;AACA,qBAAqB,UAAU;AAC/B,CAAC;;AAED;;AAEA,cAAc,sCAAsC;;AAEpD,0EAA0E,WAAW;AACrF,6EAA6E,WAAW;AACxF,wFAAwF,WAAW;AACnG;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,sDAAsD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mGAAmG,eAAe;AAClH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gFAAgF,iBAAiB;AACjG;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA,kDAAkD,gCAAmB;;AAErE;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,mFAAmF,WAAW;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA,eAAe,gCAAmB;AAClC;;AAEA,cAAc,6DAA6D;AAC3E,cAAc,yDAAyD;AACvE,cAAc,gCAAgC;;AAE9C,cAAc,2BAA2B;;AAEzC;AACA,aAAa,QAAQ;AACrB,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,yDAAyD;AACvE,cAAc,qBAAqB;AACnC,cAAc,eAAe;AAC7B;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa,4CAA4C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,mBAAmB;AACrC,aAAa,QAAQ;AACrB;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA,kDAAkD,gCAAmB;;AAErE;AACA;AACA;AACA;;;;AAIA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC,eAAe,gCAAmB;AAClC;AACA,0BAA0B,gCAAmB;;AAE7C,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAmB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,gBAAgB,gCAAmB,wBAAwB,gCAAmB;AAC9E,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,gCAAmB,2BAA2B;AACzD,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,kEAAkE,iBAAiB;AACnF;AACA,2DAA2D,aAAa;AACxE;AACA,WAAW;AACX;AACA;AACA,IAAI,0BAAmB;AACvB;AACA;AACA;AACA;AACA;AACA,gCAAmB,GAAG,0BAAmB;AACzC,qBAAqB,gCAAmB,GAAG,0BAAmB;AAC9D,+CAA+C;AAC/C,sBAAsB;AACtB,uFAAuF,gCAAmB;;AAE1G,CAAC;AACD;AACA,aAAa,0BAAmB,iCAAiC,0BAAmB;AACpF,GAAG,0BAAmB,8EAA8E,aAAa;AACjH,UAAU;AACV;;;;;;;;;;;;;;;;;;;;;;;ACvtBA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;AAC1e,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA;;AAE2C;AACJ;AAC2E;AACpD;AAC4E;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAkB;;AAElB;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY,oEAAoE,oBAAoB;AAC/G,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B,cAAc,kCAAkC;AAChD;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA,aAAa,sCAAsC;AACnD;AACA,aAAa,mCAAmC;AAChD;AACA,aAAa,mCAAmC;AAChD;AACA,aAAa,0CAA0C;AACvD;AACA,aAAa,+BAA+B;AAC5C;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uCAAuC,2DAAW;AAClD;AACA,sCAAsC,UAAU;AAChD,iBAAiB,mBAAmB;AACpC;AACA,oCAAoC,UAAU;AAC9C,iBAAiB,mBAAmB;AACpC;AACA;AACA,iCAAiC,8DAAc;AAC/C;AACA;AACA,gCAAgC,2DAAW;AAC3C;AACA,qCAAqC,kEAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA,iBAAiB,UAAU;AAC3B,iBAAiB,mBAAmB;AACpC;AACA;AACA,2BAA2B,gBAAgB;AAC3C,OAAO;AACP;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB,gFAAgF,GAAG;AAClH,aAAa,eAAe;AAC5B,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yDAAS,WAAW,yDAAS;AACzE,+DAA+D,eAAe;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAY;AAC5C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,mBAAmB,0DAAQ,CAAC,qDAAM;AAClC;AACA,oCAAoC,4DAAY;AAChD;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,OAAO;AACP,KAAK;AACL;AACA,uBAAuB,qEAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,eAAe,mBAAmB;AAClC,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6EAAkB;AACrC,WAAW;AACX,SAAS;AACT;AACA;AACA,IAAI,+EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,qFAA0B;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;AC1QA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;AAC1e,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA,aAAa,QAAQ;AACrB,eAAe,mBAAmB,gBAAgB,4BAA4B;AAC9E;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,oCAAoC;AACnD,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,4DAA4D;AAC3E;;AAEA;AACA;AACA;AACA;AACA,gFAAgF,mCAAmC;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;;;AC/D5B;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uBAAuB;AAClC,aAAa;AACb;;AAEA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7CqC;;AAErC;AACA,aAAa,QAAQ;AACrB,cAAc,qBAAqB;AACnC,cAAc,kBAAkB,gFAAgF,GAAG;AACnH,cAAc,qBAAqB;AACnC;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,iCAAiC;AAC/C,cAAc,YAAY;AAC1B;;AAEA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA,uBAAuB,mDAAa;AACpC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,oBAAoB;;;;;;;;;;;;;;;;;;;;;ACnGnC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxEA;;AAE2D;AACtB;;AAErC;AACA;AACA;AACA;AACA,OAAO,6BAA6B,0BAA0B,6BAA6B,2BAA2B,6BAA6B,WAAW,6BAA6B,GAAG,mEAAe;AAC7M;;AAEA;AACA;;AAEA;AACA;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,aAAa,wDAAwD;AACrE,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8CAAG;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,MAAM;;;;;;;;;;;;;;;ACjErB;AACA,aAAa,4IAA4I;AACzJ,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,WAAW,QAAQ,+BAA+B;AAClD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,eAAe;;;;;;;;;;;;;;;ACxH9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAe,sBAAsB;;;;;;;;;;;;;;;;;;;ACvBW;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uEAAuE;AAClF,aAAa;AACb;AACA;AACA,EAAE,sFAA6B;AAC/B;AACA,GAAG;AACH;AACA;AACA,UAAU,yEAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjCiE;;AAEjE;AACA,WAAW,QAAQ;AACnB,eAAe;AACf;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,sEAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;;;;;ACnCyB;AACjB;;AAE/B,cAAc,4BAA4B;AAC1C,cAAc,2BAA2B;;AAEzC;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,IAAI,wCAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wCAAG;AACP,IAAI,kEAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;;AC9DxB;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;;ACftB,sDAAsD,gBAAgB,6CAA6C,oDAAoD,IAAI,IAAI,IAAI,IAAI;;AAEvL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;ACjBxB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAU;AACd,YAAY,kBAAkB;AAC9B;AACA;AACA,oBAAoB,QAAQ,sBAAsB,uBAAgB;AAClE;AACA,WAAW,mBAAO,CAAC,oDAAO;AAC1B;AACA,EAAE,UAAU;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,mBAAO,CAAC,8EAAoB;;AAEhC;AACA;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,kBAAkB,mBAAO,CAAC,4DAAW;AACrC;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE,KAAK,EAEN;;;;;;;;;;;AC1ED,mBAAmB,mBAAO,CAAC,mDAAQ;AACnC;;;;;;;;;;;ACDA;AACA;AACA;AACA;;AAEA;AACA,WAAW,qBAAqB;AAChC,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA,EAAE;AACF,WAAW,mBAAO,CAAC,oDAAO;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChDA,cAAc,8BAA8B;;AAE5C,WAAW,UAAU;AACrB;;AAEA;;AAEA;AACA,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,wBAAwB;AACnC,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB,6BAA6B;;AAE7B,uBAAuB;;AAEvB;AACA,WAAW,UAAU;AACrB;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AChFa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,eAAe,mBAAO,CAAC,4FAAc;AACrC,oBAAoB,mBAAO,CAAC,oGAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;;ACnEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,YAAY;AACZ;;;;;;;;;;;AC/Fa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,qBAAqB,mBAAO,CAAC,oHAA0B;AACvD,eAAe,mBAAO,CAAC,4FAAc;AACrgBAAgB;AAChB;;;;;;;;;;;ACnIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,oBAAoB,mBAAO,CAAC,gGAAa;AACzC,eAAe,mBAAO,CAAC,4FAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACxDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,oBAAoB,mBAAO,CAAC,gGAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;;;;;;;;;AChBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;;ACxBa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB,GAAG,YAAY,GAAG,gBAAgB,GAAG,YAAY,GAAG,kBAAkB;AAC7H;AACA,mBAAmB,mBAAO,CAAC,kIAAwC;AACnE,8CAA6C,EAAE,qCAAqC,mCAAmC,EAAC;AACxH,aAAa,mBAAO,CAAC,0GAA4B;AACjD,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;AACtG,kBAAkB,mBAAO,CAAC,oHAAiC;AAC3D,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,aAAa,mBAAO,CAAC,0GAA4B;AACjD,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;AACtG,kBAAkB,mBAAO,CAAC,gGAAuB;AACjD,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH;AACA,kBAAkB,mBAAO,CAAC,sFAAkB;AAC5C,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,kBAAkB,mBAAO,CAAC,sFAAkB;AAC5C,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH;;;;;;;;;;;ACpBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACnDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;UChBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA,sBAAsB;UACtB,oDAAoD,uBAAuB;UAC3E;UACA;UACA,GAAG;UACH;UACA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;;;;;WCxCA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;;;;WCAA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;;WAED;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA,2BAA2B;WAC3B,4BAA4B;WAC5B,2BAA2B;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA,iBAAiB,qCAAqC;WACtD;;WAEA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,iBAAiB;WACrC;WACA;WACA;WACA,GAAG;WACH;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA,QAAQ;WACR;WACA,MAAM;WACN,KAAK;WACL,IAAI;WACJ,GAAG;WACH;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;;WAEA;WACA;;WAEA;;WAEA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;;WAEA;WACA;WACA,EAAE;;WAEF;WACA;;WAEA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,oBAAoB,oBAAoB;WACxC;WACA;WACA;WACA;WACA,EAAE;;WAEF;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA,IAAI;WACJ;;WAEA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ,GAAG;WACH;WACA;WACA;WACA;;;;;WCrYA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mBAAmB,2BAA2B;WAC9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,kBAAkB,cAAc;WAChC;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,cAAc,MAAM;WACpB;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA,cAAc,aAAa;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,iBAAiB,4BAA4B;WAC7C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kBAAkB,uCAAuC;WACzD;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,iCAAiC;WACpD;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,uCAAuC;WAC7D;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,sBAAsB;WAC5C;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA,WAAW;WACX,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA,YAAY;WACZ;WACA;WACA;WACA;WACA;WACA;WACA,UAAU;WACV;WACA;WACA;WACA;WACA;WACA;WACA,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,wCAAwC;WAC3D;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA;WACA,OAAO;WACP;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE,IAAI;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,EAAE;WACF;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,sCAAsC;WACtC;WACA;WACA,EAAE;WACF;;WAEA;;WAEA;;;;;UE9fA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://Page/../../node_modules/ansi-html-community/index.js","webpack://Page/./page/source/cube/cube.ts","webpack://Page/./page/source/index.ts","webpack://Page/./page/source/math/euler.ts","webpack://Page/./page/source/math/matrix.ts","webpack://Page/./page/source/math/quaternion.ts","webpack://Page/./page/source/math/vector.ts","webpack://Page/./page/source/something_better/light/ambient-light.ts","webpack://Page/./page/source/something_better/transform.ts","webpack://Page/./page/source/something_better/view_projection/projection/perspective-projection.ts","webpack://Page/./page/source/something_better/view_projection/view-projection.ts","webpack://Page/./source/base/base/binding/bind-data-group-layout.ts","webpack://Page/./source/base/base/binding/bind-data-group.ts","webpack://Page/./source/base/base/binding/pipeline-data-layout.ts","webpack://Page/./source/base/base/buffer/gpu-buffer.ts","webpack://Page/./source/base/base/execution/instruction-executor.ts","webpack://Page/./source/base/base/execution/instruction/compute-instruction.ts","webpack://Page/./source/base/base/execution/instruction/vertex-fragment-instruction.ts","webpack://Page/./source/base/base/generator/base-generator-factory.ts","webpack://Page/./source/base/base/generator/base-native-buffer-generator.ts","webpack://Page/./source/base/base/generator/base-native-generator.ts","webpack://Page/./source/base/base/gpu/gpu-device.ts","webpack://Page/./source/base/base/gpu/gpu-object-update-reason.ts","webpack://Page/./source/base/base/gpu/gpu-object.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-bind-data-group-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-bind-data-group-layout-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-canvas-texture-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-frame-buffer-texture-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-gpu-buffer-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-image-texture-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-pipeline-data-layout-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-texture-sampler-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-vertex-fragment-shader-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/native-generator/web-gpu-video-texture-generator.ts","webpack://Page/./source/base/base/implementation/web_gpu/web-gpu-generator-factory.ts","webpack://Page/./source/base/base/implementation/web_gpu/web-gpu-shader-interpreter.ts","webpack://Page/./source/base/base/implementation/web_gpu/wgsl_enum/wgsl-type.enum.ts","webpack://Page/./source/base/base/memory_layout/base-memory-layout.ts","webpack://Page/./source/base/base/memory_layout/buffer/array-buffer-memory-layout.ts","webpack://Page/./source/base/base/memory_layout/buffer/base-buffer-memory-layout.ts","webpack://Page/./source/base/base/memory_layout/buffer/linear-buffer-memory-layout.ts","webpack://Page/./source/base/base/memory_layout/buffer/struct-buffer-memory-layout.ts","webpack://Page/./source/base/base/memory_layout/sampler-memory-layout.ts","webpack://Page/./source/base/base/memory_layout/texture-memory-layout.ts","webpack://Page/./source/base/base/pipeline/parameter/vertex-parameter-layout.ts","webpack://Page/./source/base/base/pipeline/parameter/vertex-parameter.ts","webpack://Page/./source/base/base/pipeline/target/render-targets.ts","webpack://Page/./source/base/base/pipeline/target/texture-group.ts","webpack://Page/./source/base/base/pipeline/vertex-fragment-pipeline.ts","webpack://Page/./source/base/base/shader/base-shader.ts","webpack://Page/./source/base/base/shader/interpreter/base-shader-interpreter.ts","webpack://Page/./source/base/base/shader/interpreter/shader-interpreter-factory.ts","webpack://Page/./source/base/base/shader/vertex-fragment-shader.ts","webpack://Page/./source/base/base/texture/canvas-texture.ts","webpack://Page/./source/base/base/texture/frame-buffer-texture.ts","webpack://Page/./source/base/base/texture/image-texture.ts","webpack://Page/./source/base/base/texture/texture-sampler.ts","webpack://Page/./source/base/base/texture/video-texture.ts","webpack://Page/./source/base/constant/access-mode.enum.ts","webpack://Page/./source/base/constant/buffer-bind-type.enum.ts","webpack://Page/./source/base/constant/buffer-primitive-format.ts","webpack://Page/./source/base/constant/compare-function.enum.ts","webpack://Page/./source/base/constant/compute-stage.enum.ts","webpack://Page/./source/base/constant/filter-mode.enum.ts","webpack://Page/./source/base/constant/memory-copy-type.enum.ts","webpack://Page/./source/base/constant/primitive-cullmode.ts","webpack://Page/./source/base/constant/primitive-front-face.ts","webpack://Page/./source/base/constant/primitive-topology.ts","webpack://Page/./source/base/constant/sampler-type.enum.ts","webpack://Page/./source/base/constant/texture-bind-type.enum.ts","webpack://Page/./source/base/constant/texture-dimension.enum.ts","webpack://Page/./source/base/constant/texture-format.enum.ts","webpack://Page/./source/base/constant/texture-operation.ts","webpack://Page/./source/base/constant/texture-usage.enum.ts","webpack://Page/./source/base/constant/wrapping-mode.enum.ts","webpack://Page/../../node_modules/events/events.js","webpack://Page/../../node_modules/html-entities/lib/index.js","webpack://Page/../../node_modules/html-entities/lib/named-references.js","webpack://Page/../../node_modules/html-entities/lib/numeric-unicode-map.js","webpack://Page/../../node_modules/html-entities/lib/surrogate-pairs.js","webpack://Page/./page/source/shader.wgsl","webpack://Page/../../node_modules/webpack-dev-server/client/clients/WebSocketClient.js","webpack://Page/../../node_modules/webpack-dev-server/client/index.js","webpack://Page/../../node_modules/webpack-dev-server/client/modules/logger/index.js","webpack://Page/../../node_modules/webpack-dev-server/client/overlay.js","webpack://Page/../../node_modules/webpack-dev-server/client/overlay/fsm.js","webpack://Page/../../node_modules/webpack-dev-server/client/overlay/runtime-error.js","webpack://Page/../../node_modules/webpack-dev-server/client/overlay/state-machine.js","webpack://Page/../../node_modules/webpack-dev-server/client/overlay/styles.js","webpack://Page/../../node_modules/webpack-dev-server/client/socket.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/createSocketURL.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/log.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/parseURL.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/reloadApp.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/sendMessage.js","webpack://Page/../../node_modules/webpack-dev-server/client/utils/stripAnsi.js","webpack://Page/../../node_modules/webpack/hot/dev-server.js","webpack://Page/../../node_modules/webpack/hot/emitter.js","webpack://Page/../../node_modules/webpack/hot/log-apply-result.js","webpack://Page/../../node_modules/webpack/hot/log.js","webpack://Page/../kartoffelgames.core.data/library/source/data_container/dictionary/dictionary.js","webpack://Page/../kartoffelgames.core.data/library/source/data_container/list/list.js","webpack://Page/../kartoffelgames.core.data/library/source/data_container/tree/base-tree.js","webpack://Page/../kartoffelgames.core.data/library/source/data_container/tree/list-tree.js","webpack://Page/../kartoffelgames.core.data/library/source/data_container/tree/tree.js","webpack://Page/../kartoffelgames.core.data/library/source/exception/exception.js","webpack://Page/../kartoffelgames.core.data/library/source/index.js","webpack://Page/../kartoffelgames.core.data/library/source/util/enum-util.js","webpack://Page/../kartoffelgames.core.data/library/source/util/type-util.js","webpack://Page/webpack/bootstrap","webpack://Page/webpack/runtime/compat get default export","webpack://Page/webpack/runtime/define property getters","webpack://Page/webpack/runtime/get javascript update chunk filename","webpack://Page/webpack/runtime/get update manifest filename","webpack://Page/webpack/runtime/getFullHash","webpack://Page/webpack/runtime/global","webpack://Page/webpack/runtime/hasOwnProperty shorthand","webpack://Page/webpack/runtime/load script","webpack://Page/webpack/runtime/make namespace object","webpack://Page/webpack/runtime/hot module replacement","webpack://Page/webpack/runtime/publicPath","webpack://Page/webpack/runtime/jsonp chunk loading","webpack://Page/webpack/before-startup","webpack://Page/webpack/startup","webpack://Page/webpack/after-startup"],"sourcesContent":["'use strict'\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.5', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n","// Create attributes data.\r\nexport const CubeVertexPositionData: Array<number> = [ // 4x Position\r\n    // Back\r\n    -1.0, 1.0, 1.0, 1.0,\r\n    1.0, 1.0, 1.0, 1.0,\r\n    1.0, -1.0, 1.0, 1.0,\r\n    -1.0, -1.0, 1.0, 1.0,\r\n\r\n    // Front\r\n    -1.0, 1.0, -1.0, 1.0,\r\n    1.0, 1.0, -1.0, 1.0,\r\n    1.0, -1.0, -1.0, 1.0,\r\n    -1.0, -1.0, -1.0, 1.0\r\n];\r\n\r\nexport const CubeVertexUvData: Array<number> = [ // 4x Position\r\n    // Front 4,5,6\r\n    0.33333, 0.25,\r\n    0.66666, 0.25,\r\n    0.66666, 0.50,\r\n    // Front 4,6,7\r\n    0.33333, 0.25,\r\n    0.66666, 0.50,\r\n    0.33333, 0.50,\r\n\r\n    // Back 1,0,3\r\n    0.66666, 1,\r\n    0.33333, 1,\r\n    0.33333, 0.75,\r\n    // Back 1,3,2\r\n    0.66666, 1,\r\n    0.33333, 0.75,\r\n    0.66666, 0.75,\r\n\r\n    // Left 0,4,7\r\n    0, 0.25,\r\n    0.33333, 0.25,\r\n    0.33333, 0.50,\r\n    // Left 0,7,3\r\n    0, 0.25,\r\n    0.33333, 0.50,\r\n    0, 0.50,\r\n\r\n    // Right 5,1,2\r\n    0.66666, 0.25,\r\n    1, 0.25,\r\n    1, 0.50,\r\n    // Right 5,2,6\r\n    0.66666, 0.25,\r\n    1, 0.50,\r\n    0.66666, 0.50,\r\n\r\n    // Top 0,1,5\r\n    0.33333, 0,\r\n    0.66666, 0,\r\n    0.66666, 0.25,\r\n    // Top 0,5,4\r\n    0.33333, 0,\r\n    0.66666, 0.25,\r\n    0.33333, 0.25,\r\n\r\n    // Bottom 7,6,2\r\n    0.33333, 0.50,\r\n    0.66666, 0.50,\r\n    0.66666, 0.75,\r\n    // Bottom 7,2,3\r\n    0.33333, 0.50,\r\n    0.66666, 0.75,\r\n    0.33333, 0.75,\r\n];\r\n\r\nexport const CubeVertexNormalData: Array<number> = [ // 4x Position\r\n    // Front\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n\r\n    // Back 1,0,3\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n\r\n    // Left 0,4,7\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n\r\n    // Right 5,1,2\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n\r\n    // Top 0,1,5\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n\r\n    // Bottom 7,6,2\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n];\r\n\r\n// Create mesh.\r\nexport const CubeVertexIndices = [\r\n    // Front\r\n    4, 5, 6,\r\n    4, 6, 7,\r\n    // Back\r\n    1, 0, 3,\r\n    1, 3, 2,\r\n    // Left\r\n    0, 4, 7,\r\n    0, 7, 3,\r\n    // Right\r\n    5, 1, 2,\r\n    5, 2, 6,\r\n    // Top\r\n    0, 1, 5,\r\n    0, 5, 4,\r\n    // Bottom\r\n    7, 6, 2,\r\n    7, 2, 3\r\n];","import { InstructionExecuter } from '../../source/base/base/execution/instruction-executor';\r\nimport { GpuDevice } from '../../source/base/base/gpu/gpu-device';\r\nimport { WebGpuGeneratorFactory } from '../../source/base/base/implementation/web_gpu/web-gpu-generator-factory';\r\nimport { WebGpuShaderInterpreter } from '../../source/base/base/implementation/web_gpu/web-gpu-shader-interpreter';\r\nimport { ArrayBufferMemoryLayout } from '../../source/base/base/memory_layout/buffer/array-buffer-memory-layout';\r\nimport { LinearBufferMemoryLayout } from '../../source/base/base/memory_layout/buffer/linear-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from '../../source/base/base/memory_layout/buffer/struct-buffer-memory-layout';\r\nimport { SamplerMemoryLayout } from '../../source/base/base/memory_layout/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../../source/base/base/memory_layout/texture-memory-layout';\r\nimport { VertexParameter } from '../../source/base/base/pipeline/parameter/vertex-parameter';\r\nimport { RenderTargets } from '../../source/base/base/pipeline/target/render-targets';\r\nimport { TextureGroup } from '../../source/base/base/pipeline/target/texture-group';\r\nimport { VertexFragmentPipeline } from '../../source/base/base/pipeline/vertex-fragment-pipeline';\r\nimport { PrimitiveCullMode } from '../../source/base/constant/primitive-cullmode';\r\nimport { TextureOperation } from '../../source/base/constant/texture-operation';\r\nimport { CubeVertexIndices, CubeVertexNormalData, CubeVertexPositionData, CubeVertexUvData } from './cube/cube';\r\nimport shader from './shader.wgsl';\r\nimport { AmbientLight } from './something_better/light/ambient-light';\r\nimport { Transform, TransformMatrix } from './something_better/transform';\r\nimport { PerspectiveProjection } from './something_better/view_projection/projection/perspective-projection';\r\nimport { CameraMatrix, ViewProjection } from './something_better/view_projection/view-projection';\r\n\r\nconst gHeight: number = 10;\r\nconst gWidth: number = 10;\r\nconst gDepth: number = 10;\r\n\r\n(async () => {\r\n    const lGpu: GpuDevice = await GpuDevice.request(new WebGpuGeneratorFactory('high-performance'), WebGpuShaderInterpreter);\r\n\r\n    // Create and configure render targets.\r\n    const lTextureGroup: TextureGroup = lGpu.textureGroup(640, 640, 2);\r\n    lTextureGroup.addBuffer('color', 'Color');\r\n    lTextureGroup.addBuffer('depth', 'Depth');\r\n    lTextureGroup.addTarget('canvas');\r\n\r\n    // Create shader.\r\n    const lShader = lGpu.renderShader(shader, 'vertex_main', 'fragment_main');\r\n\r\n    /*\r\n     * Transformation and position group. \r\n     */\r\n    const lTransformationGroupLayout = lShader.pipelineLayout.getGroupLayout(0);\r\n    const lTransformationGroup = lTransformationGroupLayout.createGroup();\r\n\r\n    // Create transformation.\r\n    const lCubeTransform: Transform = new Transform();\r\n    lCubeTransform.setScale(0.1, 0.1, 0.1);\r\n    lTransformationGroup.setData('transformationMatrix', (<ArrayBufferMemoryLayout>lTransformationGroupLayout.getBind('transformationMatrix').layout).create(new Float32Array(lCubeTransform.getMatrix(TransformMatrix.Transformation).dataArray)));\r\n\r\n    // Create instance positions.\r\n    const lCubeInstanceTransformationData: Array<number> = new Array<number>();\r\n    for (let lWidthIndex: number = 0; lWidthIndex < gWidth; lWidthIndex++) {\r\n        for (let lHeightIndex: number = 0; lHeightIndex < gHeight; lHeightIndex++) {\r\n            for (let lDepthIndex: number = 0; lDepthIndex < gDepth; lDepthIndex++) {\r\n                lCubeInstanceTransformationData.push(lWidthIndex, lHeightIndex, lDepthIndex, 1);\r\n            }\r\n        }\r\n    }\r\n    lTransformationGroup.setData('transformationMatrix', (<ArrayBufferMemoryLayout>lTransformationGroupLayout.getBind('transformationMatrix').layout).create(new Float32Array(lCubeInstanceTransformationData)));\r\n\r\n    /*\r\n     * Camera and world group. \r\n     */\r\n    const lWorldGroupLayout = lShader.pipelineLayout.getGroupLayout(1);\r\n    const lWorldGroup = lWorldGroupLayout.createGroup();\r\n\r\n    // Create camera perspective.\r\n    const lPerspectiveProjection: PerspectiveProjection = new PerspectiveProjection();\r\n    lPerspectiveProjection.aspectRatio = lTextureGroup.width / lTextureGroup.height;\r\n    lPerspectiveProjection.angleOfView = 72;\r\n    lPerspectiveProjection.near = 0.1;\r\n    lPerspectiveProjection.far = 9999999;\r\n\r\n    // Create camera.\r\n    const lCamera: ViewProjection = new ViewProjection(lPerspectiveProjection);\r\n    lCamera.transformation.setTranslation(0, 0, -4);\r\n    lWorldGroup.setData('viewProjectionMatrix', (<LinearBufferMemoryLayout>lWorldGroupLayout.getBind('viewProjectionMatrix').layout).create(new Float32Array(lCamera.getMatrix(CameraMatrix.ViewProjection).dataArray)));\r\n\r\n    // Create ambient light.\r\n    const lAmbientLight: AmbientLight = new AmbientLight();\r\n    lAmbientLight.setColor(0.1, 0.1, 0.1);\r\n    lWorldGroup.setData('ambientLight', (<StructBufferMemoryLayout>lWorldGroupLayout.getBind('ambientLight').layout).create(new Float32Array(lCamera.getMatrix(CameraMatrix.ViewProjection).dataArray)));\r\n\r\n    // Create point lights.\r\n    lWorldGroup.setData('pointLights', (<StructBufferMemoryLayout>lWorldGroupLayout.getBind('pointLights').layout).create(new Float32Array([\r\n        /* Position */1, 1, 1, 1, /* Color */1, 0, 0, 1,/* Range */ 200, 0, 0, 0,\r\n        /* Position */10, 10, 10, 1, /* Color */0, 0, 1, 1,/* Range */ 200, 0, 0, 0\r\n    ])));\r\n\r\n    /*\r\n     * User defined group.\r\n     */\r\n    const lUserGroupLayout = lShader.pipelineLayout.getGroupLayout(2);\r\n    const lUserGroup = lUserGroupLayout.createGroup();\r\n\r\n    // Setup cube texture.\r\n    const lCubeTexture = await (<TextureMemoryLayout>lUserGroupLayout.getBind('cubeTexture').layout).createImageTexture('/source/cube_texture/cube-texture.png');\r\n    lUserGroup.setData('cubeTexture', lCubeTexture);\r\n\r\n    // Setup Sampler.\r\n    const lCubeSampler = (<SamplerMemoryLayout>lUserGroupLayout.getBind('cubeTextureSampler').layout).create();\r\n    lUserGroup.setData('cubeTextureSampler', lCubeSampler);\r\n\r\n    // Generate render parameter from parameter layout.\r\n    const lMesh: VertexParameter = lShader.parameterLayout.createData(CubeVertexIndices);\r\n    lMesh.set('vertex.position', CubeVertexPositionData);\r\n    lMesh.set('vertex.uv', CubeVertexUvData); // TODO: Convert to Indexbased parameter.\r\n    lMesh.set('vertex.normal', CubeVertexNormalData); // TODO: Convert to Indexbased parameter.\r\n\r\n    // Set render targets.\r\n    const lRenderTargets: RenderTargets = lTextureGroup.create();\r\n    lRenderTargets.addColorBuffer('color', 0xaaaaaa, TextureOperation.Clear, TextureOperation.Keep, 'canvas');\r\n    lRenderTargets.setDepthStencilBuffer('depth', 0xff, TextureOperation.Clear, TextureOperation.Keep);\r\n\r\n    // Create pipeline.\r\n    const lPipeline: VertexFragmentPipeline = lShader.createPipeline(lRenderTargets);\r\n    lPipeline.primitiveCullMode = PrimitiveCullMode.Back;\r\n\r\n    // Create executor.\r\n    const lInstructionExecutor: InstructionExecuter = lGpu.instructionExecutor();\r\n\r\n    // Create instruction.\r\n    const lRenderInstruction = lInstructionExecutor.createVertexFragmentInstruction(lRenderTargets);\r\n    lRenderInstruction.addStep(lPipeline, lMesh, {\r\n        0: lTransformationGroup,\r\n        1: lWorldGroup,\r\n        2: lUserGroup\r\n    });\r\n\r\n    // TODO: Instruction set execution.\r\n    let lLastTime: number = 0;\r\n    const lRender = (pTime: number) => {\r\n        // Start new frame.\r\n        lGpu.startNewFrame();\r\n\r\n        // Generate encoder and add render commands.\r\n        lInstructionExecutor.execute();\r\n\r\n        const lFps: number = 1000 / (pTime - lLastTime);\r\n        (<any>window).currentFps = lFps;\r\n        lLastTime = pTime;\r\n\r\n        // Refresh canvas\r\n        requestAnimationFrame(lRender);\r\n    };\r\n    requestAnimationFrame(lRender);\r\n})();","export class Euler {\r\n    private mX: number;\r\n    private mY: number;\r\n    private mZ: number;\r\n\r\n    /**\r\n     * X axis degree.\r\n     */\r\n    public get x(): number {\r\n        return this.mX;\r\n    } set x(pValue: number) {\r\n        this.mX = pValue;\r\n    }\r\n\r\n    /**\r\n     * Y axis degree.\r\n     */\r\n    public get y(): number {\r\n        return this.mY;\r\n    } set y(pValue: number) {\r\n        this.mY = pValue;\r\n    }\r\n\r\n    /**\r\n     * Z axis degree.\r\n     */\r\n    public get z(): number {\r\n        return this.mZ;\r\n    } set z(pValue: number) {\r\n        this.mZ = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mX = 0;\r\n        this.mY = 0;\r\n        this.mZ = 0;\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Vector } from './vector';\r\n\r\nexport class Matrix {\r\n    /**\r\n     * Create matrix from data array.\r\n     * Direction from reading columns than rows.\r\n     * @param pArray - Array data. \r\n     * @param pHeight \r\n     * @param pWidth \r\n     * @returns \r\n     */\r\n    public static fromArray(pArray: Array<number>, pHeight: number, pWidth: number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        for (let lRowIndex = 0; lRowIndex < pHeight; lRowIndex++) {\r\n            const lRowData: Array<number> = new Array<number>(pWidth);\r\n\r\n            for (let lColumnIndex = 0; lColumnIndex < pWidth; lColumnIndex++) {\r\n                lRowData[lColumnIndex] = pArray[(lColumnIndex * pHeight) + lRowIndex];\r\n            }\r\n\r\n            // Add row to data array.\r\n            lData.push(lRowData);\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Create identity matrix.\r\n     * @param pSize - Matix size: nxn\r\n     * @param pValue - Value of identity. \r\n     */\r\n    public static identity(pSize: number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n        for (let lRowIndex = 0; lRowIndex < pSize; lRowIndex++) {\r\n            // Create Array filled with zeros.\r\n            const lRowData: Array<number> = new Array<number>(pSize).fill(0);\r\n\r\n            // Set identity column to value.\r\n            lRowData[lRowIndex] = 1;\r\n\r\n            // Add row to data array.\r\n            lData.push(lRowData);\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    private readonly mData: Array<Array<number>>;\r\n\r\n    /**\r\n     * Get matix raw data.\r\n     */\r\n    public get data(): Array<Array<number>> {\r\n        return this.mData;\r\n    }\r\n\r\n    /**\r\n     * Data as number array.\r\n     */\r\n    public get dataArray(): Array<number> {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        // Read from columns to rows.\r\n        for (let lColumnIndex = 0; lColumnIndex < this.width; lColumnIndex++) {\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lData.push(this.mData[lRowIndex][lColumnIndex]);\r\n            }\r\n        }\r\n\r\n        return lData;\r\n    }\r\n\r\n    /**\r\n     * Get matrix height.\r\n     */\r\n    public get height(): number {\r\n        return this.mData.length;\r\n    }\r\n\r\n    /**\r\n     * Get matrix width.\r\n     */\r\n    public get width(): number {\r\n        return this.mData[0]?.length ?? 0;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pData - Matrix data.\r\n     */\r\n    public constructor(pData: Array<Array<number>>) {\r\n        this.mData = pData;\r\n    }\r\n\r\n    /**\r\n     * Add value to matrix.\r\n     * @param pAddData - Matrix or scalar value.\r\n     */\r\n    public add(pAddData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pAddData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.height !== pAddData.height && this.width !== pAddData.width) {\r\n                throw new Exception('Matrices need to be the same size for calculation.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] + pAddData.data[lRowIndex][lColumnIndex];\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Add scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] + pAddData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Adjoint matrix.\r\n     */\r\n    public adjoint(): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Allways use first row and iterate over columns.\r\n        for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n            const lMatrixRow: Array<number> = new Array<number>();\r\n            for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n                // Calculate determant of matrix with omitted column and row.\r\n                // Toggle sign on each new row or column.\r\n                let lDeterminant: number = this.omit(lRowIndex, lColumIndex).determinant();\r\n                lDeterminant *= Math.pow(-1, (lRowIndex + 1) + (lColumIndex + 1));\r\n\r\n\r\n                lMatrixRow.push(lDeterminant);\r\n            }\r\n\r\n            // Add row to matrix data.\r\n            lMatrixData.push(lMatrixRow);\r\n        }\r\n\r\n        // Calculate transpose from cofactor matrix to get adjoint. \r\n        const lCofactorMatrix = new Matrix(lMatrixData);\r\n        return lCofactorMatrix.transpose();\r\n    }\r\n\r\n    /**\r\n     * Calculate determant of matrix.\r\n     */\r\n    public determinant(): number {\r\n        // Super fast determinant calculation of a 1x1 matrix.\r\n        if (this.height === 1 && this.width === 1) {\r\n            return this.data[0][0];\r\n        }\r\n\r\n        let lDeterminant: number = 0;\r\n        for (let lIterationIndex = 0; lIterationIndex < this.width; lIterationIndex++) {\r\n            // Get number of row iteration to detect if any calculation musst be done.\r\n            let lSignedNumber: number = this.data[0][lIterationIndex];\r\n            lSignedNumber *= (lIterationIndex % 2) ? -1 : 1; // Toggle sign between iteration. Begin with plus.\r\n\r\n            // Check if any calculation needs to be done. Zero multiplicated is allways zero.\r\n            if (lSignedNumber !== 0) {\r\n                // Calculate determinant of new matrix. Allways use first row.\r\n                const lDeterminantMatrix: Matrix = this.omit(0, lIterationIndex);\r\n                lDeterminant += lSignedNumber * lDeterminantMatrix.determinant();\r\n            }\r\n        }\r\n\r\n        return lDeterminant;\r\n    }\r\n\r\n    /**\r\n     * Inverse matrix.\r\n     */\r\n    public inverse(): Matrix {\r\n        const lAdjoint: Matrix = this.adjoint();\r\n        const lDeterminant: number = this.determinant();\r\n\r\n        // Devide each adjoint matrix component by determinant.\r\n        for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lAdjoint.data[lRowIndex][lColumIndex] /= lDeterminant;\r\n            }\r\n        }\r\n\r\n        return lAdjoint;\r\n    }\r\n\r\n    /**\r\n     * Multiplicate matrix.\r\n     * @param pMultData - Matrix or scalar value.\r\n     */\r\n    public mult(pMultData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pMultData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.width !== pMultData.height) {\r\n                throw new Exception('Matrices A width and B height must match for multiplication.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(pMultData.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n\r\n                    // Multiplicate target row with source column components.\r\n                    // Iteration length is eighter target.height or source.width.\r\n                    let lProduct: number = 0;\r\n                    for (let lComponentIndex = 0; lComponentIndex < this.height; lComponentIndex++) {\r\n                        lProduct += this.mData[lRowIndex][lComponentIndex] * pMultData.data[lComponentIndex][lColumnIndex];\r\n                    }\r\n                    lRowData[lColumnIndex] = lProduct;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Multiplicate scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < this.width; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] * pMultData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Omit row and column from matrix.\r\n     * @param pOmitRow - Omitting row.\r\n     * @param pOmitColumn - Omiting column\r\n     */\r\n    public omit(pOmitRow: number, pOmitColumn: number): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Allways use first row and iterate over columns.\r\n        for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n            if (lRowIndex !== pOmitRow) {\r\n                const lMatrixRow: Array<number> = new Array<number>();\r\n                for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n                    // Skip column of\r\n                    if (lColumIndex !== pOmitColumn) {\r\n                        lMatrixRow.push(this.data[lRowIndex][lColumIndex]);\r\n                    }\r\n                }\r\n\r\n                // Add row to matrix data.\r\n                lMatrixData.push(lMatrixRow);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lMatrixData);\r\n    }\r\n\r\n    /**\r\n     * Substract value to matrix.\r\n     * @param pAddData - Matrix or scalar value.\r\n     */\r\n    public sub(pAddData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pAddData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.height !== pAddData.height && this.width !== pAddData.width) {\r\n                throw new Exception('Matrices need to be the same size for calculation.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] - pAddData.data[lRowIndex][lColumnIndex];\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Add scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] - pAddData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Transpose matrix.\r\n     */\r\n    public transpose(): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Transpose by copying column into row.\r\n        for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n            const lMatrixRow: Array<number> = new Array<number>();\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lMatrixRow.push(this.data[lRowIndex][lColumIndex]);\r\n            }\r\n\r\n            // Add row to matrix data.\r\n            lMatrixData.push(lMatrixRow);\r\n        }\r\n\r\n        return new Matrix(lMatrixData);\r\n    }\r\n\r\n    /**\r\n     * Multiplicate matrix with vector.\r\n     * @param pMultData - Vector.\r\n     * @returns \r\n     */\r\n    public vectorMult(pMultData: Vector): Vector {\r\n        // Restrict on same length.\r\n        if (this.width !== pMultData.data.length) {\r\n            throw new Exception('Matrices A width and B height must match for multiplication.', this);\r\n        }\r\n\r\n        // Convert vector to matrix by creating a \r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n        for (const lVectorComponent of pMultData.data) {\r\n            lMatrixData.push([lVectorComponent]);\r\n        }\r\n\r\n        // Multiplicate\r\n        const lMutiplicatedMatrix = this.mult(new Matrix(lMatrixData));\r\n\r\n        const lVectorData: Array<number> = new Array<number>();\r\n        for (let lRowIndex = 0; lRowIndex < lMutiplicatedMatrix.height; lRowIndex++) {\r\n            lVectorData.push(lMutiplicatedMatrix.data[lRowIndex][0]);\r\n        }\r\n\r\n        return new Vector(lVectorData);\r\n    }\r\n}","import { Euler } from './euler';\r\nimport { Matrix } from './matrix';\r\nimport { Vector } from './vector';\r\n\r\nexport class Quaternion {\r\n    /**\r\n     * Create new quaternion from degree rotation.\r\n     * Rotate order XYZ (Pitch, Yaw, Roll)\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public static fromRotation(pPitch: number, pYaw: number, pRoll: number): Quaternion {\r\n        // Conversion to radian.\r\n        const lPitchRadian: number = (pPitch % 360) * Math.PI / 180;\r\n        const lYawRadian: number = (pYaw % 360) * Math.PI / 180;\r\n        const lRollRadian: number = (pRoll % 360) * Math.PI / 180;\r\n\r\n        // Pre calculate.\r\n        const lCosPitch = Math.cos(lPitchRadian * 0.5);\r\n        const lSinPitch = Math.sin(lPitchRadian * 0.5);\r\n        const lCosYaw = Math.cos(lYawRadian * 0.5);\r\n        const lSinYaw = Math.sin(lYawRadian * 0.5);\r\n        const lCosRoll = Math.cos(lRollRadian * 0.5);\r\n        const lSinRoll = Math.sin(lRollRadian * 0.5);\r\n\r\n        // Create quaternion.\r\n        const lQuaternion = Quaternion.identity();\r\n        lQuaternion.w = lCosPitch * lCosYaw * lCosRoll + lSinPitch * lSinYaw * lSinRoll;\r\n        lQuaternion.x = lSinPitch * lCosYaw * lCosRoll - lCosPitch * lSinYaw * lSinRoll;\r\n        lQuaternion.y = lCosPitch * lSinYaw * lCosRoll + lSinPitch * lCosYaw * lSinRoll;\r\n        lQuaternion.z = lCosPitch * lCosYaw * lSinRoll - lSinPitch * lSinYaw * lCosRoll;\r\n\r\n        return lQuaternion;\r\n    }\r\n\r\n    /**\r\n     * Create identity quaternion.\r\n     */\r\n    public static identity(): Quaternion {\r\n        return new Quaternion(1, 0, 0, 0);\r\n    }\r\n\r\n    public mW: number;\r\n    public mX: number;\r\n    public mY: number;\r\n    public mZ: number;\r\n\r\n    /**\r\n     * Rotation forward vector.\r\n     */\r\n    public get vectorForward(): Vector {\r\n        // Products.\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lProductXz: number = 2 * this.mX * this.mZ;\r\n        const lProductYw: number = 2 * this.mY * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = lProductXz + lProductYw;\r\n        const lY: number = lProductYz - lProductXw;\r\n        const lZ: number = 1 - lSquareX - lSquareY;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Rotation vector right.\r\n     */\r\n    public get vectorRight(): Vector {\r\n        // Products.\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = 1 - lSquareY - lSquareZ;\r\n        const lY: number = lProductXy + lProductZw;\r\n        const lZ: number = lProductYz + lProductXw;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Rotation up vector.\r\n     */\r\n    public get vectorUp(): Vector {\r\n        // Products.\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = lProductXy - lProductZw;\r\n        const lY: number = 1 - lSquareX - lSquareZ;\r\n        const lZ: number = lProductYz + lProductXw;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Get w value.\r\n     */\r\n    public get w(): number {\r\n        return this.mW;\r\n    } set w(pValue: number) {\r\n        this.mW = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get x value.\r\n     */\r\n    public get x(): number {\r\n        return this.mX;\r\n    } set x(pValue: number) {\r\n        this.mX = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get y value.\r\n     */\r\n    public get y(): number {\r\n        return this.mY;\r\n    } set y(pValue: number) {\r\n        this.mY = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get z value.\r\n     */\r\n    public get z(): number {\r\n        return this.mZ;\r\n    } set z(pValue: number) {\r\n        this.mZ = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pW - W.\r\n     * @param pX - X.\r\n     * @param pY - Y.\r\n     * @param pZ - Z.\r\n     */\r\n    public constructor(pW: number, pX: number, pY: number, pZ: number) {\r\n        this.mX = pX;\r\n        this.mY = pY;\r\n        this.mZ = pZ;\r\n        this.mW = pW;\r\n    }\r\n\r\n    /**\r\n     * Add angles to current euler rotation.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addEulerRotation(pPitch: number, pYaw: number, pRoll: number): Quaternion {\r\n        // Apply current rotation after setting new rotation to apply rotation as absolute euler rotation and not as relative quaternion.\r\n        return this.mult(Quaternion.fromRotation(pPitch, pYaw, pRoll));\r\n    }\r\n\r\n    /**\r\n     * Quaternion rotation as euler rotation\r\n     */\r\n    public asEuler(): Euler {\r\n        const lEuler: Euler = new Euler();\r\n\r\n        // Pitch (x-axis rotation)\r\n        const lSinPitchCosYaw = 2 * (this.mW * this.mX + this.mY * this.mZ);\r\n        const lCosPitchCosYaw = 1 - 2 * (this.mX * this.mX + this.mY * this.mY);\r\n        const lPitchRadian = Math.atan2(lSinPitchCosYaw, lCosPitchCosYaw);\r\n        const lPitchDegree = (lPitchRadian * 180 / Math.PI) % 360;\r\n        lEuler.x = (lPitchDegree < 0) ? lPitchDegree + 360 : lPitchDegree;\r\n\r\n        // Yaw (y-axis rotation)\r\n        const lSinYaw = Math.sqrt(1 + 2 * (this.mW * this.mY - this.mX * this.mZ));\r\n        const lCosYaw = Math.sqrt(1 - 2 * (this.mW * this.mY - this.mX * this.mZ));\r\n        const lYawRadian = 2 * Math.atan2(lSinYaw, lCosYaw) - Math.PI / 2;\r\n        const lYawDegree = (lYawRadian * 180 / Math.PI) % 360;\r\n        lEuler.y = (lYawDegree < 0) ? lYawDegree + 360 : lYawDegree;\r\n\r\n        // Roll (z-axis rotation)\r\n        const lSinRollCosYaw = 2 * (this.mW * this.mZ + this.mX * this.mY);\r\n        const lCosRollCosYaw = 1 - 2 * (this.mY * this.mY + this.mZ * this.mZ);\r\n        const lRollRadian = Math.atan2(lSinRollCosYaw, lCosRollCosYaw);\r\n        const lRollDegree = (lRollRadian * 180 / Math.PI) % 360;\r\n        lEuler.z = (lRollDegree < 0) ? lRollDegree + 360 : lRollDegree;\r\n\r\n        return lEuler;\r\n    }\r\n\r\n    /**\r\n     * Convert quaternion to a 4x4 rotation matrix.\r\n     */\r\n    public asMatrix(): Matrix {\r\n        /*\r\n            1 - 2*qy² - 2*qz²\t2*qx*qy - 2*qz*qw\t2*qx*qz + 2*qy*qw\r\n            2*qx*qy + 2*qz*qw\t1 - 2*qx² - 2*qz²\t2*qy*qz - 2*qx*qw\r\n            2*qx*qz - 2*qy*qw\t2*qy*qz + 2*qx*qw\t1 - 2*qx² - 2*qy²\r\n        */\r\n        // Sqares\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n\r\n        // Products.\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n        const lProductXz: number = 2 * this.mX * this.mZ;\r\n        const lProductYw: number = 2 * this.mY * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        // Fill matrix\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n        lMatrix.data[0][0] = 1 - lSquareY - lSquareZ;\r\n        lMatrix.data[0][1] = lProductXy - lProductZw;\r\n        lMatrix.data[0][2] = lProductXz + lProductYw;\r\n\r\n        lMatrix.data[1][0] = lProductXy + lProductZw;\r\n        lMatrix.data[1][1] = 1 - lSquareX - lSquareZ;\r\n        lMatrix.data[1][2] = lProductYz - lProductXw;\r\n\r\n        lMatrix.data[2][0] = lProductXz - lProductYw;\r\n        lMatrix.data[2][1] = lProductYz + lProductXw;\r\n        lMatrix.data[2][2] = 1 - lSquareX - lSquareY;\r\n\r\n        return lMatrix;\r\n    }\r\n\r\n    /**\r\n     * Multiplicate with quaternion.\r\n     * @param pQuaternion - Quaterion source.\r\n     */\r\n    public mult(pQuaternion: Quaternion): Quaternion {\r\n        const lW: number = this.mW * pQuaternion.w - this.mX * pQuaternion.x - this.mY * pQuaternion.y - this.mZ * pQuaternion.z;\r\n        const lX: number = this.mW * pQuaternion.x + this.mX * pQuaternion.w + this.mY * pQuaternion.z - this.mZ * pQuaternion.y;\r\n        const lY: number = this.mW * pQuaternion.y - this.mX * pQuaternion.z + this.mY * pQuaternion.w + this.mZ * pQuaternion.x;\r\n        const lZ: number = this.mW * pQuaternion.z + this.mX * pQuaternion.y - this.mY * pQuaternion.x + this.mZ * pQuaternion.w;\r\n\r\n        return new Quaternion(lW, lX, lY, lZ);\r\n    }\r\n\r\n    /**\r\n     * Normalize quaternion.\r\n     */\r\n    public normalize(): Quaternion {\r\n        // Calculate length.\r\n        const lLength = Math.hypot(Math.pow(this.mW, 2), Math.pow(this.mX, 2), Math.pow(this.mY, 2), Math.pow(this.mZ, 2));\r\n\r\n        // Create new quaternion by dividing each dimension by length.\r\n        return new Quaternion(this.mW / lLength, this.mX / lLength, this.mY / lLength, this.mZ / lLength);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\n\r\nexport class Vector {\r\n    private readonly mData: Array<number>;\r\n\r\n    /**\r\n     * Get vector data.\r\n     */\r\n    public get data(): Array<number> {\r\n        return this.mData;\r\n    }\r\n\r\n    /**\r\n     * W value quick access. \r\n     */\r\n    public get w(): number {\r\n        return this.mData[3];\r\n    }\r\n\r\n    /**\r\n     * X value quick access. \r\n     */\r\n    public get x(): number {\r\n        return this.mData[0];\r\n    }\r\n\r\n    /**\r\n     * Y value quick access. \r\n     */\r\n    public get y(): number {\r\n        return this.mData[1];\r\n    }\r\n\r\n    /**\r\n     * Z value quick access. \r\n     */\r\n    public get z(): number {\r\n        return this.mData[2];\r\n    }\r\n    \r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pData - Vector data.\r\n     */\r\n    public constructor(pData: Array<number>) {\r\n        this.mData = [...pData];\r\n    }\r\n\r\n    /**\r\n     * Add two vectors.\r\n     * @param pAddData - Vector or scalar.\r\n     */\r\n    public add(pAddData: Vector | number): Vector {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        if (pAddData instanceof Vector) {\r\n            // Restrict on same length.\r\n            if (this.mData.length !== pAddData.data.length) {\r\n                throw new Exception('Vectors need to be the same length for calculation.', this);\r\n            }\r\n\r\n            // Add values.\r\n            for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n                lData.push(this.mData[lIndex] + pAddData.data[lIndex]);\r\n            }\r\n        } else {\r\n            // Add scalar to each vector component.\r\n            for (const lItem of this.mData) {\r\n                lData.push(lItem + pAddData);\r\n            }\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n\r\n    /**\r\n     * Get length of vector.\r\n     */\r\n    public length(): number {\r\n        // Square root sum.\r\n        return Math.hypot(...this.mData);\r\n    }\r\n\r\n    /**\r\n     * Calulate cross product of two vector3.\r\n     * @param pVector - Vector3.\r\n     */\r\n    public multCross(pVector: Vector): Vector {\r\n        // Restrict on same length.\r\n        if (this.mData.length !== pVector.data.length && this.mData.length !== 3) {\r\n            throw new Exception('Vectors need to be the length of 3 for corss product calculation.', this);\r\n        }\r\n\r\n        /*\r\n         * cx = ay*bz − az*by\r\n         * cy = az*bx − ax*bz\r\n         * cz = ax*by − ay*bx\r\n         */\r\n        return new Vector([\r\n            this.mData[1] * pVector.data[2] - this.mData[2] * pVector.data[1],\r\n            this.mData[2] * pVector.data[0] - this.mData[0] * pVector.data[2],\r\n            this.mData[0] * pVector.data[1] - this.mData[1] * pVector.data[0]\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Multiply with dot procedure.\r\n     * @param pVector - Vector.\r\n     */\r\n    public multDot(pVector: Vector): number {\r\n        // Restrict on same length.\r\n        if (this.mData.length !== pVector.data.length) {\r\n            throw new Exception('Vectors need to be the same length for calculation.', this);\r\n        }\r\n\r\n        // Calculate dot product.\r\n        let lProduct: number = 0;\r\n        for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n            lProduct += this.mData[lIndex] * pVector.data[lIndex];\r\n        }\r\n\r\n        return lProduct;\r\n    }\r\n\r\n    /**\r\n     * Normalize vector.\r\n     */\r\n    public normalize(): Vector {\r\n        const lLength: number = this.length();\r\n\r\n        // Devide each vector component with it vector length.\r\n        const lData: Array<number> = new Array<number>();\r\n        for (const lItem of this.mData) {\r\n            lData.push(lItem / lLength);\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n\r\n    /**\r\n     * Substract two vectors.\r\n     * @param pSubData - Vector or scalar\r\n     */\r\n    public sub(pSubData: Vector | number): Vector {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        if (pSubData instanceof Vector) {\r\n            // Restrict on same length.\r\n            if (this.mData.length !== pSubData.data.length) {\r\n                throw new Exception('Vectors need to be the same length for calculation.', this);\r\n            }\r\n\r\n            // Add values.\r\n            for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n                lData.push(this.mData[lIndex] - pSubData.data[lIndex]);\r\n            }\r\n        } else {\r\n            // Substract scalar to each vector component.\r\n            for (const lItem of this.mData) {\r\n                lData.push(lItem - pSubData);\r\n            }\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { Vector } from '../../math/vector';\r\n\r\nexport class AmbientLight {\r\n    private readonly mColor: Vector;\r\n\r\n    /**\r\n     * Ambient light Vector4 data.\r\n     */\r\n    public get data(): Array<number> {\r\n        return this.mColor.data;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mColor = new Vector([1, 1, 1, 1]);\r\n    }\r\n\r\n    /**\r\n     * Set ambient light color.\r\n     * @param pRed - Red.\r\n     * @param pGreen - Green.\r\n     * @param pBlue - Blue.\r\n     */\r\n    public setColor(pRed: number, pGreen: number, pBlue: number): void {\r\n        if(pRed > 1 || pRed < 0 || pGreen > 1 || pGreen < 0 || pBlue > 1 || pBlue < 0){\r\n            throw new Exception(`Color values need to be in 0 to 1 range. (R:${pRed}, G:${pGreen}, B:${pBlue})`, this);\r\n        }\r\n\r\n        this.mColor.data[0] = pRed;\r\n        this.mColor.data[1] = pGreen;\r\n        this.mColor.data[2] = pBlue;\r\n    }\r\n}","import { Matrix } from '../math/matrix';\r\nimport { Quaternion } from '../math/quaternion';\r\nimport { Vector } from '../math/vector';\r\n\r\nexport class Transform {\r\n    private readonly mPivot: Matrix;\r\n    private mRotation: Quaternion;\r\n    private readonly mScale: Matrix;\r\n    private readonly mTranslation: Matrix;\r\n\r\n    /**\r\n     * X pivot point.\r\n     */\r\n    public get pivotX(): number {\r\n        return this.mPivot.data[0][3];\r\n    } set pivotX(pValue: number) {\r\n        this.mPivot.data[0][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Y pivot point.\r\n     */\r\n    public get pivotY(): number {\r\n        return this.mPivot.data[1][3];\r\n    } set pivotY(pValue: number) {\r\n        this.mPivot.data[1][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Z pivot point.\r\n     */\r\n    public get pivotZ(): number {\r\n        return this.mPivot.data[2][3];\r\n    } set pivotZ(pValue: number) {\r\n        this.mPivot.data[2][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Rotation on X angle.\r\n     * Pitch.\r\n     */\r\n    public get rotationPitch(): number {\r\n        return this.mRotation.asEuler().x;\r\n    }\r\n\r\n    /**\r\n     * Rotation on Z angle.\r\n     * Roll.\r\n     */\r\n    public get rotationRoll(): number {\r\n        return this.mRotation.asEuler().z;\r\n    }\r\n\r\n    /**\r\n     * Rotation on Y angle.\r\n     * Yaw.\r\n     */\r\n    public get rotationYaw(): number {\r\n        return this.mRotation.asEuler().y;\r\n    }\r\n\r\n    /**\r\n     * Depth scale.\r\n     */\r\n    public get scaleDepth(): number {\r\n        return this.mScale.data[2][2];\r\n    }\r\n\r\n    /**\r\n     * Height scale.\r\n     */\r\n    public get scaleHeight(): number {\r\n        return this.mScale.data[1][1];\r\n    }\r\n\r\n    /**\r\n     * Width scale.\r\n     */\r\n    public get scaleWidth(): number {\r\n        return this.mScale.data[0][0];\r\n    }\r\n\r\n    /**\r\n     * X translation.\r\n     */\r\n    public get translationX(): number {\r\n        return this.mTranslation.data[0][3];\r\n    }\r\n\r\n    /**\r\n     * Y translation.\r\n     */\r\n    public get translationY(): number {\r\n        return this.mTranslation.data[1][3];\r\n    }\r\n\r\n    /**\r\n     * Z translation.\r\n     */\r\n    public get translationZ(): number {\r\n        return this.mTranslation.data[2][3];\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mScale = Matrix.identity(4);\r\n        this.mTranslation = Matrix.identity(4);\r\n        this.mRotation = new Quaternion(1, 0, 0, 0);\r\n        this.mPivot = Matrix.identity(4);\r\n    }\r\n\r\n    /**\r\n     * Add angles to current euler rotation angles.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addEulerRotation(pPitch: number, pYaw: number, pRoll: number): void {\r\n        // Apply rotation to current rotation.\r\n        this.mRotation = this.mRotation.addEulerRotation(pPitch, pYaw, pRoll);\r\n    }\r\n\r\n    /**\r\n     * Add rotation to already rotated object.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addRotation(pPitch: number, pYaw: number, pRoll: number): void {\r\n        // Apply rotation to current rotation.\r\n        this.mRotation = Quaternion.fromRotation(pPitch, pYaw, pRoll).mult(this.mRotation);\r\n    }\r\n\r\n    /**\r\n     * Add scale.\r\n     * @param pWidth - Width multiplier.\r\n     * @param pHeight - Height multiplier.\r\n     * @param pDepth - Depth multiplier.\r\n     */\r\n    public addScale(pWidth: number, pHeight: number, pDepth: number): void {\r\n        this.mScale.data[0][0] += pWidth;\r\n        this.mScale.data[1][1] += pHeight;\r\n        this.mScale.data[2][2] += pDepth;\r\n    }\r\n\r\n    /**\r\n     * Add translation.\r\n     * @param pX - Movement on worlds X axis.\r\n     * @param pY - Movement on worlds Y axis.\r\n     * @param pZ - Movement on worlds Z axis.\r\n     */\r\n    public addTranslation(pX: number, pY: number, pZ: number): void {\r\n        this.mTranslation.data[0][3] += pX;\r\n        this.mTranslation.data[1][3] += pY;\r\n        this.mTranslation.data[2][3] += pZ;\r\n    }\r\n\r\n    /**\r\n     * Get transformation matrix.\r\n     */\r\n    public getMatrix(pType: TransformMatrix): Matrix {\r\n        switch (pType) {\r\n            case TransformMatrix.Scale: {\r\n                return this.mScale;\r\n            }\r\n            case TransformMatrix.Translation: {\r\n                return this.mTranslation;\r\n            }\r\n            case TransformMatrix.Rotation: {\r\n                return this.mRotation.asMatrix();\r\n            }\r\n            case TransformMatrix.PivotRotation: {\r\n                const lRotationMatrix: Matrix = this.getMatrix(TransformMatrix.Rotation);\r\n\r\n                // Check if pivit point is used.\r\n                let lPivotRotation: Matrix;\r\n                if (this.pivotX !== 0 || this.pivotY !== 0 || this.pivotZ !== 0) {\r\n                    // Translate pivot => rotate => reverse pivate translation.\r\n                    lPivotRotation = this.mPivot.inverse().mult(lRotationMatrix).mult(this.mPivot);\r\n                } else {\r\n                    lPivotRotation = lRotationMatrix;\r\n                }\r\n\r\n                return lPivotRotation;\r\n            }\r\n            case TransformMatrix.Transformation: {\r\n                const lScale: Matrix = this.getMatrix(TransformMatrix.Scale);\r\n                const lTranslation: Matrix = this.getMatrix(TransformMatrix.Translation);\r\n                const lRotation: Matrix = this.getMatrix(TransformMatrix.PivotRotation);\r\n\r\n                // First scale, second rotate, third translate.\r\n                return lTranslation.mult(lRotation).mult(lScale);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset current rotation and set new rotation.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public setRotation(pPitch: number | null, pYaw: number | null, pRoll: number | null): void {\r\n        const lPitch: number = pPitch ?? this.rotationPitch;\r\n        const lYaw: number = pYaw ?? this.rotationYaw;\r\n        const lRoll: number = pRoll ?? this.rotationRoll;\r\n\r\n        // Create new rotation.\r\n        this.mRotation = Quaternion.fromRotation(lPitch, lYaw, lRoll);\r\n    }\r\n\r\n    /**\r\n     * Set scale.\r\n     * @param pWidth - Width multiplier.\r\n     * @param pHeight - Height multiplier.\r\n     * @param pDepth - Depth multiplier.\r\n     */\r\n    public setScale(pWidth: number | null, pHeight: number | null, pDepth: number | null): void {\r\n        this.mScale.data[0][0] = pWidth ?? this.scaleWidth;\r\n        this.mScale.data[1][1] = pHeight ?? this.scaleHeight;\r\n        this.mScale.data[2][2] = pDepth ?? this.scaleDepth;\r\n    }\r\n\r\n    /**\r\n     * Set translation.\r\n     * @param pX - Movement on worlds X axis.\r\n     * @param pY - Movement on worlds Y axis.\r\n     * @param pZ - Movement on worlds Z axis.\r\n     */\r\n    public setTranslation(pX: number | null, pY: number | null, pZ: number | null): void {\r\n        this.mTranslation.data[0][3] = pX ?? this.translationX;\r\n        this.mTranslation.data[1][3] = pY ?? this.translationY;\r\n        this.mTranslation.data[2][3] = pZ ?? this.translationZ;\r\n    }\r\n\r\n    /**\r\n     * Translate into rotation direction.\r\n     * @param pForward - Forward movement.\r\n     * @param pRight - Right movement.\r\n     * @param pUp - Up movement.\r\n     */\r\n    public translateInDirection(pForward: number, pRight: number, pUp: number): void {\r\n        const lTranslationVector: Vector = new Vector([pRight, pUp, pForward, 1]);\r\n        const lDirectionVector: Vector = this.getMatrix(TransformMatrix.Rotation).vectorMult(lTranslationVector);\r\n\r\n        // Add direction.\r\n        this.addTranslation(lDirectionVector.x, lDirectionVector.y, lDirectionVector.z);\r\n    }\r\n}\r\n\r\nexport enum TransformMatrix {\r\n    Rotation = 1,\r\n    PivotRotation = 2,\r\n    Translation = 3,\r\n    Scale = 4,\r\n    Transformation = 5\r\n}","import { Matrix } from '../../../math/matrix';\r\nimport { IProjection } from './i-projection.interface';\r\n\r\nexport class PerspectiveProjection implements IProjection {\r\n    private mAngleOfView: number;\r\n    private mAspectRatio: number;\r\n    private mCacheProjectionMatrix: Matrix | null;\r\n    private mFar: number;\r\n    private mNear: number;\r\n\r\n    /**\r\n     * Angle of view.\r\n     */\r\n    public get angleOfView(): number {\r\n        return this.mAngleOfView;\r\n    } set angleOfView(pValue: number) {\r\n        this.mAngleOfView = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Angle of view.\r\n     */\r\n    public get aspectRatio(): number {\r\n        return this.mAspectRatio;\r\n    } set aspectRatio(pValue: number) {\r\n        this.mAspectRatio = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Far plane.\r\n     */\r\n    public get far(): number {\r\n        return this.mFar;\r\n    } set far(pValue: number) {\r\n        this.mFar = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Near plane.\r\n     */\r\n    public get near(): number {\r\n        return this.mNear;\r\n    } set near(pValue: number) {\r\n        this.mNear = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Projection matrix.\r\n     */\r\n    public get projectionMatrix(): Matrix {\r\n        if (this.mCacheProjectionMatrix === null) {\r\n            this.mCacheProjectionMatrix = this.createMatrix();\r\n        }\r\n\r\n        return this.mCacheProjectionMatrix;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mAngleOfView = 0;\r\n        this.mNear = 0;\r\n        this.mFar = 0;\r\n        this.mAspectRatio = 0;\r\n\r\n        // Cache.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Create projection matrix.\r\n     */\r\n    private createMatrix(): Matrix {\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n\r\n        // Reset identity.\r\n        lMatrix.data[0][0] = 0;\r\n        lMatrix.data[1][1] = 0;\r\n        lMatrix.data[2][2] = 0;\r\n        lMatrix.data[3][3] = 0;\r\n\r\n        // Calculate planes with centered camera on z-plane.\r\n        const lFar: number = this.mFar;\r\n        const lNear: number = this.mNear;\r\n\r\n        // Top bottom calculated by get height from vertical angle of view.\r\n        // Half angle is from y=>0 to top plane, as the angle descripes the distance between top and bottom plane.\r\n        // Tan(angleOfView / 2) = Top / Near => Near * Tan(angleOfView / 2) = Top\r\n        const lTop: number = this.mNear * Math.tan((this.angleOfView * Math.PI / 180) / 2);\r\n        const lBottom: number = -lTop;\r\n\r\n        // Left right calculated from aspect ratio.\r\n        const lRight: number = lTop * this.aspectRatio;\r\n        const lLeft: number = -lRight;\r\n\r\n        // We need to set VectorZ to VectorW to devide VectorX and VectorY by the VectorZ.\r\n        // So planes are smaller the further ways they are.\r\n        // And scale VectorX and VectorY with the near plane to start the projection not on Z=0 but on Z=Near.\r\n        // ┌ N  0  0   0  ┐   ┌ 1 ┐   ┌ 1 ┐\r\n        // | 0  N  0   0  |   | 2 |   | 2 |\r\n        // | 0  0  M1  M2 | x | 3 | = | 3 |\r\n        // └ 0  0  1   0  ┘   └ 1 ┘   └ 3 ┘\r\n\r\n        // Problem is: The VectorZ get also divided by VectorX and VectorW.\r\n        // To fix the problem set VectorZ to VectorZ² with only M1 and M2 available.\r\n        // As as M1 is the Scaling(M1 * Z) and M2 is Translating(M2 + Z) we get:\r\n        // M1*Z + M2 = Z² => Quadratic means two solutions. But we need one.\r\n        // So we constrains the equation to be only valid between Near and Far. So we set Z=Near or Z=Far.\r\n        // All other Z Values are calculated quadratic ranging from Near to Far.\r\n        // So we get:\r\n        // M1*Near + M2 = Near²  => M1 = Far + Near\r\n        // M1*Far  + M2 = Far²   => M2 = -(Far * Near)\r\n        // ┌ N  0      0         0     ┐\r\n        // | 0  N      0         0     |\r\n        // | 0  0    F + N   -(F * N)  |\r\n        // └ 0  0      1         0     ┘\r\n\r\n        // Multiplicate this perspectiv matrix with the orthigraphic to center the camera.\r\n        // ┌  2/(R-L)    0         0    -(R+L)/(R-L) ┐   ┌ N  0      0         0     ┐\r\n        // |     0     2/(T-B)     0    -(T+B)/(T-B) |   | 0  N      0         0     |\r\n        // |     0        0     1/(F-N)   -N/(F-N)   | x | 0  0    F + N   -(F * N)  |\r\n        // └     0        0        0          1      ┘   └ 0  0      1         0     ┘\r\n\r\n        // And we get.\r\n        // ┌  2N/(R-L)    0        -(R+L)/(R-L)           0      ┐\r\n        // |     0     2N/(T-B)    -(T+B)/(T-B)           0      |\r\n        // |     0        0          F/(F-N)       -(F*N)/(F-N) |\r\n        // └     0        0             1                0      ┘\r\n\r\n\r\n        // Set matrix data. Row 1:\r\n        lMatrix.data[0][0] = (2 * lNear) / (lRight - lLeft);\r\n        lMatrix.data[0][2] = -(lRight + lLeft) / (lRight - lLeft);\r\n\r\n        // Set matrix data. Row 2:\r\n        lMatrix.data[1][1] = (2 * lNear) / (lTop - lBottom);\r\n        lMatrix.data[1][2] = -(lTop + lBottom) / (lTop - lBottom);\r\n\r\n        // Set matrix data. Row 3:\r\n        lMatrix.data[2][2] = lFar / (lFar - lNear);\r\n        lMatrix.data[2][3] = -(lFar * lNear) / (lFar - lNear);\r\n\r\n        // Set matrix data. Row 4:\r\n        lMatrix.data[3][2] = 1;\r\n\r\n        return lMatrix;\r\n    }\r\n}","import { Matrix } from '../../math/matrix';\r\nimport { Transform, TransformMatrix } from '../transform';\r\nimport { IProjection } from './projection/i-projection.interface';\r\n\r\nexport class ViewProjection {\r\n    private readonly mProjection: IProjection;\r\n    private readonly mTransformation: Transform;\r\n\r\n    /**\r\n     * Camera projection.\r\n     */\r\n    public get projection(): IProjection {\r\n        return this.mProjection;\r\n    }\r\n\r\n    /**\r\n     * Camera transformation.\r\n     */\r\n    public get transformation(): Transform {\r\n        return this.mTransformation;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pProjection: IProjection) {\r\n        this.mProjection = pProjection;\r\n        this.mTransformation = new Transform();\r\n    }\r\n\r\n    /**\r\n     * Get camera matrix. \r\n     * @param pType - Matrix type. \r\n     */\r\n    public getMatrix(pType: CameraMatrix): Matrix {\r\n        switch (pType) {\r\n            case CameraMatrix.Translation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.Translation);\r\n            }\r\n            case CameraMatrix.Rotation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.Rotation);\r\n            }\r\n            case CameraMatrix.PivotRotation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.PivotRotation);\r\n            }\r\n            case CameraMatrix.Projection: {\r\n                return this.mProjection.projectionMatrix;\r\n            }\r\n            case CameraMatrix.View: {\r\n                const lTranslation: Matrix = this.getMatrix(CameraMatrix.Translation);\r\n                const lRotation: Matrix = this.getMatrix(CameraMatrix.Rotation);\r\n                return lTranslation.mult(lRotation).inverse();\r\n            }\r\n            case CameraMatrix.ViewProjection: {\r\n                const lView: Matrix = this.getMatrix(CameraMatrix.View);\r\n                const lProjection: Matrix = this.getMatrix(CameraMatrix.Projection);\r\n                return lProjection.mult(lView);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport enum CameraMatrix {\r\n    Translation = 1,\r\n    Rotation = 2,\r\n    PivotRotation = 3,\r\n    Projection = 4,\r\n    View = 5,\r\n    ViewProjection = 6\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { BaseMemoryLayout } from '../memory_layout/base-memory-layout';\r\nimport { BindDataGroup } from './bind-data-group';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\n\r\nexport class BindDataGroupLayout extends GpuObject<'bindDataGroupLayout'> {\r\n    private readonly mBindings: Dictionary<string, BindLayout>;\r\n    private mIdentifier: string;\r\n\r\n    /**\r\n     * Get binding names.\r\n     */\r\n    public get bindingNames(): Array<string> {\r\n        return [...this.mBindings.keys()];\r\n    }\r\n\r\n    /**\r\n    * Get bindings of group.\r\n    */\r\n    public get bindings(): Array<BindLayout> {\r\n        const lBindingList: Array<BindLayout> = new Array<BindLayout>();\r\n        for (const lBinding of this.mBindings.values()) {\r\n            lBindingList[lBinding.index] = lBinding;\r\n        }\r\n\r\n        return lBindingList;\r\n    }\r\n\r\n    /**\r\n     * Get bind group identifier.\r\n     * Same configured groups has the same identifier.\r\n     */\r\n    public get identifier(): string {\r\n        return this.mIdentifier;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        // Init storage.\r\n        this.mBindings = new Dictionary<string, BindLayout>();\r\n\r\n        // Update identifier.\r\n        this.mIdentifier = '';\r\n        this.addUpdateListener(() => {\r\n            let lIdentifier: string = '';\r\n            for (const lBind of this.mBindings.values()) {\r\n                // Simple chain of values.\r\n                lIdentifier += lBind.index;\r\n                lIdentifier += '-' + lBind.name;\r\n                lIdentifier += '-' + lBind.layout.accessMode;\r\n                lIdentifier += '-' + lBind.layout.bindingIndex;\r\n                lIdentifier += '-' + lBind.layout.memoryType;\r\n                lIdentifier += '-' + lBind.layout.name;\r\n                lIdentifier += '-' + lBind.layout.visibility;\r\n                lIdentifier += ';';\r\n            }\r\n\r\n            this.mIdentifier = lIdentifier;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add layout to binding group.\r\n     * @param pLayout - Memory layout.\r\n     * @param pName - Binding name. For easy access only.\r\n     * @param pIndex - Index of bind inside group.\r\n     */\r\n    public addBinding(pLayout: BaseMemoryLayout, pName: string): void {\r\n        if (pLayout.bindingIndex === null) {\r\n            throw new Exception(`Layout \"${pLayout.name}\" binding needs a binding index.`, this);\r\n        }\r\n\r\n        // Set layout.\r\n        this.mBindings.set(pName, {\r\n            name: pName,\r\n            index: pLayout.bindingIndex,\r\n            layout: pLayout\r\n        });\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n\r\n        // Trigger next auto update.\r\n        this.triggerAutoUpdate(UpdateReason.ChildData);\r\n    }\r\n\r\n    /**\r\n     * Create bind group from layout.\r\n     */\r\n    public createGroup(): BindDataGroup {\r\n        return new BindDataGroup(this.device, this);\r\n    }\r\n\r\n    /**\r\n     * Get full bind information.\r\n     * @param pName - Bind name.\r\n     */\r\n    public getBind(pName: string): Readonly<BindLayout> {\r\n        if (!this.mBindings.has(pName)) {\r\n            throw new Exception(`Bind ${pName} does not exist.`, this);\r\n        }\r\n\r\n        return this.mBindings.get(pName)!;\r\n    }\r\n}\r\n\r\ntype BindLayout = {\r\n    name: string,\r\n    index: number,\r\n    layout: BaseMemoryLayout;\r\n};","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { GpuBuffer } from '../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { FrameBufferTexture } from '../texture/frame-buffer-texture';\r\nimport { ImageTexture } from '../texture/image-texture';\r\nimport { TextureSampler } from '../texture/texture-sampler';\r\nimport { VideoTexture } from '../texture/video-texture';\r\nimport { BindDataGroupLayout } from './bind-data-group-layout';\r\nimport { CanvasTexture } from '../texture/canvas-texture';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\n\r\nexport class BindDataGroup extends GpuObject<'bindDataGroup'> {\r\n    private readonly mBindData: Dictionary<string, BindData>;\r\n    private readonly mLayout: BindDataGroupLayout;\r\n\r\n    /**\r\n     * Layout of bind group.\r\n     */\r\n    public get layout(): BindDataGroupLayout {\r\n        return this.mLayout;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pBindGroupLayout: BindDataGroupLayout) {\r\n        super(pDevice);\r\n\r\n        this.mLayout = pBindGroupLayout;\r\n        this.mBindData = new Dictionary<string, BindData>();\r\n\r\n        // Register change listener for layout changes.\r\n        pBindGroupLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get data of layout binding.\r\n     * @param pBindName - Bind layout entry name.\r\n     */\r\n    public getData(pBindName: string): BindData {\r\n        const lData = this.mBindData.get(pBindName);\r\n        if (!lData) {\r\n            throw new Exception(`Cant get bind data \"${pBindName}\". No data set.`, this);\r\n        }\r\n\r\n        return lData;\r\n    }\r\n\r\n    /**\r\n     * Set data to layout binding.\r\n     * @param pBindName - Bind layout entry name.\r\n     * @param pData - Bind data.\r\n     */\r\n    public setData(pBindName: string, pData: BindData): void {\r\n        // TODO: Validate data type with value type.\r\n\r\n        // Set bind type to Teture for TS type check shutup.\r\n        this.mBindData.set(pBindName, pData);\r\n    }\r\n}\r\n\r\ntype BindData = GpuBuffer<TypedArray> | TextureSampler | ImageTexture | FrameBufferTexture | VideoTexture | CanvasTexture;","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { BindDataGroupLayout } from './bind-data-group-layout';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\n\r\nexport class PipelineDataLayout extends GpuObject<'pipelineDataLayout'> {\r\n    private readonly mBindGroups: Dictionary<number, BindDataGroupLayout>;\r\n\r\n    /**\r\n     * Bind group count.\r\n     */\r\n    public get groups(): Array<number> {\r\n        return [...this.mBindGroups.keys()];\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        // Init storage.\r\n        this.mBindGroups = new Dictionary<number, BindDataGroupLayout>();\r\n    }\r\n\r\n    /**\r\n     * Create bind group.\r\n     * @param pIndex - Group index.\r\n     * @param pLayout - [Optional] Bind group Layout.\r\n     */\r\n    public addGroupLayout(pIndex: number, pLayout: BindDataGroupLayout): void {\r\n        this.mBindGroups.add(pIndex, pLayout);\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.ChildData);\r\n    }\r\n\r\n    /**\r\n     * Get created bind group layout.\r\n     * @param pIndex - Group index.\r\n     */\r\n    public getGroupLayout(pIndex: number): BindDataGroupLayout {\r\n        // Throw on unaccessable group.\r\n        if (!this.mBindGroups.has(pIndex)) {\r\n            throw new Exception(`Bind group layout (${pIndex}) does not exists.`, this);\r\n        }\r\n\r\n        // Bind group should allways exist.\r\n        return this.mBindGroups.get(pIndex)!;\r\n    }\r\n}","import { TypedArray } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { BaseBufferMemoryLayout } from '../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\n\r\n/**\r\n * GpuBuffer. Uses local and native gpu buffers.\r\n */\r\nexport class GpuBuffer<TType extends TypedArray> extends GpuObject<'gpuBuffer'> {\r\n    private readonly mDataType: BufferDataType<TType>;\r\n    private readonly mItemCount: number;\r\n    private readonly mLayout: BaseBufferMemoryLayout;\r\n\r\n    /**\r\n     * Data type of buffer.\r\n     */\r\n    public get dataType(): BufferDataType<TType> {\r\n        return this.mDataType;\r\n    }\r\n\r\n    /**\r\n     * Get buffer item count.\r\n     */\r\n    public get length(): number {\r\n        return this.mItemCount;\r\n    }\r\n\r\n    /**\r\n     * Buffer layout.\r\n     */\r\n    public get memoryLayout(): BaseBufferMemoryLayout {\r\n        return this.mLayout;\r\n    }\r\n\r\n    /**\r\n     * Buffer size in bytes aligned to 4 bytes.\r\n     */\r\n    public get size(): number {\r\n        return ((this.mItemCount * this.mDataType.BYTES_PER_ELEMENT) + 3) & ~3;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - GPU.\r\n     * @param pLayout - Buffer layout.\r\n     * @param pInitialData  - Inital data. Can be empty. Or Buffer size. \r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: BaseBufferMemoryLayout, pInitialData: TType | number) {\r\n        super(pDevice);\r\n        this.mLayout = pLayout;\r\n        this.mDataType = <BufferDataType<TType>>pInitialData.constructor;\r\n\r\n        // Set buffer initial data from buffer size or buffer data.\r\n        if(typeof pInitialData === 'number'){\r\n            this.mItemCount = pInitialData;\r\n        } else{\r\n            this.mItemCount =  pInitialData.length;\r\n            this.writeRaw(pInitialData, 0);\r\n        }\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Read buffer on layout location.\r\n     * @param pLayoutPath - Layout path. \r\n     */\r\n    public async read(pLayoutPath: Array<string>): Promise<TType> {\r\n        const lLocation = this.mLayout.locationOf(pLayoutPath);\r\n        return this.readRaw(lLocation.offset, lLocation.size);\r\n    }\r\n\r\n    /**\r\n     * Read data raw without layout.\r\n     * @param pOffset - Data offset.\r\n     * @param pSize - Data size.\r\n     */\r\n    public async readRaw(pOffset?: number | undefined, pSize?: number | undefined): Promise<TType> {\r\n        const lOffset: number = pOffset ?? 0;\r\n        const lSize: number = pSize ?? this.size;\r\n\r\n        // Read data async\r\n        const lBufferGenerator = this.device.generator.request<'gpuBuffer'>(this);\r\n        return <TType>await lBufferGenerator.readRaw(lOffset, lSize);\r\n    }\r\n\r\n    /**\r\n     * Write data on layout location.\r\n     * @param pData - Data.\r\n     * @param pLayoutPath - Layout path.\r\n     */\r\n    public async write(pData: ArrayLike<number>, pLayoutPath: Array<string>): Promise<void> {\r\n        const lLocation = this.mLayout.locationOf(pLayoutPath);\r\n\r\n        // Skip new promise creation by returning original promise.\r\n        return this.writeRaw(pData, lLocation.offset);\r\n    }\r\n\r\n    /**\r\n     * Write data raw without layout.\r\n     * @param pData - Data.\r\n     * @param pOffset - Data offset.\r\n     */\r\n    public async writeRaw(pData: ArrayLike<number>, pOffset?: number | undefined): Promise<void> {\r\n        const lOffset: number = pOffset ?? 0;\r\n\r\n        // Write data async. Dont wait.\r\n        const lBufferGenerator = this.device.generator.request<'gpuBuffer'>(this);\r\n        lBufferGenerator.writeRaw(pData, lOffset, pData.length);\r\n    }\r\n}\r\n\r\ntype BufferDataType<T extends TypedArray> = {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    BYTES_PER_ELEMENT: number;\r\n    new(pInitValues: ArrayBuffer | number | TypedArray): T;\r\n};","import { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { RenderTargets } from '../pipeline/target/render-targets';\r\nimport { ComputeInstruction } from './instruction/compute-instruction';\r\nimport { IGpuInstruction } from './instruction/i-gpu-instruction.interface';\r\nimport { VertexFragmentInstruction } from './instruction/vertex-fragment-instruction';\r\n\r\nexport class InstructionExecuter extends GpuObject<'instructionExecutor'> {\r\n    private readonly mInstructionList: Array<IGpuInstruction>;\r\n\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        this.mInstructionList = new Array<IGpuInstruction>();\r\n    }\r\n\r\n    /**\r\n     * Create and add new compute instruction\r\n     */\r\n    public createComputeInstruction(): ComputeInstruction {\r\n        // Create instruction.\r\n        const lInstruction: ComputeInstruction = new ComputeInstruction(this.device, this);\r\n\r\n        // Add instruction to instruction list.\r\n        this.mInstructionList.push(lInstruction);\r\n\r\n        return lInstruction;\r\n    }\r\n\r\n    /**\r\n     * Create and add new vertex fragment instruction\r\n     * @param pRenderTargets - Instruction render targets.\r\n     */\r\n    public createVertexFragmentInstruction(pRenderTargets: RenderTargets): VertexFragmentInstruction {\r\n        // Create instruction.\r\n        const lInstruction: VertexFragmentInstruction = new VertexFragmentInstruction(this.device, this, pRenderTargets);\r\n\r\n        // Add instruction to instruction list.\r\n        this.mInstructionList.push(lInstruction);\r\n\r\n        return lInstruction;\r\n    }\r\n\r\n    /**\r\n     * Execute all instructions on order.\r\n     */\r\n    public execute(): void {\r\n        const lInstructionExecutor = this.device.generator.request<'instructionExecutor'>(this);\r\n\r\n        // Start execution.\r\n        lInstructionExecutor.startExecution();\r\n\r\n        for (const lInstruction of this.mInstructionList) {\r\n            lInstruction.execute();\r\n        }\r\n\r\n        // End Execution.\r\n        lInstructionExecutor.endExecution();\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { BindDataGroup } from '../../binding/bind-data-group';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/gpu-object';\r\nimport { ComputePipeline } from '../../pipeline/compute-pipeline';\r\nimport { InstructionExecuter } from '../instruction-executor';\r\nimport { IGpuInstruction } from './i-gpu-instruction.interface';\r\n\r\nexport class ComputeInstruction extends GpuObject<'computeInstruction'> implements IGpuInstruction {\r\n    private readonly mExecutor: InstructionExecuter;\r\n    private readonly mStepList: Array<ComputeInstructionStep>;\r\n\r\n    /**\r\n     * Get executor.\r\n     */\r\n    public get executor(): InstructionExecuter {\r\n        return this.mExecutor;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get all instruction steps.\r\n     */\r\n    public get steps(): Array<ComputeInstructionStep> {\r\n        return this.mStepList;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pExecutor: InstructionExecuter) {\r\n        super(pDevice);\r\n\r\n        this.mStepList = new Array<ComputeInstructionStep>();\r\n        this.mExecutor = pExecutor;\r\n    }\r\n\r\n    /**\r\n     * Add instruction step.\r\n     * @param pPipeline - Pipeline.\r\n     * @param pBindData -  Pipeline bind data.\r\n     */\r\n    public addStep(pPipeline: ComputePipeline, pBindData: Record<number, BindDataGroup>): void {\r\n        const lStep: ComputeInstructionStep = {\r\n            pipeline: pPipeline,\r\n            bindData: new Array<BindDataGroup | null>()\r\n        };\r\n\r\n        // Fill in data groups.\r\n        for (const lGroup of pPipeline.shader.pipelineLayout.groups) {\r\n            const lBindDataGroup: BindDataGroup | undefined = pBindData[lGroup];\r\n\r\n            // Validate bind data group.\r\n            if (!lBindDataGroup) {\r\n                throw new Exception('Defined bind data group not set.', this);\r\n            }\r\n\r\n            // Validate same layout bind layout.\r\n            const lBindGroupLayout = pPipeline.shader.pipelineLayout.getGroupLayout(lGroup);\r\n            if (lBindDataGroup.layout.identifier !== lBindGroupLayout.identifier) {\r\n                throw new Exception('Source bind group layout does not match target layout.', this);\r\n            }\r\n\r\n            lStep.bindData[lGroup] = pBindData[lGroup];\r\n        }\r\n\r\n        this.mStepList.push(lStep);\r\n    }\r\n\r\n    /**\r\n     * Execute instruction.\r\n     * @param pExecutor - Executor context.\r\n     */\r\n    public execute(): void {\r\n        this.device.generator.request<'computeInstruction'>(this).execute();\r\n    }\r\n}\r\n\r\ntype ComputeInstructionStep = {\r\n    pipeline: ComputePipeline;\r\n    bindData: Array<BindDataGroup | null>;\r\n};","import { Exception } from '@kartoffelgames/core.data';\r\nimport { BindDataGroup } from '../../binding/bind-data-group';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/gpu-object';\r\nimport { VertexParameter } from '../../pipeline/parameter/vertex-parameter';\r\nimport { RenderTargets } from '../../pipeline/target/render-targets';\r\nimport { VertexFragmentPipeline } from '../../pipeline/vertex-fragment-pipeline';\r\nimport { InstructionExecuter } from '../instruction-executor';\r\nimport { IGpuInstruction } from './i-gpu-instruction.interface';\r\n\r\nexport class VertexFragmentInstruction extends GpuObject<'vertexFragmentInstruction'> implements IGpuInstruction {\r\n    private readonly mExecutor: InstructionExecuter;\r\n    private readonly mRenderTargets: RenderTargets;\r\n    private readonly mStepList: Array<VertexFragmentInstructionStep>;\r\n\r\n    /**\r\n     * Get executor.\r\n     */\r\n    public get executor(): InstructionExecuter {\r\n        return this.mExecutor;\r\n    }\r\n\r\n    /**\r\n     * Get instruction render target.\r\n     */\r\n    public get renderTargets(): RenderTargets {\r\n        return this.mRenderTargets;\r\n    }\r\n\r\n    /**\r\n     * Get all instruction steps.\r\n     */\r\n    public get steps(): Array<VertexFragmentInstructionStep> {\r\n        return this.mStepList;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device reference.\r\n     * @param pRenderTargets - Render targets. \r\n     */\r\n    public constructor(pDevice: GpuDevice, pExecutor: InstructionExecuter, pRenderTargets: RenderTargets) {\r\n        super(pDevice);\r\n\r\n        this.mStepList = new Array<VertexFragmentInstructionStep>();\r\n        this.mRenderTargets = pRenderTargets;\r\n        this.mExecutor = pExecutor;\r\n    }\r\n\r\n    /**\r\n     * Add instruction step.\r\n     * @param pPipeline - Pipeline.\r\n     * @param pParameter - Pipeline parameter.\r\n     * @param pBindData - Pipline bind data groups.\r\n     * @param pInstanceCount - Instance count.\r\n     */\r\n    public addStep(pPipeline: VertexFragmentPipeline, pParameter: VertexParameter, pBindData: Record<number, BindDataGroup>, pInstanceCount: number = 1): void {\r\n        // Validate same render targets.\r\n        if (this.mRenderTargets !== pPipeline.renderTargets) {\r\n            throw new Exception('Instruction render pass not valid for instruction set.', this);\r\n        }\r\n\r\n        const lStep: VertexFragmentInstructionStep = {\r\n            pipeline: pPipeline,\r\n            parameter: pParameter,\r\n            instanceCount: pInstanceCount,\r\n            bindData: new Array<BindDataGroup | null>()\r\n        };\r\n\r\n        // Fill in data groups.\r\n        for (const lGroup of pPipeline.shader.pipelineLayout.groups) {\r\n            const lBindDataGroup: BindDataGroup | undefined = pBindData[lGroup];\r\n\r\n            // Validate bind data group.\r\n            if (!lBindDataGroup) {\r\n                throw new Exception('Defined bind data group not set.', this);\r\n            }\r\n\r\n            // Validate same layout bind layout.\r\n            const lBindGroupLayout = pPipeline.shader.pipelineLayout.getGroupLayout(lGroup);\r\n            if (lBindDataGroup.layout.identifier !== lBindGroupLayout.identifier) {\r\n                throw new Exception('Source bind group layout does not match target layout.', this);\r\n            }\r\n\r\n            lStep.bindData[lGroup] = pBindData[lGroup];\r\n        }\r\n\r\n        this.mStepList.push(lStep);\r\n    }\r\n\r\n    /**\r\n     * Execute instruction.\r\n     * @param pExecutor - Executor context.\r\n     */\r\n    public execute(): void {\r\n        this.device.generator.request<'vertexFragmentInstruction'>(this).execute();\r\n    }\r\n}\r\n\r\ntype VertexFragmentInstructionStep = {\r\n    pipeline: VertexFragmentPipeline;\r\n    parameter: VertexParameter;\r\n    instanceCount: number;\r\n    bindData: Array<BindDataGroup | null>;\r\n};","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { BindDataGroup } from '../binding/bind-data-group';\r\nimport { BindDataGroupLayout } from '../binding/bind-data-group-layout';\r\nimport { PipelineDataLayout } from '../binding/pipeline-data-layout';\r\nimport { GpuBuffer } from '../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { ComputePipeline } from '../pipeline/compute-pipeline';\r\nimport { RenderTargets } from '../pipeline/target/render-targets';\r\nimport { VertexFragmentPipeline } from '../pipeline/vertex-fragment-pipeline';\r\nimport { ComputeShader } from '../shader/compute-shader';\r\nimport { VertexFragmentShader } from '../shader/vertex-fragment-shader';\r\nimport { CanvasTexture } from '../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../texture/frame-buffer-texture';\r\nimport { ImageTexture } from '../texture/image-texture';\r\nimport { TextureSampler } from '../texture/texture-sampler';\r\nimport { VideoTexture } from '../texture/video-texture';\r\nimport { BaseNativeBufferGenerator } from './base-native-buffer-generator';\r\nimport { BaseNativeGenerator } from './base-native-generator';\r\nimport { ComputeInstruction } from '../execution/instruction/compute-instruction';\r\nimport { VertexFragmentInstruction } from '../execution/instruction/vertex-fragment-instruction';\r\nimport { BaseNativeInstructionGenerator } from './base-native-instruction-generator';\r\nimport { InstructionExecuter } from '../execution/instruction-executor';\r\nimport { BaseNativeInstructionExecutorGenerator } from './base-native-instruction-executor-generator';\r\n\r\nexport abstract class BaseGeneratorFactory<TGeneratorMap extends GeneratorNativeMap = GeneratorNativeMap> {\r\n    private mDevice: GpuDevice | null;\r\n    private readonly mGeneratorConstructors: Dictionary<ConstructorOf<GenerateableGpuObject>, ConstructorOf<NativeGenerator<TGeneratorMap>>>;\r\n    private readonly mGenerators: Dictionary<GenerateableGpuObject, NativeGenerator<TGeneratorMap>>;\r\n\r\n    public get device(): GpuDevice {\r\n        if (!this.mDevice) {\r\n            throw new Exception('Generator factory not initialized.', this);\r\n        }\r\n\r\n        return this.mDevice;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mGeneratorConstructors = new Dictionary<ConstructorOf<GenerateableGpuObject>, ConstructorOf<NativeGenerator<TGeneratorMap>>>();\r\n        this.mGenerators = new Dictionary<GenerateableGpuObject, NativeGenerator<TGeneratorMap>>();\r\n        this.mDevice = null;\r\n    }\r\n\r\n    /**\r\n     * Init factory with gpu device.\r\n     * @param pDevice - Gpu device.\r\n     */\r\n    public async init(pDevice: GpuDevice): Promise<this> {\r\n        // Set device.\r\n        this.mDevice = pDevice;\r\n\r\n        // Init internals.\r\n        await this.initInternals();\r\n\r\n        // Resolve with itself.\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Generate native.\r\n     * @param pType - Type name of base object.\r\n     * @param pBaseObject - Base gpu object.\r\n     */\r\n    public request<TKey extends GeneratorObjectKeys>(pBaseObject: GenerateableGpuObjectOf<TKey>): NativeGeneratorOf<TGeneratorMap, TKey> {\r\n        // Check for cached generator.\r\n        if (this.mGenerators.has(pBaseObject)) {\r\n            return <NativeGeneratorOf<TGeneratorMap, TKey>>this.mGenerators.get(pBaseObject)!;\r\n        }\r\n\r\n        // Get and validate generator function.\r\n        const lGeneratorConstructor = <ConstructorOf<NativeGeneratorOf<TGeneratorMap, TKey>> | undefined>this.mGeneratorConstructors.get(<any>pBaseObject.constructor);\r\n        if (!lGeneratorConstructor) {\r\n            // Currently only for 'none' Gpu objects or unset generators.\r\n            const lNullCache: null | any = null;\r\n\r\n            // Cache null.\r\n            this.mGenerators.set(pBaseObject, lNullCache);\r\n\r\n            return lNullCache;\r\n        }\r\n\r\n        // Create and cache generator.\r\n        const lGenerator: NativeGeneratorOf<TGeneratorMap, TKey> = new lGeneratorConstructor(pBaseObject);\r\n        this.mGenerators.set(pBaseObject, lGenerator);\r\n\r\n        return lGenerator;\r\n    }\r\n\r\n    /**\r\n     * Register an generatpr for this type.\r\n     * @param pType - Base gpu object type name.\r\n     * @param pGenerator - Generator for this type.\r\n     */\r\n    protected registerGenerator<TKey extends GeneratorObjectKeys>(pType: ConstructorOf<GenerateableGpuObjectOf<TKey>>, pGenerator: ConstructorOf<NativeGeneratorOf<TGeneratorMap, TKey>>): void {\r\n        if (this.mGeneratorConstructors.has(pType)) {\r\n            throw new Exception(`Generator already registed for \"${pType.name}\"`, this);\r\n        }\r\n\r\n        this.mGeneratorConstructors.set(pType, <ConstructorOf<NativeGenerator<TGeneratorMap>>>pGenerator);\r\n    }\r\n\r\n    /**\r\n     * Init factory internals.\r\n     */\r\n    protected abstract initInternals(): Promise<void>;\r\n}\r\n\r\n// Generator keys with optional 'none'\r\nexport type GeneratorObjectKeys = keyof GeneratorFactoryMap | 'none';\r\ntype GenerateableGpuObjectOf<TKey extends GeneratorObjectKeys> = TKey extends keyof GeneratorFactoryMap ? GeneratorFactoryMap[TKey]['gpuObject'] : GpuObject<'none'>;\r\ntype GenerateableGpuObject = GenerateableGpuObjectOf<GeneratorObjectKeys>;\r\ntype NativeGeneratorOf<TMap extends GeneratorNativeMap, TKey extends GeneratorObjectKeys> = TKey extends keyof GeneratorFactoryMap ? TMap['generators'][TKey]['generator'] : null;\r\ntype NativeGenerator<TMap extends GeneratorNativeMap> = NativeGeneratorOf<TMap, GeneratorObjectKeys>;\r\n\r\n// Constructor type.\r\ntype ConstructorOf<T> = new (...pArgs: Array<any>) => T;\r\n\r\n// Mapping of all base gpu objects.\r\nexport interface GeneratorFactoryMap {\r\n    // Textures.\r\n    textureSampler: {\r\n        gpuObject: TextureSampler;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'textureSampler'>;\r\n    };\r\n    imageTexture: {\r\n        gpuObject: ImageTexture;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'imageTexture'>;\r\n    };\r\n    frameBufferTexture: {\r\n        gpuObject: FrameBufferTexture;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'frameBufferTexture'>;\r\n    };\r\n    videoTexture: {\r\n        gpuObject: VideoTexture;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'videoTexture'>;\r\n    };\r\n    canvasTexture: {\r\n        gpuObject: CanvasTexture;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'canvasTexture'>;\r\n    };\r\n\r\n    // Things with generics. :(\r\n    gpuBuffer: {\r\n        gpuObject: GpuBuffer<TypedArray>;\r\n        generator: BaseNativeBufferGenerator<GeneratorNativeMap, 'gpuBuffer'>;\r\n    };\r\n\r\n    // Pipeline layouting.\r\n    bindDataGroupLayout: {\r\n        gpuObject: BindDataGroupLayout;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'bindDataGroupLayout'>;\r\n    };\r\n    bindDataGroup: {\r\n        gpuObject: BindDataGroup;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'bindDataGroup'>;\r\n    };\r\n    pipelineDataLayout: {\r\n        gpuObject: PipelineDataLayout;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'pipelineDataLayout'>;\r\n    };\r\n    renderTargets: {\r\n        gpuObject: RenderTargets;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'renderTargets'>;\r\n    };\r\n\r\n    // Pipelines.\r\n    vertexFragmentPipeline: {\r\n        gpuObject: VertexFragmentPipeline;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'vertexFragmentPipeline'>;\r\n    };\r\n    computePipeline: {\r\n        gpuObject: ComputePipeline;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'computePipeline'>;\r\n    };\r\n\r\n    // Shader.\r\n    vertexFragmentShader: {\r\n        gpuObject: VertexFragmentShader;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'vertexFragmentShader'>;\r\n    };\r\n    computeShader: {\r\n        gpuObject: ComputeShader;\r\n        generator: BaseNativeGenerator<GeneratorNativeMap, 'computeShader'>;\r\n    };\r\n\r\n    // Execution.\r\n    computeInstruction: {\r\n        gpuObject: ComputeInstruction;\r\n        generator: BaseNativeInstructionGenerator<GeneratorNativeMap, 'computeInstruction'>;\r\n    };\r\n    vertexFragmentInstruction: {\r\n        gpuObject: VertexFragmentInstruction;\r\n        generator: BaseNativeInstructionGenerator<GeneratorNativeMap, 'vertexFragmentInstruction'>;\r\n    };\r\n    instructionExecutor: {\r\n        gpuObject: InstructionExecuter;\r\n        generator: BaseNativeInstructionExecutorGenerator<GeneratorNativeMap, 'instructionExecutor'>;\r\n    }\r\n}\r\n\r\n// Same type but without undefined behavior.\r\nexport interface GeneratorNativeMap {\r\n    factory: BaseGeneratorFactory<GeneratorNativeMap>;\r\n    generators: {\r\n        [Property in keyof GeneratorFactoryMap]: {\r\n            generator: GeneratorFactoryMap[Property]['generator'];\r\n            native: any;\r\n        }\r\n    };\r\n}","import { TypedArray } from '@kartoffelgames/core.data';\r\nimport { GeneratorFactoryMap, GeneratorNativeMap } from './base-generator-factory';\r\nimport { BaseNativeGenerator } from './base-native-generator';\r\n\r\nexport abstract class BaseNativeBufferGenerator<TMap extends GeneratorNativeMap, TGeneratorKey extends keyof GeneratorFactoryMap> extends BaseNativeGenerator<TMap, TGeneratorKey> {\r\n    /**\r\n     * Read data raw from native buffer.\r\n     * @param pOffset - Read offset.\r\n     * @param pSize - Read size.\r\n     */\r\n    public abstract readRaw(pOffset: number, pSize: number): Promise<TypedArray>;\r\n\r\n    /**\r\n     * Write data raw without layout.\r\n     * @param pData - Data.\r\n     * @param pOffset - Data offset.\r\n     * @param pSize - Data size.\r\n     */\r\n    public abstract writeRaw(pData: ArrayLike<number>, pOffset: number, pSize: number | undefined): Promise<void>;\r\n}","import { GpuObjectUpdateReason, UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { GeneratorFactoryMap, GeneratorNativeMap } from './base-generator-factory';\r\n\r\nexport abstract class BaseNativeGenerator<TMap extends GeneratorNativeMap, TGeneratorKey extends keyof GeneratorFactoryMap> {\r\n    private readonly mFactory: TMap['factory'];\r\n    private readonly mGpuObject: GeneratorFactoryMap[TGeneratorKey]['gpuObject'];\r\n    private mLastGeneratedFrame: number;\r\n    private mNative: TMap['generators'][TGeneratorKey]['native'] | null;\r\n    private readonly mUpdateReasons: GpuObjectUpdateReason;\r\n\r\n    /**\r\n     * Life time of native object.\r\n     */\r\n    protected abstract nativeLifeTime: NativeObjectLifeTime;\r\n\r\n    /**\r\n     * Generator factory.\r\n     */\r\n    protected get factory(): TMap['factory'] {\r\n        return this.mFactory;\r\n    }\r\n\r\n    /**\r\n     * Get base object of generator.\r\n     */\r\n    protected get gpuObject(): GeneratorFactoryMap[TGeneratorKey]['gpuObject'] {\r\n        return this.mGpuObject;\r\n    }\r\n\r\n    /**\r\n     * Get generator update reasons.\r\n     */\r\n    protected get updateReasons(): GpuObjectUpdateReason {\r\n        return this.mUpdateReasons;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pBaseObject - Base object containing all values.\r\n     * @param pGeneratorFactory - Generator factory.\r\n     */\r\n    public constructor(pFactory: TMap['factory'], pBaseObject: TGeneratorKey extends keyof GeneratorFactoryMap ? GeneratorFactoryMap[TGeneratorKey]['gpuObject'] : never) {\r\n        this.mFactory = pFactory;\r\n        this.mGpuObject = pBaseObject;\r\n        this.mNative = null;\r\n        this.mLastGeneratedFrame = 0;\r\n        this.mUpdateReasons = new GpuObjectUpdateReason();\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu object from base.\r\n     */\r\n    public create(): TMap['generators'][TGeneratorKey]['native'] {\r\n        // Validate life time.\r\n        switch (this.nativeLifeTime) {\r\n            case NativeObjectLifeTime.Persistent: {\r\n                // Do nothing.\r\n                break;\r\n            }\r\n            case NativeObjectLifeTime.Single: {\r\n                // Invalidate every time.\r\n                this.invalidate(UpdateReason.LifeTime);\r\n                break;\r\n            }\r\n            case NativeObjectLifeTime.Frame: {\r\n                // Invalidate on different frame till last generated.\r\n                if (this.factory.device.frameCount !== this.mLastGeneratedFrame) {\r\n                    this.invalidate(UpdateReason.LifeTime);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Clear and destroy old native when any update reason exists.\r\n        if (this.mNative !== null && this.mUpdateReasons.any()) {\r\n            this.destroy(this.mNative);\r\n            this.mNative = null;\r\n        }\r\n\r\n        // Generate new native when not already generated.\r\n        if (this.mNative === null) {\r\n            this.mNative = this.generate();\r\n            this.mLastGeneratedFrame = this.factory.device.frameCount;\r\n\r\n            // Reset all update reasons.\r\n            this.mUpdateReasons.clear();\r\n        }\r\n\r\n        return this.mNative;\r\n    }\r\n\r\n    /**\r\n     * Invalidate and destroy generated native.\r\n     */\r\n    public invalidate(pDestroyReason: UpdateReason): void {\r\n        // Add update reason.\r\n        this.mUpdateReasons.add(pDestroyReason);\r\n    }\r\n\r\n    /**\r\n     * Destroy generated native.\r\n     * @param _pNative - Generated native.\r\n     * @param _pDestroyReason - Reason why the native should be destroyed.\r\n     */\r\n    protected destroy(_pNative: TMap['generators'][TGeneratorKey]['native']): void {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu object.\r\n     * @param pUpdateReason - Reason why the native should be updated.\r\n     */\r\n    protected abstract generate(): TMap['generators'][TGeneratorKey]['native'];\r\n}\r\n\r\nexport enum NativeObjectLifeTime {\r\n    Persistent = 0,\r\n    Frame = 1,\r\n    Single = 2\r\n}","import { InstructionExecuter } from '../execution/instruction-executor';\r\nimport { BaseGeneratorFactory } from '../generator/base-generator-factory';\r\nimport { TextureGroup } from '../pipeline/target/texture-group';\r\nimport { ShaderInterpreterConstructor, ShaderInterpreterFactory } from '../shader/interpreter/shader-interpreter-factory';\r\nimport { VertexFragmentShader } from '../shader/vertex-fragment-shader';\r\n\r\nexport class GpuDevice {\r\n    /**\r\n     * Request new gpu device.\r\n     * @param pGenerator - Native object generator.\r\n     */\r\n    public static async request(pGenerator: BaseGeneratorFactory, pShaderInterpreter: ShaderInterpreterConstructor): Promise<GpuDevice> {\r\n        // Construct gpu device.\r\n        const lDevice: GpuDevice = new GpuDevice(pGenerator, pShaderInterpreter);\r\n\r\n        // Init generator with created device.\r\n        await pGenerator.init(lDevice);\r\n\r\n        return lDevice;\r\n    }\r\n\r\n    private mFrameCounter: number;\r\n    private readonly mGenerator: BaseGeneratorFactory;\r\n    private readonly mShaderInterpreter: ShaderInterpreterFactory;\r\n\r\n    /**\r\n     * Get frame count.\r\n     */\r\n    public get frameCount(): number {\r\n        return this.mFrameCounter;\r\n    }\r\n\r\n    /**\r\n     * Native object generator.\r\n     */\r\n    public get generator(): BaseGeneratorFactory {\r\n        return this.mGenerator;\r\n    }\r\n\r\n    /**\r\n     * Shader interpreter.\r\n     */\r\n    public get shaderInterpreter(): ShaderInterpreterFactory {\r\n        return this.mShaderInterpreter;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGenerator - Native GPU-Object Generator.\r\n     */\r\n    private constructor(pGenerator: BaseGeneratorFactory, pShaderInterpreter: ShaderInterpreterConstructor) {\r\n        this.mFrameCounter = 0;\r\n        this.mGenerator = pGenerator;\r\n        this.mShaderInterpreter = new ShaderInterpreterFactory(this, pShaderInterpreter);\r\n    }\r\n\r\n    /**\r\n     * Create instruction executor.\r\n     */\r\n    public instructionExecutor(): InstructionExecuter {\r\n        return new InstructionExecuter(this);\r\n    }\r\n\r\n    /**\r\n     * Create shader.\r\n     * @param pSource - Shader source.\r\n     * @param pVertexEntry - Vertex entry name.\r\n     * @param pFragmentEntry - Optional fragment entry.\r\n     */\r\n    public renderShader(pSource: string, pVertexEntry: string, pFragmentEntry?: string): VertexFragmentShader {\r\n        return new VertexFragmentShader(this, pSource, pVertexEntry, pFragmentEntry);\r\n    }\r\n\r\n    /**\r\n     * Start new frame.\r\n     */\r\n    public startNewFrame(): void {\r\n        this.mFrameCounter++;\r\n    }\r\n\r\n    /**\r\n     * Create texture group that shares the same dimensions.\r\n     * @param pWidth - Texture width.\r\n     * @param pHeight - Texture height.\r\n     * @param pMultisampleLevel - Multisample level of textures.\r\n     */\r\n    public textureGroup(pWidth: number, pHeight: number, pMultisampleLevel: number = 1): TextureGroup {\r\n        return new TextureGroup(this, pWidth, pHeight, pMultisampleLevel);\r\n    }\r\n}","export class GpuObjectUpdateReason {\r\n    private readonly mReasons: Set<UpdateReason>;\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mReasons = new Set<UpdateReason>();\r\n    }\r\n\r\n    /**\r\n     * Add update reason.\r\n     * @param pReason - Update reason.\r\n     */\r\n    public add(pReason: UpdateReason): void {\r\n        this.mReasons.add(pReason);\r\n    }\r\n\r\n    /**\r\n     * If update reason has any existing reason.\r\n     */\r\n    public any(): boolean {\r\n        return this.mReasons.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Clear all reasons.\r\n     */\r\n    public clear(): void {\r\n        this.mReasons.clear();\r\n    }\r\n\r\n    /**\r\n     * Check for update reason.\r\n     * @param pReason - Update reason.\r\n     */\r\n    public has(pReason: UpdateReason): boolean {\r\n        return this.mReasons.has(pReason);\r\n    }\r\n}\r\n\r\nexport enum UpdateReason {\r\n    Setting = 1,\r\n    Data = 2,\r\n    ChildData = 3,\r\n    LifeTime = 4\r\n}","import { GeneratorObjectKeys } from '../generator/base-generator-factory';\r\nimport { GpuDevice } from './gpu-device';\r\nimport { UpdateReason } from './gpu-object-update-reason';\r\n\r\nexport abstract class GpuObject<TGpuObjectKey extends GeneratorObjectKeys = 'none'> {\r\n    private mAutoUpdate: boolean;\r\n    private readonly mDevice: GpuDevice;\r\n    private readonly mUpdateListenerList: Set<GpuObjectUpdateListener>;\r\n\r\n    /**\r\n     * Enable or disable auto update.\r\n     */\r\n    public get autoUpdate(): boolean {\r\n        return this.mAutoUpdate;\r\n    } set autoUpdate(pValue: boolean) {\r\n        this.mAutoUpdate = pValue;\r\n    }\r\n\r\n    /**\r\n     * Gpu Device.\r\n     */\r\n    protected get device(): GpuDevice {\r\n        return this.mDevice;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu device.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        this.mAutoUpdate = true;\r\n        this.mDevice = pDevice;\r\n        this.mUpdateListenerList = new Set<GpuObjectUpdateListener>();\r\n    }\r\n\r\n    /**\r\n     * Add update listener.\r\n     * @param pListener - Listener.\r\n     */\r\n    public addUpdateListener(pListener: GpuObjectUpdateListener): void {\r\n        this.mUpdateListenerList.add(pListener);\r\n    }\r\n\r\n    /**\r\n     * Add update listener.\r\n     * @param pListener - Listener.\r\n     */\r\n    public removeUpdateListener(pListener: GpuObjectUpdateListener): void {\r\n        this.mUpdateListenerList.delete(pListener);\r\n    }\r\n\r\n    /**\r\n     * Update gpu object.\r\n     */\r\n    public update(pUpdateReason: UpdateReason): void {\r\n        // Invalidate before calling parent listener. Only when a generator exists.\r\n        const lGenerator = this.device.generator.request<TGpuObjectKey>(<any>this);\r\n        if (lGenerator) {\r\n            lGenerator.invalidate(pUpdateReason);\r\n        }\r\n\r\n        // Call parent update listerner.\r\n        for (const lUpdateListener of this.mUpdateListenerList) {\r\n            lUpdateListener();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger auto update.\r\n     * Does nothing on disabled auto update.\r\n     */\r\n    protected triggerAutoUpdate(pUpdateReason: UpdateReason): void {\r\n        if (this.mAutoUpdate) {\r\n            this.update(pUpdateReason);\r\n        }\r\n    }\r\n}\r\n\r\nexport type GpuObjectUpdateListener = () => void;","import { Exception } from '@kartoffelgames/core.data';\r\nimport { GpuBuffer } from '../../../buffer/gpu-buffer';\r\nimport { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { CanvasTexture } from '../../../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../../../texture/frame-buffer-texture';\r\nimport { ImageTexture } from '../../../texture/image-texture';\r\nimport { TextureSampler } from '../../../texture/texture-sampler';\r\nimport { VideoTexture } from '../../../texture/video-texture';\r\nimport { NativeWebGpuMap } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuBindDataGroupGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'bindDataGroup'> {\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu bind data group.\r\n     */\r\n    protected override generate(): GPUBindGroup {\r\n        const lEntryList: Array<GPUBindGroupEntry> = new Array<GPUBindGroupEntry>();\r\n\r\n        for (const lBindname of this.gpuObject.layout.bindingNames) {\r\n            const lBindLayout = this.gpuObject.layout.getBind(lBindname);\r\n            const lBindData = this.gpuObject.getData(lBindname);\r\n\r\n            // Set resource to group entry for each \r\n            const lGroupEntry: GPUBindGroupEntry = { binding: lBindLayout.index, resource: <any>null };\r\n\r\n            // Buffer bind.\r\n            if (lBindData instanceof GpuBuffer) {\r\n                lGroupEntry.resource = { buffer: this.factory.request<'gpuBuffer'>(lBindData).create() };\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // External/Video texture bind\r\n            if (lBindData instanceof VideoTexture) {\r\n                lGroupEntry.resource = this.factory.request<'videoTexture'>(lBindData).create();\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Sampler bind\r\n            if (lBindData instanceof TextureSampler) {\r\n                lGroupEntry.resource = this.factory.request<'textureSampler'>(lBindData).create();\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Frame buffer bind.\r\n            if (lBindData instanceof FrameBufferTexture) {\r\n                lGroupEntry.resource = this.factory.request<'frameBufferTexture'>(lBindData).create();\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Image texture bind.\r\n            if (lBindData instanceof ImageTexture) {\r\n                lGroupEntry.resource = this.factory.request<'imageTexture'>(lBindData).create();\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Canvas texture bind.\r\n            if (lBindData instanceof CanvasTexture) {\r\n                lGroupEntry.resource = this.factory.request<'canvasTexture'>(lBindData).create();\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            throw new Exception(`Bind type for \"${lBindData}\" not supported`, this);\r\n        }\r\n\r\n        return this.factory.gpu.createBindGroup({\r\n            label: 'Bind-Group',\r\n            layout: this.factory.request<'bindDataGroupLayout'>(this.gpuObject.layout).create(),\r\n            entries: lEntryList\r\n        });\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { AccessMode } from '../../../../constant/access-mode.enum';\r\nimport { BufferBindType } from '../../../../constant/buffer-bind-type.enum';\r\nimport { SamplerType } from '../../../../constant/sampler-type.enum';\r\nimport { TextureBindType } from '../../../../constant/texture-bind-type.enum';\r\nimport { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { BaseBufferMemoryLayout } from '../../../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { SamplerMemoryLayout } from '../../../memory_layout/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../../../memory_layout/texture-memory-layout';\r\nimport { NativeWebGpuMap } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuBindDataGroupLayoutGenerator extends BaseNativeGenerator<NativeWebGpuMap,'bindDataGroupLayout'>  {\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Generate native bind data group layout object.\r\n     */\r\n    protected override generate(): GPUBindGroupLayout {\r\n        const lEntryList: Array<GPUBindGroupLayoutEntry> = new Array<GPUBindGroupLayoutEntry>();\r\n\r\n        // Generate layout entry for each binding.\r\n        for (const lEntry of this.gpuObject.bindings) {\r\n            // Generate default properties.\r\n            const lLayoutEntry: GPUBindGroupLayoutEntry = {\r\n                visibility: lEntry.layout.visibility,\r\n                binding: lEntry.index\r\n            };\r\n\r\n            // Buffer layouts.\r\n            if (lEntry.layout instanceof BaseBufferMemoryLayout) {\r\n                let lBufferBindingType: GPUBufferBindingType;\r\n                switch (lEntry.layout.bindType) {\r\n                    case BufferBindType.Uniform: {\r\n                        lBufferBindingType = 'uniform';\r\n                        break;\r\n                    }\r\n                    case BufferBindType.Storage: {\r\n                        // Read only access. No bit compare.\r\n                        if (lEntry.layout.accessMode === AccessMode.Read) {\r\n                            lBufferBindingType = 'read-only-storage';\r\n                        } else {\r\n                            lBufferBindingType = 'storage';\r\n                        }\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        throw new Exception('Can only bind buffers of bind type storage or uniform.', this);\r\n                    }\r\n                }\r\n\r\n                // Create buffer layout with all optional values.\r\n                const lBufferLayout: Required<GPUBufferBindingLayout> = {\r\n                    type: lBufferBindingType,\r\n                    minBindingSize: 0,\r\n                    hasDynamicOffset: false\r\n                };\r\n                lLayoutEntry.buffer = lBufferLayout;\r\n\r\n                // Add buffer layout entry to bindings.\r\n                lEntryList.push(lLayoutEntry);\r\n\r\n                continue;\r\n            }\r\n\r\n            // Sampler layouts.\r\n            if (lEntry.layout instanceof SamplerMemoryLayout) {\r\n                let lSamplerBindingType: GPUSamplerBindingType;\r\n                switch (lEntry.layout.samplerType) {\r\n                    case SamplerType.Comparison: {\r\n                        lSamplerBindingType = 'comparison';\r\n                        break;\r\n                    }\r\n                    case SamplerType.Filter: {\r\n                        lSamplerBindingType = 'filtering';\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Create sampler layout with all optional values.\r\n                const lSamplerLayout: Required<GPUSamplerBindingLayout> = {\r\n                    type: lSamplerBindingType\r\n                };\r\n                lLayoutEntry.sampler = lSamplerLayout;\r\n\r\n                // Add sampler layout entry to bindings.\r\n                lEntryList.push(lLayoutEntry);\r\n\r\n                continue;\r\n            }\r\n\r\n            // Texture layouts.\r\n            if (lEntry.layout instanceof TextureMemoryLayout) {\r\n                switch (lEntry.layout.bindType) {\r\n                    case TextureBindType.External: {\r\n                        if (lEntry.layout.accessMode !== AccessMode.Read) {\r\n                            throw new Exception('External textures must have access mode read.', this);\r\n                        }\r\n\r\n                        const lExternalTextureLayout: Required<GPUExternalTextureBindingLayout> = {};\r\n                        lLayoutEntry.externalTexture = lExternalTextureLayout;\r\n                        break;\r\n                    }\r\n                    case TextureBindType.Images: {\r\n                        if (lEntry.layout.accessMode !== AccessMode.Read) {\r\n                            throw new Exception('Image textures must have access mode read.', this);\r\n                        }\r\n\r\n                        const lTextureLayout: Required<GPUTextureBindingLayout> = {\r\n                            sampleType: this.factory.sampleTypeFromLayout(lEntry.layout),\r\n                            multisampled: lEntry.layout.multisampled,\r\n                            viewDimension: lEntry.layout.dimension\r\n                        };\r\n                        lLayoutEntry.texture = lTextureLayout;\r\n                        break;\r\n                    }\r\n                    case TextureBindType.Storage: {\r\n                        if (lEntry.layout.accessMode !== AccessMode.Write) {\r\n                            throw new Exception('Storage textures must have access mode write.', this);\r\n                        }\r\n\r\n                        const lStorageTextureLayout: Required<GPUStorageTextureBindingLayout> = {\r\n                            access: 'write-only',\r\n                            format: this.factory.formatFromLayout(lEntry.layout),\r\n                            viewDimension: lEntry.layout.dimension\r\n                        };\r\n                        lLayoutEntry.storageTexture = lStorageTextureLayout;\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        throw new Exception('Cant bind attachment textures.', this);\r\n                    }\r\n                }\r\n\r\n                lEntryList.push(lLayoutEntry);\r\n            }\r\n\r\n            lEntryList.push(lLayoutEntry);\r\n        }\r\n\r\n        // Create binding group layout.\r\n        return this.factory.gpu.createBindGroupLayout({\r\n            label: 'Bind-Group-Layout',\r\n            entries: lEntryList\r\n        });\r\n    }\r\n}","import { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { UpdateReason } from '../../../gpu/gpu-object-update-reason';\r\nimport { CanvasTexture } from '../../../texture/canvas-texture';\r\nimport { NativeWebGpuMap, WebGpuGeneratorFactory } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuCanvasTextureGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'canvasTexture'> {\r\n    private mContext: GPUCanvasContext | null;\r\n\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Frame;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pBaseObject - Base object containing all values.\r\n     * @param pGeneratorFactory - Generator factory.\r\n     */\r\n    public constructor(pFactory: WebGpuGeneratorFactory, pBaseObject: CanvasTexture) {\r\n        super(pFactory, pBaseObject);\r\n\r\n        this.mContext = null;\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * @param _pNativeObject - Native canvas texture.\r\n     */\r\n    protected override destroy(_pNativeObject: GPUTextureView): void {\r\n        // Only destroy context when child data/layout has changes.\r\n        if (this.updateReasons.has(UpdateReason.ChildData)) {\r\n            // Destory context.\r\n            this.mContext?.unconfigure();\r\n            this.mContext = null;\r\n        }\r\n\r\n        // Nothing else to destroy.\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generate(): GPUTextureView {\r\n        // Configure context.\r\n        if (!this.mContext) {\r\n            // Create and configure canvas context.\r\n            this.mContext = <GPUCanvasContext><any>this.gpuObject.canvas.getContext('webgpu');\r\n            this.mContext.configure({\r\n                device: this.factory.gpu,\r\n                format: this.factory.formatFromLayout(this.gpuObject.memoryLayout),\r\n                usage: this.factory.usageFromLayout(this.gpuObject.memoryLayout),\r\n                alphaMode: 'opaque'\r\n            });\r\n        }\r\n\r\n        // Create texture and save it for destorying later.\r\n        const lTexture: GPUTexture = this.mContext.getCurrentTexture();\r\n\r\n        // TODO: View descriptor.\r\n        return lTexture.createView();\r\n    }\r\n}","import { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { FrameBufferTexture } from '../../../texture/frame-buffer-texture';\r\nimport { NativeWebGpuMap, WebGpuGeneratorFactory } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuFramebufferTextureGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'frameBufferTexture'> {\r\n    private mTexture: GPUTexture | null;\r\n\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Frame;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pBaseObject - Base object containing all values.\r\n     * @param pGeneratorFactory - Generator factory.\r\n     */\r\n    public constructor(pFactory: WebGpuGeneratorFactory, pBaseObject: FrameBufferTexture) {\r\n        super(pFactory, pBaseObject);\r\n\r\n        this.mTexture = null;\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * @param _pNativeObject - Native canvas texture.\r\n     */\r\n    protected override destroy(_pNativeObject: GPUTextureView): void {\r\n        this.mTexture?.destroy();\r\n        this.mTexture = null;\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generate(): GPUTextureView {\r\n        // Configure context.\r\n        if (!this.mTexture) {\r\n            // Create and configure canvas context.\r\n            this.mTexture = this.factory.gpu.createTexture({\r\n                label: 'Frame-Buffer-Texture',\r\n                size: [this.gpuObject.width, this.gpuObject.height, this.gpuObject.depth],\r\n                format: this.factory.formatFromLayout(this.gpuObject.memoryLayout),\r\n                usage: this.factory.usageFromLayout(this.gpuObject.memoryLayout),\r\n                dimension: this.factory.dimensionFromLayout(this.gpuObject.memoryLayout),\r\n                sampleCount: this.gpuObject.multiSampleLevel\r\n            });\r\n        }\r\n\r\n        // TODO: View descriptor.\r\n        return this.mTexture.createView();\r\n    }\r\n}","import { TypedArray } from '@kartoffelgames/core.data';\r\nimport { BaseNativeBufferGenerator } from '../../../generator/base-native-buffer-generator';\r\nimport { NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { NativeWebGpuMap, WebGpuGeneratorFactory } from '../web-gpu-generator-factory';\r\nimport { GpuBuffer } from '../../../buffer/gpu-buffer';\r\nimport { BufferBindType } from '../../../../constant/buffer-bind-type.enum';\r\nimport { MemoryCopyType } from '../../../../constant/memory-copy-type.enum';\r\n\r\nexport class WebGpuGpuBufferGenerator extends BaseNativeBufferGenerator<NativeWebGpuMap, 'gpuBuffer'> {\r\n    private readonly mReadyBufferList: Array<GPUBuffer>;\r\n    private readonly mWavingBufferList: Array<GPUBuffer>;\r\n\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    public constructor(pFactory: WebGpuGeneratorFactory, pBaseObject: GpuBuffer<TypedArray>) {\r\n        super(pFactory, pBaseObject);\r\n\r\n        // Waving buffer list.\r\n        this.mReadyBufferList = new Array<GPUBuffer>();\r\n        this.mWavingBufferList = new Array<GPUBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Read raw buffer data.\r\n     * @param pOffset - Data read offset.\r\n     * @param pSize - Data read size.\r\n     */\r\n    public override async readRaw(pOffset: number, pSize: number): Promise<TypedArray> {\r\n        // Get buffer and map data.\r\n        const lBuffer: GPUBuffer = this.create();\r\n        await lBuffer.mapAsync(GPUMapMode.READ, pOffset, pSize);\r\n\r\n        // Get mapped data and force it into typed array.\r\n        const lData = new this.gpuObject.dataType(lBuffer.getMappedRange());\r\n        return lData;\r\n    }\r\n\r\n    /**\r\n     * Write data raw.\r\n     * @param pData - Data.\r\n     * @param pOffset - Data offset.\r\n     * @param pSize - Data size.\r\n     */\r\n    public override async writeRaw(pData: ArrayLike<number>, pOffset: number, pSize: number): Promise<void> {\r\n        // Create new buffer when no mapped buffer is available. \r\n        let lStagingBuffer: GPUBuffer;\r\n        if (this.mReadyBufferList.length === 0) {\r\n            lStagingBuffer = this.factory.gpu.createBuffer({\r\n                label: `RingBuffer-WaveBuffer-${this.mWavingBufferList.length}`,\r\n                size: this.gpuObject.size,\r\n                usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\r\n                mappedAtCreation: true,\r\n            });\r\n\r\n            // Add new buffer to complete list.\r\n            this.mWavingBufferList.push(lStagingBuffer);\r\n        } else {\r\n            lStagingBuffer = this.mReadyBufferList.pop()!;\r\n        }\r\n\r\n        // Execute write operations.\r\n        const lBufferArray: TypedArray = new this.gpuObject.dataType(lStagingBuffer.getMappedRange(pOffset, pSize));\r\n        lBufferArray.set(pData);\r\n\r\n        // Unmap for copying data.\r\n        lStagingBuffer.unmap();\r\n\r\n        // Copy buffer data from staging into wavig buffer.\r\n        const lCommandDecoder: GPUCommandEncoder = this.factory.gpu.createCommandEncoder();\r\n        lCommandDecoder.copyBufferToBuffer(lStagingBuffer, 0, this.create(), 0, this.gpuObject.size);\r\n        this.factory.gpu.queue.submit([lCommandDecoder.finish()]);\r\n\r\n        // Shedule staging buffer remaping.\r\n        lStagingBuffer.mapAsync(GPUMapMode.WRITE).then(() => {\r\n            this.mReadyBufferList.push(lStagingBuffer);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy wave and ready buffer.\r\n     */\r\n    protected override destroy(pNativeObject: GPUBuffer): void {\r\n        pNativeObject.destroy();\r\n\r\n        // Destroy all wave buffer and clear list.\r\n        for (let lCount: number = 0; this.mWavingBufferList.length < lCount; lCount++) {\r\n            this.mWavingBufferList.pop()?.destroy();\r\n        }\r\n\r\n        // Clear ready buffer list.\r\n        for (let lCount: number = 0; this.mReadyBufferList.length < lCount; lCount++) {\r\n            // No need to destroy. All buffers have already destroyed.\r\n            this.mReadyBufferList.pop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate buffer. Write local gpu object data as initial native buffer data.\r\n     */\r\n    protected override generate(): GPUBuffer {\r\n        let lUsage: number = 0;\r\n\r\n        // Append usage type from abstract bind type.\r\n        switch (this.gpuObject.memoryLayout.bindType) {\r\n            case BufferBindType.Undefined: {\r\n                // Just an layout indicator. Does nothing to usage type.\r\n                break;\r\n            }\r\n            case BufferBindType.Index: {\r\n                lUsage |= GPUBufferUsage.INDEX;\r\n                break;\r\n            }\r\n            case BufferBindType.Storage: {\r\n                lUsage |= GPUBufferUsage.STORAGE;\r\n                break;\r\n            }\r\n            case BufferBindType.Uniform: {\r\n                lUsage |= GPUBufferUsage.UNIFORM;\r\n                break;\r\n            }\r\n            case BufferBindType.Vertex: {\r\n                lUsage |= GPUBufferUsage.VERTEX;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Append usage type from abstract usage type.\r\n        if ((this.gpuObject.memoryLayout.memoryType & MemoryCopyType.CopyDestination) !== 0) {\r\n            lUsage |= GPUBufferUsage.COPY_DST;\r\n        }\r\n        if ((this.gpuObject.memoryLayout.memoryType & MemoryCopyType.CopySource) !== 0) {\r\n            lUsage |= GPUBufferUsage.COPY_SRC;\r\n        }\r\n\r\n        // Create gpu buffer mapped\r\n        const lBuffer: GPUBuffer = this.factory.gpu.createBuffer({\r\n            label: 'Ring-Buffer-Static-Buffer',\r\n            size: this.gpuObject.size,\r\n            usage: lUsage,\r\n            mappedAtCreation: true // Map data when buffer would receive initial data.\r\n        });\r\n\r\n        // unmap buffer.\r\n        lBuffer.unmap();\r\n\r\n        return lBuffer;\r\n    }\r\n}","import { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { ImageTexture } from '../../../texture/image-texture';\r\nimport { NativeWebGpuMap, WebGpuGeneratorFactory } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuImageTextureGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'imageTexture'> {\r\n    private mTexture: GPUTexture | null;\r\n\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pBaseObject - Base object containing all values.\r\n     * @param pGeneratorFactory - Generator factory.\r\n     */\r\n    public constructor(pFactory: WebGpuGeneratorFactory, pBaseObject: ImageTexture) {\r\n        super(pFactory, pBaseObject);\r\n\r\n        this.mTexture = null;\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * @param _pNativeObject - Native canvas texture.\r\n     */\r\n    protected override destroy(_pNativeObject: GPUTextureView): void {\r\n        this.mTexture?.destroy();\r\n        this.mTexture = null;\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generate(): GPUTextureView {\r\n        // Create texture with set size, format and usage. Save it for destorying later.\r\n        this.mTexture = this.factory.gpu.createTexture({\r\n            label: 'Frame-Buffer-Texture',\r\n            size: [this.gpuObject.width, this.gpuObject.height, this.gpuObject.depth],\r\n            format: this.factory.formatFromLayout(this.gpuObject.memoryLayout),\r\n            usage: this.factory.usageFromLayout(this.gpuObject.memoryLayout),\r\n            dimension: this.factory.dimensionFromLayout(this.gpuObject.memoryLayout),\r\n        });\r\n\r\n        // Load images into texture.\r\n        for (let lImageIndex: number = 0; lImageIndex < this.gpuObject.images.length; lImageIndex++) {\r\n            const lBitmap: ImageBitmap = this.gpuObject.images[lImageIndex];\r\n\r\n            // Copy image into depth layer.\r\n            this.factory.gpu.queue.copyExternalImageToTexture(\r\n                { source: lBitmap },\r\n                { texture: this.mTexture, origin: [0, 0, lImageIndex] },\r\n                [lBitmap.width, lBitmap.height]\r\n            );\r\n        }\r\n\r\n        // TODO: View descriptor.\r\n        return this.mTexture.createView();\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { NativeWebGpuMap } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuPipelineDataLayoutGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'pipelineDataLayout'> {\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu pipeline data layout.\r\n     */\r\n    protected override generate(): GPUPipelineLayout  {\r\n        const lBindGoupIndices: Array<number> = this.gpuObject.groups;\r\n\r\n        // Generate pipeline layout from bind group layouts.\r\n        const lPipelineLayoutDescriptor = { bindGroupLayouts: new Array<GPUBindGroupLayout>() };\r\n        for (const lIndex of lBindGoupIndices) {\r\n            const lBindGroupLayout = this.gpuObject.getGroupLayout(lIndex);\r\n\r\n            lPipelineLayoutDescriptor.bindGroupLayouts[lIndex] = this.factory.request<'bindDataGroupLayout'>(lBindGroupLayout).create();\r\n        }\r\n\r\n        // Validate continunity.\r\n        if (lBindGoupIndices.length !== lPipelineLayoutDescriptor.bindGroupLayouts.length) {\r\n            throw new Exception(`Bind group gap detected. Group not set.`, this);\r\n        }\r\n\r\n        // Generate pipeline layout from descriptor.\r\n        return this.factory.gpu.createPipelineLayout(lPipelineLayoutDescriptor) ;\r\n    }\r\n}","import { FilterMode } from '../../../../constant/filter-mode.enum';\r\nimport { WrappingMode } from '../../../../constant/wrapping-mode.enum';\r\nimport { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { NativeWebGpuMap } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuTextureSamplerGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'textureSampler'>  {\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Generate native bind data group layout object.\r\n     */\r\n    protected override generate(): GPUSampler {\r\n        // Convert compare function to native compare function.\r\n        const lNativeCompareFunction: GPUCompareFunction | null = this.factory.compareFunctionToNative(this.gpuObject.compare);\r\n        \r\n        // Convert wrap mode to native address mode.\r\n        let lAddressMode: GPUAddressMode = 'clamp-to-edge';\r\n        switch (this.gpuObject.wrapMode) {\r\n            case WrappingMode.ClampToEdge: {\r\n                lAddressMode = 'clamp-to-edge';\r\n                break;\r\n            }\r\n            case WrappingMode.MirrorRepeat: {\r\n                lAddressMode = 'mirror-repeat';\r\n                break;\r\n            }\r\n            case WrappingMode.Repeat: {\r\n                lAddressMode = 'repeat';\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Convert filter to native mipmap filter.\r\n        let lMipMapFilter: GPUMipmapFilterMode = 'linear';\r\n        switch (this.gpuObject.mipmapFilter) {\r\n            case FilterMode.Linear: {\r\n                lMipMapFilter = 'linear';\r\n                break;\r\n            }\r\n            case FilterMode.Nearest: {\r\n                lMipMapFilter = 'nearest';\r\n                break;\r\n            }\r\n        }\r\n\r\n        const lSamplerOptions: GPUSamplerDescriptor = {\r\n            label: 'Texture-Sampler',\r\n            addressModeU: lAddressMode,\r\n            addressModeV: lAddressMode,\r\n            addressModeW: lAddressMode,\r\n            magFilter: this.toNativeFilterMode(this.gpuObject.magFilter),\r\n            minFilter: this.toNativeFilterMode(this.gpuObject.minFilter),\r\n            mipmapFilter: lMipMapFilter,\r\n            lodMaxClamp: this.gpuObject.lodMaxClamp,\r\n            lodMinClamp: this.gpuObject.lodMinClamp,\r\n            maxAnisotropy: this.gpuObject.maxAnisotropy\r\n        };\r\n\r\n        if (lNativeCompareFunction) {\r\n            lSamplerOptions.compare = lNativeCompareFunction;\r\n        }\r\n\r\n        return this.factory.gpu.createSampler(lSamplerOptions);\r\n    }\r\n\r\n    /**\r\n     * Convert filter to native filter.\r\n     * @param pFilerMode - Filter mode.\r\n     */\r\n    private toNativeFilterMode(pFilerMode: FilterMode): GPUFilterMode {\r\n        switch (pFilerMode) {\r\n            case FilterMode.Linear: {\r\n                return 'linear';\r\n            }\r\n            case FilterMode.Nearest: {\r\n                return 'nearest';\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { NativeWebGpuMap } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuVertexFragmentShaderGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'vertexFragmentShader'> {\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu pipeline data layout.\r\n     */\r\n    protected override generate(): GPUShaderModule {\r\n        return this.factory.gpu.createShaderModule({ code: this.gpuObject.information.source });\r\n    }\r\n}","import { BaseNativeGenerator, NativeObjectLifeTime } from '../../../generator/base-native-generator';\r\nimport { NativeWebGpuMap } from '../web-gpu-generator-factory';\r\n\r\nexport class WebGpuVideoTextureGenerator extends BaseNativeGenerator<NativeWebGpuMap, 'videoTexture'> {\r\n    /**\r\n     * Set life time of generated native.\r\n     */\r\n    protected override get nativeLifeTime(): NativeObjectLifeTime {\r\n        return NativeObjectLifeTime.Persistent;\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generate(): GPUExternalTexture {\r\n        return this.factory.gpu.importExternalTexture({\r\n            label: 'External-Texture',\r\n            source: this.gpuObject.video,\r\n            colorSpace: 'srgb'\r\n        });\r\n    }\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { MemoryCopyType } from '../../../constant/memory-copy-type.enum';\r\nimport { TextureDimension } from '../../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\nimport { TextureUsage } from '../../../constant/texture-usage.enum';\r\nimport { BindDataGroup } from '../../binding/bind-data-group';\r\nimport { BindDataGroupLayout } from '../../binding/bind-data-group-layout';\r\nimport { PipelineDataLayout } from '../../binding/pipeline-data-layout';\r\nimport { GpuBuffer } from '../../buffer/gpu-buffer';\r\nimport { BaseGeneratorFactory, GeneratorNativeMap } from '../../generator/base-generator-factory';\r\nimport { TextureMemoryLayout } from '../../memory_layout/texture-memory-layout';\r\nimport { VertexFragmentShader } from '../../shader/vertex-fragment-shader';\r\nimport { CanvasTexture } from '../../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../../texture/frame-buffer-texture';\r\nimport { ImageTexture } from '../../texture/image-texture';\r\nimport { TextureSampler } from '../../texture/texture-sampler';\r\nimport { VideoTexture } from '../../texture/video-texture';\r\nimport { WebGpuBindDataGroupGenerator } from './native-generator/web-gpu-bind-data-group-generator';\r\nimport { WebGpuBindDataGroupLayoutGenerator } from './native-generator/web-gpu-bind-data-group-layout-generator';\r\nimport { WebGpuCanvasTextureGenerator } from './native-generator/web-gpu-canvas-texture-generator';\r\nimport { WebGpuFramebufferTextureGenerator } from './native-generator/web-gpu-frame-buffer-texture-generator';\r\nimport { WebGpuGpuBufferGenerator } from './native-generator/web-gpu-gpu-buffer-generator';\r\nimport { WebGpuImageTextureGenerator } from './native-generator/web-gpu-image-texture-generator';\r\nimport { WebGpuPipelineDataLayoutGenerator } from './native-generator/web-gpu-pipeline-data-layout-generator';\r\nimport { WebGpuVertexFragmentShaderGenerator } from './native-generator/web-gpu-vertex-fragment-shader-generator';\r\nimport { WebGpuTextureSamplerGenerator } from './native-generator/web-gpu-texture-sampler-generator';\r\nimport { WebGpuVideoTextureGenerator } from './native-generator/web-gpu-video-texture-generator';\r\nimport { WebGpuRenderTargetsGenerator } from './native-generator/web-gpu-render-targets-generator';\r\nimport { WebGpuComputeShaderGenerator } from './native-generator/web-gpu-compute-shader-generator';\r\nimport { WebGpuVertexFragmentPipelineGenerator } from './native-generator/web-gpu-vertex-fragment-pipeline-generator';\r\nimport { CompareFunction } from '../../../constant/compare-function.enum';\r\nimport { BufferPrimitiveFormat } from '../../../constant/buffer-primitive-format';\r\nimport { WebGpuComputeInstructionGenerator } from './native-generator/web-gpu-compute-instruction-generator';\r\nimport { WebGpuVertexFragmentInstructionGenerator } from './native-generator/web-gpu-vertex-fragment-instruction-generator';\r\nimport { WebGpuComputePipelineGenerator } from './native-generator/web-gpu-compute-pipeline-generator';\r\nimport { WebGpuInstructionExecutorGenerator } from './native-generator/web-gpu-instruction-executor-generator';\r\n\r\nexport class WebGpuGeneratorFactory extends BaseGeneratorFactory<NativeWebGpuMap> {\r\n    private static readonly mAdapters: Dictionary<GPUPowerPreference, GPUAdapter> = new Dictionary<GPUPowerPreference, GPUAdapter>();\r\n    private static readonly mDevices: Dictionary<GPUAdapter, GPUDevice> = new Dictionary<GPUAdapter, GPUDevice>();\r\n\r\n    private mGpuAdapter: GPUAdapter | null;\r\n    private mGpuDevice: GPUDevice | null;\r\n    private readonly mPerformance: GPUPowerPreference;\r\n\r\n    /**\r\n     * GPU device.\r\n     */\r\n    public get gpu(): GPUDevice {\r\n        if (this.mGpuDevice === null) {\r\n            throw new Exception('Web GPU device not initialized.', this);\r\n        }\r\n\r\n        return this.mGpuDevice;\r\n    }\r\n\r\n    /**\r\n     * Preferred texture format.\r\n     */\r\n    public get preferredFormat(): GPUTextureFormat {\r\n        return window.navigator.gpu.getPreferredCanvasFormat();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pMode: GPUPowerPreference) {\r\n        super();\r\n\r\n        this.mPerformance = pMode;\r\n        this.mGpuAdapter = null;\r\n        this.mGpuDevice = null;\r\n\r\n        // Data.\r\n        this.registerGenerator<'gpuBuffer'>(GpuBuffer, WebGpuGpuBufferGenerator);\r\n\r\n        // Data binding.\r\n        this.registerGenerator<'bindDataGroupLayout'>(BindDataGroupLayout, WebGpuBindDataGroupLayoutGenerator);\r\n        this.registerGenerator<'bindDataGroup'>(BindDataGroup, WebGpuBindDataGroupGenerator);\r\n        this.registerGenerator<'pipelineDataLayout'>(PipelineDataLayout, WebGpuPipelineDataLayoutGenerator);\r\n\r\n        // Textures.\r\n        this.registerGenerator<'canvasTexture'>(CanvasTexture, WebGpuCanvasTextureGenerator);\r\n        this.registerGenerator<'frameBufferTexture'>(FrameBufferTexture, WebGpuFramebufferTextureGenerator);\r\n        this.registerGenerator<'videoTexture'>(VideoTexture, WebGpuVideoTextureGenerator);\r\n        this.registerGenerator<'imageTexture'>(ImageTexture, WebGpuImageTextureGenerator);\r\n        this.registerGenerator<'textureSampler'>(TextureSampler, WebGpuTextureSamplerGenerator);\r\n\r\n        // Shader.\r\n        this.registerGenerator<'vertexFragmentShader'>(VertexFragmentShader, WebGpuVertexFragmentShaderGenerator);\r\n    }\r\n\r\n    /**\r\n     * Parse primitive vertex format into native vertex format.\r\n     * @param pPrimitiveFormat - Primitive buffer format.\r\n     */\r\n    public byteCountOfVertexFormat(pPrimitiveFormat: BufferPrimitiveFormat): number {\r\n        switch (pPrimitiveFormat) {\r\n            case BufferPrimitiveFormat.Float:\r\n            case BufferPrimitiveFormat.Int:\r\n            case BufferPrimitiveFormat.Uint: {\r\n                return 4;\r\n            }\r\n            case BufferPrimitiveFormat.Vec2Float:\r\n            case BufferPrimitiveFormat.Vec2Uint:\r\n            case BufferPrimitiveFormat.Vec2Int: {\r\n                return 4 * 2;\r\n            }\r\n            case BufferPrimitiveFormat.Vec3Int:\r\n            case BufferPrimitiveFormat.Vec3Float:\r\n            case BufferPrimitiveFormat.Vec3Uint: {\r\n                return 4 * 3;\r\n            }\r\n            case BufferPrimitiveFormat.Vec4Int:\r\n            case BufferPrimitiveFormat.Vec4Float:\r\n            case BufferPrimitiveFormat.Vec4Uint: {\r\n                return 4 * 4;\r\n            }\r\n            case BufferPrimitiveFormat.Unsupported: {\r\n                throw new Exception('Vertex format not supported', this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert constant to native GPUCompareFunction.\r\n     * @param pCompareFunction - Constant compare value.\r\n     */\r\n    public compareFunctionToNative<T extends CompareFunction | null>(pCompareFunction: T): T extends CompareFunction ? GPUCompareFunction : null {\r\n        let lNativeCompareFunction: GPUCompareFunction | null = null;\r\n        switch (pCompareFunction) {\r\n            case CompareFunction.Allways: {\r\n                lNativeCompareFunction = 'always';\r\n                break;\r\n            }\r\n            case CompareFunction.Greater: {\r\n                lNativeCompareFunction = 'greater';\r\n                break;\r\n            }\r\n            case CompareFunction.Equal: {\r\n                lNativeCompareFunction = 'equal';\r\n                break;\r\n            }\r\n            case CompareFunction.GreaterEqual: {\r\n                lNativeCompareFunction = 'greater-equal';\r\n                break;\r\n            }\r\n            case CompareFunction.LessEqual: {\r\n                lNativeCompareFunction = 'less-equal';\r\n                break;\r\n            }\r\n            case CompareFunction.Less: {\r\n                lNativeCompareFunction = 'less';\r\n                break;\r\n            }\r\n            case CompareFunction.Never: {\r\n                lNativeCompareFunction = 'never';\r\n                break;\r\n            }\r\n            case CompareFunction.NotEqual: {\r\n                lNativeCompareFunction = 'not-equal';\r\n                break;\r\n            }\r\n        }\r\n\r\n        return <any>lNativeCompareFunction;\r\n    }\r\n\r\n    /**\r\n     * GPU Dimension from layout texture dimension.\r\n     */\r\n    public dimensionFromLayout(pLayout: TextureMemoryLayout): GPUTextureDimension {\r\n        // \"Calculate\" texture dimension from texture size.\r\n        switch (pLayout.dimension) {\r\n            case TextureDimension.OneDimension: {\r\n                return '1d';\r\n            }\r\n\r\n            case TextureDimension.TwoDimension: {\r\n                return '2d';\r\n            }\r\n\r\n            case TextureDimension.Cube:\r\n            case TextureDimension.CubeArray:\r\n            case TextureDimension.ThreeDimension:\r\n            case TextureDimension.TwoDimensionArray: {\r\n                return '3d';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Format from layout.\r\n     */\r\n    public formatFromLayout(pLayout: TextureMemoryLayout): GPUTextureFormat {\r\n        // Convert base to web gpu texture format.\r\n        switch (pLayout.format) {\r\n            case TextureFormat.BlueRedGreenAlpha: {\r\n                return 'bgra8unorm';\r\n            }\r\n            case TextureFormat.Depth: {\r\n                return 'depth24plus';\r\n            }\r\n            case TextureFormat.DepthStencil: {\r\n                return 'depth24plus-stencil8';\r\n            }\r\n            case TextureFormat.Red: {\r\n                return 'r8unorm';\r\n            }\r\n            case TextureFormat.RedGreen: {\r\n                return 'rg8unorm';\r\n            }\r\n            case TextureFormat.RedGreenBlueAlpha: {\r\n                return 'rgba8unorm';\r\n            }\r\n            case TextureFormat.RedGreenBlueAlphaInteger: {\r\n                return 'rgba8uint';\r\n            }\r\n            case TextureFormat.RedGreenInteger: {\r\n                return 'rg8uint';\r\n            }\r\n            case TextureFormat.RedInteger: {\r\n                return 'r8uint';\r\n            }\r\n            case TextureFormat.Stencil: {\r\n                return 'stencil8';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init devices.\r\n     */\r\n    public override async initInternals(): Promise<void> {\r\n        // Try to load cached adapter. When not cached, request new one.\r\n        const lAdapter: GPUAdapter | null = WebGpuGeneratorFactory.mAdapters.get(this.mPerformance) ?? await window.navigator.gpu.requestAdapter({ powerPreference: this.mPerformance });\r\n        if (!lAdapter) {\r\n            throw new Exception('Error requesting GPU adapter', WebGpuGeneratorFactory);\r\n        }\r\n\r\n        WebGpuGeneratorFactory.mAdapters.set(this.mPerformance, lAdapter);\r\n\r\n        // Try to load cached device. When not cached, request new one.\r\n        const lDevice: GPUDevice | null = WebGpuGeneratorFactory.mDevices.get(lAdapter) ?? await lAdapter.requestDevice();\r\n        if (!lDevice) {\r\n            throw new Exception('Error requesting GPU device', WebGpuGeneratorFactory);\r\n        }\r\n\r\n        WebGpuGeneratorFactory.mDevices.set(lAdapter, lDevice);\r\n\r\n        this.mGpuAdapter = lAdapter;\r\n        this.mGpuDevice = lDevice;\r\n    }\r\n\r\n    /**\r\n     * Get sample type from texture layout.\r\n     */\r\n    public sampleTypeFromLayout(pLayout: TextureMemoryLayout): GPUTextureSampleType {\r\n        // Convert texture format to sampler values.\r\n        switch (pLayout.format) {\r\n            case TextureFormat.Depth:\r\n            case TextureFormat.DepthStencil: {\r\n                return 'depth';\r\n            }\r\n\r\n            case TextureFormat.Stencil:\r\n            case TextureFormat.BlueRedGreenAlpha:\r\n            case TextureFormat.Red:\r\n            case TextureFormat.RedGreen:\r\n            case TextureFormat.RedGreenBlueAlpha: {\r\n                return 'float';\r\n            }\r\n\r\n            case TextureFormat.RedGreenBlueAlphaInteger:\r\n            case TextureFormat.RedGreenInteger:\r\n            case TextureFormat.RedInteger: {\r\n                return 'uint';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse primitive vertex format into native vertex format.\r\n     * @param pPrimitiveFormat - Primitive buffer format.\r\n     */\r\n    public toNativeVertexFormat(pPrimitiveFormat: BufferPrimitiveFormat): GPUVertexFormat {\r\n        switch (pPrimitiveFormat) {\r\n            case BufferPrimitiveFormat.Float: {\r\n                return 'float32';\r\n            }\r\n            case BufferPrimitiveFormat.Int: {\r\n                return 'sint32';\r\n            }\r\n            case BufferPrimitiveFormat.Uint: {\r\n                return 'uint32';\r\n            }\r\n            case BufferPrimitiveFormat.Vec2Float: {\r\n                return 'float32x2';\r\n            }\r\n            case BufferPrimitiveFormat.Vec3Float: {\r\n                return 'float32x3';\r\n            }\r\n            case BufferPrimitiveFormat.Vec4Float: {\r\n                return 'float32x4';\r\n            }\r\n            case BufferPrimitiveFormat.Vec2Int: {\r\n                return 'sint32x2';\r\n            }\r\n            case BufferPrimitiveFormat.Vec3Int: {\r\n                return 'sint32x3';\r\n            }\r\n            case BufferPrimitiveFormat.Vec4Int: {\r\n                return 'sint32x4';\r\n            }\r\n            case BufferPrimitiveFormat.Vec2Uint: {\r\n                return 'uint32x2';\r\n            }\r\n            case BufferPrimitiveFormat.Vec3Uint: {\r\n                return 'uint32x3';\r\n            }\r\n            case BufferPrimitiveFormat.Vec4Uint: {\r\n                return 'uint32x4';\r\n            }\r\n            case BufferPrimitiveFormat.Unsupported: {\r\n                throw new Exception('Vertex format not supported', this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Usage from layout.\r\n     */\r\n    public usageFromLayout(pLayout: TextureMemoryLayout): number {\r\n        // Parse base to web gpu usage.\r\n        let lUsage: number = 0;\r\n        if ((pLayout.memoryType & MemoryCopyType.CopyDestination) !== 0) {\r\n            lUsage |= GPUTextureUsage.COPY_DST;\r\n        }\r\n        if ((pLayout.memoryType & MemoryCopyType.CopySource) !== 0) {\r\n            lUsage |= GPUTextureUsage.COPY_SRC;\r\n        }\r\n        if ((pLayout.usage & TextureUsage.RenderAttachment) !== 0) {\r\n            lUsage |= GPUTextureUsage.RENDER_ATTACHMENT;\r\n        }\r\n        if ((pLayout.usage & TextureUsage.StorageBinding) !== 0) {\r\n            lUsage |= GPUTextureUsage.STORAGE_BINDING;\r\n        }\r\n        if ((pLayout.usage & TextureUsage.TextureBinding) !== 0) {\r\n            lUsage |= GPUTextureUsage.TEXTURE_BINDING;\r\n        }\r\n\r\n        return lUsage;\r\n    }\r\n}\r\n\r\nexport interface NativeWebGpuMap extends GeneratorNativeMap {\r\n    factory: WebGpuGeneratorFactory;\r\n\r\n    generators: {\r\n        // Textures.\r\n        textureSampler: { generator: WebGpuTextureSamplerGenerator; native: GPUSampler; };\r\n        imageTexture: { generator: WebGpuImageTextureGenerator; native: GPUTextureView; };\r\n        frameBufferTexture: { generator: WebGpuFramebufferTextureGenerator; native: GPUTextureView; };\r\n        videoTexture: { generator: WebGpuVideoTextureGenerator; native: GPUExternalTexture; };\r\n        canvasTexture: { generator: WebGpuCanvasTextureGenerator; native: GPUTextureView; };\r\n\r\n        // Things with generics. :(\r\n        gpuBuffer: { generator: WebGpuGpuBufferGenerator; native: GPUBuffer; };\r\n\r\n        // Pipeline layouting.\r\n        bindDataGroupLayout: { generator: WebGpuBindDataGroupLayoutGenerator; native: GPUBindGroupLayout; };\r\n        bindDataGroup: { generator: WebGpuBindDataGroupGenerator; native: GPUBindGroup; };\r\n        pipelineDataLayout: { generator: WebGpuPipelineDataLayoutGenerator; native: GPUPipelineLayout; };\r\n        renderTargets: { generator: WebGpuRenderTargetsGenerator; native: GPURenderPassDescriptor; };\r\n\r\n        // Pipelines.\r\n        vertexFragmentPipeline: { generator: WebGpuVertexFragmentPipelineGenerator; native: GPURenderPipeline; };\r\n        computePipeline: { generator: WebGpuComputePipelineGenerator; native: GPUComputePipeline; };\r\n\r\n        // Shader.\r\n        vertexFragmentShader: { generator: WebGpuVertexFragmentShaderGenerator; native: GPUShaderModule; };\r\n        computeShader: { generator: WebGpuComputeShaderGenerator; native: GPUShaderModule; };\r\n\r\n        // Execution.\r\n        computeInstruction: { generator: WebGpuComputeInstructionGenerator; native: null; };\r\n        vertexFragmentInstruction: { generator: WebGpuVertexFragmentInstructionGenerator; native: null; };\r\n        instructionExecutor: { generator: WebGpuInstructionExecutorGenerator; native: null; };\r\n    };\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { AccessMode } from '../../../constant/access-mode.enum';\r\nimport { BufferBindType } from '../../../constant/buffer-bind-type.enum';\r\nimport { ComputeStage } from '../../../constant/compute-stage.enum';\r\nimport { SamplerType } from '../../../constant/sampler-type.enum';\r\nimport { TextureBindType } from '../../../constant/texture-bind-type.enum';\r\nimport { TextureDimension } from '../../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\nimport { BaseMemoryLayout } from '../../memory_layout/base-memory-layout';\r\nimport { ArrayBufferMemoryLayout } from '../../memory_layout/buffer/array-buffer-memory-layout';\r\nimport { BaseBufferMemoryLayout } from '../../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { LinearBufferMemoryLayout } from '../../memory_layout/buffer/linear-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from '../../memory_layout/buffer/struct-buffer-memory-layout';\r\nimport { SamplerMemoryLayout } from '../../memory_layout/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../../memory_layout/texture-memory-layout';\r\nimport { BaseShaderInterpreter, ShaderFunction, ShaderFunctionDefinition, ShaderStructDefinition, ShaderType, ShaderTypeDefinition, ShaderValue, ShaderValueDefinition } from '../../shader/interpreter/base-shader-interpreter';\r\nimport { WgslBufferArrayTypes, WgslBufferLinearTypes, WgslSamplerTypes, WgslTextureTypes, WgslType } from './wgsl_enum/wgsl-type.enum';\r\nimport { BufferPrimitiveFormat } from '../../../constant/buffer-primitive-format';\r\n\r\nexport class WebGpuShaderInterpreter extends BaseShaderInterpreter {\r\n    /**\r\n     * Fetch al function definitions.\r\n     * @param pSourceCode - Source code.\r\n     */\r\n    protected override fetchFunctionDefinitions(pSourceCode: string): Array<ShaderFunctionDefinition> {\r\n        const lFunctionRegex: RegExp = /(?<attributes>(?:@[\\w]+(?:\\([^)]*\\))?\\s+)+)?(?:\\s)*?fn\\s+(?<name>\\w*)\\s*\\((?<parameter>(?:.|\\r?\\n)*?)\\)(?:\\s*->\\s*(?<result>[^{]+))?\\s*{/gm;\r\n\r\n        const lFunctionList: Array<ShaderFunctionDefinition> = new Array<ShaderFunctionDefinition>();\r\n        for (const lFunctionMatch of pSourceCode.matchAll(lFunctionRegex)) {\r\n            const lFunctionName: string = lFunctionMatch.groups!['name'];\r\n            const lFunctionResult: string = lFunctionMatch.groups!['result'];\r\n            const lFunctionAttributes: string | null = lFunctionMatch.groups!['attributes'];\r\n            const lFunctionParameter: string = lFunctionMatch.groups!['parameter'];\r\n\r\n            // Fetch attributes.\r\n            const lAttachments: Record<string, string> = {};\r\n            if (lFunctionAttributes) {\r\n                // Split string of multiple attributes.\r\n                for (const lAttributeMatch of lFunctionAttributes.matchAll(/@(?<name>[\\w])+\\((?<value>[^)]*)\\)/g)) {\r\n                    const lAttributeName: string = lAttributeMatch.groups!['name'];\r\n                    const lAttributeValue: string = lAttributeMatch.groups!['value'];\r\n\r\n                    // Add each attribute as value attachment.\r\n                    lAttachments[lAttributeName] = lAttributeValue;\r\n                }\r\n            }\r\n\r\n            // Cut source code after function head match. Head includes first bracket.\r\n            const lFunctionBodyStart: string = pSourceCode.slice(lFunctionMatch.index! + lFunctionMatch[0].length);\r\n\r\n            const lBracketRegex: RegExp = /(?:\".*?\"|'.*?'|\\/\\*.*?\\*\\/|\\/\\/.*?$)|(?<bracket>{|})/gms;\r\n\r\n            // Read function body. Match opening and closing brackets. Count layers and find exit bracket. \r\n            let lBracketLayer: number = 1;\r\n            let lClosingBracketIndex: number = -1;\r\n            let lBracketMatch: RegExpExecArray | null;\r\n            while ((lBracketMatch = lBracketRegex.exec(lFunctionBodyStart)) !== null) {\r\n                if (lBracketMatch.groups?.['bracket']) {\r\n                    const lBracket: string = lBracketMatch.groups['bracket'];\r\n\r\n                    // Count closing and opening layers.\r\n                    if (lBracket === '{') {\r\n                        lBracketLayer++;\r\n                    } else {\r\n                        lBracketLayer--;\r\n\r\n                        // Exit search on exiting last layer.\r\n                        if (lBracketLayer === 0) {\r\n                            lClosingBracketIndex = lBracketMatch.index;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Validate found closing bracket.\r\n            if (lClosingBracketIndex < 0) {\r\n                throw new Exception(`Error closing function \"${lFunctionName}\"`, this);\r\n            }\r\n\r\n            // Cut string on opening and exit braket.\r\n            const lFunctionBody: string = lFunctionBodyStart.slice(0, lClosingBracketIndex);\r\n\r\n            // Fetch Parameter.\r\n            const lParameterVariableList: Array<ShaderValueDefinition> = this.fetchVariableDefinitions(lFunctionParameter);\r\n\r\n            // Fetch result type.\r\n            const lReturnTypes: ShaderValueDefinition = this.fetchVariableDefinitions(lFunctionResult).at(0)!;\r\n\r\n            lFunctionList.push({\r\n                name: lFunctionName,\r\n                returnType: lReturnTypes,\r\n                parameter: lParameterVariableList,\r\n                attachments: lAttachments,\r\n                body: lFunctionBody\r\n            });\r\n        }\r\n\r\n        return lFunctionList;\r\n    }\r\n\r\n    /**\r\n     * Fetch all struct definitions of shader.\r\n     * @param pSourceCode - Shader source code.\r\n     */\r\n    protected override fetchStructDefinitions(pSourceCode: string): Array<ShaderStructDefinition> {\r\n        const lStuctRegex: RegExp = /^\\s*struct\\s+(?<name>\\w+)\\s*{(?<typeinfo>[^}]*)}$/smg;\r\n\r\n        // Fetch all found structs.\r\n        const lStructDefinitionList: Array<ShaderStructDefinition> = new Array<ShaderStructDefinition>();\r\n        for (const lStructMatch of pSourceCode.matchAll(lStuctRegex)) {\r\n            const lStructName: string = lStructMatch.groups!['name'];\r\n            const lStructBody: string = lStructMatch.groups!['typeinfo'];\r\n\r\n            lStructDefinitionList.push({\r\n                name: lStructName,\r\n                properies: this.fetchVariableDefinitions(lStructBody)\r\n            });\r\n        }\r\n\r\n        return lStructDefinitionList;\r\n    }\r\n\r\n    /**\r\n     * Fetch all global bindings.\r\n     * @param pSourceCode - Source code.\r\n     */\r\n    protected override fetchValueDefinitions(pSourceCode: string): Array<ShaderValueDefinition> {\r\n        // Get only lines with group attributes.\r\n        const lAllGroupLines: string = [...pSourceCode.matchAll(/^.*@group.*$/gm)].reduce((pCurrent, pLine) => {\r\n            return pCurrent + pLine[0];\r\n        }, '');\r\n\r\n        return this.fetchVariableDefinitions(lAllGroupLines);\r\n    }\r\n\r\n    /**\r\n     * Convert definition into function.\r\n     * @param pDefinition - Function definitions.\r\n     */\r\n    protected override functionFromDefinition(pDefinition: ShaderFunctionDefinition): ShaderFunction {\r\n        // Create memory layouts\r\n        const lParameter: Array<BaseMemoryLayout> = pDefinition.parameter.map((pParameterDefintion) => { return this.valueFromDefinition(pParameterDefintion).value; });\r\n        const lReturnType: BaseMemoryLayout = this.valueFromDefinition(pDefinition.returnType).value;\r\n\r\n        // Read tags from attachments.\r\n        let lTag: ComputeStage = ComputeStage.None;\r\n        if (pDefinition.attachments['vertex']) {\r\n            lTag |= ComputeStage.Vertex;\r\n        }\r\n        if (pDefinition.attachments['fragment']) {\r\n            lTag |= ComputeStage.Fragment;\r\n        }\r\n        if (pDefinition.attachments['compute']) {\r\n            lTag |= ComputeStage.Compute;\r\n        }\r\n\r\n        // \"Calculate\" used globals by using deep mathematic learning block chain algorithms.\r\n        const lUsedGlobals: Array<string> = new Array<string>();\r\n        for (const lGlobalValue of this.fetchValueDefinitions(this.source)) {\r\n            if (pDefinition.body.includes(lGlobalValue.name)) {\r\n                lUsedGlobals.push(lGlobalValue.name);\r\n            }\r\n        }\r\n\r\n        const lAttachmentValueRexgex: RegExp = /\".*?\"|'.*?'|[^,\"']+/g;\r\n\r\n        // Save all attachments.\r\n        const lAttachment: Record<string, Array<string>> = {};\r\n        for (const lAttachmentName in pDefinition.attachments) {\r\n            const lAttachmentValues: string = pDefinition.attachments[lAttachmentName];\r\n\r\n            // Split values by comma. Filter every empty value.\r\n            lAttachment[lAttachmentName] = [...lAttachmentValues.matchAll(lAttachmentValueRexgex)]\r\n                .map((pMatch: RegExpMatchArray) => { return pMatch[0].trim(); })\r\n                .filter((pValue: string) => { return pValue !== ''; });\r\n        }\r\n\r\n        return {\r\n            name: pDefinition.name,\r\n            entryPoints: lTag,\r\n            parameter: lParameter,\r\n            return: lReturnType,\r\n            usedGlobals: lUsedGlobals,\r\n            attachments: lAttachment\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Setup shader types.\r\n     * @param pAddType - Add type callback.\r\n     */\r\n    protected override setupShaderTypes(pAddType: (pType: ShaderTypeDefinition) => void): void {\r\n        // Scalar types.\r\n        pAddType({ name: WgslType.Boolean, variants: [{ size: 1, align: 1 }] });\r\n\r\n        pAddType({ name: WgslType.Integer32, variants: [{ size: 4, align: 4, format: BufferPrimitiveFormat.Int }] });\r\n        pAddType({ name: WgslType.UnsignedInteger32, variants: [{ size: 4, align: 4, format: BufferPrimitiveFormat.Uint }] });\r\n        pAddType({ name: WgslType.Float32, variants: [{ size: 4, align: 4, format: BufferPrimitiveFormat.Float }] });\r\n        pAddType({ name: WgslType.Float16, variants: [{ size: 2, align: 2 }] });\r\n\r\n        // Vector types.\r\n        pAddType({\r\n            name: WgslType.Vector2, variants: [\r\n                { size: 8, align: 8, generic: [WgslType.Integer32], format: BufferPrimitiveFormat.Vec2Int },\r\n                { size: 8, align: 8, generic: [WgslType.UnsignedInteger32], format: BufferPrimitiveFormat.Vec2Uint },\r\n                { size: 8, align: 8, generic: [WgslType.Float32], format: BufferPrimitiveFormat.Vec2Float },\r\n                { size: 4, align: 4, generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Vector3, variants: [\r\n                { size: 12, align: 16, generic: [WgslType.Integer32], format: BufferPrimitiveFormat.Vec3Int },\r\n                { size: 12, align: 16, generic: [WgslType.UnsignedInteger32], format: BufferPrimitiveFormat.Vec3Uint },\r\n                { size: 12, align: 16, generic: [WgslType.Float32], format: BufferPrimitiveFormat.Vec3Float },\r\n                { size: 6, align: 8, generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Vector4, variants: [\r\n                { size: 16, align: 16, generic: [WgslType.Integer32], format: BufferPrimitiveFormat.Vec4Int },\r\n                { size: 16, align: 16, generic: [WgslType.UnsignedInteger32], format: BufferPrimitiveFormat.Vec4Uint },\r\n                { size: 16, align: 16, generic: [WgslType.Float32], format: BufferPrimitiveFormat.Vec4Float },\r\n                { size: 8, align: 8, generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n\r\n        // Matrix types.\r\n        pAddType({\r\n            name: WgslType.Matrix22, variants: [\r\n                { size: 16, align: 8, generic: [WgslType.Integer32] },\r\n                { size: 16, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 16, align: 8, aliases: ['mat2x2f'], generic: [WgslType.Float32] },\r\n                { size: 8, align: 4, aliases: ['mat2x2h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix23, variants: [\r\n                { size: 32, align: 16, generic: [WgslType.Integer32] },\r\n                { size: 32, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 32, align: 16, aliases: ['mat2x3f'], generic: [WgslType.Float32] },\r\n                { size: 16, align: 8, aliases: ['mat2x3h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix24, variants: [\r\n                { size: 32, align: 16, generic: [WgslType.Integer32] },\r\n                { size: 32, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 32, align: 16, aliases: ['mat2x4f'], generic: [WgslType.Float32] },\r\n                { size: 16, align: 8, aliases: ['mat2x4h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix32, variants: [\r\n                { size: 24, align: 8, generic: [WgslType.Integer32] },\r\n                { size: 24, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 24, align: 8, aliases: ['mat3x2f'], generic: [WgslType.Float32] },\r\n                { size: 12, align: 4, aliases: ['mat3x2h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix33, variants: [\r\n                { size: 48, align: 16, generic: [WgslType.Integer32] },\r\n                { size: 48, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 48, align: 16, aliases: ['mat3x3f'], generic: [WgslType.Float32] },\r\n                { size: 24, align: 8, aliases: ['mat3x3h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix34, variants: [\r\n                { size: 48, align: 16, generic: [WgslType.Integer32] },\r\n                { size: 48, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 48, align: 16, aliases: ['mat3x4f'], generic: [WgslType.Float32] },\r\n                { size: 24, align: 8, aliases: ['mat3x4h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix42, variants: [\r\n                { size: 32, align: 8, generic: [WgslType.Integer32] },\r\n                { size: 32, align: 8, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 32, align: 8, aliases: ['mat4x2f'], generic: [WgslType.Float32] },\r\n                { size: 16, align: 4, aliases: ['mat4x2h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix43, variants: [\r\n                { size: 64, align: 16, generic: [WgslType.Integer32] },\r\n                { size: 64, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 64, align: 16, aliases: ['mat4x3f'], generic: [WgslType.Float32] },\r\n                { size: 32, align: 8, aliases: ['mat4x3h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n        pAddType({\r\n            name: WgslType.Matrix44, variants: [\r\n                { size: 64, align: 16, generic: [WgslType.Integer32] },\r\n                { size: 64, align: 16, generic: [WgslType.UnsignedInteger32] },\r\n                { size: 64, align: 16, aliases: ['mat4x4f'], generic: [WgslType.Float32] },\r\n                { size: 32, align: 8, aliases: ['mat4x4h'], generic: [WgslType.Float16] }\r\n            ]\r\n        });\r\n\r\n        // Bundled types.\r\n        pAddType({\r\n            name: WgslType.Array, variants: [\r\n                { size: -1, align: -1, generic: ['*'] },\r\n                { size: -1, align: -1, generic: ['*', '*'] }\r\n            ]\r\n        });\r\n\r\n        // Specials\r\n        pAddType({\r\n            name: WgslType.Atomic, variants: [\r\n                { size: 4, align: 4, generic: [WgslType.Integer32] },\r\n                { size: 4, align: 4, generic: [WgslType.UnsignedInteger32] }\r\n            ]\r\n        });\r\n\r\n        // Image textures.\r\n        pAddType({ name: WgslType.Texture1d, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n        pAddType({ name: WgslType.Texture2d, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n        pAddType({ name: WgslType.Texture2dArray, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n        pAddType({ name: WgslType.Texture3d, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n        pAddType({ name: WgslType.TextureCube, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n        pAddType({ name: WgslType.TextureCubeArray, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n        pAddType({ name: WgslType.TextureMultisampled2d, variants: [{ size: -1, align: -1, generic: ['*'] }] });\r\n\r\n        // External tetures.\r\n        pAddType({ name: WgslType.TextureExternal, variants: [{ size: -1, align: -1, generic: [] }] });\r\n\r\n        // Storage textures.\r\n        pAddType({ name: WgslType.TextureStorage1d, variants: [{ size: -1, align: -1, generic: ['*', '*'] }] });\r\n        pAddType({ name: WgslType.TextureStorage2d, variants: [{ size: -1, align: -1, generic: ['*', '*'] }] });\r\n        pAddType({ name: WgslType.TextureStorage2dArray, variants: [{ size: -1, align: -1, generic: ['*', '*'] }] });\r\n        pAddType({ name: WgslType.TextureStorage3d, variants: [{ size: -1, align: -1, generic: ['*', '*'] }] });\r\n\r\n        // Depth Textures.\r\n        pAddType({ name: WgslType.TextureDepth2d, variants: [{ size: -1, align: -1, generic: [] }] });\r\n        pAddType({ name: WgslType.TextureDepth2dArray, variants: [{ size: -1, align: -1, generic: [] }] });\r\n        pAddType({ name: WgslType.TextureDepthCube, variants: [{ size: -1, align: -1, generic: [] }] });\r\n        pAddType({ name: WgslType.TextureDepthCubeArray, variants: [{ size: -1, align: -1, generic: [] }] });\r\n        pAddType({ name: WgslType.TextureDepthMultisampled2d, variants: [{ size: -1, align: -1, generic: [] }] });\r\n\r\n        // Sampler\r\n        pAddType({ name: WgslType.Sampler, variants: [{ size: -1, align: -1, generic: [] }] });\r\n        pAddType({ name: WgslType.SamplerComparison, variants: [{ size: -1, align: -1, generic: [] }] });\r\n\r\n        // Reference and Pointer Types.\r\n        pAddType({ name: WgslType.Reference, variants: [{ size: -1, align: -1, generic: ['*', '*', '*'] }] });\r\n        pAddType({ name: WgslType.Pointer, variants: [{ size: -1, align: -1, generic: ['*', '*', '*'] }] });\r\n    }\r\n\r\n    /**\r\n     * Create shader value from definition.\r\n     * @param pValueDefinition - Shader value definition.\r\n     */\r\n    protected override valueFromDefinition(pValueDefinition: ShaderValueDefinition): ShaderValue {\r\n        const lDefinitionType: ShaderType = this.typeFor(pValueDefinition.name, pValueDefinition.typeGenerics);\r\n\r\n        /*\r\n         * Read generic settings.\r\n         */\r\n\r\n        // BufferBindType\r\n        // Parameter is only an layout type that can happend when specifed as function return type of parameter.\r\n        let lBufferBindType: BufferBindType = BufferBindType.Undefined;\r\n        if (pValueDefinition.attachments['bindingType']) {\r\n            const lBindingTypeEnum: 'uniform' | 'storage' = <'uniform' | 'storage'>pValueDefinition.attachments['bindingType'];\r\n            switch (lBindingTypeEnum) {\r\n                case 'uniform': {\r\n                    lBufferBindType = BufferBindType.Uniform;\r\n                    break;\r\n                }\r\n                case 'storage': {\r\n                    lBufferBindType = BufferBindType.Storage;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // AccessMode\r\n        let lAccessMode: AccessMode = AccessMode.None;\r\n        if (pValueDefinition.attachments['accessMode']) {\r\n            const lAccessEnum: 'read' | 'write' | 'read_write' = <'read' | 'write' | 'read_write'>pValueDefinition.attachments['accessMode'];\r\n            switch (lAccessEnum) {\r\n                case 'read': {\r\n                    lAccessMode = AccessMode.Read;\r\n                    break;\r\n                }\r\n                case 'write': {\r\n                    lAccessMode = AccessMode.Write;\r\n                    break;\r\n                }\r\n                case 'read_write': {\r\n                    lAccessMode = AccessMode.Read | AccessMode.Write;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Binding Index.\r\n        const lBindingIndex: number | null = pValueDefinition.attachments['binding'] ? parseInt(pValueDefinition.attachments['binding']) : null;\r\n        const lParameterIndex: number | null = pValueDefinition.attachments['location'] ? parseInt(pValueDefinition.attachments['location']) : null;\r\n\r\n        const lCreationParameter: ShaderValueCreationParameter = {\r\n            valueDefinition: pValueDefinition,\r\n            typeDefinition: lDefinitionType,\r\n            accessMode: lAccessMode,\r\n            bufferBindType: lBufferBindType,\r\n            groupIndex: pValueDefinition.attachments['group'] ? parseInt(pValueDefinition.attachments['group']) : null,\r\n            memoryIndex: {\r\n                binding: lBindingIndex,\r\n                location: lParameterIndex,\r\n            },\r\n            visibility: this.visibilityOf(pValueDefinition.name)\r\n        };\r\n\r\n        /*\r\n         * Convert different memory layouts.\r\n         */\r\n\r\n        // Struct.\r\n        if (lDefinitionType.type === 'struct') {\r\n            return this.createStructBufferLayout(lCreationParameter);\r\n        }\r\n\r\n        // Sampler\r\n        if (WgslSamplerTypes.includes(<any>lDefinitionType.typeName)) {\r\n            return this.createSamplerLayout(lCreationParameter);\r\n        }\r\n\r\n        // Array buffer.\r\n        if (WgslBufferArrayTypes.includes(<any>lDefinitionType.typeName)) {\r\n            return this.createArrayBufferLayout(lCreationParameter);\r\n        }\r\n\r\n        // Linear buffer.\r\n        if (WgslBufferLinearTypes.includes(<any>lDefinitionType.typeName)) {\r\n            return this.createLinearBufferLayout(lCreationParameter);\r\n        }\r\n\r\n        // Textures.\r\n        if (WgslTextureTypes.includes(<any>lDefinitionType.typeName)) {\r\n            return this.createTextureLayout(lCreationParameter);\r\n        }\r\n\r\n        // Unsupported behaviour.\r\n        throw new Exception(`Shader value \"${pValueDefinition.name}\" has an unsupported type.`, this);\r\n    }\r\n\r\n    /**\r\n     * Create array buffer layout shader value.\r\n     * @param pParameter - Creation parameter.\r\n     */\r\n    private createArrayBufferLayout(pParameter: ShaderValueCreationParameter): ShaderValue {\r\n        let lArraySize: number = -1;\r\n        if (pParameter.valueDefinition.typeGenerics.length === 2) {\r\n            const lArraySizeGeneric: string = pParameter.valueDefinition.typeGenerics[1];\r\n            lArraySize = parseInt(lArraySizeGeneric);\r\n\r\n            // Validate size generic.\r\n            if (isNaN(lArraySize)) {\r\n                throw new Exception(`Wrong size generic \"${lArraySizeGeneric}\" on array type.`, this);\r\n            }\r\n        }\r\n\r\n        // Read inner type from generic.\r\n        const lInnerTypeDefinition: ShaderValueDefinition = this.fetchVariableDefinitions(pParameter.valueDefinition.typeGenerics[0])[0];\r\n        const lInnerType: ShaderValue = this.valueFromDefinition(lInnerTypeDefinition);\r\n\r\n        const lArrayMemoryLayout: ArrayBufferMemoryLayout = new ArrayBufferMemoryLayout(this.device, {\r\n            arraySize: lArraySize,\r\n            innerType: <BaseBufferMemoryLayout>lInnerType.value,\r\n            bindType: pParameter.bufferBindType,\r\n            access: pParameter.accessMode,\r\n            bindingIndex: pParameter.memoryIndex.binding,\r\n            name: pParameter.valueDefinition.name,\r\n            visibility: pParameter.visibility\r\n        });\r\n\r\n        return {\r\n            group: pParameter.groupIndex,\r\n            value: lArrayMemoryLayout\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create linear buffer layout shader value.\r\n     * @param pParameter - Creation parameter.\r\n     */\r\n    private createLinearBufferLayout(pParameter: ShaderValueCreationParameter): ShaderValue {\r\n        if (pParameter.typeDefinition.type !== 'buildIn') {\r\n            throw new Exception('Type not supported.', this);\r\n        }\r\n\r\n        const lLinearBufferLayout = new LinearBufferMemoryLayout(this.device, {\r\n            size: pParameter.typeDefinition.size,\r\n            alignment: pParameter.typeDefinition.align,\r\n            bindType: pParameter.bufferBindType,\r\n            access: pParameter.accessMode,\r\n            bindingIndex: pParameter.memoryIndex.binding,\r\n            locationIndex: pParameter.memoryIndex.location,\r\n            name: pParameter.valueDefinition.name,\r\n            visibility: pParameter.visibility,\r\n            primitiveFormat: pParameter.typeDefinition.primitiveFormat ?? BufferPrimitiveFormat.Unsupported\r\n        });\r\n\r\n        return {\r\n            group: pParameter.groupIndex,\r\n            value: lLinearBufferLayout\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create sampler layout shader value.\r\n     * @param pParameter - Creation parameter.\r\n     */\r\n    private createSamplerLayout(pParameter: ShaderValueCreationParameter): ShaderValue {\r\n        if (pParameter.typeDefinition.type !== 'buildIn') {\r\n            throw new Exception('Type not supported.', this);\r\n        }\r\n\r\n        const lSamplerType: SamplerType = (pParameter.typeDefinition.typeName === WgslType.Sampler) ? SamplerType.Filter : SamplerType.Comparison;\r\n\r\n        const lSamplerMemoryLayout: SamplerMemoryLayout = new SamplerMemoryLayout(this.device, {\r\n            samplerType: lSamplerType,\r\n            access: pParameter.accessMode,\r\n            bindingIndex: pParameter.memoryIndex.binding,\r\n            name: pParameter.valueDefinition.name,\r\n            visibility: pParameter.visibility\r\n        });\r\n\r\n        return {\r\n            group: pParameter.groupIndex,\r\n            value: lSamplerMemoryLayout\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create struct buffer layout shader value.\r\n     * @param pParameter - Creation parameter.\r\n     */\r\n    private createStructBufferLayout(pParameter: ShaderValueCreationParameter): ShaderValue {\r\n        if (pParameter.typeDefinition.type !== 'struct') {\r\n            throw new Exception('Type not supported.', this);\r\n        }\r\n\r\n        const lStructMemoryLayout: StructBufferMemoryLayout = new StructBufferMemoryLayout(this.device, {\r\n            structName: pParameter.typeDefinition.struct.name,\r\n            bindType: pParameter.bufferBindType,\r\n            access: pParameter.accessMode,\r\n            bindingIndex: pParameter.memoryIndex.binding,\r\n            name: pParameter.valueDefinition.name,\r\n            visibility: pParameter.visibility\r\n        });\r\n\r\n        // Add all properties.\r\n        for (let lPropertyIndex: number = 0; lPropertyIndex < pParameter.typeDefinition.struct.properties.length; lPropertyIndex++) {\r\n            const lProperty: ShaderValue = pParameter.typeDefinition.struct.properties[lPropertyIndex];\r\n            lStructMemoryLayout.addProperty(lPropertyIndex, <BaseBufferMemoryLayout>lProperty.value);\r\n        }\r\n\r\n        return {\r\n            group: pParameter.groupIndex,\r\n            value: lStructMemoryLayout\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create struct buffer layout shader value.\r\n     * @param pParameter - Creation parameter.\r\n     */\r\n    private createTextureLayout(pParameter: ShaderValueCreationParameter): ShaderValue {\r\n        if (pParameter.typeDefinition.type !== 'buildIn') {\r\n            throw new Exception('Type not supported.', this);\r\n        }\r\n\r\n        const lTextureWgslType: WgslTextureTypes = <any>pParameter.typeDefinition.typeName;\r\n\r\n        // Uses multisamples or not.\r\n        const lUsesMultisample: boolean = (lTextureWgslType === WgslType.TextureMultisampled2d || lTextureWgslType === WgslType.TextureDepthMultisampled2d);\r\n\r\n        const lTextureLayout = new TextureMemoryLayout(this.device, {\r\n            dimension: this.textureDimensionFromType(lTextureWgslType),\r\n            format: this.textureDefaultFormatFromType(lTextureWgslType),\r\n            bindType: this.textureBindTypeFromType(lTextureWgslType),\r\n            multisampled: lUsesMultisample,\r\n            access: pParameter.accessMode,\r\n            bindingIndex: pParameter.memoryIndex.binding,\r\n            name: pParameter.valueDefinition.name,\r\n            visibility: pParameter.visibility\r\n        });\r\n\r\n        return {\r\n            group: pParameter.groupIndex,\r\n            value: lTextureLayout\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Find all variable definitions and fetch data.\r\n     * @param pSourceSnipped - Source snipped with variables.\r\n     */\r\n    private fetchVariableDefinitions(pSourceSnipped: string): Array<ShaderValueDefinition> {\r\n        const lDefinitionRegex: RegExp = /(?<attributes>(?:@[\\w]+(?:\\([^)]*\\))?\\s+)+)?(?:var(?:<(?<access>[\\w\\s,]+)?>)?\\s+)?(?:(?<variable>\\w+)\\s*:\\s*)?(?<type>(?<typename>\\w+)(?:<(?<generics>[<>\\w\\s,]+)>)?)/gm;\r\n\r\n        const lVariableList: Array<ShaderValueDefinition> = new Array<ShaderValueDefinition>();\r\n        for (const lDefinitionMatch of pSourceSnipped.matchAll(lDefinitionRegex)) {\r\n            const lVariableTypeName: string = lDefinitionMatch.groups!['typename'];\r\n            const lVariableName: string = lDefinitionMatch.groups!['variable'] ?? '';\r\n            const lVariableAttributes: string | null = lDefinitionMatch.groups!['attributes'];\r\n            const lVariableAccess: string | null = lDefinitionMatch.groups!['access'];\r\n            const lVariableGenerics: string | null = lDefinitionMatch.groups!['generics'];\r\n\r\n            const lAttachments: Record<string, string> = {};\r\n\r\n            // Fetch attributes.\r\n            if (lVariableAttributes) {\r\n                // Split string of multiple attributes.\r\n                for (const lAttributeMatch of lVariableAttributes.matchAll(/@(?<name>[\\w])+\\((?<value>[^)]*)\\)/g)) {\r\n                    const lAttributeName: string = lAttributeMatch.groups!['name'];\r\n                    const lAttributeValue: string = lAttributeMatch.groups!['value'];\r\n\r\n                    // Add each attribute as value attachment.\r\n                    lAttachments[lAttributeName] = lAttributeValue;\r\n                }\r\n            }\r\n\r\n            // Parse optional acccess modifier.\r\n            if (lVariableAccess) {\r\n                // var<bindType|addressSpace [,accessMode]> => var<storage, read>\r\n                const lAccessList: Array<string> = lVariableAccess.split(',').map((pValue: string) => pValue.trim()).filter((pValue: string) => pValue.length);\r\n\r\n                // Add bind type attachment.\r\n                lAttachments['bindingType'] = lAccessList[0];\r\n\r\n                // Add optional accessMode attachment.\r\n                if (lAccessList[1]) {\r\n                    lAttachments['accessMode'] = lAccessList[1];\r\n                }\r\n            }\r\n\r\n            // Split generic types.\r\n            const lGenericList: Array<string> = new Array<string>();\r\n            if (lVariableGenerics) {\r\n                for (const lGenericMatch of lVariableGenerics.matchAll(/(?<generictype>(?:\\w+(?:<.+>)?))[,\\s]*/g)) {\r\n                    lGenericList.push(lGenericMatch.groups!['generictype']);\r\n                }\r\n            }\r\n\r\n            lVariableList.push({\r\n                name: lVariableName,\r\n                type: this.typeFor(lVariableTypeName, lGenericList),\r\n                typeGenerics: lGenericList,\r\n                attachments: lAttachments,\r\n            });\r\n        }\r\n\r\n        return lVariableList;\r\n    }\r\n\r\n    /**\r\n     * Read texture bind type from texture wgsl type. \r\n     * @param pTextureType - Texture wgsl type.\r\n     * @returns \r\n     */\r\n    private textureBindTypeFromType(pTextureType: WgslTextureTypes): TextureBindType {\r\n        // Map every texture type for bind type.\r\n        switch (pTextureType) {\r\n            case WgslType.TextureExternal: {\r\n                return TextureBindType.External;\r\n            }\r\n\r\n            case WgslType.TextureStorage1d:\r\n            case WgslType.TextureStorage2d:\r\n            case WgslType.TextureStorage2dArray:\r\n            case WgslType.TextureStorage3d: {\r\n                return TextureBindType.Storage;\r\n            }\r\n\r\n            case WgslType.Texture1d:\r\n            case WgslType.TextureDepth2d:\r\n            case WgslType.Texture2d:\r\n            case WgslType.TextureDepthMultisampled2d:\r\n            case WgslType.TextureMultisampled2d:\r\n            case WgslType.TextureDepth2dArray:\r\n            case WgslType.Texture2dArray:\r\n            case WgslType.Texture3d:\r\n            case WgslType.TextureCube:\r\n            case WgslType.TextureDepthCube:\r\n            case WgslType.TextureCubeArray:\r\n            case WgslType.TextureDepthCubeArray: {\r\n                return TextureBindType.Images;\r\n            }\r\n\r\n            default: {\r\n                throw new Exception(`Texture type \"${pTextureType}\" not supported for any texture bind type.`, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Work in process texture format from texture type.\r\n     * @param pTextureType - Texture type.\r\n     */\r\n    private textureDefaultFormatFromType(pTextureType: WgslTextureTypes): TextureFormat {\r\n        // Map every texture type for view dimension.\r\n        switch (pTextureType) {\r\n            case WgslType.Texture1d:\r\n            case WgslType.TextureStorage1d:\r\n            case WgslType.Texture2d:\r\n            case WgslType.TextureStorage2d:\r\n            case WgslType.TextureMultisampled2d:\r\n            case WgslType.TextureExternal:\r\n            case WgslType.Texture2dArray:\r\n            case WgslType.TextureStorage2dArray:\r\n            case WgslType.Texture3d:\r\n            case WgslType.TextureStorage3d:\r\n            case WgslType.TextureCube:\r\n            case WgslType.TextureCubeArray: {\r\n                return TextureFormat.BlueRedGreenAlpha;\r\n            }\r\n\r\n            case WgslType.TextureDepth2dArray:\r\n            case WgslType.TextureDepthCubeArray:\r\n            case WgslType.TextureDepthCube:\r\n            case WgslType.TextureDepthMultisampled2d:\r\n            case WgslType.TextureDepth2d: {\r\n                return TextureFormat.DepthStencil;\r\n            }\r\n\r\n            default: {\r\n                throw new Exception(`Texture type \"${pTextureType}\" not supported for any texture dimension.`, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read texture dimension from texture type.\r\n     * @param pTextureType - Texture type.\r\n     */\r\n    private textureDimensionFromType(pTextureType: WgslTextureTypes): TextureDimension {\r\n        // Map every texture type for view dimension.\r\n        switch (pTextureType) {\r\n            case WgslType.Texture1d:\r\n            case WgslType.TextureStorage1d: {\r\n                return TextureDimension.OneDimension;\r\n            }\r\n\r\n            case WgslType.TextureDepth2d:\r\n            case WgslType.Texture2d:\r\n            case WgslType.TextureStorage2d:\r\n            case WgslType.TextureDepthMultisampled2d:\r\n            case WgslType.TextureMultisampled2d:\r\n            case WgslType.TextureExternal: {\r\n                return TextureDimension.TwoDimension;\r\n            }\r\n\r\n            case WgslType.TextureDepth2dArray:\r\n            case WgslType.Texture2dArray:\r\n            case WgslType.TextureStorage2dArray: {\r\n                return TextureDimension.TwoDimensionArray;\r\n            }\r\n\r\n            case WgslType.Texture3d:\r\n            case WgslType.TextureStorage3d: {\r\n                return TextureDimension.ThreeDimension;\r\n            }\r\n\r\n            case WgslType.TextureCube:\r\n            case WgslType.TextureDepthCube: {\r\n                return TextureDimension.Cube;\r\n            }\r\n\r\n            case WgslType.TextureCubeArray:\r\n            case WgslType.TextureDepthCubeArray: {\r\n                return TextureDimension.CubeArray;\r\n            }\r\n\r\n            default: {\r\n                throw new Exception(`Texture type \"${pTextureType}\" not supported for any texture dimension.`, null);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ntype ShaderValueCreationParameter = {\r\n    typeDefinition: ShaderType;\r\n    valueDefinition: ShaderValueDefinition;\r\n    bufferBindType: BufferBindType;\r\n    accessMode: AccessMode;\r\n    visibility: ComputeStage;\r\n    groupIndex: number | null;\r\n    memoryIndex: {\r\n        binding: number | null;\r\n        location: number | null;\r\n    };\r\n};","export enum WgslType {\r\n    // Scalar types.\r\n    Boolean = 'bool',\r\n    Integer32 = 'i32',\r\n    UnsignedInteger32 = 'u32',\r\n    Float32 = 'f32',\r\n    Float16 = 'f16',\r\n\r\n    // Vector types.\r\n    Vector2 = 'vec2',\r\n    Vector3 = 'vec3',\r\n    Vector4 = 'vec4',\r\n\r\n    // Matrix types.\r\n    Matrix22 = 'mat2x2',\r\n    Matrix23 = 'mat2x3',\r\n    Matrix24 = 'mat2x4',\r\n    Matrix32 = 'mat3x2',\r\n    Matrix33 = 'mat3x3',\r\n    Matrix34 = 'mat3x4',\r\n    Matrix42 = 'mat4x2',\r\n    Matrix43 = 'mat4x3',\r\n    Matrix44 = 'mat4x4',\r\n\r\n    // Container.\r\n    Array = 'array',\r\n\r\n    //Special.\r\n    Atomic = 'atomic',\r\n    Pointer = 'ptr',\r\n    Reference = 'ref',\r\n\r\n    // Textures.\r\n    Texture1d = 'texture_1d',\r\n    Texture2d = 'texture_2d',\r\n    Texture2dArray = 'texture_2d_array',\r\n    Texture3d = 'texture_3d',\r\n    TextureCube = 'texture_cube',\r\n    TextureCubeArray = 'texture_cube_array',\r\n    TextureMultisampled2d = 'texture_multisampled_2d',\r\n    TextureExternal = 'texture_external',\r\n\r\n    // Depth texture.\r\n    TextureDepth2d = 'texture_depth_2d',\r\n    TextureDepth2dArray = 'texture_depth_2d_array',\r\n    TextureDepthCube = 'texture_depth_cube',\r\n    TextureDepthCubeArray = 'texture_depth_cube_array',\r\n    TextureDepthMultisampled2d = 'texture_depth_multisampled_2d',\r\n\r\n    // Storage textures.\r\n    TextureStorage1d = 'texture_storage_1d',\r\n    TextureStorage2d = 'texture_storage_2d',\r\n    TextureStorage2dArray = 'texture_storage_2d_array',\r\n    TextureStorage3d = 'texture_storage_3d',\r\n\r\n    // Sampler.\r\n    Sampler = 'sampler',\r\n    SamplerComparison = 'sampler_comparison'\r\n}\r\n\r\nexport const WgslBufferLinearTypes = [\r\n    WgslType.Boolean, WgslType.Integer32, WgslType.UnsignedInteger32,\r\n    WgslType.Float32, WgslType.Float16, WgslType.Vector2,\r\n    WgslType.Vector3, WgslType.Vector4, WgslType.Matrix22, WgslType.Matrix23,\r\n    WgslType.Matrix24, WgslType.Matrix32, WgslType.Matrix33,\r\n    WgslType.Matrix34, WgslType.Matrix42, WgslType.Matrix43,\r\n    WgslType.Matrix44,\r\n] as const;\r\nexport type WgslBufferLinearTypes = typeof WgslBufferLinearTypes[number];\r\n\r\nexport const WgslBufferArrayTypes = [WgslType.Array] as const;\r\nexport type WgslBufferArrayTypes = typeof WgslBufferArrayTypes[number];\r\n\r\nexport const WgslTextureTypes = [\r\n    WgslType.Texture1d, WgslType.Texture2d, WgslType.Texture2dArray,\r\n    WgslType.Texture3d, WgslType.TextureCube, WgslType.TextureCubeArray,\r\n    WgslType.TextureMultisampled2d, WgslType.TextureExternal,\r\n    WgslType.TextureDepth2d, WgslType.TextureDepth2dArray,\r\n    WgslType.TextureDepthCube, WgslType.TextureDepthCubeArray,\r\n    WgslType.TextureDepthMultisampled2d, WgslType.TextureStorage1d,\r\n    WgslType.TextureStorage2d, WgslType.TextureStorage2dArray, WgslType.TextureStorage3d\r\n] as const;\r\nexport type WgslTextureTypes = typeof WgslTextureTypes[number];\r\n\r\nexport const WgslSamplerTypes = [WgslType.Sampler, WgslType.SamplerComparison] as const;\r\nexport type WgslSamplerTypes = typeof WgslSamplerTypes[number];\r\n","import { AccessMode } from '../../constant/access-mode.enum';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { MemoryCopyType } from '../../constant/memory-copy-type.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\n\r\nexport abstract class BaseMemoryLayout extends GpuObject {\r\n    private readonly mAccessMode: AccessMode;\r\n    private readonly mBindingIndex: number | null;\r\n    \r\n    private mMemoryType: MemoryCopyType;\r\n    private readonly mName: string;\r\n    private readonly mVisibility: ComputeStage;\r\n\r\n    /**\r\n     * Buffer type access mode.\r\n     */\r\n    public get accessMode(): AccessMode {\r\n        return this.mAccessMode;\r\n    }\r\n\r\n    /**\r\n     * Get binding index.\r\n     */\r\n    public get bindingIndex(): number | null {\r\n        return this.mBindingIndex;\r\n    }\r\n\r\n    /**\r\n     * Memory type.\r\n     */\r\n    public get memoryType(): MemoryCopyType {\r\n        return this.mMemoryType;\r\n    } set memoryType(pValue: MemoryCopyType) {\r\n        this.mMemoryType = pValue;\r\n\r\n        // Request update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Variable name of buffer.\r\n     */\r\n    public get name(): string {\r\n        return this.mName;\r\n    }\r\n\r\n    /**\r\n     * Memory visibility on compute state.\r\n     */\r\n    public get visibility(): ComputeStage {\r\n        return this.mVisibility;\r\n    }\r\n\r\n    /**\r\n     * Constuctor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: MemoryLayoutParameter) {\r\n        super(pGpu);\r\n\r\n        this.mAccessMode = pParameter.access;\r\n        this.mName = pParameter.name;\r\n        this.mVisibility = pParameter.visibility;\r\n        this.mMemoryType = MemoryCopyType.None;\r\n\r\n        // Set optional memory indices.\r\n        this.mBindingIndex = pParameter.bindingIndex ?? null;\r\n    }\r\n}\r\n\r\nexport interface MemoryLayoutParameter {\r\n    access: AccessMode;\r\n    bindingIndex: number | null;\r\n    name: string;\r\n    visibility: ComputeStage;\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BufferLayoutLocation, BaseBufferMemoryLayout, BufferMemoryLayoutParameter } from './base-buffer-memory-layout';\r\n\r\nexport class ArrayBufferMemoryLayout extends BaseBufferMemoryLayout {\r\n    private readonly mArraySize: number;\r\n    private readonly mInnerType: BaseBufferMemoryLayout;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        return this.innerType.alignment;\r\n    }\r\n\r\n    /**\r\n     * Array item count.\r\n     */\r\n    public get arraySize(): number {\r\n        return this.mArraySize;\r\n    }\r\n\r\n    /**\r\n     * Array type.\r\n     */\r\n    public get innerType(): BaseBufferMemoryLayout {\r\n        return this.mInnerType;\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get size(): number {\r\n        if (this.arraySize === -1) {\r\n            return this.arraySize;\r\n        }\r\n\r\n        return this.arraySize * (Math.ceil(this.innerType.size / this.innerType.alignment) * this.innerType.alignment);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: ArrayBufferMemoryLayoutParameter) {\r\n        super(pGpu, pParameter);\r\n\r\n        // Static properties.\r\n        this.mArraySize = pParameter.arraySize;\r\n        this.mInnerType = pParameter.innerType;\r\n\r\n        // Set inner type parent.\r\n        pParameter.innerType.parent = this;\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public override locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        const lPathName: Array<string> = [...pPathName];\r\n\r\n        // Complete array.\r\n        const lItemIndexString: string | undefined = lPathName.shift();\r\n        if (!lItemIndexString) {\r\n            // Only valid for ststic arrays.\r\n            if (this.mArraySize < 0) {\r\n                throw new Exception('No size can be calculated for dynamic array buffer locations.', this);\r\n            }\r\n\r\n            return { size: this.size, offset: 0 };\r\n        }\r\n\r\n        // Validate item index.\r\n        if (isNaN(<any>lItemIndexString)) {\r\n            throw new Exception('Array index must be a number.', this);\r\n        }\r\n\r\n        // Calculate size of single item.s\r\n        const lArrayItemSize: number = Math.ceil(this.innerType.size / this.innerType.alignment) * this.innerType.alignment;\r\n        const lArrayItemOffset: number = parseInt(lItemIndexString) * lArrayItemSize;\r\n\r\n        // Single item.\r\n        if (lPathName.length === 0) {\r\n            return { size: lArrayItemSize, offset: lArrayItemSize * lArrayItemOffset };\r\n        }\r\n\r\n        // Inner property.\r\n        const lInnerLocation = this.innerType.locationOf(lPathName);\r\n        return { size: lInnerLocation.size, offset: lArrayItemOffset + lInnerLocation.offset };\r\n    }\r\n}\r\n\r\nexport interface ArrayBufferMemoryLayoutParameter extends BufferMemoryLayoutParameter {\r\n    // New.\r\n    arraySize: number;\r\n    innerType: BaseBufferMemoryLayout;\r\n}","import { Exception, TypedArray } from '@kartoffelgames/core.data';\r\nimport { BufferBindType } from '../../../constant/buffer-bind-type.enum';\r\nimport { GpuBuffer } from '../../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseMemoryLayout, MemoryLayoutParameter } from '../base-memory-layout';\r\n\r\nexport abstract class BaseBufferMemoryLayout extends BaseMemoryLayout {\r\n    private readonly mBindType: BufferBindType;\r\n    private mParent: BaseBufferMemoryLayout | null;\r\n\r\n    /**\r\n     * Type byte alignment.\r\n     */\r\n    public abstract readonly alignment: number;\r\n\r\n    /**\r\n     * Buffer size in bytes.\r\n     */\r\n    public abstract readonly size: number;\r\n\r\n    /**\r\n     * Buffer bind type.\r\n     */\r\n    public get bindType(): BufferBindType {\r\n        return this.mBindType;\r\n    }\r\n\r\n    /**\r\n     * Parent type. Stuct or Array.\r\n     */\r\n    public get parent(): BaseBufferMemoryLayout | null {\r\n        return this.mParent;\r\n    } public set parent(pValue: BaseBufferMemoryLayout | null) {\r\n        this.mParent = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: BufferMemoryLayoutParameter) {\r\n        super(pGpu, pParameter);\r\n\r\n        // Static properties.\r\n        this.mBindType = pParameter.bindType;\r\n        this.mParent = null;\r\n    }\r\n\r\n    /**\r\n     * Create buffer from current layout.\r\n     * @param pInitialData - Inital buffer data.\r\n     */\r\n    public create<TType extends TypedArray>(pInitialData: TType): GpuBuffer<TType> {\r\n        return new GpuBuffer<TType>(this.device, this, pInitialData);\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        // Only validate name.\r\n        if (pPathName.length !== 0) {\r\n            throw new Exception(`Simple buffer layout has no properties.`, this);\r\n        }\r\n\r\n        return { size: this.size, offset: 0 };\r\n    }\r\n}\r\n\r\nexport interface BufferMemoryLayoutParameter extends MemoryLayoutParameter {\r\n    bindType: BufferBindType;\r\n}\r\n\r\nexport type BufferLayoutLocation = {\r\n    offset: number;\r\n    size: number;\r\n};","import { BufferPrimitiveFormat } from '../../../constant/buffer-primitive-format';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseBufferMemoryLayout, BufferMemoryLayoutParameter } from './base-buffer-memory-layout';\r\n\r\nexport class LinearBufferMemoryLayout extends BaseBufferMemoryLayout {\r\n    private readonly mAlignment: number;\r\n    private readonly mFormat: BufferPrimitiveFormat;\r\n    private readonly mLocationIndex: number | null;\r\n    private readonly mSize: number;\r\n\r\n    /**\r\n     * Type byte alignment.\r\n     */\r\n    public get alignment(): number {\r\n        return this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Primitive format\r\n     */\r\n    public get format(): BufferPrimitiveFormat {\r\n        return this.mFormat;\r\n    }\r\n\r\n    /**\r\n     * Get parameter index.\r\n     */\r\n    public get locationIndex(): number | null {\r\n        return this.mLocationIndex;\r\n    }\r\n\r\n    /**\r\n     * Buffer size in bytes.\r\n     */\r\n    public get size(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: LinearBufferMemoryLayoutParameter) {\r\n        super(pGpu, pParameter);\r\n\r\n        // Static properties.\r\n        this.mAlignment = pParameter.alignment;\r\n        this.mSize = pParameter.size;\r\n        this.mFormat = pParameter.primitiveFormat;\r\n        this.mLocationIndex = pParameter.locationIndex ?? null;\r\n    }\r\n}\r\n\r\nexport interface LinearBufferMemoryLayoutParameter extends BufferMemoryLayoutParameter {\r\n    size: number;\r\n    alignment: number;\r\n    primitiveFormat: BufferPrimitiveFormat;\r\n    locationIndex: number | null;\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseBufferMemoryLayout, BufferLayoutLocation, BufferMemoryLayoutParameter } from './base-buffer-memory-layout';\r\nimport { LinearBufferMemoryLayout } from './linear-buffer-memory-layout';\r\n\r\nexport class StructBufferMemoryLayout extends BaseBufferMemoryLayout {\r\n    private mAlignment: number;\r\n    private mInnerProperties: Array<[number, BaseBufferMemoryLayout]>;\r\n    private mSize: number;\r\n    private readonly mStructName: string;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        return this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Ordered inner properties.\r\n     */\r\n    public get properties(): Array<BaseBufferMemoryLayout> {\r\n        return this.mInnerProperties.map((pProperty) => pProperty[1]);\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get size(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Struct name.\r\n     */\r\n    public get structName(): string {\r\n        return this.mStructName;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: StructBufferMemoryLayoutParameter) {\r\n        super(pGpu, pParameter);\r\n\r\n        // Calculated properties.\r\n        this.mAlignment = 0;\r\n        this.mSize = 0;\r\n\r\n        // Static properties.\r\n        this.mStructName = pParameter.structName;\r\n        this.mInnerProperties = new Array<[number, BaseBufferMemoryLayout]>();\r\n    }\r\n\r\n    /**\r\n     * Add property to struct.\r\n     * @param pName - Property name.\r\n     * @param pOrder - Index of property.\r\n     * @param pType - Property type.\r\n     */\r\n    public addProperty(pOrder: number, pType: BaseBufferMemoryLayout): void {\r\n        this.mInnerProperties.push([pOrder, pType]);\r\n        pType.parent = this;\r\n\r\n        // Order properties.\r\n        this.mInnerProperties = this.mInnerProperties.sort((pA, pB) => {\r\n            return pA[0] - pB[0];\r\n        });\r\n\r\n        // Call recalculation. Or other usefull things.\r\n        this.recalculateAlignment();\r\n    }\r\n\r\n    /**\r\n     * Get types of properties with a set memory index.\r\n     */\r\n    public bindingLayouts(): Array<BaseBufferMemoryLayout> {\r\n        const lLocationTypes: Array<BaseBufferMemoryLayout> = new Array<BaseBufferMemoryLayout>();\r\n\r\n        // Include itself.\r\n        if (this.bindingIndex !== null) {\r\n            lLocationTypes.push(this);\r\n        }\r\n\r\n        // Check all properties.\r\n        for (const [, lPropertyType] of this.mInnerProperties.values()) {\r\n            // Get all inner locations when property is a struct type.\r\n            if (lPropertyType instanceof StructBufferMemoryLayout) {\r\n                // Result does include itself \r\n                lLocationTypes.push(...lPropertyType.bindingLayouts());\r\n            } else if (lPropertyType.bindingIndex !== null) {\r\n                lLocationTypes.push(lPropertyType);\r\n            }\r\n        }\r\n\r\n        return lLocationTypes;\r\n    }\r\n\r\n    /**\r\n     * Get types of properties with a set memory index.\r\n     */\r\n    public locationLayouts(): Array<LinearBufferMemoryLayout> {\r\n        const lLocationTypes: Array<LinearBufferMemoryLayout> = new Array<LinearBufferMemoryLayout>();\r\n\r\n        // Check all properties.\r\n        for (const [, lPropertyType] of this.mInnerProperties.values()) {\r\n            // Get all inner locations when property is a struct type.\r\n            if (lPropertyType instanceof StructBufferMemoryLayout) {\r\n                // Result does include itself \r\n                lLocationTypes.push(...lPropertyType.locationLayouts());\r\n            } else if (lPropertyType instanceof LinearBufferMemoryLayout && lPropertyType.locationIndex !== null) {\r\n                lLocationTypes.push(lPropertyType);\r\n            }\r\n        }\r\n\r\n        return lLocationTypes;\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public override locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        const lPathName: Array<string> = [...pPathName];\r\n\r\n        // Complete array.\r\n        const lPropertyName: string | undefined = lPathName.shift();\r\n        if (!lPropertyName) {\r\n            return { size: this.size, offset: 0 };\r\n        }\r\n\r\n        // Get ordered types.\r\n        const lOrderedTypeList: Array<BaseBufferMemoryLayout> = this.mInnerProperties.sort(([pOrderA], [pOrderB]) => {\r\n            return pOrderA - pOrderB;\r\n        }).map(([, pType]) => pType);\r\n\r\n        // Recalculate size.\r\n        let lPropertyOffset: number = 0;\r\n        let lPropertyLayout: BaseBufferMemoryLayout | null = null;\r\n        for (const lProperty of lOrderedTypeList) {\r\n            // Increase offset to needed alignment.\r\n            lPropertyOffset = Math.ceil(lPropertyOffset / lProperty.alignment) * lProperty.alignment;\r\n\r\n            // Inner property is found. Skip searching.\r\n            // Alignment just applied so it can be skipped later.\r\n            if (lProperty.name === lPropertyName) {\r\n                lPropertyLayout = lProperty;\r\n                break;\r\n            }\r\n\r\n            // Increase offset for complete property.\r\n            lPropertyOffset += lProperty.size;\r\n        }\r\n\r\n        // Validate property.\r\n        if (!lPropertyLayout) {\r\n            throw new Exception(`Struct buffer layout property \"${lPropertyName}\" not found.`, this);\r\n        }\r\n\r\n        const lPropertyLocation = lPropertyLayout.locationOf(lPathName);\r\n        return {\r\n            size: lPropertyLocation.size,\r\n            offset: lPropertyOffset + lPropertyLocation.offset\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Recalculate size and alignment.\r\n     */\r\n    private recalculateAlignment(): void {\r\n        // Recalculate size.\r\n        let lRawDataSize: number = 0;\r\n        for (const lType of this.properties) {\r\n            // Increase offset to needed alignment.\r\n            lRawDataSize = Math.ceil(lRawDataSize / lType.alignment) * lType.alignment;\r\n\r\n            // Increase offset for type.\r\n            lRawDataSize += lType.size;\r\n\r\n            if (lType.alignment > this.mAlignment) {\r\n                this.mAlignment = lType.alignment;\r\n            }\r\n        }\r\n\r\n        // Apply struct alignment to raw data size.\r\n        this.mSize = Math.ceil(lRawDataSize / this.mAlignment) * this.mAlignment;\r\n    }\r\n}\r\n\r\nexport interface StructBufferMemoryLayoutParameter extends BufferMemoryLayoutParameter {\r\n    structName: string;\r\n}","import { SamplerType } from '../../constant/sampler-type.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { TextureSampler } from '../texture/texture-sampler';\r\nimport { BaseMemoryLayout, MemoryLayoutParameter } from './base-memory-layout';\r\n\r\nexport class SamplerMemoryLayout extends BaseMemoryLayout {\r\n    private readonly mSamplerType: SamplerType;\r\n\r\n    /**\r\n     * Sampler type.\r\n     */\r\n    public get samplerType(): SamplerType {\r\n        return this.mSamplerType;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: SamplerMemoryLayoutParameter) {\r\n        super(pGpu, pParameter);\r\n\r\n        this.mSamplerType = pParameter.samplerType;\r\n    }\r\n\r\n    /**\r\n     * Create texture sampler.\r\n     */\r\n    public create(): TextureSampler {\r\n        return new TextureSampler(this.device, this);\r\n    }\r\n}\r\n\r\nexport interface SamplerMemoryLayoutParameter extends MemoryLayoutParameter {\r\n    samplerType: SamplerType;\r\n}","import { TextureBindType } from '../../constant/texture-bind-type.enum';\r\nimport { TextureDimension } from '../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../constant/texture-format.enum';\r\nimport { TextureUsage } from '../../constant/texture-usage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { CanvasTexture } from '../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../texture/frame-buffer-texture';\r\nimport { ImageTexture } from '../texture/image-texture';\r\nimport { VideoTexture } from '../texture/video-texture';\r\nimport { BaseMemoryLayout, MemoryLayoutParameter } from './base-memory-layout';\r\n\r\nexport class TextureMemoryLayout extends BaseMemoryLayout {\r\n    private readonly mBindType: TextureBindType;\r\n    private readonly mDimension: TextureDimension;\r\n    private readonly mFormat: TextureFormat;\r\n    private readonly mMultisampled: boolean;\r\n    private mUsage: TextureUsage;\r\n\r\n    /**\r\n     * Texture dimension.\r\n     */\r\n    public get bindType(): TextureBindType {\r\n        return this.mBindType;\r\n    }\r\n\r\n    /**\r\n     * Texture dimension.\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this.mDimension;\r\n    }\r\n\r\n    /**\r\n     * Texture format.\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this.mFormat;\r\n    }\r\n\r\n    /**\r\n     * Texture uses multisample.\r\n     */\r\n    public get multisampled(): boolean {\r\n        return this.mMultisampled;\r\n    }\r\n\r\n    /**\r\n     * Texture usage. // TODO: Move into creation.\r\n     */\r\n    public get usage(): TextureUsage {\r\n        return this.mUsage;\r\n    } set usage(pValue: TextureUsage) {\r\n        this.mUsage = pValue;\r\n\r\n        // Request update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pGpu: GpuDevice, pParameter: TextureMemoryLayoutParameter) {\r\n        super(pGpu, pParameter);\r\n\r\n        this.mBindType = pParameter.bindType;\r\n        this.mDimension = pParameter.dimension;\r\n        this.mFormat = pParameter.format;\r\n        this.mUsage = TextureUsage.None;\r\n        this.mMultisampled = pParameter.multisampled;\r\n    }\r\n\r\n    /**\r\n     * Create canvas texture.\r\n     * @param pWidth - Texture width.\r\n     * @param pHeight - Texture height.\r\n     */\r\n    public createCanvasTexture(pWidth: number, pHeight: number): CanvasTexture {\r\n        // Create and set canvas sizes.\r\n        const lCanvasTexture: CanvasTexture = new CanvasTexture(this.device, this);\r\n        lCanvasTexture.width = pWidth;\r\n        lCanvasTexture.height = pHeight;\r\n\r\n        return lCanvasTexture;\r\n    }\r\n\r\n    /**\r\n     * Create frame buffer texture.\r\n     * @param pWidth - Texture width.\r\n     * @param pHeight - Texture height.\r\n     * @param pDepth - Texture depth.\r\n     */\r\n    public createFrameBufferTexture(pWidth: number, pHeight: number, pDepth: number): FrameBufferTexture {\r\n        // Create and set frame buffer sizes.\r\n        const lFrameBufferTexture: FrameBufferTexture = new FrameBufferTexture(this.device, this);\r\n        lFrameBufferTexture.width = pWidth;\r\n        lFrameBufferTexture.height = pHeight;\r\n        lFrameBufferTexture.depth = pDepth;\r\n\r\n        return lFrameBufferTexture;\r\n    }\r\n\r\n    /**\r\n     * Create texture from images.\r\n     * @param pSourceList - Image source list.\r\n     */\r\n    public async createImageTexture(...pSourceList: Array<string>): Promise<ImageTexture> {\r\n        // Create and load images async.\r\n        const lImageTexture: ImageTexture = new ImageTexture(this.device, this);\r\n        await lImageTexture.load(...pSourceList);\r\n\r\n        return lImageTexture;\r\n    }\r\n\r\n    /**\r\n     * Create texture from a video source.\r\n     * @param pSource - Video source.\r\n     */\r\n    public createVideoTexture(pSource: string): VideoTexture {\r\n        // Create and set video source.\r\n        const lVideoTexture: VideoTexture = new VideoTexture(this.device, this);\r\n        lVideoTexture.source = pSource;\r\n\r\n        return lVideoTexture;\r\n    }\r\n}\r\n\r\nexport interface TextureMemoryLayoutParameter extends MemoryLayoutParameter {\r\n    dimension: TextureDimension;\r\n    format: TextureFormat;\r\n    bindType: TextureBindType;\r\n    multisampled: boolean;\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/gpu-object';\r\nimport { BaseBufferMemoryLayout } from '../../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from '../../memory_layout/buffer/struct-buffer-memory-layout';\r\nimport { UpdateReason } from '../../gpu/gpu-object-update-reason';\r\nimport { LinearBufferMemoryLayout } from '../../memory_layout/buffer/linear-buffer-memory-layout';\r\nimport { VertexParameter } from './vertex-parameter';\r\n\r\nexport class VertexParameterLayout extends GpuObject {\r\n    private readonly mParameter: Dictionary<number, LinearBufferMemoryLayout>;\r\n    private readonly mParameterNames: Dictionary<string, number>;\r\n\r\n    /**\r\n     * Parameter count.\r\n     */\r\n    public get count(): number {\r\n        // Highest index plus one.\r\n        return Math.max(...this.mParameter.keys()) + 1;\r\n    }\r\n\r\n    /**\r\n     * Get all parameter names.\r\n     */\r\n    public get parameter(): Array<string> {\r\n        return [...this.mParameterNames.keys()];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pLayout - Buffer layout of parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n        this.mParameter = new Dictionary<number, LinearBufferMemoryLayout>();\r\n        this.mParameterNames = new Dictionary<string, number>();\r\n    }\r\n\r\n    /**\r\n     * Add parameter layout.\r\n     * @param pName - Parameter name.\r\n     * @param pLayout - Parameter layout.\r\n     */\r\n    public add(pLayout: StructBufferMemoryLayout | LinearBufferMemoryLayout): void {\r\n        // Find all childs of layout with locations.\r\n        const lLocationLayoutList: Array<LinearBufferMemoryLayout> = new Array<LinearBufferMemoryLayout>();\r\n        if (pLayout instanceof StructBufferMemoryLayout) {\r\n            lLocationLayoutList.push(...pLayout.locationLayouts());\r\n        } else if (pLayout instanceof LinearBufferMemoryLayout) {\r\n            lLocationLayoutList.push(pLayout);\r\n        }\r\n\r\n        // Validate existing parameter layout.\r\n        if (lLocationLayoutList.length === 0) {\r\n            throw new Exception('Pipeline parameter layout needs a parameter index.', this);\r\n        }\r\n\r\n        // Add each location as seperate parameter.\r\n        for (const lLocationLayout of lLocationLayoutList) {\r\n            // Validate existing parameter index.\r\n            if (lLocationLayout.locationIndex === null) {\r\n                throw new Exception('Pipeline parameter layout needs a parameter index.', this);\r\n            }\r\n\r\n            // Do not override existing parameter.\r\n            if (this.mParameter.has(lLocationLayout.locationIndex)) {\r\n                throw new Exception('Parameter does already exist.', this);\r\n            }\r\n\r\n            // Generate name by iterating its parents.\r\n            let lName: string = lLocationLayout.name;\r\n            let lParentLayout: BaseBufferMemoryLayout | null = lLocationLayout;\r\n            while ((lParentLayout = lParentLayout.parent) !== null) {\r\n                // Extend current name by its parent name.\r\n                lName = `${lParentLayout.name}.${lName}`;\r\n            }\r\n\r\n            // Link name with index and index with layout.\r\n            this.mParameterNames.set(lName, lLocationLayout.locationIndex);\r\n            this.mParameter.set(lLocationLayout.locationIndex, lLocationLayout);\r\n\r\n            // Register change listener for layout changes.\r\n            lLocationLayout.addUpdateListener(() => {\r\n                this.triggerAutoUpdate(UpdateReason.ChildData);\r\n            });\r\n        }\r\n\r\n        // Trigger update.\r\n        this.triggerAutoUpdate(UpdateReason.ChildData);\r\n    }\r\n\r\n    /**\r\n     * Create vertex parameters from layout.\r\n     * @param pIndexData - Index data.\r\n     */\r\n    public createData(pIndexData: Array<number>): VertexParameter {\r\n        return new VertexParameter(this.device, this, pIndexData);\r\n    }\r\n\r\n    /**\r\n     * Get index of parameter.\r\n     * @param pName - Parameter name.\r\n     */\r\n    public getIndexOf(pName: string): number {\r\n        // Validate name.\r\n        if (!this.mParameterNames.has(pName)) {\r\n            throw new Exception(`Parameter name \"${pName}\" does not exist`, this);\r\n        }\r\n\r\n        return this.mParameterNames.get(pName)!;\r\n    }\r\n\r\n    /**\r\n     * Get layout of name.\r\n     * @param pName - Parameter name.\r\n     */\r\n    public getLayoutOf(pName: string): LinearBufferMemoryLayout {\r\n        const lIndex: number = this.getIndexOf(pName);\r\n\r\n        // Layout should exist when it name exists.\r\n        return this.mParameter.get(lIndex)!;\r\n    }\r\n}\r\n\r\n","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { AccessMode } from '../../../constant/access-mode.enum';\r\nimport { BufferBindType } from '../../../constant/buffer-bind-type.enum';\r\nimport { BufferPrimitiveFormat } from '../../../constant/buffer-primitive-format';\r\nimport { ComputeStage } from '../../../constant/compute-stage.enum';\r\nimport { GpuBuffer } from '../../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/gpu-object';\r\nimport { ArrayBufferMemoryLayout } from '../../memory_layout/buffer/array-buffer-memory-layout';\r\nimport { LinearBufferMemoryLayout } from '../../memory_layout/buffer/linear-buffer-memory-layout';\r\nimport { VertexParameterLayout } from './vertex-parameter-layout';\r\n\r\nexport class VertexParameter extends GpuObject {\r\n    private readonly mData: Dictionary<string, GpuBuffer<Float32Array>>;\r\n    private readonly mIndexBuffer: GpuBuffer<Uint32Array>;\r\n    private readonly mLayout: VertexParameterLayout;\r\n\r\n    /**\r\n     * Get index buffer.\r\n     */\r\n    public get indexBuffer(): GpuBuffer<Uint32Array> {\r\n        return this.mIndexBuffer;\r\n    }\r\n\r\n    /**\r\n     * Get parameter layout.\r\n     */\r\n    public get layout(): VertexParameterLayout {\r\n        return this.mLayout;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device reference.\r\n     * @param pVertexParameterLayout - Parameter layout.\r\n     * @param pIndices - Index buffer data.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pVertexParameterLayout: VertexParameterLayout, pIndices: Array<number>) {\r\n        super(pDevice);\r\n\r\n        // Set vertex parameter layout.\r\n        this.mLayout = pVertexParameterLayout;\r\n        this.mData = new Dictionary<string, GpuBuffer<Float32Array>>();\r\n\r\n        // Create index layout.\r\n        const lIndexLayout: LinearBufferMemoryLayout = new LinearBufferMemoryLayout(pDevice, {\r\n            primitiveFormat: BufferPrimitiveFormat.Uint,\r\n            bindType: BufferBindType.Index,\r\n            size: 4,\r\n            alignment: 4,\r\n            locationIndex: null,\r\n            access: AccessMode.Read,\r\n            bindingIndex: null,\r\n            name: '',\r\n            visibility: ComputeStage.Vertex\r\n        });\r\n\r\n        // Create index buffer layout.\r\n        const lIndexBufferLayout: ArrayBufferMemoryLayout = new ArrayBufferMemoryLayout(pDevice, {\r\n            innerType: lIndexLayout,\r\n            arraySize: pIndices.length,\r\n            bindType: BufferBindType.Index,\r\n            access: AccessMode.Read,\r\n            bindingIndex: null,\r\n            name: '',\r\n            visibility: ComputeStage.Vertex\r\n        });\r\n\r\n        // Create index buffer.\r\n        this.mIndexBuffer = lIndexBufferLayout.create(new Uint32Array(pIndices));\r\n    }\r\n\r\n    /**\r\n     * Get parameter buffer.\r\n     * @param pName - Parameter name.\r\n     */\r\n    public get(pName: string): GpuBuffer<Float32Array> {\r\n        // Validate.\r\n        if(!this.mData.has(pName)){\r\n            throw new Exception(`Vertex parameter \"${pName}\" not found.`, this);\r\n        }\r\n\r\n        return this.mData.get(pName)!;\r\n    }\r\n\r\n    /**\r\n     * Set parameter data.\r\n     * @param pName - Parameter name.\r\n     * @param pData - Parameter data.\r\n     */\r\n    public set(pName: string, pData: Array<number>): void {\r\n        const lBufferLayout: LinearBufferMemoryLayout = this.mLayout.getLayoutOf(pName);\r\n\r\n        // TODO: Load typed array from layout format.\r\n        const lParameterBuffer: GpuBuffer<Float32Array> = lBufferLayout.create(new Float32Array(pData));\r\n\r\n        // Save gpu buffer in correct index.\r\n        this.mData.set(pName, lParameterBuffer);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { TextureGroup } from './texture-group';\r\nimport { GpuObject } from '../../gpu/gpu-object';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { FrameBufferTexture } from '../../texture/frame-buffer-texture';\r\nimport { CanvasTexture } from '../../texture/canvas-texture';\r\nimport { UpdateReason } from '../../gpu/gpu-object-update-reason';\r\nimport { TextureOperation } from '../../../constant/texture-operation';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\n\r\n\r\nexport class RenderTargets extends GpuObject<'renderTargets'> {\r\n    private readonly mColorBuffer: Array<RenderTargetColorTexture>;\r\n    private mDepthBuffer: RenderTargetDepthStencilTexture | null;\r\n    private readonly mTextureGroup: TextureGroup;\r\n\r\n    /**\r\n     * Get all color buffer.\r\n     */\r\n    public get colorBuffer(): Array<RenderTargetColorTexture> {\r\n        return this.mColorBuffer;\r\n    }\r\n\r\n    /**\r\n     * Get depth stencil buffer.\r\n     */\r\n    public get depthStencilBuffer(): RenderTargetDepthStencilTexture | null {\r\n        return this.mDepthBuffer;\r\n    }\r\n\r\n    /**\r\n     * Render targets multisamples count.\r\n     */\r\n    public get multisampleCount(): number {\r\n        return this.mTextureGroup.multiSampleLevel;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pTextureGroup - Texture group.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pTextureGroup: TextureGroup) {\r\n        super(pDevice);\r\n\r\n        this.mTextureGroup = pTextureGroup;\r\n        this.mColorBuffer = new Array<RenderTargetColorTexture>();\r\n\r\n        this.mDepthBuffer = null;\r\n    }\r\n\r\n    public addColorBuffer(pBufferName: string, pClearValue: number, pLoadOp: TextureOperation, pStoreOp: TextureOperation, pTargetName?: string): void {\r\n        // Read texture buffer from texture group.\r\n        const lColorBuffer: FrameBufferTexture = this.mTextureGroup.getBufferTextureOf(pBufferName);\r\n\r\n        // Read potential target buffer.\r\n        let lTargetBuffer: CanvasTexture | null = null;\r\n        if (pTargetName) {\r\n            lTargetBuffer = this.mTextureGroup.getTargetTextureOf(pTargetName);\r\n\r\n            // Add update listener.\r\n            lTargetBuffer.addUpdateListener(() => {\r\n                this.triggerAutoUpdate(UpdateReason.ChildData);\r\n            });\r\n        }\r\n\r\n        // Add update listener.\r\n        lColorBuffer.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n\r\n        this.mColorBuffer.push({\r\n            texture: lColorBuffer,\r\n            clearValue: pClearValue,\r\n            loadOperation: pLoadOp,\r\n            storeOperation: pStoreOp,\r\n            resolveTarget: lTargetBuffer\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set depth and or stencil buffer.\r\n     * @param pBufferName - Buffer Texture name.\r\n     * @param pClearValue - Clear value in hex 0xffffff.\r\n     * @param pLoadOp - Operation on load.\r\n     * @param pStoreOp - Operation on store.\r\n     */\r\n    public setDepthStencilBuffer(pBufferName: string, pClearValue: number, pLoadOp: TextureOperation, pStoreOp: TextureOperation): void {\r\n        // Read texture buffer from texture group.\r\n        const lDepthBuffer: FrameBufferTexture = this.mTextureGroup.getBufferTextureOf(pBufferName);\r\n\r\n        // Validate depth or stencil format.\r\n        switch (lDepthBuffer.memoryLayout.format) {\r\n            case TextureFormat.Depth:\r\n            case TextureFormat.DepthStencil:\r\n            case TextureFormat.Stencil: {\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Exception('Depth and or stencil buffer needs to have depth or stencil texture formats.', this);\r\n            }\r\n        }\r\n\r\n        // Update depth buffer update listener.\r\n        if (this.mDepthBuffer) {\r\n            this.mDepthBuffer.texture.removeUpdateListener(this.onDepthBufferUpdate);\r\n        }\r\n        lDepthBuffer.addUpdateListener(this.onDepthBufferUpdate);\r\n\r\n        // Set new buffer.\r\n        this.mDepthBuffer = {\r\n            texture: lDepthBuffer,\r\n            depthClearValue: pClearValue,\r\n            depthLoadOperation: pLoadOp,\r\n            depthStoreOperation: pStoreOp,\r\n            stencilClearValue: pClearValue,\r\n            stencilLoadOperation: pLoadOp,\r\n            stencilStoreOperation: pStoreOp,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Call auto update onbuffer data update.\r\n     */\r\n    private onDepthBufferUpdate(): void {\r\n        this.triggerAutoUpdate(UpdateReason.ChildData);\r\n    }\r\n}\r\n\r\ntype RenderTargetColorTexture = {\r\n    texture: FrameBufferTexture,\r\n    clearValue: number;\r\n    loadOperation: TextureOperation;\r\n    storeOperation: TextureOperation;\r\n    resolveTarget: CanvasTexture | null;\r\n};\r\n\r\ntype RenderTargetDepthStencilTexture = {\r\n    texture: FrameBufferTexture,\r\n    depthClearValue: number;\r\n    depthLoadOperation: TextureOperation;\r\n    depthStoreOperation: TextureOperation;\r\n    stencilClearValue: number;\r\n    stencilLoadOperation: TextureOperation;\r\n    stencilStoreOperation: TextureOperation;\r\n};","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { AccessMode } from '../../../constant/access-mode.enum';\r\nimport { ComputeStage } from '../../../constant/compute-stage.enum';\r\nimport { TextureBindType } from '../../../constant/texture-bind-type.enum';\r\nimport { TextureDimension } from '../../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/gpu-object';\r\nimport { TextureMemoryLayout } from '../../memory_layout/texture-memory-layout';\r\nimport { CanvasTexture } from '../../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../../texture/frame-buffer-texture';\r\nimport { RenderTargets } from './render-targets';\r\n\r\nexport class TextureGroup extends GpuObject {\r\n    private readonly mBufferTextures: Dictionary<string, FrameBufferTexture>;\r\n    private readonly mMultisampleLevel: number;\r\n    private readonly mSize: TextureSize;\r\n    private readonly mTargetTextures: Dictionary<string, CanvasTexture>;\r\n\r\n    /**\r\n     * Render target height.\r\n     */\r\n    public get height(): number {\r\n        return this.mSize.height;\r\n    } set height(pValue: number) {\r\n        this.resize(this.mSize.width, pValue);\r\n    }\r\n\r\n    /**\r\n     * Render target multisample level.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return this.mMultisampleLevel;\r\n    }\r\n\r\n    /**\r\n     * Render target height.\r\n     */\r\n    public get width(): number {\r\n        return this.mSize.width;\r\n    } set width(pValue: number) {\r\n        this.resize(pValue, this.mSize.height);\r\n    }\r\n\r\n    /**\r\n     * Constuctor.\r\n     * @param pDevice - Gpu device reference.\r\n     * @param pWidth - Textures width.\r\n     * @param pHeight - Textures height.\r\n     * @param pMultisampleLevel - Multisample level of all buffer textures.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pWidth: number, pHeight: number, pMultisampleLevel: number) {\r\n        super(pDevice);\r\n\r\n        // Set \"fixed\" \r\n        this.mSize = { width: pWidth, height: pHeight };\r\n        this.mMultisampleLevel = pMultisampleLevel;\r\n\r\n        // Saved.\r\n        this.mBufferTextures = new Dictionary<string, FrameBufferTexture>();\r\n        this.mTargetTextures = new Dictionary<string, CanvasTexture>();\r\n    }\r\n\r\n    /**\r\n     * Add buffer texture to group.\r\n     * Uses multisample values.\r\n     * @param pName - Texture name.\r\n     * @param pType - Texture type.\r\n     */\r\n    public addBuffer(pName: string, pType: RenderBufferType): FrameBufferTexture {\r\n        // Validate existing buffer textures.\r\n        if (this.mBufferTextures.has(pName)) {\r\n            throw new Exception(`Buffer texture \"${pName}\" already exists.`, this);\r\n        }\r\n\r\n        // Create correct memory layout for texture type.\r\n        let lMemoryLayout: TextureMemoryLayout;\r\n        switch (pType) {\r\n            case 'Color': {\r\n                lMemoryLayout = this.createColorMemoryLayout(this.mMultisampleLevel > 1);\r\n                break;\r\n            }\r\n            case 'Depth': {\r\n                lMemoryLayout = this.createDepthMemoryLayout(this.mMultisampleLevel > 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Create new texture and assign multisample level.\r\n        const lTexture: FrameBufferTexture = lMemoryLayout.createFrameBufferTexture(this.mSize.height, this.mSize.width, 1);\r\n        lTexture.multiSampleLevel = this.mMultisampleLevel;\r\n\r\n        // Set buffer texture.\r\n        this.mBufferTextures.set(pName, lTexture);\r\n\r\n        return lTexture;\r\n    }\r\n\r\n    /**\r\n     * Add target texture to group.\r\n     * Ignores multisample values.\r\n     * @param pName - Texture name.\r\n     * @param pType - Texture type.\r\n     */\r\n    public addTarget(pName: string): CanvasTexture {\r\n        // Validate existing target textures.\r\n        if (this.mTargetTextures.has(pName)) {\r\n            throw new Exception(`Target texture \"${pName}\" already exists.`, this);\r\n        }\r\n\r\n        // Create correct memory layout for texture type.\r\n        const lMemoryLayout: TextureMemoryLayout = this.createCanvasMemoryLayout();\r\n        const lTexture: CanvasTexture = lMemoryLayout.createCanvasTexture(this.mSize.height, this.mSize.width);\r\n\r\n        // Set target texture.\r\n        this.mTargetTextures.set(pName, lTexture);\r\n\r\n        return lTexture;\r\n    }\r\n\r\n    /**\r\n     * Create render targets.\r\n     */\r\n    public create(): RenderTargets {\r\n        return new RenderTargets(this.device, this);\r\n    }\r\n\r\n    /**\r\n     * Get buffer texture.\r\n     * @param pName - texture name.\r\n     */\r\n    public getBufferTextureOf(pName: string): FrameBufferTexture {\r\n        // Validate existing canvas.\r\n        if (this.mBufferTextures.has(pName)) {\r\n            throw new Exception(`Buffer texture \"${pName}\" not found.`, this);\r\n        }\r\n\r\n        return this.mBufferTextures.get(pName)!;\r\n    }\r\n\r\n    /**\r\n     * Get target texture.\r\n     * @param pName - texture name.\r\n     */\r\n    public getTargetTextureOf(pName: string): CanvasTexture {\r\n        // Validate existing canvas.\r\n        if (this.mTargetTextures.has(pName)) {\r\n            throw new Exception(`Target texture \"${pName}\" not found.`, this);\r\n        }\r\n\r\n        return this.mTargetTextures.get(pName)!;\r\n    }\r\n\r\n    /**\r\n     * Create layout for a canvas texture.\r\n     */\r\n    private createCanvasMemoryLayout(): TextureMemoryLayout {\r\n        return new TextureMemoryLayout(this.device, {\r\n            dimension: TextureDimension.TwoDimension,\r\n            format: TextureFormat.RedGreenBlueAlpha,\r\n            bindType: TextureBindType.RenderTarget,\r\n            multisampled: false,\r\n            access: AccessMode.Write | AccessMode.Read,\r\n            bindingIndex: null,\r\n            name: '',\r\n            visibility: ComputeStage.Fragment\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create layout for a color texture.\r\n     */\r\n    private createColorMemoryLayout(pMultisampled: boolean): TextureMemoryLayout {\r\n        return new TextureMemoryLayout(this.device, {\r\n            dimension: TextureDimension.TwoDimension,\r\n            format: TextureFormat.RedGreenBlueAlpha,\r\n            bindType: TextureBindType.RenderTarget,\r\n            multisampled: pMultisampled,\r\n            access: AccessMode.Write | AccessMode.Read,\r\n            bindingIndex: null,\r\n            name: '',\r\n            visibility: ComputeStage.Fragment\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create layout for a depth texture.\r\n     */\r\n    private createDepthMemoryLayout(pMultisampled: boolean): TextureMemoryLayout {\r\n        return new TextureMemoryLayout(this.device, {\r\n            dimension: TextureDimension.TwoDimension,\r\n            format: TextureFormat.Depth,\r\n            bindType: TextureBindType.RenderTarget,\r\n            multisampled: pMultisampled,\r\n            access: AccessMode.Write | AccessMode.Read,\r\n            bindingIndex: null,\r\n            name: '',\r\n            visibility: ComputeStage.Fragment\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resize all textures.\r\n     * @param pWidth - Textures width.\r\n     * @param pHeight - Textures height.\r\n     */\r\n    private resize(pWidth: number, pHeight: number): void {\r\n        // Update size.\r\n        this.mSize.width = pWidth;\r\n        this.mSize.width = pHeight;\r\n\r\n        // Update buffer texture sizes.\r\n        for (const lTexture of this.mBufferTextures.values()) {\r\n            lTexture.height = pHeight;\r\n            lTexture.height = pWidth;\r\n        }\r\n\r\n        // Update target texture sizes.\r\n        for (const lTexture of this.mTargetTextures.values()) {\r\n            lTexture.height = pHeight;\r\n            lTexture.height = pWidth;\r\n        }\r\n    }\r\n}\r\n\r\ntype TextureSize = { width: number; height: number; };\r\n\r\ntype RenderBufferType = 'Color' | 'Depth';","import { CompareFunction } from '../../constant/compare-function.enum';\r\nimport { PrimitiveCullMode } from '../../constant/primitive-cullmode';\r\nimport { PrimitiveFrontFace } from '../../constant/primitive-front-face';\r\nimport { PrimitiveTopology } from '../../constant/primitive-topology';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { VertexFragmentShader } from '../shader/vertex-fragment-shader';\r\nimport { RenderTargets } from './target/render-targets';\r\n\r\nexport class VertexFragmentPipeline extends GpuObject<'vertexFragmentPipeline'> {\r\n    private mDepthCompare: CompareFunction;\r\n    private mDepthWriteEnabled: boolean;\r\n    private mPrimitiveCullMode: PrimitiveCullMode;\r\n    private mPrimitiveFrontFace: PrimitiveFrontFace;\r\n    private mPrimitiveTopology: PrimitiveTopology;\r\n    private readonly mRenderTargets: RenderTargets;\r\n    private readonly mShader: VertexFragmentShader;\r\n\r\n    /**\r\n     * Set depth compare function.\r\n     */\r\n    public get depthCompare(): CompareFunction {\r\n        return this.mDepthCompare;\r\n    } set depthCompare(pValue: CompareFunction) {\r\n        this.mDepthCompare = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Defines which polygon orientation will be culled.\r\n     */\r\n    public get primitiveCullMode(): PrimitiveCullMode {\r\n        return this.mPrimitiveCullMode;\r\n    } set primitiveCullMode(pValue: PrimitiveCullMode) {\r\n        this.mPrimitiveCullMode = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Defines which polygons are considered front-facing.\r\n     */\r\n    public get primitiveFrontFace(): PrimitiveFrontFace {\r\n        return this.mPrimitiveFrontFace;\r\n    } set primitiveFrontFace(pValue: PrimitiveFrontFace) {\r\n        this.mPrimitiveFrontFace = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * The type of primitive to be constructed from the vertex inputs.\r\n     */\r\n    public get primitiveTopology(): PrimitiveTopology {\r\n        return this.mPrimitiveTopology;\r\n    } set primitiveTopology(pValue: PrimitiveTopology) {\r\n        this.mPrimitiveTopology = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Render targets.\r\n     */\r\n    public get renderTargets(): RenderTargets {\r\n        return this.mRenderTargets;\r\n    }\r\n\r\n    /**\r\n     * Pipeline shader.\r\n     */\r\n    public get shader(): VertexFragmentShader {\r\n        return this.mShader;\r\n    }\r\n\r\n    /**\r\n     * Set depth write enabled / disabled.\r\n     */\r\n    public get writeDepth(): boolean {\r\n        return this.mDepthWriteEnabled;\r\n    } set writeDepth(pValue: boolean) {\r\n        this.mDepthWriteEnabled = pValue;\r\n\r\n        // Set data changed flag.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * Set default data.\r\n     * @param pDevice - Device.\r\n     * @param pShader - Pipeline shader.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pShader: VertexFragmentShader, pRenderTargets: RenderTargets) {\r\n        super(pDevice);\r\n        this.mShader = pShader;\r\n        this.mRenderTargets = pRenderTargets;\r\n\r\n        // Listen for render target and shader changes.\r\n        pShader.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n        pRenderTargets.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n\r\n        // Depth default settings.\r\n        this.mDepthCompare = CompareFunction.Less;\r\n        this.mDepthWriteEnabled = true;\r\n\r\n        // Primitive default settings.\r\n        this.mPrimitiveTopology = PrimitiveTopology.TriangleList;\r\n        this.mPrimitiveCullMode = PrimitiveCullMode.Back;\r\n        this.mPrimitiveFrontFace = PrimitiveFrontFace.ClockWise;\r\n    }\r\n}","import { Dictionary } from '@kartoffelgames/core.data';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { BindDataGroupLayout } from '../binding/bind-data-group-layout';\r\nimport { PipelineDataLayout } from '../binding/pipeline-data-layout';\r\nimport { GeneratorFactoryMap } from '../generator/base-generator-factory';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { BaseShaderInterpreter, ShaderFunction } from './interpreter/base-shader-interpreter';\r\n\r\n// TODO: Split into Compute- and RenderShader AND ModuleShader(Block any entry point.)\r\n// TODO: Add ShaderModules. With own PreCompile command. (import/if/define ....)\r\n// TODO: Maybe own language??? \r\n\r\nexport abstract class BaseShader<TGpuObjectKey extends keyof GeneratorFactoryMap> extends GpuObject<TGpuObjectKey> {\r\n    private static readonly mBindGroupLayoutCache: Dictionary<string, BindDataGroupLayout> = new Dictionary<string, BindDataGroupLayout>();\r\n\r\n    private readonly mPipelineLayout: PipelineDataLayout;\r\n    private readonly mShaderInformation: BaseShaderInterpreter;\r\n\r\n    /**\r\n     * Shader information.\r\n     */\r\n    public get information(): BaseShaderInterpreter {\r\n        return this.mShaderInformation;\r\n    }\r\n\r\n    /**\r\n     * Shader pipeline layout.\r\n     */\r\n    public get pipelineLayout(): PipelineDataLayout {\r\n        return this.mPipelineLayout;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pSource: string) {\r\n        super(pDevice);\r\n\r\n        // Create shader information for source.\r\n        this.mShaderInformation = this.device.shaderInterpreter.interpret(pSource);\r\n\r\n        // Generate layout.\r\n        this.mPipelineLayout = new PipelineDataLayout(this.device);\r\n        for (const [lGroupIndex, lBindingList] of this.mShaderInformation.bindings) {\r\n            // Create group layout and add each binding.\r\n            let lGroupLayout: BindDataGroupLayout = new BindDataGroupLayout(this.device);\r\n            for (const lBinding of lBindingList) {\r\n                lGroupLayout.addBinding(lBinding, lBinding.name);\r\n            }\r\n\r\n            // Read from cache.\r\n            if (BaseShader.mBindGroupLayoutCache.has(lGroupLayout.identifier)) {\r\n                lGroupLayout = BaseShader.mBindGroupLayoutCache.get(lGroupLayout.identifier)!;\r\n            }\r\n\r\n            // Cache group layout.\r\n            BaseShader.mBindGroupLayoutCache.set(lGroupLayout.identifier, lGroupLayout);\r\n\r\n            // Add group to pipeline.\r\n            this.mPipelineLayout.addGroupLayout(lGroupIndex, lGroupLayout);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get entry point name of compute stage.\r\n     * @param pStage - Compute stage of entry point.\r\n     */\r\n    public getEntryPoints(pStage: ComputeStage): Array<string> {\r\n        // Ignore shader function generic. Does not matter for this function. Use only function names.\r\n        const lEntryPointFunctions: Array<ShaderFunction> = this.mShaderInformation.entryPoints.get(pStage) ?? new Array<ShaderFunction>();\r\n        return lEntryPointFunctions.map((pFunction: ShaderFunction) => { return pFunction.name; });\r\n    }\r\n}\r\n\r\n","import { Dictionary, Exception } from '@kartoffelgames/core.data';\r\nimport { ComputeStage } from '../../../constant/compute-stage.enum';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseMemoryLayout } from '../../memory_layout/base-memory-layout';\r\nimport { BufferPrimitiveFormat } from '../../../constant/buffer-primitive-format';\r\n\r\nexport abstract class BaseShaderInterpreter {\r\n    private readonly mBindings: Dictionary<number, Array<BaseMemoryLayout>>;\r\n    private readonly mDevice: GpuDevice;\r\n    private readonly mEntryPoints: Dictionary<ComputeStage, Array<ShaderFunction>>;\r\n    private readonly mShaderFunctions: Dictionary<string, ShaderFunction>;\r\n    private readonly mShaderStructDefinitions: Dictionary<string, ShaderStructDefinition>;\r\n    private readonly mShaderTypeAliases: Dictionary<string, ShaderTypeAlias>;\r\n    private readonly mShaderTypes: Dictionary<string, ShaderTypeDefinition>;\r\n    private readonly mShaderValue: Dictionary<string, ShaderValue>;\r\n    private readonly mSourceCode: string;\r\n\r\n    /**\r\n     * Shader bindings. Grouped by group.\r\n     */\r\n    public get bindings(): Map<number, Array<BaseMemoryLayout>> {\r\n        return this.mBindings;\r\n    }\r\n\r\n    /**\r\n     * Shader entry points.\r\n     */\r\n    public get entryPoints(): Map<ComputeStage, Array<ShaderFunction>> {\r\n        return this.mEntryPoints;\r\n    }\r\n\r\n    /**\r\n     * Shader source code.\r\n     */\r\n    public get source(): string {\r\n        return this.mSourceCode;\r\n    }\r\n\r\n    /**\r\n     * Gpu device.\r\n     */\r\n    protected get device(): GpuDevice {\r\n        return this.mDevice;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pSourceCode - Shader source code.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pSourceCode: string) {\r\n        this.mDevice = pDevice;\r\n        this.mSourceCode = pSourceCode;\r\n\r\n        // Setup all shader types.\r\n        this.mShaderTypes = new Dictionary<string, ShaderTypeDefinition>();\r\n        this.mShaderTypeAliases = new Dictionary<string, ShaderTypeAlias>();\r\n        this.setupShaderTypes((pType: ShaderTypeDefinition) => {\r\n            this.mShaderTypes.set(pType.name, pType);\r\n\r\n            // Map all aliases of type.\r\n            for (const lVariant of pType.variants) {\r\n                // No aliases specified.\r\n                if (!lVariant.aliases) {\r\n                    continue;\r\n                }\r\n\r\n                // Map each alias with its generics.\r\n                for (const lAlias of lVariant.aliases) {\r\n                    this.mShaderTypeAliases.set(lAlias, {\r\n                        type: pType.name,\r\n                        generics: lVariant.generic ?? []\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        // Read defintions.\r\n        const lShaderFunctionDefinitionList: Array<ShaderFunctionDefinition> = this.fetchFunctionDefinitions(pSourceCode);\r\n        const lShaderValueDefinitionList: Array<ShaderValueDefinition> = this.fetchValueDefinitions(pSourceCode);\r\n        const lShaderStructDefinitionList: Array<ShaderStructDefinition> = this.fetchStructDefinitions(pSourceCode);\r\n\r\n        // Map shader structs.\r\n        this.mShaderStructDefinitions = new Dictionary<string, ShaderStructDefinition>();\r\n        for (const lStructDefinition of lShaderStructDefinitionList) {\r\n            this.mShaderStructDefinitions.set(lStructDefinition.name, lStructDefinition);\r\n        }\r\n\r\n        // Meta data storages placeholders.\r\n        this.mShaderFunctions = this.convertFunctions(lShaderFunctionDefinitionList);\r\n        this.mShaderValue = this.convertValues(lShaderValueDefinitionList);\r\n\r\n        // Set entry point and bindings.\r\n        this.mEntryPoints = this.readEntryPoints();\r\n        this.mBindings = this.readBindings();\r\n    }\r\n\r\n    /**\r\n     * Get shader function.\r\n     * @param pName - Function name.\r\n     */\r\n    public getFunction(pName: string): ShaderFunction | null {\r\n        return this.mShaderFunctions.get(pName) ?? null;\r\n    }\r\n\r\n    /**\r\n     * Create struct from value definition.\r\n     * @param pValueDefinition - value definition.\r\n     */\r\n    protected structFromDefinition(pStructDefinition: ShaderStructDefinition): ShaderStruct {\r\n        const lShaderStruct: ShaderStruct = {\r\n            name: pStructDefinition.name,\r\n            properties: new Array<ShaderValue>()\r\n        };\r\n\r\n        // Convert all properties to struct values.\r\n        for (const lProperty of pStructDefinition.properies) {\r\n            lShaderStruct.properties.push(this.valueFromDefinition(lProperty));\r\n        }\r\n\r\n        return lShaderStruct;\r\n    }\r\n\r\n    /**\r\n     * Get type of type, alias or struct name\r\n     * @param pTypeName - Type, alias or struct name.\r\n     * @param pGenericNames - Generics of type. Only valid on type names.\r\n     */\r\n    protected typeFor(pTypeName: string, pGenericNames: Array<string> = []): ShaderType {\r\n        // Search for regular type.\r\n        if (this.mShaderTypes.has(pTypeName)) {\r\n            const lRegularType: ShaderTypeDefinition = this.mShaderTypes.get(pTypeName)!;\r\n            for (const lVariant of lRegularType.variants) {\r\n                const lVariantGenerics: Array<string> = lVariant.generic ?? [];\r\n\r\n                // Validate generics.\r\n                if (lVariantGenerics.length !== pGenericNames.length) {\r\n                    continue;\r\n                }\r\n\r\n                // Validate each generic value.\r\n                let lGenericsMatches: boolean = true;\r\n                for (let lIndex: number = 0; lIndex < lVariantGenerics.length; lIndex++) {\r\n                    const lTargetGeneric: string = lVariantGenerics[lIndex];\r\n                    const lSourceGeneric: string = pGenericNames[lIndex];\r\n\r\n                    // Matches any on wildcard or strict match otherwise.\r\n                    if (lTargetGeneric !== '*' && lTargetGeneric !== lSourceGeneric) {\r\n                        lGenericsMatches = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Generics does not match. Search next variant.\r\n                if (!lGenericsMatches) {\r\n                    continue;\r\n                }\r\n\r\n                return {\r\n                    typeName: lRegularType.name,\r\n                    type: 'buildIn',\r\n                    size: lVariant.size,\r\n                    align: lVariant.align,\r\n                    primitiveFormat: lVariant.format ?? BufferPrimitiveFormat.Unsupported\r\n                };\r\n            }\r\n        }\r\n\r\n        // No gernics allows after this point.\r\n        if (pGenericNames.length > 0) {\r\n            throw new Exception(`No generics allowed for struct or alias types. Regular type \"${pTypeName}<${pGenericNames.toString()}>\" not found.`, this);\r\n        }\r\n\r\n        // Search alias type.\r\n        if (this.mShaderTypeAliases.has(pTypeName)) {\r\n            const lAliasType: ShaderTypeAlias = this.mShaderTypeAliases.get(pTypeName)!;\r\n            return this.typeFor(lAliasType.type, lAliasType.generics);\r\n        }\r\n\r\n        // Search for struct.\r\n        if (this.mShaderStructDefinitions.has(pTypeName)) {\r\n            const lStructDefinition: ShaderStructDefinition = this.mShaderStructDefinitions.get(pTypeName)!;\r\n            return {\r\n                type: 'struct',\r\n                struct: this.structFromDefinition(lStructDefinition)\r\n            };\r\n        }\r\n\r\n        // Nothing found.\r\n        throw new Exception(`Type \"${pTypeName}\" not found.`, this);\r\n    }\r\n\r\n    /**\r\n     * Get visibility of global name.\r\n     * @param pName - Name of a global. \r\n     */\r\n    protected visibilityOf(pName: string): ComputeStage {\r\n        let lComputeStage: ComputeStage = <ComputeStage>0;\r\n\r\n        for (const lShaderFunction of this.searchEntryPointsOf(pName, new Set<string>())) {\r\n            lComputeStage |= lShaderFunction.entryPoints;\r\n        }\r\n\r\n        return lComputeStage;\r\n    }\r\n\r\n    /**\r\n     * Get all functions.\r\n     * @param pSourceCode - Source code of shader.\r\n     */\r\n    private convertFunctions(pFunctionDefinitions: Array<ShaderFunctionDefinition>): Dictionary<string, ShaderFunction> {\r\n        const lShaderFunctions: Dictionary<string, ShaderFunction> = new Dictionary<string, ShaderFunction>();\r\n        for (const lDefnition of pFunctionDefinitions) {\r\n            const lShaderFunction: ShaderFunction = this.functionFromDefinition(lDefnition);\r\n            lShaderFunctions.set(lShaderFunction.name, lShaderFunction);\r\n        }\r\n\r\n        return lShaderFunctions;\r\n    }\r\n\r\n    /**\r\n     * Get all global values.\r\n     * @param pSourceCode - Source code of shader.\r\n     */\r\n    private convertValues(pValueDefinitions: Array<ShaderValueDefinition>): Dictionary<string, ShaderValue> {\r\n        const lShaderValues: Dictionary<string, ShaderValue> = new Dictionary<string, ShaderValue>();\r\n        for (const lDefnition of pValueDefinitions) {\r\n            const lShaderValue: ShaderValue = this.valueFromDefinition(lDefnition);\r\n            lShaderValues.set(lShaderValue.value.name, lShaderValue);\r\n        }\r\n\r\n        return lShaderValues;\r\n    }\r\n\r\n    /**\r\n     * Fetch shader binds.\r\n     * @param pSourceCode - Shader source code.\r\n     */\r\n    private readBindings(): Dictionary<number, Array<BaseMemoryLayout>> {\r\n        const lBindings: Dictionary<number, Array<BaseMemoryLayout>> = new Dictionary<number, Array<BaseMemoryLayout>>();\r\n\r\n        for (const lShaderValue of this.mShaderValue.values()) {\r\n            // Skip all values without binding group.\r\n            if (lShaderValue.group === null) {\r\n                continue;\r\n            }\r\n\r\n            // Init new bind group.\r\n            if (!lBindings.has(lShaderValue.group)) {\r\n                lBindings.set(lShaderValue.group, new Array<BaseMemoryLayout>());\r\n            }\r\n\r\n            lBindings.get(lShaderValue.group)!.push(lShaderValue.value);\r\n        }\r\n\r\n        return lBindings;\r\n    }\r\n\r\n    /**\r\n     * Read entry points from crawled shader functions.\r\n     */\r\n    private readEntryPoints(): Dictionary<ComputeStage, Array<ShaderFunction>> {\r\n        const lEntryPoints: Dictionary<ComputeStage, Array<ShaderFunction>> = new Dictionary<ComputeStage, Array<ShaderFunction>>();\r\n\r\n        // Map shader function to entry point by function tags.\r\n        for (const lShaderFunction of this.mShaderFunctions.values()) {\r\n            if ((lShaderFunction.entryPoints & ComputeStage.Compute) === ComputeStage.Compute) {\r\n                // Init shader stage container.\r\n                if (!lEntryPoints.has(ComputeStage.Compute)) {\r\n                    lEntryPoints.set(ComputeStage.Compute, new Array<ShaderFunction>());\r\n                }\r\n\r\n                lEntryPoints.get(ComputeStage.Compute)!.push(lShaderFunction);\r\n            }\r\n\r\n            if ((lShaderFunction.entryPoints & ComputeStage.Vertex) === ComputeStage.Vertex) {\r\n                // Init shader stage container.\r\n                if (!lEntryPoints.has(ComputeStage.Vertex)) {\r\n                    lEntryPoints.set(ComputeStage.Vertex, new Array<ShaderFunction>());\r\n                }\r\n\r\n                lEntryPoints.get(ComputeStage.Vertex)!.push(lShaderFunction);\r\n            }\r\n\r\n            if ((lShaderFunction.entryPoints & ComputeStage.Fragment) === ComputeStage.Fragment) {\r\n                // Init shader stage container.\r\n                if (!lEntryPoints.has(ComputeStage.Fragment)) {\r\n                    lEntryPoints.set(ComputeStage.Fragment, new Array<ShaderFunction>());\r\n                }\r\n\r\n                lEntryPoints.get(ComputeStage.Fragment)!.push(lShaderFunction);\r\n            }\r\n        }\r\n\r\n        return lEntryPoints;\r\n    }\r\n\r\n    /**\r\n     * Search for all functions hat uses the global name.\r\n     * @param pName - variable or function name.\r\n     * @param pScannedNames - All already scanned names. Prevents recursion.\r\n     */\r\n    private searchEntryPointsOf(pName: string, pScannedNames: Set<string>): Array<ShaderFunction> {\r\n        // Add current searched name to already scanned names.\r\n        pScannedNames.add(pName);\r\n\r\n        const lUsedFunctionList: Array<ShaderFunction> = new Array<ShaderFunction>();\r\n\r\n        // Search all global names of all functions.\r\n        for (const lShaderFunction of this.mShaderFunctions.values()) {\r\n            for (const lGlobal of lShaderFunction.usedGlobals) {\r\n                // Prevent endless recursion.\r\n                if (pScannedNames.has(lGlobal)) {\r\n                    continue;\r\n                }\r\n\r\n                // Further down the rabbithole. Search for \r\n                if (this.mShaderFunctions.has(lGlobal)) {\r\n                    // Add found function to used function list.\r\n                    lUsedFunctionList.push(this.mShaderFunctions.get(lGlobal)!);\r\n\r\n                    // Recursive search for all functions that use this function.\r\n                    lUsedFunctionList.push(...this.searchEntryPointsOf(lGlobal, pScannedNames));\r\n                }\r\n            }\r\n        }\r\n\r\n        return [...new Set<ShaderFunction>(lUsedFunctionList)];\r\n    }\r\n\r\n    /**\r\n     * Read all function definitions.\r\n     * @param pSourceCode - Source code of shader.\r\n     */\r\n    protected abstract fetchFunctionDefinitions(pSourceCode: string): Array<ShaderFunctionDefinition>;\r\n\r\n    /**\r\n     * Read all global shader values.\r\n     * @param pSourceCode - Source code of shader.\r\n     */\r\n    protected abstract fetchStructDefinitions(pSourceCode: string): Array<ShaderStructDefinition>;\r\n\r\n    /**\r\n     * Read all global shader values.\r\n     * @param pSourceCode - Source code of shader.\r\n     */\r\n    protected abstract fetchValueDefinitions(pSourceCode: string): Array<ShaderValueDefinition>;\r\n\r\n    /**\r\n     * Convert function definition.\r\n     * @param pDefinition - Function definition.\r\n     */\r\n    protected abstract functionFromDefinition(pDefinition: ShaderFunctionDefinition): ShaderFunction;\r\n\r\n    /**\r\n     * Setup all shader types.\r\n     * @param pAddType - Add shader type callback.\r\n     */\r\n    protected abstract setupShaderTypes(pAddType: (pType: ShaderTypeDefinition) => void): void;\r\n\r\n    /**\r\n     * Create memory layout from value definition.\r\n     * @param pValueDefinition - value definition.\r\n     */\r\n    protected abstract valueFromDefinition(pValueDefinition: ShaderValueDefinition): ShaderValue;\r\n}\r\n\r\n/*\r\n * Definitions.\r\n */\r\n\r\nexport type ShaderValueDefinition = {\r\n    name: string;\r\n    type: ShaderType;\r\n    typeGenerics: Array<string>;\r\n    attachments: Record<string, string>;\r\n};\r\n\r\nexport type ShaderFunctionDefinition = {\r\n    attachments: Record<string, string>;\r\n    name: string;\r\n    returnType: ShaderValueDefinition;\r\n    parameter: Array<ShaderValueDefinition>;\r\n    body: string;\r\n};\r\n\r\nexport type ShaderStructDefinition = {\r\n    name: string,\r\n    properies: Array<ShaderValueDefinition>;\r\n};\r\n\r\nexport type ShaderTypeDefinition = {\r\n    name: string,\r\n    variants: Array<{\r\n        aliases?: Array<string>;\r\n        size: number;\r\n        align: number;\r\n        generic?: Array<string>;\r\n        format?: BufferPrimitiveFormat;\r\n    }>;\r\n};\r\n\r\n/*\r\n * Values.\r\n */\r\n\r\nexport type ShaderValue = {\r\n    value: BaseMemoryLayout;\r\n    group: number | null;\r\n};\r\n\r\nexport type ShaderFunction = {\r\n    entryPoints: ComputeStage;\r\n    usedGlobals: Array<string>;\r\n    name: string;\r\n    parameter: Array<BaseMemoryLayout>;\r\n    return: BaseMemoryLayout | null;\r\n    attachments: Record<string, Array<string>>;\r\n};\r\n\r\nexport type ShaderStruct = {\r\n    name: string;\r\n    properties: Array<ShaderValue>;\r\n};\r\n\r\n/*\r\n * Types.\r\n */\r\n\r\nexport type ShaderType = {\r\n    type: 'buildIn';\r\n    typeName: string;\r\n    size: number;\r\n    align: number;\r\n    primitiveFormat: BufferPrimitiveFormat;\r\n} | {\r\n    type: 'struct';\r\n    struct: ShaderStruct;\r\n};\r\n\r\ntype ShaderTypeAlias = {\r\n    type: string;\r\n    generics: Array<string>;\r\n};","import { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseShaderInterpreter } from './base-shader-interpreter';\r\n\r\n\r\nexport class ShaderInterpreterFactory {\r\n    private readonly mDevice: GpuDevice;\r\n    private readonly mInterpreterConstructor: ShaderInterpreterConstructor;\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu device.\r\n     * @param pInterpreter - Shader Interpreter \r\n     */\r\n    public constructor(pDevice: GpuDevice, pInterpreter: ShaderInterpreterConstructor) {\r\n        this.mDevice = pDevice;\r\n        this.mInterpreterConstructor = pInterpreter;\r\n    }\r\n\r\n    /**\r\n     * Interpret source code.\r\n     * Executes precompile commands.\r\n     * @param pSource - Source.\r\n     */\r\n    public interpret(pSource: string): BaseShaderInterpreter {\r\n        // TODO: Process precompile commands.\r\n\r\n        return new this.mInterpreterConstructor(this.mDevice, pSource);\r\n    }\r\n}\r\n\r\nexport type ShaderInterpreterConstructor = new (pDevice: GpuDevice, pSource: string) => BaseShaderInterpreter;","import { Exception } from '@kartoffelgames/core.data';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { BaseBufferMemoryLayout } from '../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from '../memory_layout/buffer/struct-buffer-memory-layout';\r\nimport { VertexParameterLayout } from '../pipeline/parameter/vertex-parameter-layout';\r\nimport { BaseShader } from './base-shader';\r\nimport { ShaderFunction } from './interpreter/base-shader-interpreter';\r\nimport { LinearBufferMemoryLayout } from '../memory_layout/buffer/linear-buffer-memory-layout';\r\nimport { RenderTargets } from '../pipeline/target/render-targets';\r\nimport { VertexFragmentPipeline } from '../pipeline/vertex-fragment-pipeline';\r\n\r\nexport class VertexFragmentShader extends BaseShader<'vertexFragmentShader'> {\r\n    private readonly mAttachmentCount: number;\r\n    private readonly mFragmentEntry: string | null;\r\n    private readonly mParameterLayout: VertexParameterLayout;\r\n    private readonly mVertexEntry: string;\r\n\r\n    /**\r\n     * Fragment entry point name.\r\n     */\r\n    public get fragmentEntry(): string | null {\r\n        return this.mFragmentEntry;\r\n    }\r\n\r\n    /**\r\n     * Render parameter layout.\r\n     */\r\n    public get parameterLayout(): VertexParameterLayout {\r\n        return this.mParameterLayout;\r\n    }\r\n\r\n    /**\r\n     * Shader attachment count.\r\n     */\r\n    public get renderTargetCount(): number {\r\n        return this.mAttachmentCount;\r\n    }\r\n\r\n    /**\r\n     * Vertex entry point name.\r\n     */\r\n    public get vertexEntry(): string {\r\n        return this.mVertexEntry;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pSource: string, pVertexEntry: string, pFragmentEntry?: string) {\r\n        super(pDevice, pSource);\r\n\r\n        // Set entry points.\r\n        this.mVertexEntry = pVertexEntry;\r\n        this.mFragmentEntry = pFragmentEntry ?? null;\r\n\r\n        // Validate vertex entry point.\r\n        const lVertexEntryFunction: ShaderFunction | null = this.information.getFunction(this.mVertexEntry);\r\n        if (!lVertexEntryFunction) {\r\n            throw new Exception(`Vertex entry \"${this.mVertexEntry}\" not defined.`, this);\r\n        } else if ((lVertexEntryFunction.entryPoints & ComputeStage.Vertex) !== ComputeStage.Vertex) {\r\n            throw new Exception(`Vertex entry \"${this.mVertexEntry}\" not an defined vertex entry.`, this);\r\n        }\r\n\r\n        // Validate fragment entry point.\r\n        const lFragmentEntryFunction: ShaderFunction | null = (this.mFragmentEntry) ? this.information.getFunction(this.mFragmentEntry) : null;\r\n        if (this.mFragmentEntry) {\r\n            // Validate entry points existance.\r\n            if (!lFragmentEntryFunction) {\r\n                throw new Exception(`Fragment entry \"${this.mFragmentEntry}\" not defined.`, this);\r\n            } else if ((lFragmentEntryFunction.entryPoints & ComputeStage.Fragment) !== ComputeStage.Fragment) {\r\n                throw new Exception(`Fragment entry \"${this.mFragmentEntry}\" not an defined fragment entry.`, this);\r\n            }\r\n        }\r\n\r\n        // Create parameter layout and append every parameter.\r\n        this.mParameterLayout = new VertexParameterLayout(this.device);\r\n        for (const lParameter of lVertexEntryFunction.parameter) {\r\n            // Validate buffer type.\r\n            if (!(lParameter instanceof LinearBufferMemoryLayout)) {\r\n                throw new Exception('Only simple data types are allowed for vertex attributes.', this);\r\n            }\r\n\r\n            this.mParameterLayout.add(lParameter);\r\n        }\r\n\r\n        // Get attachment count based on fragment function return values with an memory index.\r\n        this.mAttachmentCount = 0;\r\n        if (this.mFragmentEntry) {\r\n            // Fragment has only buffer return types.\r\n            const lFragmentReturn: BaseBufferMemoryLayout = <BaseBufferMemoryLayout>lFragmentEntryFunction!.return;\r\n            if (lFragmentReturn instanceof StructBufferMemoryLayout) {\r\n                this.mAttachmentCount = lFragmentReturn.locationLayouts().length;\r\n            } else {\r\n                this.mAttachmentCount = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create pipeline from shader.\r\n     * @param pRenderTargets - Render targets.\r\n     */\r\n    public createPipeline(pRenderTargets: RenderTargets): VertexFragmentPipeline {\r\n        return new VertexFragmentPipeline(this.device, this, pRenderTargets);\r\n    }\r\n}","import { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture-memory-layout';\r\n\r\nexport class CanvasTexture extends GpuObject<'canvasTexture'> {\r\n    private readonly mCanvas: HTMLCanvasElement;\r\n    private readonly mMemoryLayout: TextureMemoryLayout;\r\n\r\n    /**\r\n     * HTML canvas element.\r\n     */\r\n    public get canvas(): HTMLCanvasElement {\r\n        return this.mCanvas;\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mCanvas.height;\r\n    } set height(pValue: number) {\r\n        this.mCanvas.height = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Textures memory layout.\r\n     */\r\n    public get memoryLayout(): TextureMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mCanvas.width;\r\n    } set width(pValue: number) {\r\n        this.mCanvas.width = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pCanvas - Canvas of texture.\r\n     * @param pLayout - Texture layout.\r\n     * @param pDepth - Depth of texture. Can only be set to one.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        // Set canvas reference.\r\n        this.mCanvas = document.createElement('canvas');\r\n        this.mMemoryLayout = pLayout;\r\n\r\n        // Set defaults.\r\n        this.height = 1;\r\n        this.width = 1;\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n}","import { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture-memory-layout';\r\n\r\nexport class FrameBufferTexture extends GpuObject<'frameBufferTexture'> {\r\n    private mDepth: number;\r\n    private mHeight: number;\r\n    private readonly mMemoryLayout: TextureMemoryLayout;\r\n    private mMultiSampleLevel: number;\r\n    private mWidth: number;\r\n\r\n    /**\r\n     * Texture depth.\r\n     */\r\n    public get depth(): number {\r\n        return this.mDepth;\r\n    } set depth(pValue: number) {\r\n        this.mDepth = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mHeight;\r\n    } set height(pValue: number) {\r\n        this.mHeight = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Textures memory layout.\r\n     */\r\n    public get memoryLayout(): TextureMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * Texture multi sample level.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return this.mMultiSampleLevel;\r\n    } set multiSampleLevel(pValue: number) {\r\n        this.mMultiSampleLevel = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mWidth;\r\n    } set width(pValue: number) {\r\n        this.mWidth = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture memory layout.\r\n     * @param pDepth - Texture depth.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        // Fixed values.\r\n\r\n        this.mMemoryLayout = pLayout;\r\n\r\n        // Set defaults.\r\n        this.mDepth = 1;\r\n        this.mHeight = 1;\r\n        this.mWidth = 1;\r\n        this.mMultiSampleLevel = 1;\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core.data';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture-memory-layout';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\n\r\nexport class ImageTexture extends GpuObject<'imageTexture'> {\r\n    private mDepth: number;\r\n    private mHeight: number;\r\n    private mImageList: Array<ImageBitmap>;\r\n    private readonly mMemoryLayout: TextureMemoryLayout;\r\n    private mWidth: number;\r\n\r\n    /**\r\n     * Texture depth.\r\n     */\r\n    public get depth(): number {\r\n        return this.mDepth;\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mHeight;\r\n    }\r\n\r\n    /**\r\n     * Loaded html image list.\r\n     */\r\n    public get images(): Array<ImageBitmap> {\r\n        return this.mImageList;\r\n    }\r\n\r\n    /**\r\n     * Textures memory layout.\r\n     */\r\n    public get memoryLayout(): TextureMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mWidth;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture memory layout.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        // Fixed values.\r\n        this.mMemoryLayout = pLayout;\r\n\r\n        // Set defaults.\r\n        this.mDepth = 1;\r\n        this.mHeight = 1;\r\n        this.mWidth = 1;\r\n        this.mImageList = new Array<ImageBitmap>();\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load image into texture.\r\n     * Images needs to have the same dimensions.\r\n     * @param pSorceList - Source for each depth layer.\r\n     */\r\n    public async load(...pSourceList: Array<string>): Promise<void> {\r\n        let lHeight: number = 0;\r\n        let lWidth: number = 0;\r\n\r\n        // Parallel load images.\r\n        const lImageLoadPromiseList: Array<Promise<ImageBitmap>> = pSourceList.map(async (pSource) => {\r\n            // Load image with html image element.\r\n            const lImage: HTMLImageElement = new Image();\r\n            lImage.src = pSource;\r\n            await lImage.decode();\r\n\r\n            // Init size.\r\n            if (lHeight === 0 || lWidth === 0) {\r\n                lWidth = lImage.naturalWidth;\r\n                lHeight = lImage.naturalHeight;\r\n            }\r\n\r\n            // Validate same image size for all layers.\r\n            if (lHeight !== lImage.naturalHeight || lWidth !== lImage.naturalWidth) {\r\n                throw new Exception(`Texture image layers are not the same size. (${lImage.naturalWidth}, ${lImage.naturalHeight}) needs (${lWidth}, ${lHeight}).`, this);\r\n            }\r\n\r\n            return createImageBitmap(lImage);\r\n        });\r\n\r\n        // Resolve all bitmaps.\r\n        this.mImageList = await Promise.all(lImageLoadPromiseList);\r\n\r\n        // Set new texture size.\r\n        this.mWidth = lWidth;\r\n        this.mHeight = lHeight;\r\n        this.mDepth = pSourceList.length;\r\n\r\n        // Trigger change.\r\n        this.triggerAutoUpdate(UpdateReason.Data);\r\n    }\r\n}","import { CompareFunction } from '../../constant/compare-function.enum';\r\nimport { FilterMode } from '../../constant/filter-mode.enum';\r\nimport { WrappingMode } from '../../constant/wrapping-mode.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { SamplerMemoryLayout } from '../memory_layout/sampler-memory-layout';\r\n\r\nexport class TextureSampler extends GpuObject<'textureSampler'> {\r\n    private mCompare: CompareFunction | null;\r\n    private mLodMaxClamp: number;\r\n    private mLodMinClamp: number;\r\n    private mMagFilter: FilterMode;\r\n    private mMaxAnisotropy: number;\r\n    private readonly mMemoryLayout: SamplerMemoryLayout;\r\n    private mMinFilter: FilterMode;\r\n    private mMipmapFilter: FilterMode;\r\n    private mWrapMode: WrappingMode;\r\n\r\n    /**\r\n     * When provided the sampler will be a comparison sampler with the specified compare function.\r\n     */\r\n    public get compare(): CompareFunction | null {\r\n        return this.mCompare;\r\n    } set compare(pValue: CompareFunction | null) {\r\n        this.mCompare = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Specifies the maximum levels of detail, respectively, used internally when sampling a texture.\r\n     */\r\n    public get lodMaxClamp(): number {\r\n        return this.mLodMaxClamp;\r\n    } set lodMaxClamp(pValue: number) {\r\n        this.mLodMaxClamp = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Specifies the minimum levels of detail, respectively, used internally when sampling a texture.\r\n     */\r\n    public get lodMinClamp(): number {\r\n        return this.mLodMinClamp;\r\n    } set lodMinClamp(pValue: number) {\r\n        this.mLodMinClamp = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * How the texture is sampled when a texel covers more than one pixel.\r\n     */\r\n    public get magFilter(): FilterMode {\r\n        return this.mMagFilter;\r\n    } set magFilter(pValue: FilterMode) {\r\n        this.mMagFilter = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Specifies the maximum anisotropy value clamp used by the sampler.\r\n     */\r\n    public get maxAnisotropy(): number {\r\n        return this.mMaxAnisotropy;\r\n    } set maxAnisotropy(pValue: number) {\r\n        this.mMaxAnisotropy = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Sampler memory layout.\r\n     */\r\n    public get memoryLayout(): SamplerMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * How the texture is sampled when a texel covers less than one pixel.\r\n     */\r\n    public get minFilter(): FilterMode {\r\n        return this.mMinFilter;\r\n    } set minFilter(pValue: FilterMode) {\r\n        this.mMinFilter = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Specifies behavior for sampling between mipmap levels.\r\n     */\r\n    public get mipmapFilter(): FilterMode {\r\n        return this.mMipmapFilter;\r\n    } set mipmapFilter(pValue: FilterMode) {\r\n        this.mMipmapFilter = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Texture sampler edge wrap mode.\r\n     */\r\n    public get wrapMode(): WrappingMode {\r\n        return this.mWrapMode;\r\n    } set wrapMode(pValue: WrappingMode) {\r\n        this.mWrapMode = pValue;\r\n\r\n        // Trigger auto update.\r\n        this.triggerAutoUpdate(UpdateReason.Setting);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Sampler memory layout.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: SamplerMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        this.mMemoryLayout = pLayout;\r\n\r\n        // Set defaults.\r\n        this.mCompare = null;\r\n        this.mWrapMode = WrappingMode.ClampToEdge;\r\n        this.mMagFilter = FilterMode.Nearest;\r\n        this.mMinFilter = FilterMode.Nearest;\r\n        this.mMipmapFilter = FilterMode.Nearest;\r\n        this.mLodMinClamp = 0;\r\n        this.mLodMaxClamp = 32;\r\n        this.mMaxAnisotropy = 1;\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n}","import { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/gpu-object';\r\nimport { UpdateReason } from '../gpu/gpu-object-update-reason';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture-memory-layout';\r\n\r\nexport class VideoTexture extends GpuObject<'videoTexture'> {\r\n    private readonly mMemoryLayout: TextureMemoryLayout;\r\n    private readonly mVideo: HTMLVideoElement;\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mVideo.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * If video should be looped.\r\n     */\r\n    public get loop(): boolean {\r\n        return this.mVideo.loop;\r\n    } set loop(pValue: boolean) {\r\n        this.mVideo.loop = pValue;\r\n    }\r\n\r\n    /**\r\n     * Textures memory layout.\r\n     */\r\n    public get memoryLayout(): TextureMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * Video source.\r\n     */\r\n    public get source(): string {\r\n        return this.mVideo.src;\r\n    } set source(pValue: string) {\r\n        this.mVideo.src = pValue;\r\n    }\r\n\r\n    /**\r\n     * Video element.\r\n     */\r\n    public get video(): HTMLVideoElement {\r\n        return this.mVideo;\r\n    }\r\n\r\n    /**\r\n     * Video width.\r\n     */\r\n    public get width(): number {\r\n        return this.mVideo.videoWidth;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture memory layout.\r\n     * @param pDepth - Texture depth.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        // Fixed values.\r\n        this.mMemoryLayout = pLayout;\r\n\r\n        // Create video.\r\n        this.mVideo = new HTMLVideoElement();\r\n        this.mVideo.loop = false;\r\n        this.mVideo.muted = true; // Allways muted.\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addUpdateListener(() => {\r\n            this.triggerAutoUpdate(UpdateReason.ChildData);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pause video.\r\n     */\r\n    public pause(): void {\r\n        this.mVideo.pause();\r\n    }\r\n\r\n    /**\r\n     * Play video.\r\n     */\r\n    public play(): void {\r\n        this.mVideo.play();\r\n    }\r\n}","export enum AccessMode {\r\n    None = 0,\r\n    Read = 1,\r\n    Write = 2\r\n}","export enum BufferBindType {\r\n    Undefined = 'Undefined',\r\n    Index = 'Index',\r\n    Vertex = 'Vertex',\r\n    Uniform = 'Uniform',\r\n    Storage = 'Storage'\r\n}","export enum BufferPrimitiveFormat {\r\n    Unsupported = 'Unsupported primitive format',\r\n    Float = 'float',\r\n    Vec2Float = 'vector-2-float',\r\n    Vec3Float = 'vector-3-float',\r\n    Vec4Float = 'vector-4-float',\r\n    Uint = 'unsigned-integer',\r\n    Vec2Uint = 'vector-2-unsigned-integer',\r\n    Vec3Uint = 'vector-3-unsigned-integer',\r\n    Vec4Uint = 'vector-4-unsigned-integer',\r\n    Int = 'integer',\r\n    Vec2Int = 'vector-2-integer',\r\n    Vec3Int = 'vector-3-integer',\r\n    Vec4Int = 'vector-4-integer'\r\n}","export enum CompareFunction {\r\n    Never = 'never',\r\n    Less = 'less',\r\n    Equal = 'equal',\r\n    LessEqual = 'less-equal',\r\n    Greater = 'greater',\r\n    NotEqual = 'not-equal',\r\n    GreaterEqual = 'greater-equal',\r\n    Allways = 'always'\r\n}","export enum ComputeStage {\r\n    None = 0,\r\n    Fragment = 1,\r\n    Vertex = 2,\r\n    Compute = 4\r\n}\r\n","export enum FilterMode {\r\n    Nearest = 'nearest',\r\n    Linear = 'linear'\r\n}","export enum MemoryCopyType {\r\n    None = 0,\r\n    CopySource = 1,\r\n    CopyDestination = 2,\r\n}","export enum PrimitiveCullMode {\r\n    None = 'none',\r\n    Front = 'front',\r\n    Back = 'back'\r\n}","export enum PrimitiveFrontFace {\r\n    CounterClockWise = 'counter-clockwise',\r\n    ClockWise = 'clockwise'\r\n}","export enum PrimitiveTopology {\r\n    PointList = 'point-list',\r\n    LineList = 'line-list',\r\n    LineStrip = 'line-strip',\r\n    TriangleList = 'triangle-list',\r\n    TriangleStrip = 'triangle-strip'\r\n}","export enum SamplerType {\r\n    Filter = 'Filter',\r\n    Comparison = 'Comparison',\r\n}","export enum TextureBindType {\r\n    Images = 'Image-Texture',\r\n    External = 'External-Texture',\r\n    Storage = 'Storage-Texture',\r\n    RenderTarget = 'Render-Texture'\r\n}","export enum TextureDimension {\r\n    OneDimension = '1d',\r\n    TwoDimension = '2d',\r\n    TwoDimensionArray = '2d-array',\r\n    Cube = 'cube',\r\n    CubeArray = 'cube-array',\r\n    ThreeDimension = '3d'\r\n}","export enum TextureFormat {\r\n    Red = 'r8unorm',\r\n    RedInteger = 'r8uint',\r\n    RedGreen = 'rg8unorm',\r\n    RedGreenInteger = 'rg8uint',\r\n    RedGreenBlueAlpha = 'rgba8unorm',\r\n    RedGreenBlueAlphaInteger = 'rgba8uint',\r\n    BlueRedGreenAlpha = 'bgra8unorm',\r\n    Depth = 'depth24plus',\r\n    Stencil = 'stencil8',\r\n    DepthStencil = 'depth24plus-stencil8',\r\n}","export enum TextureOperation {\r\n    Keep = 'keep',\r\n    Clear = 'clear'\r\n}","export enum TextureUsage {\r\n    None = 0,\r\n    TextureBinding = 1,\r\n    StorageBinding = 2,\r\n    RenderAttachment = 4\r\n}","export enum WrappingMode {\r\n    ClampToEdge = 'clamp-to-edge',\r\n    Repeat = 'repeat',\r\n    MirrorRepeat = 'mirror-repeat'\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,\n    nonAsciiPrintable: /[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,\n    nonAsciiPrintableOnly: /[\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,\n    extensive: /[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g\n};\nvar defaultEncodeOptions = {\n    mode: 'specialChars',\n    level: 'all',\n    numeric: 'decimal'\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */\nfunction encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;\n    if (!text) {\n        return '';\n    }\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === 'hexadecimal';\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = '';\n        var _d = 0;\n        do {\n            if (_d !== _b.index) {\n                _c += text.substring(_d, _b.index);\n            }\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        } while ((_b = encodeRegExp.exec(text)));\n        if (_d !== text.length) {\n            _c += text.substring(_d);\n        }\n    }\n    else {\n        _c =\n            text;\n    }\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: 'body',\n    level: 'all'\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: 'all'\n};\n/** Decodes a single entity */\nfunction decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;\n    if (!entity) {\n        return '';\n    }\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    if (false\n        && decodeEntityLastChar_1 === '=') {\n        _b =\n            entity;\n    }\n    else if (false\n        && decodeEntityLastChar_1 !== ';') {\n        _b =\n            entity;\n    }\n    else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n            _b = decodeResultByReference_1;\n        }\n        else if (entity[0] === '&' && entity[1] === '#') {\n            var decodeSecondChar_1 = entity[2];\n            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'\n                ? parseInt(entity.substr(3), 16)\n                : parseInt(entity.substr(2));\n            _b =\n                decodeCode_1 >= 0x10ffff\n                    ? outOfBoundsChar\n                    : decodeCode_1 > 65535\n                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)\n                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */\nfunction decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;\n    if (!text) {\n        return '';\n    }\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === 'attribute';\n    var isStrict = scope === 'strict';\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = '';\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) {\n                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            }\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute\n                && decodeEntityLastChar_2 === '=') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else if (isStrict\n                && decodeEntityLastChar_2 !== ';') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) {\n                    decodeResult_1 = decodeResultByReference_2;\n                }\n                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'\n                        ? parseInt(replaceInput_1.substr(3), 16)\n                        : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 =\n                        decodeCode_2 >= 0x10ffff\n                            ? outOfBoundsChar\n                            : decodeCode_2 > 65535\n                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)\n                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while ((replaceMatch_1 = decodeRegExp.exec(text)));\n        if (replaceLastIndex_1 !== text.length) {\n            replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n    }\n    else {\n        replaceResult_1 =\n            text;\n    }\n    return replaceResult_1;\n}\nexports.decode = decode;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;","export default \"// ------------------------- Object Values ---------------------- //\\r\\n@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\\r\\n@group(0) @binding(1) var<storage, read> instancePositions: array<vec4<f32>>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- World Values ---------------------- //\\r\\n@group(1) @binding(0) var<uniform> viewProjectionMatrix: mat4x4<f32>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- User Inputs ------------------------ //\\r\\n@group(2) @binding(0) var cubeTextureSampler: sampler;\\r\\n@group(2) @binding(1) var cubeTexture: texture_2d<f32>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// --------------------- Light calculations --------------------- //\\r\\nstruct AmbientLight {\\r\\n    color: vec4<f32>\\r\\n}\\r\\n@group(1) @binding(1) var<uniform> ambientLight: AmbientLight;\\r\\n\\r\\nstruct PointLight {\\r\\n    position: vec4<f32>,\\r\\n    color: vec4<f32>,\\r\\n    range: f32\\r\\n}\\r\\n@group(1) @binding(2) var<storage, read> pointLights: array<PointLight>;\\r\\n\\r\\n/**\\r\\n * Calculate point light output.\\r\\n */\\r\\nfn calculatePointLights(fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\\r\\n    // Count of point lights.\\r\\n    let pointLightCount: u32 = arrayLength(&pointLights);\\r\\n\\r\\n    var lightResult: vec4<f32> = vec4<f32>(0, 0, 0, 1);\\r\\n\\r\\n    for (var index: u32 = 0; index < pointLightCount; index++) {\\r\\n        var pointLight: PointLight = pointLights[index];\\r\\n\\r\\n        // Calculate light strength based on angle of incidence.\\r\\n        let lightDirection: vec4<f32> = normalize(pointLight.position - fragmentPosition);\\r\\n        let diffuse: f32 = max(dot(normal, lightDirection), 0.0);\\r\\n\\r\\n        lightResult += pointLight.color * diffuse;\\r\\n    }\\r\\n\\r\\n    return lightResult;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Apply lights to fragment color.\\r\\n */\\r\\nfn applyLight(colorIn: vec4<f32>, fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\\r\\n    var lightColor: vec4<f32> = vec4<f32>(0, 0, 0, 1);\\r\\n\\r\\n    lightColor += ambientLight.color;\\r\\n    lightColor += calculatePointLights(fragmentPosition, normal);\\r\\n\\r\\n    return lightColor * colorIn;\\r\\n}\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\nstruct VertexOut {\\r\\n    @builtin(position) position: vec4<f32>,\\r\\n    @location(0) uv: vec2<f32>,\\r\\n    @location(1) normal: vec4<f32>,\\r\\n    @location(2) fragmentPosition: vec4<f32>\\r\\n}\\r\\n\\r\\nstruct VertexIn {\\r\\n    @builtin(instance_index) instanceId : u32,\\r\\n    @location(0) position: vec4<f32>,\\r\\n    @location(1) uv: vec2<f32>,\\r\\n    @location(2) normal: vec4<f32>\\r\\n}\\r\\n\\r\\n@vertex\\r\\nfn vertex_main(vertex: VertexIn) -> VertexOut {\\r\\n    var instancePosition: vec4<f32> = instancePositions[vertex.instanceId];\\r\\n    var instancePositionMatrix: mat4x4<f32> = mat4x4<f32>(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, instancePosition.x * 5, instancePosition.y * 5, instancePosition.z * 5, 1);\\r\\n\\r\\n    var out: VertexOut;\\r\\n    out.position = viewProjectionMatrix * transformationMatrix * instancePositionMatrix * vertex.position;\\r\\n    out.uv = vertex.uv;\\r\\n    out.normal = vertex.normal;\\r\\n    out.fragmentPosition = transformationMatrix * instancePositionMatrix * vertex.position;\\r\\n\\r\\n    return out;\\r\\n}\\r\\n\\r\\nstruct FragmentIn {\\r\\n    @location(0) uv: vec2<f32>,\\r\\n    @location(1) normal: vec4<f32>,\\r\\n    @location(2) fragmentPosition: vec4<f32>\\r\\n}\\r\\n\\r\\n@fragment\\r\\nfn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\\r\\n    return applyLight(textureSample(cubeTexture, cubeTextureSampler, fragment.uv), fragment.fragmentPosition, fragment.normal);\\r\\n}\";","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { log } from \"../utils/log.js\";\nvar WebSocketClient = /*#__PURE__*/function () {\n  /**\n   * @param {string} url\n   */\n  function WebSocketClient(url) {\n    _classCallCheck(this, WebSocketClient);\n    this.client = new WebSocket(url);\n    this.client.onerror = function (error) {\n      log.error(error);\n    };\n  }\n\n  /**\n   * @param {(...args: any[]) => void} f\n   */\n  _createClass(WebSocketClient, [{\n    key: \"onOpen\",\n    value: function onOpen(f) {\n      this.client.onopen = f;\n    }\n\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onClose\",\n    value: function onClose(f) {\n      this.client.onclose = f;\n    }\n\n    // call f with the message string as the first argument\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(f) {\n      this.client.onmessage = function (e) {\n        f(e.data);\n      };\n    }\n  }]);\n  return WebSocketClient;\n}();\nexport { WebSocketClient as default };","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* global __resourceQuery, __webpack_hash__ */\n/// <reference types=\"webpack/module\" />\nimport webpackHotLog from \"webpack/hot/log.js\";\nimport stripAnsi from \"./utils/stripAnsi.js\";\nimport parseURL from \"./utils/parseURL.js\";\nimport socket from \"./socket.js\";\nimport { formatProblem, createOverlay } from \"./overlay.js\";\nimport { log, logEnabledFeatures, setLogLevel } from \"./utils/log.js\";\nimport sendMessage from \"./utils/sendMessage.js\";\nimport reloadApp from \"./utils/reloadApp.js\";\nimport createSocketURL from \"./utils/createSocketURL.js\";\n\n/**\n * @typedef {Object} OverlayOptions\n * @property {boolean | (error: Error) => boolean} [warnings]\n * @property {boolean | (error: Error) => boolean} [errors]\n * @property {boolean | (error: Error) => boolean} [runtimeErrors]\n * @property {string} [trustedTypesPolicyName]\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} hot\n * @property {boolean} liveReload\n * @property {boolean} progress\n * @property {boolean | OverlayOptions} overlay\n * @property {string} [logging]\n * @property {number} [reconnect]\n */\n\n/**\n * @typedef {Object} Status\n * @property {boolean} isUnloading\n * @property {string} currentHash\n * @property {string} [previousHash]\n */\n\n/**\n * @param {boolean | { warnings?: boolean | string; errors?: boolean | string; runtimeErrors?: boolean | string; }} overlayOptions\n */\nvar decodeOverlayOptions = function decodeOverlayOptions(overlayOptions) {\n  if (typeof overlayOptions === \"object\") {\n    [\"warnings\", \"errors\", \"runtimeErrors\"].forEach(function (property) {\n      if (typeof overlayOptions[property] === \"string\") {\n        var overlayFilterFunctionString = decodeURIComponent(overlayOptions[property]);\n\n        // eslint-disable-next-line no-new-func\n        var overlayFilterFunction = new Function(\"message\", \"var callback = \".concat(overlayFilterFunctionString, \"\\n        return callback(message)\"));\n        overlayOptions[property] = overlayFilterFunction;\n      }\n    });\n  }\n};\n\n/**\n * @type {Status}\n */\nvar status = {\n  isUnloading: false,\n  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n  // eslint-disable-next-line camelcase\n  currentHash: typeof __webpack_hash__ !== \"undefined\" ? __webpack_hash__ : \"\"\n};\n\n/** @type {Options} */\nvar options = {\n  hot: false,\n  liveReload: false,\n  progress: false,\n  overlay: false\n};\nvar parsedResourceQuery = parseURL(__resourceQuery);\nvar enabledFeatures = {\n  \"Hot Module Replacement\": false,\n  \"Live Reloading\": false,\n  Progress: false,\n  Overlay: false\n};\nif (parsedResourceQuery.hot === \"true\") {\n  options.hot = true;\n  enabledFeatures[\"Hot Module Replacement\"] = true;\n}\nif (parsedResourceQuery[\"live-reload\"] === \"true\") {\n  options.liveReload = true;\n  enabledFeatures[\"Live Reloading\"] = true;\n}\nif (parsedResourceQuery.progress === \"true\") {\n  options.progress = true;\n  enabledFeatures.Progress = true;\n}\nif (parsedResourceQuery.overlay) {\n  try {\n    options.overlay = JSON.parse(parsedResourceQuery.overlay);\n  } catch (e) {\n    log.error(\"Error parsing overlay options from resource query:\", e);\n  }\n\n  // Fill in default \"true\" params for partially-specified objects.\n  if (typeof options.overlay === \"object\") {\n    options.overlay = _objectSpread({\n      errors: true,\n      warnings: true,\n      runtimeErrors: true\n    }, options.overlay);\n    decodeOverlayOptions(options.overlay);\n  }\n  enabledFeatures.Overlay = true;\n}\nif (parsedResourceQuery.logging) {\n  options.logging = parsedResourceQuery.logging;\n}\nif (typeof parsedResourceQuery.reconnect !== \"undefined\") {\n  options.reconnect = Number(parsedResourceQuery.reconnect);\n}\n\n/**\n * @param {string} level\n */\nfunction setAllLogLevel(level) {\n  // This is needed because the HMR logger operate separately from dev server logger\n  webpackHotLog.setLogLevel(level === \"verbose\" || level === \"log\" ? \"info\" : level);\n  setLogLevel(level);\n}\nif (options.logging) {\n  setAllLogLevel(options.logging);\n}\nlogEnabledFeatures(enabledFeatures);\nself.addEventListener(\"beforeunload\", function () {\n  status.isUnloading = true;\n});\nvar overlay = typeof window !== \"undefined\" ? createOverlay(typeof options.overlay === \"object\" ? {\n  trustedTypesPolicyName: options.overlay.trustedTypesPolicyName,\n  catchRuntimeError: options.overlay.runtimeErrors\n} : {\n  trustedTypesPolicyName: false,\n  catchRuntimeError: options.overlay\n}) : {\n  send: function send() {}\n};\nvar onSocketMessage = {\n  hot: function hot() {\n    if (parsedResourceQuery.hot === \"false\") {\n      return;\n    }\n    options.hot = true;\n  },\n  liveReload: function liveReload() {\n    if (parsedResourceQuery[\"live-reload\"] === \"false\") {\n      return;\n    }\n    options.liveReload = true;\n  },\n  invalid: function invalid() {\n    log.info(\"App updated. Recompiling...\");\n\n    // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"Invalid\");\n  },\n  /**\n   * @param {string} hash\n   */\n  hash: function hash(_hash) {\n    status.previousHash = status.currentHash;\n    status.currentHash = _hash;\n  },\n  logging: setAllLogLevel,\n  /**\n   * @param {boolean} value\n   */\n  overlay: function overlay(value) {\n    if (typeof document === \"undefined\") {\n      return;\n    }\n    options.overlay = value;\n    decodeOverlayOptions(options.overlay);\n  },\n  /**\n   * @param {number} value\n   */\n  reconnect: function reconnect(value) {\n    if (parsedResourceQuery.reconnect === \"false\") {\n      return;\n    }\n    options.reconnect = value;\n  },\n  /**\n   * @param {boolean} value\n   */\n  progress: function progress(value) {\n    options.progress = value;\n  },\n  /**\n   * @param {{ pluginName?: string, percent: number, msg: string }} data\n   */\n  \"progress-update\": function progressUpdate(data) {\n    if (options.progress) {\n      log.info(\"\".concat(data.pluginName ? \"[\".concat(data.pluginName, \"] \") : \"\").concat(data.percent, \"% - \").concat(data.msg, \".\"));\n    }\n    sendMessage(\"Progress\", data);\n  },\n  \"still-ok\": function stillOk() {\n    log.info(\"Nothing changed.\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"StillOk\");\n  },\n  ok: function ok() {\n    sendMessage(\"Ok\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    reloadApp(options, status);\n  },\n  // TODO: remove in v5 in favor of 'static-changed'\n  /**\n   * @param {string} file\n   */\n  \"content-changed\": function contentChanged(file) {\n    log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {string} file\n   */\n  \"static-changed\": function staticChanged(file) {\n    log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {Error[]} warnings\n   * @param {any} params\n   */\n  warnings: function warnings(_warnings, params) {\n    log.warn(\"Warnings while compiling.\");\n    var printableWarnings = _warnings.map(function (error) {\n      var _formatProblem = formatProblem(\"warning\", error),\n        header = _formatProblem.header,\n        body = _formatProblem.body;\n      return \"\".concat(header, \"\\n\").concat(stripAnsi(body));\n    });\n    sendMessage(\"Warnings\", printableWarnings);\n    for (var i = 0; i < printableWarnings.length; i++) {\n      log.warn(printableWarnings[i]);\n    }\n    var overlayWarningsSetting = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.warnings;\n    if (overlayWarningsSetting) {\n      var warningsToDisplay = typeof overlayWarningsSetting === \"function\" ? _warnings.filter(overlayWarningsSetting) : _warnings;\n      if (warningsToDisplay.length) {\n        overlay.send({\n          type: \"BUILD_ERROR\",\n          level: \"warning\",\n          messages: _warnings\n        });\n      }\n    }\n    if (params && params.preventReloading) {\n      return;\n    }\n    reloadApp(options, status);\n  },\n  /**\n   * @param {Error[]} errors\n   */\n  errors: function errors(_errors) {\n    log.error(\"Errors while compiling. Reload prevented.\");\n    var printableErrors = _errors.map(function (error) {\n      var _formatProblem2 = formatProblem(\"error\", error),\n        header = _formatProblem2.header,\n        body = _formatProblem2.body;\n      return \"\".concat(header, \"\\n\").concat(stripAnsi(body));\n    });\n    sendMessage(\"Errors\", printableErrors);\n    for (var i = 0; i < printableErrors.length; i++) {\n      log.error(printableErrors[i]);\n    }\n    var overlayErrorsSettings = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.errors;\n    if (overlayErrorsSettings) {\n      var errorsToDisplay = typeof overlayErrorsSettings === \"function\" ? _errors.filter(overlayErrorsSettings) : _errors;\n      if (errorsToDisplay.length) {\n        overlay.send({\n          type: \"BUILD_ERROR\",\n          level: \"error\",\n          messages: _errors\n        });\n      }\n    }\n  },\n  /**\n   * @param {Error} error\n   */\n  error: function error(_error) {\n    log.error(_error);\n  },\n  close: function close() {\n    log.info(\"Disconnected!\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"Close\");\n  }\n};\nvar socketURL = createSocketURL(parsedResourceQuery);\nsocket(socketURL, onSocketMessage, options.reconnect);","/******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./client-src/modules/logger/SyncBailHookFake.js\":\n/*!*******************************************************!*\\\n  !*** ./client-src/modules/logger/SyncBailHookFake.js ***!\n  \\*******************************************************/\n/***/ (function(module) {\n\n\n\n/**\n * Client stub for tapable SyncBailHook\n */\nmodule.exports = function clientTapableSyncBailHook() {\n  return {\n    call: function call() {}\n  };\n};\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/Logger.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/Logger.js ***!\n  \\****************************************************/\n/***/ (function(__unused_webpack_module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar LogType = Object.freeze({\n  error: /** @type {\"error\"} */\"error\",\n  // message, c style arguments\n  warn: /** @type {\"warn\"} */\"warn\",\n  // message, c style arguments\n  info: /** @type {\"info\"} */\"info\",\n  // message, c style arguments\n  log: /** @type {\"log\"} */\"log\",\n  // message, c style arguments\n  debug: /** @type {\"debug\"} */\"debug\",\n  // message, c style arguments\n\n  trace: /** @type {\"trace\"} */\"trace\",\n  // no arguments\n\n  group: /** @type {\"group\"} */\"group\",\n  // [label]\n  groupCollapsed: /** @type {\"groupCollapsed\"} */\"groupCollapsed\",\n  // [label]\n  groupEnd: /** @type {\"groupEnd\"} */\"groupEnd\",\n  // [label]\n\n  profile: /** @type {\"profile\"} */\"profile\",\n  // [profileName]\n  profileEnd: /** @type {\"profileEnd\"} */\"profileEnd\",\n  // [profileName]\n\n  time: /** @type {\"time\"} */\"time\",\n  // name, time as [seconds, nanoseconds]\n\n  clear: /** @type {\"clear\"} */\"clear\",\n  // no arguments\n  status: /** @type {\"status\"} */\"status\" // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nvar LOG_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger raw log method\");\nvar TIMERS_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger times\");\nvar TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger aggregated times\");\nvar WebpackLogger = /*#__PURE__*/function () {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n   */\n  function WebpackLogger(log, getChildLogger) {\n    _classCallCheck(this, WebpackLogger);\n    this[LOG_SYMBOL] = log;\n    this.getChildLogger = getChildLogger;\n  }\n  _createClass(WebpackLogger, [{\n    key: \"error\",\n    value: function error() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this[LOG_SYMBOL](LogType.warn, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this[LOG_SYMBOL](LogType.info, args);\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this[LOG_SYMBOL](LogType.log, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this[LOG_SYMBOL](LogType.debug, args);\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(assertion) {\n      if (!assertion) {\n        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          args[_key6 - 1] = arguments[_key6];\n        }\n        this[LOG_SYMBOL](LogType.error, args);\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this[LOG_SYMBOL](LogType.clear);\n    }\n  }, {\n    key: \"status\",\n    value: function status() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this[LOG_SYMBOL](LogType.status, args);\n    }\n  }, {\n    key: \"group\",\n    value: function group() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this[LOG_SYMBOL](LogType.group, args);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this[LOG_SYMBOL](LogType.groupCollapsed, args);\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this[LOG_SYMBOL](LogType.groupEnd, args);\n    }\n  }, {\n    key: \"profile\",\n    value: function profile(label) {\n      this[LOG_SYMBOL](LogType.profile, [label]);\n    }\n  }, {\n    key: \"profileEnd\",\n    value: function profileEnd(label) {\n      this[LOG_SYMBOL](LogType.profileEnd, [label]);\n    }\n  }, {\n    key: \"time\",\n    value: function time(label) {\n      this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n      this[TIMERS_SYMBOL].set(label, process.hrtime());\n    }\n  }, {\n    key: \"timeLog\",\n    value: function timeLog(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeLog()\"));\n      }\n      var time = process.hrtime(prev);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeEnd()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeAggregate\",\n    value: function timeAggregate(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeAggregate()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();\n      var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n      if (current !== undefined) {\n        if (time[1] + current[1] > 1e9) {\n          time[0] += current[0] + 1;\n          time[1] = time[1] - 1e9 + current[1];\n        } else {\n          time[0] += current[0];\n          time[1] += current[1];\n        }\n      }\n      this[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n    }\n  }, {\n    key: \"timeAggregateEnd\",\n    value: function timeAggregateEnd(label) {\n      if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n      var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n      if (time === undefined) return;\n      this[TIMERS_AGGREGATES_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }]);\n  return WebpackLogger;\n}();\nexports.Logger = WebpackLogger;\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/createConsoleLogger.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!\n  \\*****************************************************************/\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar _require = __webpack_require__(/*! ./Logger */ \"./node_modules/webpack/lib/logging/Logger.js\"),\n  LogType = _require.LogType;\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n/** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n\n/** @typedef {function(string): boolean} FilterFunction */\n\n/**\n * @typedef {Object} LoggerConsole\n * @property {function(): void} clear\n * @property {function(): void} trace\n * @property {(...args: any[]) => void} info\n * @property {(...args: any[]) => void} log\n * @property {(...args: any[]) => void} warn\n * @property {(...args: any[]) => void} error\n * @property {(...args: any[]) => void=} debug\n * @property {(...args: any[]) => void=} group\n * @property {(...args: any[]) => void=} groupCollapsed\n * @property {(...args: any[]) => void=} groupEnd\n * @property {(...args: any[]) => void=} status\n * @property {(...args: any[]) => void=} profile\n * @property {(...args: any[]) => void=} profileEnd\n * @property {(...args: any[]) => void=} logTime\n */\n\n/**\n * @typedef {Object} LoggerOptions\n * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} level loglevel\n * @property {FilterTypes|boolean} debug filter for debug logging\n * @property {LoggerConsole} console the console to log to\n */\n\n/**\n * @param {FilterItemTypes} item an input item\n * @returns {FilterFunction} filter function\n */\nvar filterToFunction = function filterToFunction(item) {\n  if (typeof item === \"string\") {\n    var regExp = new RegExp(\"[\\\\\\\\/]\".concat(item.replace(\n    // eslint-disable-next-line no-useless-escape\n    /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\"), \"([\\\\\\\\/]|$|!|\\\\?)\"));\n    return function (ident) {\n      return regExp.test(ident);\n    };\n  }\n  if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n    return function (ident) {\n      return item.test(ident);\n    };\n  }\n  if (typeof item === \"function\") {\n    return item;\n  }\n  if (typeof item === \"boolean\") {\n    return function () {\n      return item;\n    };\n  }\n};\n\n/**\n * @enum {number}\n */\nvar LogLevel = {\n  none: 6,\n  false: 6,\n  error: 5,\n  warn: 4,\n  info: 3,\n  log: 2,\n  true: 2,\n  verbose: 1\n};\n\n/**\n * @param {LoggerOptions} options options object\n * @returns {function(string, LogTypeEnum, any[]): void} logging function\n */\nmodule.exports = function (_ref) {\n  var _ref$level = _ref.level,\n    level = _ref$level === void 0 ? \"info\" : _ref$level,\n    _ref$debug = _ref.debug,\n    debug = _ref$debug === void 0 ? false : _ref$debug,\n    console = _ref.console;\n  var debugFilters = typeof debug === \"boolean\" ? [function () {\n    return debug;\n  }] : /** @type {FilterItemTypes[]} */[].concat(debug).map(filterToFunction);\n  /** @type {number} */\n  var loglevel = LogLevel[\"\".concat(level)] || 0;\n\n  /**\n   * @param {string} name name of the logger\n   * @param {LogTypeEnum} type type of the log entry\n   * @param {any[]} args arguments of the log entry\n   * @returns {void}\n   */\n  var logger = function logger(name, type, args) {\n    var labeledArgs = function labeledArgs() {\n      if (Array.isArray(args)) {\n        if (args.length > 0 && typeof args[0] === \"string\") {\n          return [\"[\".concat(name, \"] \").concat(args[0])].concat(_toConsumableArray(args.slice(1)));\n        } else {\n          return [\"[\".concat(name, \"]\")].concat(_toConsumableArray(args));\n        }\n      } else {\n        return [];\n      }\n    };\n    var debug = debugFilters.some(function (f) {\n      return f(name);\n    });\n    switch (type) {\n      case LogType.debug:\n        if (!debug) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.debug === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.debug.apply(console, _toConsumableArray(labeledArgs()));\n        } else {\n          console.log.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.log:\n        if (!debug && loglevel > LogLevel.log) return;\n        console.log.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.info:\n        if (!debug && loglevel > LogLevel.info) return;\n        console.info.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.warn:\n        if (!debug && loglevel > LogLevel.warn) return;\n        console.warn.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.error:\n        if (!debug && loglevel > LogLevel.error) return;\n        console.error.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.trace:\n        if (!debug) return;\n        console.trace();\n        break;\n      case LogType.groupCollapsed:\n        if (!debug && loglevel > LogLevel.log) return;\n        if (!debug && loglevel > LogLevel.verbose) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.groupCollapsed === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));\n          } else {\n            console.log.apply(console, _toConsumableArray(labeledArgs()));\n          }\n          break;\n        }\n      // falls through\n      case LogType.group:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.group === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.group.apply(console, _toConsumableArray(labeledArgs()));\n        } else {\n          console.log.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.groupEnd:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.groupEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.groupEnd();\n        }\n        break;\n      case LogType.time:\n        {\n          if (!debug && loglevel > LogLevel.log) return;\n          var ms = args[1] * 1000 + args[2] / 1000000;\n          var msg = \"[\".concat(name, \"] \").concat(args[0], \": \").concat(ms, \" ms\");\n          if (typeof console.logTime === \"function\") {\n            console.logTime(msg);\n          } else {\n            console.log(msg);\n          }\n          break;\n        }\n      case LogType.profile:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profile === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profile.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.profileEnd:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profileEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.clear:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.clear === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.clear();\n        }\n        break;\n      case LogType.status:\n        if (!debug && loglevel > LogLevel.info) return;\n        if (typeof console.status === \"function\") {\n          if (args.length === 0) {\n            console.status();\n          } else {\n            console.status.apply(console, _toConsumableArray(labeledArgs()));\n          }\n        } else {\n          if (args.length !== 0) {\n            console.info.apply(console, _toConsumableArray(labeledArgs()));\n          }\n        }\n        break;\n      default:\n        throw new Error(\"Unexpected LogType \".concat(type));\n    }\n  };\n  return logger;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/runtime.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/runtime.js ***!\n  \\*****************************************************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar SyncBailHook = __webpack_require__(/*! tapable/lib/SyncBailHook */ \"./client-src/modules/logger/SyncBailHookFake.js\");\nvar _require = __webpack_require__(/*! ./Logger */ \"./node_modules/webpack/lib/logging/Logger.js\"),\n  Logger = _require.Logger;\nvar createConsoleLogger = __webpack_require__(/*! ./createConsoleLogger */ \"./node_modules/webpack/lib/logging/createConsoleLogger.js\");\n\n/** @type {createConsoleLogger.LoggerOptions} */\nvar currentDefaultLoggerOptions = {\n  level: \"info\",\n  debug: false,\n  console: console\n};\nvar currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n\n/**\n * @param {string} name name of the logger\n * @returns {Logger} a logger\n */\nexports.getLogger = function (name) {\n  return new Logger(function (type, args) {\n    if (exports.hooks.log.call(name, type, args) === undefined) {\n      currentDefaultLogger(name, type, args);\n    }\n  }, function (childName) {\n    return exports.getLogger(\"\".concat(name, \"/\").concat(childName));\n  });\n};\n\n/**\n * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options\n * @returns {void}\n */\nexports.configureDefaultLogger = function (options) {\n  _extends(currentDefaultLoggerOptions, options);\n  currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n};\nexports.hooks = {\n  log: new SyncBailHook([\"origin\", \"type\", \"args\"])\n};\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t!function() {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = function(exports) {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n!function() {\n/*!********************************************!*\\\n  !*** ./client-src/modules/logger/index.js ***!\n  \\********************************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default export from named module */ webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__; }\n/* harmony export */ });\n/* harmony import */ var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/lib/logging/runtime.js */ \"./node_modules/webpack/lib/logging/runtime.js\");\n\n}();\nvar __webpack_export_target__ = exports;\nfor(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];\nif(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \"__esModule\", { value: true });\n/******/ })()\n;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n\nimport ansiHTML from \"ansi-html-community\";\nimport { encode } from \"html-entities\";\nimport { listenToRuntimeError, listenToUnhandledRejection, parseErrorToStacks } from \"./overlay/runtime-error.js\";\nimport createOverlayMachine from \"./overlay/state-machine.js\";\nimport { containerStyle, dismissButtonStyle, headerStyle, iframeStyle, msgStyles, msgTextStyle, msgTypeStyle } from \"./overlay/styles.js\";\nvar colors = {\n  reset: [\"transparent\", \"transparent\"],\n  black: \"181818\",\n  red: \"E36049\",\n  green: \"B3CB74\",\n  yellow: \"FFD080\",\n  blue: \"7CAFC2\",\n  magenta: \"7FACCA\",\n  cyan: \"C3C2EF\",\n  lightgrey: \"EBE7E3\",\n  darkgrey: \"6D7891\"\n};\nansiHTML.setColors(colors);\n\n/**\n * @param {string} type\n * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string; stack?: string[] }} item\n * @returns {{ header: string, body: string }}\n */\nfunction formatProblem(type, item) {\n  var header = type === \"warning\" ? \"WARNING\" : \"ERROR\";\n  var body = \"\";\n  if (typeof item === \"string\") {\n    body += item;\n  } else {\n    var file = item.file || \"\";\n    // eslint-disable-next-line no-nested-ternary\n    var moduleName = item.moduleName ? item.moduleName.indexOf(\"!\") !== -1 ? \"\".concat(item.moduleName.replace(/^(\\s|\\S)*!/, \"\"), \" (\").concat(item.moduleName, \")\") : \"\".concat(item.moduleName) : \"\";\n    var loc = item.loc;\n    header += \"\".concat(moduleName || file ? \" in \".concat(moduleName ? \"\".concat(moduleName).concat(file ? \" (\".concat(file, \")\") : \"\") : file).concat(loc ? \" \".concat(loc) : \"\") : \"\");\n    body += item.message || \"\";\n  }\n  if (Array.isArray(item.stack)) {\n    item.stack.forEach(function (stack) {\n      if (typeof stack === \"string\") {\n        body += \"\\r\\n\".concat(stack);\n      }\n    });\n  }\n  return {\n    header: header,\n    body: body\n  };\n}\n\n/**\n * @typedef {Object} CreateOverlayOptions\n * @property {string | null} trustedTypesPolicyName\n * @property {boolean | (error: Error) => void} [catchRuntimeError]\n */\n\n/**\n *\n * @param {CreateOverlayOptions} options\n */\nvar createOverlay = function createOverlay(options) {\n  /** @type {HTMLIFrameElement | null | undefined} */\n  var iframeContainerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var containerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var headerElement;\n  /** @type {Array<(element: HTMLDivElement) => void>} */\n  var onLoadQueue = [];\n  /** @type {TrustedTypePolicy | undefined} */\n  var overlayTrustedTypesPolicy;\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {CSSStyleDeclaration} style\n   */\n  function applyStyle(element, style) {\n    Object.keys(style).forEach(function (prop) {\n      element.style[prop] = style[prop];\n    });\n  }\n\n  /**\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function createContainer(trustedTypesPolicyName) {\n    // Enable Trusted Types if they are available in the current browser.\n    if (window.trustedTypes) {\n      overlayTrustedTypesPolicy = window.trustedTypes.createPolicy(trustedTypesPolicyName || \"webpack-dev-server#overlay\", {\n        createHTML: function createHTML(value) {\n          return value;\n        }\n      });\n    }\n    iframeContainerElement = document.createElement(\"iframe\");\n    iframeContainerElement.id = \"webpack-dev-server-client-overlay\";\n    iframeContainerElement.src = \"about:blank\";\n    applyStyle(iframeContainerElement, iframeStyle);\n    iframeContainerElement.onload = function () {\n      var contentElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      containerElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      contentElement.id = \"webpack-dev-server-client-overlay-div\";\n      applyStyle(contentElement, containerStyle);\n      headerElement = document.createElement(\"div\");\n      headerElement.innerText = \"Compiled with problems:\";\n      applyStyle(headerElement, headerStyle);\n      var closeButtonElement = document.createElement(\"button\");\n      applyStyle(closeButtonElement, dismissButtonStyle);\n      closeButtonElement.innerText = \"×\";\n      closeButtonElement.ariaLabel = \"Dismiss\";\n      closeButtonElement.addEventListener(\"click\", function () {\n        // eslint-disable-next-line no-use-before-define\n        overlayService.send({\n          type: \"DISMISS\"\n        });\n      });\n      contentElement.appendChild(headerElement);\n      contentElement.appendChild(closeButtonElement);\n      contentElement.appendChild(containerElement);\n\n      /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.body.appendChild(contentElement);\n      onLoadQueue.forEach(function (onLoad) {\n        onLoad( /** @type {HTMLDivElement} */contentElement);\n      });\n      onLoadQueue = [];\n\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.onload = null;\n    };\n    document.body.appendChild(iframeContainerElement);\n  }\n\n  /**\n   * @param {(element: HTMLDivElement) => void} callback\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function ensureOverlayExists(callback, trustedTypesPolicyName) {\n    if (containerElement) {\n      containerElement.innerHTML = \"\";\n      // Everything is ready, call the callback right away.\n      callback(containerElement);\n      return;\n    }\n    onLoadQueue.push(callback);\n    if (iframeContainerElement) {\n      return;\n    }\n    createContainer(trustedTypesPolicyName);\n  }\n\n  // Successful compilation.\n  function hide() {\n    if (!iframeContainerElement) {\n      return;\n    }\n\n    // Clean up and reset internal state.\n    document.body.removeChild(iframeContainerElement);\n    iframeContainerElement = null;\n    containerElement = null;\n  }\n\n  // Compilation with errors (e.g. syntax error or missing modules).\n  /**\n   * @param {string} type\n   * @param {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n   * @param {string | null} trustedTypesPolicyName\n   * @param {'build' | 'runtime'} messageSource\n   */\n  function show(type, messages, trustedTypesPolicyName, messageSource) {\n    ensureOverlayExists(function () {\n      headerElement.innerText = messageSource === \"runtime\" ? \"Uncaught runtime errors:\" : \"Compiled with problems:\";\n      messages.forEach(function (message) {\n        var entryElement = document.createElement(\"div\");\n        var msgStyle = type === \"warning\" ? msgStyles.warning : msgStyles.error;\n        applyStyle(entryElement, _objectSpread(_objectSpread({}, msgStyle), {}, {\n          padding: \"1rem 1rem 1.5rem 1rem\"\n        }));\n        var typeElement = document.createElement(\"div\");\n        var _formatProblem = formatProblem(type, message),\n          header = _formatProblem.header,\n          body = _formatProblem.body;\n        typeElement.innerText = header;\n        applyStyle(typeElement, msgTypeStyle);\n        if (message.moduleIdentifier) {\n          applyStyle(typeElement, {\n            cursor: \"pointer\"\n          });\n          // element.dataset not supported in IE\n          typeElement.setAttribute(\"data-can-open\", true);\n          typeElement.addEventListener(\"click\", function () {\n            fetch(\"/webpack-dev-server/open-editor?fileName=\".concat(message.moduleIdentifier));\n          });\n        }\n\n        // Make it look similar to our terminal.\n        var text = ansiHTML(encode(body));\n        var messageTextNode = document.createElement(\"div\");\n        applyStyle(messageTextNode, msgTextStyle);\n        messageTextNode.innerHTML = overlayTrustedTypesPolicy ? overlayTrustedTypesPolicy.createHTML(text) : text;\n        entryElement.appendChild(typeElement);\n        entryElement.appendChild(messageTextNode);\n\n        /** @type {HTMLDivElement} */\n        containerElement.appendChild(entryElement);\n      });\n    }, trustedTypesPolicyName);\n  }\n  var overlayService = createOverlayMachine({\n    showOverlay: function showOverlay(_ref) {\n      var _ref$level = _ref.level,\n        level = _ref$level === void 0 ? \"error\" : _ref$level,\n        messages = _ref.messages,\n        messageSource = _ref.messageSource;\n      return show(level, messages, options.trustedTypesPolicyName, messageSource);\n    },\n    hideOverlay: hide\n  });\n  if (options.catchRuntimeError) {\n    /**\n     * @param {Error | undefined} error\n     * @param {string} fallbackMessage\n     */\n    var handleError = function handleError(error, fallbackMessage) {\n      var errorObject = error instanceof Error ? error : new Error(error || fallbackMessage);\n      var shouldDisplay = typeof options.catchRuntimeError === \"function\" ? options.catchRuntimeError(errorObject) : true;\n      if (shouldDisplay) {\n        overlayService.send({\n          type: \"RUNTIME_ERROR\",\n          messages: [{\n            message: errorObject.message,\n            stack: parseErrorToStacks(errorObject)\n          }]\n        });\n      }\n    };\n    listenToRuntimeError(function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    });\n    listenToUnhandledRejection(function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    });\n  }\n  return overlayService;\n};\nexport { formatProblem, createOverlay };","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * @typedef {Object} StateDefinitions\n * @property {{[event: string]: { target: string; actions?: Array<string> }}} [on]\n */\n\n/**\n * @typedef {Object} Options\n * @property {{[state: string]: StateDefinitions}} states\n * @property {object} context;\n * @property {string} initial\n */\n\n/**\n * @typedef {Object} Implementation\n * @property {{[actionName: string]: (ctx: object, event: any) => object}} actions\n */\n\n/**\n * A simplified `createMachine` from `@xstate/fsm` with the following differences:\n *\n *  - the returned machine is technically a \"service\". No `interpret(machine).start()` is needed.\n *  - the state definition only support `on` and target must be declared with { target: 'nextState', actions: [] } explicitly.\n *  - event passed to `send` must be an object with `type` property.\n *  - actions implementation will be [assign action](https://xstate.js.org/docs/guides/context.html#assign-action) if you return any value.\n *  Do not return anything if you just want to invoke side effect.\n *\n * The goal of this custom function is to avoid installing the entire `'xstate/fsm'` package, while enabling modeling using\n * state machine. You can copy the first parameter into the editor at https://stately.ai/viz to visualize the state machine.\n *\n * @param {Options} options\n * @param {Implementation} implementation\n */\nfunction createMachine(_ref, _ref2) {\n  var states = _ref.states,\n    context = _ref.context,\n    initial = _ref.initial;\n  var actions = _ref2.actions;\n  var currentState = initial;\n  var currentContext = context;\n  return {\n    send: function send(event) {\n      var currentStateOn = states[currentState].on;\n      var transitionConfig = currentStateOn && currentStateOn[event.type];\n      if (transitionConfig) {\n        currentState = transitionConfig.target;\n        if (transitionConfig.actions) {\n          transitionConfig.actions.forEach(function (actName) {\n            var actionImpl = actions[actName];\n            var nextContextValue = actionImpl && actionImpl(currentContext, event);\n            if (nextContextValue) {\n              currentContext = _objectSpread(_objectSpread({}, currentContext), nextContextValue);\n            }\n          });\n        }\n      }\n    }\n  };\n}\nexport default createMachine;","/**\n *\n * @param {Error} error\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  }\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    });\n  }\n}\n\n/**\n * @callback ErrorCallback\n * @param {ErrorEvent} error\n * @returns {void}\n */\n\n/**\n * @param {ErrorCallback} callback\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  };\n}\n\n/**\n * @callback UnhandledRejectionCallback\n * @param {PromiseRejectionEvent} rejectionEvent\n * @returns {void}\n */\n\n/**\n * @param {UnhandledRejectionCallback} callback\n */\nfunction listenToUnhandledRejection(callback) {\n  window.addEventListener(\"unhandledrejection\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"unhandledrejection\", callback);\n  };\n}\nexport { listenToRuntimeError, listenToUnhandledRejection, parseErrorToStacks };","import createMachine from \"./fsm.js\";\n\n/**\n * @typedef {Object} ShowOverlayData\n * @property {'warning' | 'error'} level\n * @property {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n * @property {'build' | 'runtime'} messageSource\n */\n\n/**\n * @typedef {Object} CreateOverlayMachineOptions\n * @property {(data: ShowOverlayData) => void} showOverlay\n * @property {() => void} hideOverlay\n */\n\n/**\n * @param {CreateOverlayMachineOptions} options\n */\nvar createOverlayMachine = function createOverlayMachine(options) {\n  var hideOverlay = options.hideOverlay,\n    showOverlay = options.showOverlay;\n  var overlayMachine = createMachine({\n    initial: \"hidden\",\n    context: {\n      level: \"error\",\n      messages: [],\n      messageSource: \"build\"\n    },\n    states: {\n      hidden: {\n        on: {\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayBuildError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayRuntimeError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      dismissMessages: function dismissMessages() {\n        return {\n          messages: [],\n          level: \"error\",\n          messageSource: \"build\"\n        };\n      },\n      appendMessages: function appendMessages(context, event) {\n        return {\n          messages: context.messages.concat(event.messages),\n          level: event.level || context.level,\n          messageSource: event.type === \"RUNTIME_ERROR\" ? \"runtime\" : \"build\"\n        };\n      },\n      setMessages: function setMessages(context, event) {\n        return {\n          messages: event.messages,\n          level: event.level || context.level,\n          messageSource: event.type === \"RUNTIME_ERROR\" ? \"runtime\" : \"build\"\n        };\n      },\n      hideOverlay: hideOverlay,\n      showOverlay: showOverlay\n    }\n  });\n  return overlayMachine;\n};\nexport default createOverlayMachine;","// styles are inspired by `react-error-overlay`\n\nvar msgStyles = {\n  error: {\n    backgroundColor: \"rgba(206, 17, 38, 0.1)\",\n    color: \"#fccfcf\"\n  },\n  warning: {\n    backgroundColor: \"rgba(251, 245, 180, 0.1)\",\n    color: \"#fbf5b4\"\n  }\n};\nvar iframeStyle = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  border: \"none\",\n  \"z-index\": 9999999999\n};\nvar containerStyle = {\n  position: \"fixed\",\n  boxSizing: \"border-box\",\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  fontSize: \"large\",\n  padding: \"2rem 2rem 4rem 2rem\",\n  lineHeight: \"1.2\",\n  whiteSpace: \"pre-wrap\",\n  overflow: \"auto\",\n  backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n  color: \"white\"\n};\nvar headerStyle = {\n  color: \"#e83b46\",\n  fontSize: \"2em\",\n  whiteSpace: \"pre-wrap\",\n  fontFamily: \"sans-serif\",\n  margin: \"0 2rem 2rem 0\",\n  flex: \"0 0 auto\",\n  maxHeight: \"50%\",\n  overflow: \"auto\"\n};\nvar dismissButtonStyle = {\n  color: \"#ffffff\",\n  lineHeight: \"1rem\",\n  fontSize: \"1.5rem\",\n  padding: \"1rem\",\n  cursor: \"pointer\",\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  backgroundColor: \"transparent\",\n  border: \"none\"\n};\nvar msgTypeStyle = {\n  color: \"#e83b46\",\n  fontSize: \"1.2em\",\n  marginBottom: \"1rem\",\n  fontFamily: \"sans-serif\"\n};\nvar msgTextStyle = {\n  lineHeight: \"1.5\",\n  fontSize: \"1rem\",\n  fontFamily: \"Menlo, Consolas, monospace\"\n};\nexport { msgStyles, iframeStyle, containerStyle, headerStyle, dismissButtonStyle, msgTypeStyle, msgTextStyle };","/* global __webpack_dev_server_client__ */\n\nimport WebSocketClient from \"./clients/WebSocketClient.js\";\nimport { log } from \"./utils/log.js\";\n\n// this WebsocketClient is here as a default fallback, in case the client is not injected\n/* eslint-disable camelcase */\nvar Client =\n// eslint-disable-next-line no-nested-ternary\ntypeof __webpack_dev_server_client__ !== \"undefined\" ? typeof __webpack_dev_server_client__.default !== \"undefined\" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n/* eslint-enable camelcase */\n\nvar retries = 0;\nvar maxRetries = 10;\n\n// Initialized client is exported so external consumers can utilize the same instance\n// It is mutable to enforce singleton\n// eslint-disable-next-line import/no-mutable-exports\nexport var client = null;\n\n/**\n * @param {string} url\n * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n * @param {number} [reconnect]\n */\nvar socket = function initSocket(url, handlers, reconnect) {\n  client = new Client(url);\n  client.onOpen(function () {\n    retries = 0;\n    if (typeof reconnect !== \"undefined\") {\n      maxRetries = reconnect;\n    }\n  });\n  client.onClose(function () {\n    if (retries === 0) {\n      handlers.close();\n    }\n\n    // Try to reconnect.\n    client = null;\n\n    // After 10 retries stop trying, to prevent logspam.\n    if (retries < maxRetries) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      log.info(\"Trying to reconnect...\");\n      setTimeout(function () {\n        socket(url, handlers, reconnect);\n      }, retryInMs);\n    }\n  });\n  client.onMessage(\n  /**\n   * @param {any} data\n   */\n  function (data) {\n    var message = JSON.parse(data);\n    if (handlers[message.type]) {\n      handlers[message.type](message.data, message.params);\n    }\n  });\n};\nexport default socket;","/**\n * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL\n * @returns {string}\n */\nfunction format(objURL) {\n  var protocol = objURL.protocol || \"\";\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  var auth = objURL.auth || \"\";\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, \":\");\n    auth += \"@\";\n  }\n  var host = \"\";\n  if (objURL.hostname) {\n    host = auth + (objURL.hostname.indexOf(\":\") === -1 ? objURL.hostname : \"[\".concat(objURL.hostname, \"]\"));\n    if (objURL.port) {\n      host += \":\".concat(objURL.port);\n    }\n  }\n  var pathname = objURL.pathname || \"\";\n  if (objURL.slashes) {\n    host = \"//\".concat(host || \"\");\n    if (pathname && pathname.charAt(0) !== \"/\") {\n      pathname = \"/\".concat(pathname);\n    }\n  } else if (!host) {\n    host = \"\";\n  }\n  var search = objURL.search || \"\";\n  if (search && search.charAt(0) !== \"?\") {\n    search = \"?\".concat(search);\n  }\n  var hash = objURL.hash || \"\";\n  if (hash && hash.charAt(0) !== \"#\") {\n    hash = \"#\".concat(hash);\n  }\n  pathname = pathname.replace(/[?#]/g,\n  /**\n   * @param {string} match\n   * @returns {string}\n   */\n  function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace(\"#\", \"%23\");\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}\n\n/**\n * @param {URL & { fromCurrentScript?: boolean }} parsedURL\n * @returns {string}\n */\nfunction createSocketURL(parsedURL) {\n  var hostname = parsedURL.hostname;\n\n  // Node.js module parses it as `::`\n  // `new URL(urlString, [baseURLString])` parses it as '[::]'\n  var isInAddrAny = hostname === \"0.0.0.0\" || hostname === \"::\" || hostname === \"[::]\";\n\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf(\"http\") === 0) {\n    hostname = self.location.hostname;\n  }\n  var socketURLProtocol = parsedURL.protocol || self.location.protocol;\n\n  // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.\n  if (socketURLProtocol === \"auto:\" || hostname && isInAddrAny && self.location.protocol === \"https:\") {\n    socketURLProtocol = self.location.protocol;\n  }\n  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, \"ws\");\n  var socketURLAuth = \"\";\n\n  // `new URL(urlString, [baseURLstring])` doesn't have `auth` property\n  // Parse authentication credentials in case we need them\n  if (parsedURL.username) {\n    socketURLAuth = parsedURL.username;\n\n    // Since HTTP basic authentication does not allow empty username,\n    // we only include password if the username is not empty.\n    if (parsedURL.password) {\n      // Result: <username>:<password>\n      socketURLAuth = socketURLAuth.concat(\":\", parsedURL.password);\n    }\n  }\n\n  // In case the host is a raw IPv6 address, it can be enclosed in\n  // the brackets as the brackets are needed in the final URL string.\n  // Need to remove those as url.format blindly adds its own set of brackets\n  // if the host string contains colons. That would lead to non-working\n  // double brackets (e.g. [[::]]) host\n  //\n  // All of these web socket url params are optionally passed in through resourceQuery,\n  // so we need to fall back to the default if they are not provided\n  var socketURLHostname = (hostname || self.location.hostname || \"localhost\").replace(/^\\[(.*)\\]$/, \"$1\");\n  var socketURLPort = parsedURL.port;\n  if (!socketURLPort || socketURLPort === \"0\") {\n    socketURLPort = self.location.port;\n  }\n\n  // If path is provided it'll be passed in via the resourceQuery as a\n  // query param so it has to be parsed out of the querystring in order for the\n  // client to open the socket to the correct location.\n  var socketURLPathname = \"/ws\";\n  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {\n    socketURLPathname = parsedURL.pathname;\n  }\n  return format({\n    protocol: socketURLProtocol,\n    auth: socketURLAuth,\n    hostname: socketURLHostname,\n    port: socketURLPort,\n    pathname: socketURLPathname,\n    slashes: true\n  });\n}\nexport default createSocketURL;","/**\n * @returns {string}\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to find the current script,\n  // but is not supported in all browsers.\n  if (document.currentScript) {\n    return document.currentScript.getAttribute(\"src\");\n  }\n\n  // Fallback to getting all scripts running in the document.\n  var scriptElements = document.scripts || [];\n  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {\n    return element.getAttribute(\"src\");\n  });\n  if (scriptElementsWithSrc.length > 0) {\n    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];\n    return currentScript.getAttribute(\"src\");\n  }\n\n  // Fail as there was no script to use.\n  throw new Error(\"[webpack-dev-server] Failed to get current script source.\");\n}\nexport default getCurrentScriptSource;","import logger from \"../modules/logger/index.js\";\nvar name = \"webpack-dev-server\";\n// default level is set on the client side, so it does not need\n// to be set by the CLI or API\nvar defaultLevel = \"info\";\n\n// options new options, merge with old options\n/**\n * @param {false | true | \"none\" | \"error\" | \"warn\" | \"info\" | \"log\" | \"verbose\"} level\n * @returns {void}\n */\nfunction setLogLevel(level) {\n  logger.configureDefaultLogger({\n    level: level\n  });\n}\nsetLogLevel(defaultLevel);\nvar log = logger.getLogger(name);\nvar logEnabledFeatures = function logEnabledFeatures(features) {\n  var enabledFeatures = Object.keys(features);\n  if (!features || enabledFeatures.length === 0) {\n    return;\n  }\n  var logString = \"Server started:\";\n\n  // Server started: Hot Module Replacement enabled, Live Reloading enabled, Overlay disabled.\n  for (var i = 0; i < enabledFeatures.length; i++) {\n    var key = enabledFeatures[i];\n    logString += \" \".concat(key, \" \").concat(features[key] ? \"enabled\" : \"disabled\", \",\");\n  }\n  // replace last comma with a period\n  logString = logString.slice(0, -1).concat(\".\");\n  log.info(logString);\n};\nexport { log, logEnabledFeatures, setLogLevel };","import getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    var scriptSourceURL;\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {\n      // URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nexport default parseURL;","import hotEmitter from \"webpack/hot/emitter.js\";\nimport { log } from \"./log.js\";\n\n/** @typedef {import(\"../index\").Options} Options\n/** @typedef {import(\"../index\").Status} Status\n\n/**\n * @param {Options} options\n * @param {Status} status\n */\nfunction reloadApp(_ref, status) {\n  var hot = _ref.hot,\n    liveReload = _ref.liveReload;\n  if (status.isUnloading) {\n    return;\n  }\n  var currentHash = status.currentHash,\n    previousHash = status.previousHash;\n  var isInitial = currentHash.indexOf( /** @type {string} */previousHash) >= 0;\n  if (isInitial) {\n    return;\n  }\n\n  /**\n   * @param {Window} rootWindow\n   * @param {number} intervalId\n   */\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info(\"App updated. Reloading...\");\n    rootWindow.location.reload();\n  }\n  var search = self.location.search.toLowerCase();\n  var allowToHot = search.indexOf(\"webpack-dev-server-hot=false\") === -1;\n  var allowToLiveReload = search.indexOf(\"webpack-dev-server-live-reload=false\") === -1;\n  if (hot && allowToHot) {\n    log.info(\"App hot update...\");\n    hotEmitter.emit(\"webpackHotUpdate\", status.currentHash);\n    if (typeof self !== \"undefined\" && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(status.currentHash), \"*\");\n    }\n  }\n  // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload && allowToLiveReload) {\n    var rootWindow = self;\n\n    // use parent window for reload (in case we're in an iframe with no valid src)\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== \"about:\") {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n}\nexport default reloadApp;","/* global __resourceQuery WorkerGlobalScope */\n\n// Send messages to the outside, so plugins can consume it.\n/**\n * @param {string} type\n * @param {any} [data]\n */\nfunction sendMsg(type, data) {\n  if (typeof self !== \"undefined\" && (typeof WorkerGlobalScope === \"undefined\" || !(self instanceof WorkerGlobalScope))) {\n    self.postMessage({\n      type: \"webpack\".concat(type),\n      data: data\n    }, \"*\");\n  }\n}\nexport default sendMsg;","var ansiRegex = new RegExp([\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\"].join(\"|\"), \"g\");\n\n/**\n *\n * Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string.\n * Adapted from code originally released by Sindre Sorhus\n * Licensed the MIT License\n *\n * @param {string} string\n * @return {string}\n */\nfunction stripAnsi(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Expected a `string`, got `\".concat(typeof string, \"`\"));\n  }\n  return string.replace(ansiRegex, \"\");\n}\nexport default stripAnsi;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/* globals __webpack_hash__ */\nif (module.hot) {\n\t/** @type {undefined|string} */\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn /** @type {string} */ (lastHash).indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check(true)\n\t\t\t.then(function (updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot find update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot apply update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","var EventEmitter = require(\"events\");\nmodule.exports = new EventEmitter();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n/**\n * @param {(string | number)[]} updatedModules updated modules\n * @param {(string | number)[] | null} renewedModules renewed modules\n */\nmodule.exports = function (updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function (moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function (moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function (moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function (moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t'[HMR] Consider using the optimization.moduleIds: \"named\" for module names.'\n\t\t\t);\n\t}\n};\n","/** @typedef {\"info\" | \"warning\" | \"error\"} LogLevel */\n\n/** @type {LogLevel} */\nvar logLevel = \"info\";\n\nfunction dummy() {}\n\n/**\n * @param {LogLevel} level log level\n * @returns {boolean} true, if should log\n */\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\n/**\n * @param {(msg?: string) => void} logFn log function\n * @returns {(level: LogLevel, msg?: string) => void} function that logs when log level is sufficient\n */\nfunction logGroup(logFn) {\n\treturn function (level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\n/**\n * @param {LogLevel} level log level\n * @param {string|Error} msg message\n */\nmodule.exports = function (level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\n/**\n * @param {LogLevel} level log level\n */\nmodule.exports.setLogLevel = function (level) {\n\tlogLevel = level;\n};\n\n/**\n * @param {Error} err error\n * @returns {string} formatted error\n */\nmodule.exports.formatError = function (err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionary = void 0;\nconst list_1 = require(\"../list/list\");\nconst exception_1 = require(\"../../exception/exception\");\n/**\n * Default dictionary.\n */\nclass Dictionary extends Map {\n    /**\n     * Add value and key to dictionary.\n     * @param pKey - Key of item.\n     * @param pValue - value of item.\n     */\n    add(pKey, pValue) {\n        // Add value and key to containers.\n        if (!this.has(pKey)) {\n            this.set(pKey, pValue);\n        }\n        else {\n            throw new exception_1.Exception(\"Can't add dublicate key to dictionary.\", this);\n        }\n    }\n    /**\n     * Get all keys that have the set value.\n     * @param pValue - Value.\n     */\n    getAllKeysOfValue(pValue) {\n        // Add entires iterator to list and filter for pValue = Value\n        const lKeyValuesWithValue = list_1.List.newListWith(...this.entries()).filter((pItem) => {\n            return pItem[1] === pValue;\n        });\n        // Get only keys of key values.\n        const lKeysOfKeyValue = lKeyValuesWithValue.map((pItem) => {\n            return pItem[0];\n        });\n        return lKeysOfKeyValue;\n    }\n    /**\n     * Get item of dictionary. If key does not exists the default value gets returned.\n     * @param pKey - key of item.\n     * @param pDefault - Default value if key was not found.\n     */\n    getOrDefault(pKey, pDefault) {\n        const lValue = this.get(pKey);\n        if (typeof lValue !== 'undefined') {\n            return lValue;\n        }\n        else {\n            return pDefault;\n        }\n    }\n    /**\n     * Maps information into new list.\n     * @param pFunction - Mapping funktion.\n     */\n    map(pFunction) {\n        const lResultList = new list_1.List();\n        for (const lKeyValuePair of this) {\n            // Execute callback and add result to list.\n            const lMappingResult = pFunction(lKeyValuePair[0], lKeyValuePair[1]);\n            lResultList.push(lMappingResult);\n        }\n        return lResultList;\n    }\n}\nexports.Dictionary = Dictionary;\n//# sourceMappingURL=dictionary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.List = void 0;\n/**\n * Extended array functionality.\n */\nclass List extends Array {\n    /**\n     * Create list and add items.\n     * @param pItemList - Items.\n     */\n    static newListWith(...pItemList) {\n        const lNewList = new List();\n        lNewList.push(...pItemList);\n        return lNewList;\n    }\n    /**\n     * Clear list.\n     */\n    clear() {\n        this.splice(0, this.length);\n    }\n    /**\n     * Copy first layer of object.\n     */\n    clone() {\n        return List.newListWith(...this);\n    }\n    /**\n     * Distinct values inside list.\n     */\n    distinct() {\n        const lSelf = this;\n        // Get all values where index is same index as first index of first appearance.\n        const lDistinctArray = this.filter((pValue, pIndex) => {\n            return lSelf.indexOf(pValue) === pIndex;\n        });\n        return List.newListWith(...lDistinctArray);\n    }\n    /**\n     * Check if arrays are the same.\n     * @param pArray - Array.\n     */\n    equals(pArray) {\n        // Check if array are same, dont null and have same length.\n        if (this === pArray) {\n            return true;\n        }\n        else if (!pArray || this.length !== pArray.length) {\n            return false;\n        }\n        // Check each item.\n        for (let lIndex = 0; lIndex < this.length; ++lIndex) {\n            if (this[lIndex] !== pArray[lIndex]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Removes the first appearence of value.\n     * @param pValue - value requested for removement.\n     */\n    remove(pValue) {\n        const lFoundIndex = this.indexOf(pValue);\n        // Only remove if found.\n        if (lFoundIndex !== -1) {\n            return this.splice(lFoundIndex, 1)[0];\n        }\n        return undefined;\n    }\n    /**\n     * Replace first appearence of value.\n     * @param pOldValue - Target value to replace.\n     * @param pNewValue - Replacement value.\n     */\n    replace(pOldValue, pNewValue) {\n        const lFoundIndex = this.indexOf(pOldValue);\n        // Only replace if found.\n        if (lFoundIndex !== -1) {\n            // Save old value and replace it with new value.\n            const lOldValue = this[lFoundIndex];\n            this[lFoundIndex] = pNewValue;\n            return lOldValue;\n        }\n        return undefined;\n    }\n    /**\n     * List to string.\n     */\n    toString() {\n        return `[${super.join(', ')}]`;\n    }\n}\nexports.List = List;\n//# sourceMappingURL=list.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTree = void 0;\nconst dictionary_1 = require(\"../dictionary/dictionary\");\nconst list_1 = require(\"../list/list\");\n/**\n * BaseTree with generic path.\n */\nclass BaseTree {\n    /**\n     * Get all child branches of branch.\n     */\n    get branchList() {\n        return list_1.List.newListWith(...this.mBranches.values());\n    }\n    /**\n     * Get parent branch.\n     */\n    get parent() {\n        return this.mParent;\n    }\n    /**\n     * Constructor.\n     * Basic initialization.\n     */\n    constructor() {\n        this.mBranches = new dictionary_1.Dictionary();\n        this.mParent = null;\n    }\n    /**\n     * Adds new branch to tree.\n     * Does nothing if branch already exists.\n     * Returns last added branch.\n     * @param pBranchPath -  Branch to add.\n     */\n    addBranch(...pBranchPath) {\n        // If new branch can be added.\n        if (pBranchPath.length !== 0) {\n            const lCurrentBranchKey = pBranchPath.splice(0, 1)[0];\n            // Create new branch if not created.\n            if (!this.mBranches.has(lCurrentBranchKey)) {\n                // Set this as new branch parent.\n                const lNewBranch = this.createNewBranch(lCurrentBranchKey);\n                lNewBranch.mParent = this;\n                this.mBranches.add(lCurrentBranchKey, lNewBranch);\n            }\n            // Add next branch path.\n            const lCurrentBranch = this.mBranches.get(lCurrentBranchKey);\n            return lCurrentBranch.addBranch(...pBranchPath);\n        }\n        return this;\n    }\n    /**\n     * Get all paths of tree.\n     * @param pPath - Additional paths.\n     */\n    getAllPaths() {\n        return this.extendPath(new list_1.List());\n    }\n    /**\n     * Get Tree by branch path. Return undefined if no branch was found.\n     * @param pBranchPath - Branch path.\n     */\n    getBranch(...pBranchPath) {\n        // If no path was specified. Return this tree.\n        if (pBranchPath.length === 0) {\n            return this;\n        }\n        // Check if this tree has branch\n        if (this.mBranches.has(pBranchPath[0])) {\n            // remove first item in branch and safe.\n            const lCurrentLocationBranchValue = pBranchPath.splice(0, 1)[0];\n            const lCurrentLocationBranch = this.mBranches.get(lCurrentLocationBranchValue);\n            // Seach branch in next tree with modified path.\n            return lCurrentLocationBranch.getBranch(...pBranchPath);\n        }\n        // No branch found.\n        return undefined;\n    }\n    /**\n     * Check if path exists.\n     * Path specifed path doesn't need to have values.\n     * @param pBranchPath - Path to branch.\n     */\n    hasPath(...pBranchPath) {\n        return !!this.getBranch(...pBranchPath);\n    }\n    /**\n     * Removes branch by path.\n     * Returns undefined if branch does not exist.\n     * @param pBranchPath - Path to branch.\n     */\n    removeBranch(...pBranchPath) {\n        const lFoundBranch = this.getBranch(...pBranchPath);\n        // Check if parameter or branch exists.\n        if (pBranchPath.length === 0 || !lFoundBranch) {\n            return undefined;\n        }\n        else if (pBranchPath.length === 1) {\n            const lFirstBranchPathValue = pBranchPath[0];\n            // Remove branch if path has only one level.\n            // Does not throw if no element was found.\n            const lRemovedBranch = this.mBranches.get(lFirstBranchPathValue);\n            this.mBranches.delete(lFirstBranchPathValue);\n            // Remove parent and return.\n            lRemovedBranch.mParent = null;\n            return lRemovedBranch;\n        }\n        // Get parent and remove branch last path element. Parent of child is always set.\n        const lParentBranch = lFoundBranch.parent;\n        return lParentBranch.removeBranch(pBranchPath.pop());\n    }\n    /**\n     * Extends specified path with all possible paths of current tree branches.\n     * @param pStartingPath - Staring path.\n     */\n    extendPath(pStartingPath) {\n        const lExtendedPaths = new Array();\n        // Get extended path of all branches.\n        for (const lBranchKey of this.mBranches.keys()) {\n            const lBranchPath = list_1.List.newListWith(...pStartingPath, lBranchKey);\n            // Add path to current branch.\n            lExtendedPaths.push(lBranchPath);\n            // Get all paths of branch.\n            const lBranch = this.mBranches.get(lBranchKey);\n            lExtendedPaths.push(...lBranch.extendPath(lBranchPath));\n        }\n        return lExtendedPaths;\n    }\n}\nexports.BaseTree = BaseTree;\n//# sourceMappingURL=base-tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTree = void 0;\nconst base_tree_1 = require(\"./base-tree\");\nconst list_1 = require(\"../list/list\");\n/**\n * Tree with additional item list.\n */\nclass ListTree extends base_tree_1.BaseTree {\n    /**\n     * Get all items of this branch and all of its childs.\n     */\n    get deepItemList() {\n        return this.getDeepItemList();\n    }\n    /**\n     * Get item of this branch\n     */\n    get itemList() {\n        return this.mItemList.clone();\n    }\n    /**\n     * Initialise list.\n     */\n    constructor() {\n        super();\n        this.mItemList = new list_1.List();\n    }\n    /**\n     * Add items to branch.\n     * @param pItemList - Item list.\n     */\n    addItem(...pItemList) {\n        this.mItemList.push(...pItemList);\n        return this;\n    }\n    /**\n     * Creates new branch.\n     * @param pBranchKey - Branch key for new branch.\n     */\n    createNewBranch(_pBranchKey) {\n        return new ListTree();\n    }\n    /**\n     * Get all listed items on branch and its childs.\n     */\n    getDeepItemList() {\n        const lFoundItems = list_1.List.newListWith(...this.mItemList);\n        // Find all items recurive.\n        for (const lBranch of this.branchList) {\n            lFoundItems.push(...lBranch.getDeepItemList());\n        }\n        return lFoundItems;\n    }\n}\nexports.ListTree = ListTree;\n//# sourceMappingURL=list-tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst base_tree_1 = require(\"./base-tree\");\n/**\n * Tree with generic path.\n */\nclass Tree extends base_tree_1.BaseTree {\n    /**\n     * Create new emtpy branch.\n     */\n    createNewBranch(_pBranchKey) {\n        return new Tree();\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Exception = void 0;\n/**\n * Basic exception.\n */\nclass Exception extends Error {\n    /**\n     * Target exception throws.\n     */\n    get target() {\n        return this.mTarget;\n    }\n    /**\n     * Constructor. Create exception.\n     * @param pMessage - Messsage of exception.\n     * @param pTarget - Target exception throws.\n     */\n    constructor(pMessage, pTarget) {\n        super(pMessage);\n        this.mTarget = pTarget;\n    }\n}\nexports.Exception = Exception;\n//# sourceMappingURL=exception.js.map","\"use strict\";\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeUtil = exports.EnumUtil = exports.Exception = exports.Tree = exports.ListTree = exports.List = exports.Dictionary = void 0;\n// Container.\nvar dictionary_1 = require(\"./data_container/dictionary/dictionary\");\nObject.defineProperty(exports, \"Dictionary\", { enumerable: true, get: function () { return dictionary_1.Dictionary; } });\nvar list_1 = require(\"./data_container/list/list\");\nObject.defineProperty(exports, \"List\", { enumerable: true, get: function () { return list_1.List; } });\nvar list_tree_1 = require(\"./data_container/tree/list-tree\");\nObject.defineProperty(exports, \"ListTree\", { enumerable: true, get: function () { return list_tree_1.ListTree; } });\nvar tree_1 = require(\"./data_container/tree/tree\");\nObject.defineProperty(exports, \"Tree\", { enumerable: true, get: function () { return tree_1.Tree; } });\nvar exception_1 = require(\"./exception/exception\");\nObject.defineProperty(exports, \"Exception\", { enumerable: true, get: function () { return exception_1.Exception; } });\n// Handler.\nvar enum_util_1 = require(\"./util/enum-util\");\nObject.defineProperty(exports, \"EnumUtil\", { enumerable: true, get: function () { return enum_util_1.EnumUtil; } });\nvar type_util_1 = require(\"./util/type-util\");\nObject.defineProperty(exports, \"TypeUtil\", { enumerable: true, get: function () { return type_util_1.TypeUtil; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumUtil = void 0;\n/**\n * Enumaration helper.\n */\nclass EnumUtil {\n    /**\n     * Return enum of enum value.\n     * @param pEnum - typeof Enum object.\n     * @param pValue - Value of enum.\n     */\n    static enumKeyByValue(pEnum, pValue) {\n        // Thats it... :)\n        if (EnumUtil.enumValueExists(pEnum, pValue)) {\n            return pValue;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Return all keys of an enum as array.\n     * @param pEnum - typeof Enum object.\n     */\n    static enumNamesToArray(pEnum) {\n        // Convert enum to key array.\n        return Object.keys(pEnum).filter((pKey) => isNaN(Number(pKey)));\n    }\n    /**\n     * Check if value exists in enum object.\n     * @param pEnum - typeof Enum object.\n     * @param pValue - Value of enum.\n     */\n    static enumValueExists(pEnum, pValue) {\n        return EnumUtil.enumValuesToArray(pEnum).includes(pValue);\n    }\n    /**\n     * Return all values of an enum as array.\n     * @param pEnum - typeof Enum object.\n     */\n    static enumValuesToArray(pEnum) {\n        const lEnumValues = new Array();\n        // Convert enum to vaue array by iterating over all keys.\n        for (const lKey of EnumUtil.enumNamesToArray(pEnum)) {\n            lEnumValues.push(pEnum[lKey]);\n        }\n        return lEnumValues;\n    }\n}\nexports.EnumUtil = EnumUtil;\n//# sourceMappingURL=enum-util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeUtil = void 0;\n/**\n * Type helper.\n */\nclass TypeUtil {\n    /**\n     * Check existence of a member name and return that name.\n     * @param pName - Property name.\n     */\n    static nameOf(pName) {\n        return pName;\n    }\n}\nexports.TypeUtil = TypeUtil;\n//# sourceMappingURL=type-util.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\tif (cachedModule.error !== undefined) throw cachedModule.error;\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\ttry {\n\t\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\t\tmodule = execOptions.module;\n\t\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\t} catch(e) {\n\t\tmodule.error = e;\n\t\tthrow e;\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference all chunks\n__webpack_require__.hu = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".hot-update.js\";\n};","__webpack_require__.hmrF = () => (\"main.\" + __webpack_require__.h() + \".hot-update.json\");","__webpack_require__.h = () => (\"df15d20b32f048841719\")","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"Page:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var currentModuleData = {};\nvar installedModules = __webpack_require__.c;\n\n// module and require creation\nvar currentChildModule;\nvar currentParents = [];\n\n// status\nvar registeredStatusHandlers = [];\nvar currentStatus = \"idle\";\n\n// while downloading\nvar blockingPromises = 0;\nvar blockingPromisesWaiting = [];\n\n// The update info\nvar currentUpdateApplyHandlers;\nvar queuedInvalidatedModules;\n\n// eslint-disable-next-line no-unused-vars\n__webpack_require__.hmrD = currentModuleData;\n\n__webpack_require__.i.push(function (options) {\n\tvar module = options.module;\n\tvar require = createRequire(options.require, options.id);\n\tmodule.hot = createModuleHotObject(options.id, module);\n\tmodule.parents = currentParents;\n\tmodule.children = [];\n\tcurrentParents = [];\n\toptions.require = require;\n});\n\n__webpack_require__.hmrC = {};\n__webpack_require__.hmrI = {};\n\nfunction createRequire(require, moduleId) {\n\tvar me = installedModules[moduleId];\n\tif (!me) return require;\n\tvar fn = function (request) {\n\t\tif (me.hot.active) {\n\t\t\tif (installedModules[request]) {\n\t\t\t\tvar parents = installedModules[request].parents;\n\t\t\t\tif (parents.indexOf(moduleId) === -1) {\n\t\t\t\t\tparents.push(moduleId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentParents = [moduleId];\n\t\t\t\tcurrentChildModule = request;\n\t\t\t}\n\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\tme.children.push(request);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\trequest +\n\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\tmoduleId\n\t\t\t);\n\t\t\tcurrentParents = [];\n\t\t}\n\t\treturn require(request);\n\t};\n\tvar createPropertyDescriptor = function (name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn require[name];\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\trequire[name] = value;\n\t\t\t}\n\t\t};\n\t};\n\tfor (var name in require) {\n\t\tif (Object.prototype.hasOwnProperty.call(require, name) && name !== \"e\") {\n\t\t\tObject.defineProperty(fn, name, createPropertyDescriptor(name));\n\t\t}\n\t}\n\tfn.e = function (chunkId) {\n\t\treturn trackBlockingPromise(require.e(chunkId));\n\t};\n\treturn fn;\n}\n\nfunction createModuleHotObject(moduleId, me) {\n\tvar _main = currentChildModule !== moduleId;\n\tvar hot = {\n\t\t// private stuff\n\t\t_acceptedDependencies: {},\n\t\t_acceptedErrorHandlers: {},\n\t\t_declinedDependencies: {},\n\t\t_selfAccepted: false,\n\t\t_selfDeclined: false,\n\t\t_selfInvalidated: false,\n\t\t_disposeHandlers: [],\n\t\t_main: _main,\n\t\t_requireSelf: function () {\n\t\t\tcurrentParents = me.parents.slice();\n\t\t\tcurrentChildModule = _main ? undefined : moduleId;\n\t\t\t__webpack_require__(moduleId);\n\t\t},\n\n\t\t// Module API\n\t\tactive: true,\n\t\taccept: function (dep, callback, errorHandler) {\n\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\telse if (typeof dep === \"object\" && dep !== null) {\n\t\t\t\tfor (var i = 0; i < dep.length; i++) {\n\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function () {};\n\t\t\t\t\thot._acceptedErrorHandlers[dep[i]] = errorHandler;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thot._acceptedDependencies[dep] = callback || function () {};\n\t\t\t\thot._acceptedErrorHandlers[dep] = errorHandler;\n\t\t\t}\n\t\t},\n\t\tdecline: function (dep) {\n\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t},\n\t\tdispose: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\taddDisposeHandler: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\tremoveDisposeHandler: function (callback) {\n\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t},\n\t\tinvalidate: function () {\n\t\t\tthis._selfInvalidated = true;\n\t\t\tswitch (currentStatus) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\tcurrentUpdateApplyHandlers = [];\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetStatus(\"ready\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prepare\":\n\t\t\t\tcase \"check\":\n\t\t\t\tcase \"dispose\":\n\t\t\t\tcase \"apply\":\n\t\t\t\t\t(queuedInvalidatedModules = queuedInvalidatedModules || []).push(\n\t\t\t\t\t\tmoduleId\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// ignore requests in error states\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// Management API\n\t\tcheck: hotCheck,\n\t\tapply: hotApply,\n\t\tstatus: function (l) {\n\t\t\tif (!l) return currentStatus;\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\taddStatusHandler: function (l) {\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\tremoveStatusHandler: function (l) {\n\t\t\tvar idx = registeredStatusHandlers.indexOf(l);\n\t\t\tif (idx >= 0) registeredStatusHandlers.splice(idx, 1);\n\t\t},\n\n\t\t//inherit from previous dispose call\n\t\tdata: currentModuleData[moduleId]\n\t};\n\tcurrentChildModule = undefined;\n\treturn hot;\n}\n\nfunction setStatus(newStatus) {\n\tcurrentStatus = newStatus;\n\tvar results = [];\n\n\tfor (var i = 0; i < registeredStatusHandlers.length; i++)\n\t\tresults[i] = registeredStatusHandlers[i].call(null, newStatus);\n\n\treturn Promise.all(results);\n}\n\nfunction unblock() {\n\tif (--blockingPromises === 0) {\n\t\tsetStatus(\"ready\").then(function () {\n\t\t\tif (blockingPromises === 0) {\n\t\t\t\tvar list = blockingPromisesWaiting;\n\t\t\t\tblockingPromisesWaiting = [];\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlist[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction trackBlockingPromise(promise) {\n\tswitch (currentStatus) {\n\t\tcase \"ready\":\n\t\t\tsetStatus(\"prepare\");\n\t\t/* fallthrough */\n\t\tcase \"prepare\":\n\t\t\tblockingPromises++;\n\t\t\tpromise.then(unblock, unblock);\n\t\t\treturn promise;\n\t\tdefault:\n\t\t\treturn promise;\n\t}\n}\n\nfunction waitForBlockingPromises(fn) {\n\tif (blockingPromises === 0) return fn();\n\treturn new Promise(function (resolve) {\n\t\tblockingPromisesWaiting.push(function () {\n\t\t\tresolve(fn());\n\t\t});\n\t});\n}\n\nfunction hotCheck(applyOnUpdate) {\n\tif (currentStatus !== \"idle\") {\n\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t}\n\treturn setStatus(\"check\")\n\t\t.then(__webpack_require__.hmrM)\n\t\t.then(function (update) {\n\t\t\tif (!update) {\n\t\t\t\treturn setStatus(applyInvalidatedModules() ? \"ready\" : \"idle\").then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn setStatus(\"prepare\").then(function () {\n\t\t\t\tvar updatedModules = [];\n\t\t\t\tcurrentUpdateApplyHandlers = [];\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tObject.keys(__webpack_require__.hmrC).reduce(function (\n\t\t\t\t\t\tpromises,\n\t\t\t\t\t\tkey\n\t\t\t\t\t) {\n\t\t\t\t\t\t__webpack_require__.hmrC[key](\n\t\t\t\t\t\t\tupdate.c,\n\t\t\t\t\t\t\tupdate.r,\n\t\t\t\t\t\t\tupdate.m,\n\t\t\t\t\t\t\tpromises,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers,\n\t\t\t\t\t\t\tupdatedModules\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn promises;\n\t\t\t\t\t},\n\t\t\t\t\t[])\n\t\t\t\t).then(function () {\n\t\t\t\t\treturn waitForBlockingPromises(function () {\n\t\t\t\t\t\tif (applyOnUpdate) {\n\t\t\t\t\t\t\treturn internalApply(applyOnUpdate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn setStatus(\"ready\").then(function () {\n\t\t\t\t\t\t\t\treturn updatedModules;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n}\n\nfunction hotApply(options) {\n\tif (currentStatus !== \"ready\") {\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow new Error(\n\t\t\t\t\"apply() is only allowed in ready status (state: \" +\n\t\t\t\t\tcurrentStatus +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t});\n\t}\n\treturn internalApply(options);\n}\n\nfunction internalApply(options) {\n\toptions = options || {};\n\n\tapplyInvalidatedModules();\n\n\tvar results = currentUpdateApplyHandlers.map(function (handler) {\n\t\treturn handler(options);\n\t});\n\tcurrentUpdateApplyHandlers = undefined;\n\n\tvar errors = results\n\t\t.map(function (r) {\n\t\t\treturn r.error;\n\t\t})\n\t\t.filter(Boolean);\n\n\tif (errors.length > 0) {\n\t\treturn setStatus(\"abort\").then(function () {\n\t\t\tthrow errors[0];\n\t\t});\n\t}\n\n\t// Now in \"dispose\" phase\n\tvar disposePromise = setStatus(\"dispose\");\n\n\tresults.forEach(function (result) {\n\t\tif (result.dispose) result.dispose();\n\t});\n\n\t// Now in \"apply\" phase\n\tvar applyPromise = setStatus(\"apply\");\n\n\tvar error;\n\tvar reportError = function (err) {\n\t\tif (!error) error = err;\n\t};\n\n\tvar outdatedModules = [];\n\tresults.forEach(function (result) {\n\t\tif (result.apply) {\n\t\t\tvar modules = result.apply(reportError);\n\t\t\tif (modules) {\n\t\t\t\tfor (var i = 0; i < modules.length; i++) {\n\t\t\t\t\toutdatedModules.push(modules[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn Promise.all([disposePromise, applyPromise]).then(function () {\n\t\t// handle errors in accept handlers and self accepted module load\n\t\tif (error) {\n\t\t\treturn setStatus(\"fail\").then(function () {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\n\t\tif (queuedInvalidatedModules) {\n\t\t\treturn internalApply(options).then(function (list) {\n\t\t\t\toutdatedModules.forEach(function (moduleId) {\n\t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n\t\t\t\t});\n\t\t\t\treturn list;\n\t\t\t});\n\t\t}\n\n\t\treturn setStatus(\"idle\").then(function () {\n\t\t\treturn outdatedModules;\n\t\t});\n\t});\n}\n\nfunction applyInvalidatedModules() {\n\tif (queuedInvalidatedModules) {\n\t\tif (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];\n\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\tqueuedInvalidatedModules.forEach(function (moduleId) {\n\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tqueuedInvalidatedModules = undefined;\n\t\treturn true;\n\t}\n}","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../dist/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\nvar currentUpdatedModulesList;\nvar waitingUpdateResolves = {};\nfunction loadUpdateChunk(chunkId, updatedModulesList) {\n\tcurrentUpdatedModulesList = updatedModulesList;\n\treturn new Promise((resolve, reject) => {\n\t\twaitingUpdateResolves[chunkId] = resolve;\n\t\t// start update chunk loading\n\t\tvar url = __webpack_require__.p + __webpack_require__.hu(chunkId);\n\t\t// create error before stack unwound to get useful stacktrace later\n\t\tvar error = new Error();\n\t\tvar loadingEnded = (event) => {\n\t\t\tif(waitingUpdateResolves[chunkId]) {\n\t\t\t\twaitingUpdateResolves[chunkId] = undefined\n\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\terror.message = 'Loading hot update chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\terror.type = errorType;\n\t\t\t\terror.request = realSrc;\n\t\t\t\treject(error);\n\t\t\t}\n\t\t};\n\t\t__webpack_require__.l(url, loadingEnded);\n\t});\n}\n\nself[\"webpackHotUpdatePage\"] = (chunkId, moreModules, runtime) => {\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\tcurrentUpdate[moduleId] = moreModules[moduleId];\n\t\t\tif(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\n\t\t}\n\t}\n\tif(runtime) currentUpdateRuntime.push(runtime);\n\tif(waitingUpdateResolves[chunkId]) {\n\t\twaitingUpdateResolves[chunkId]();\n\t\twaitingUpdateResolves[chunkId] = undefined;\n\t}\n};\n\nvar currentUpdateChunks;\nvar currentUpdate;\nvar currentUpdateRemovedChunks;\nvar currentUpdateRuntime;\nfunction applyHandler(options) {\n\tif (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;\n\tcurrentUpdateChunks = undefined;\n\tfunction getAffectedModuleEffects(updateModuleId) {\n\t\tvar outdatedModules = [updateModuleId];\n\t\tvar outdatedDependencies = {};\n\n\t\tvar queue = outdatedModules.map(function (id) {\n\t\t\treturn {\n\t\t\t\tchain: [id],\n\t\t\t\tid: id\n\t\t\t};\n\t\t});\n\t\twhile (queue.length > 0) {\n\t\t\tvar queueItem = queue.pop();\n\t\t\tvar moduleId = queueItem.id;\n\t\t\tvar chain = queueItem.chain;\n\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\tif (\n\t\t\t\t!module ||\n\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n\t\t\t)\n\t\t\t\tcontinue;\n\t\t\tif (module.hot._selfDeclined) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"self-declined\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (module.hot._main) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"unaccepted\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n\t\t\t\tvar parentId = module.parents[i];\n\t\t\t\tvar parent = __webpack_require__.c[parentId];\n\t\t\t\tif (!parent) continue;\n\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"declined\",\n\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n\t\t\t\t\tif (!outdatedDependencies[parentId])\n\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdelete outdatedDependencies[parentId];\n\t\t\t\toutdatedModules.push(parentId);\n\t\t\t\tqueue.push({\n\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\tid: parentId\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"accepted\",\n\t\t\tmoduleId: updateModuleId,\n\t\t\toutdatedModules: outdatedModules,\n\t\t\toutdatedDependencies: outdatedDependencies\n\t\t};\n\t}\n\n\tfunction addAllToSet(a, b) {\n\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\tvar item = b[i];\n\t\t\tif (a.indexOf(item) === -1) a.push(item);\n\t\t}\n\t}\n\n\t// at begin all updates modules are outdated\n\t// the \"outdated\" status can propagate to parents if they don't accept the children\n\tvar outdatedDependencies = {};\n\tvar outdatedModules = [];\n\tvar appliedUpdate = {};\n\n\tvar warnUnexpectedRequire = function warnUnexpectedRequire(module) {\n\t\tconsole.warn(\n\t\t\t\"[HMR] unexpected require(\" + module.id + \") to disposed module\"\n\t\t);\n\t};\n\n\tfor (var moduleId in currentUpdate) {\n\t\tif (__webpack_require__.o(currentUpdate, moduleId)) {\n\t\t\tvar newModuleFactory = currentUpdate[moduleId];\n\t\t\t/** @type {TODO} */\n\t\t\tvar result;\n\t\t\tif (newModuleFactory) {\n\t\t\t\tresult = getAffectedModuleEffects(moduleId);\n\t\t\t} else {\n\t\t\t\tresult = {\n\t\t\t\t\ttype: \"disposed\",\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\t/** @type {Error|false} */\n\t\t\tvar abortError = false;\n\t\t\tvar doApply = false;\n\t\t\tvar doDispose = false;\n\t\t\tvar chainInfo = \"\";\n\t\t\tif (result.chain) {\n\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n\t\t\t}\n\t\t\tswitch (result.type) {\n\t\t\t\tcase \"self-declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\t\t\tresult.parentId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unaccepted\":\n\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n\t\t\t\t\tif (!options.ignoreUnaccepted)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"accepted\":\n\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n\t\t\t\t\tdoApply = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disposed\":\n\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n\t\t\t\t\tdoDispose = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n\t\t\t}\n\t\t\tif (abortError) {\n\t\t\t\treturn {\n\t\t\t\t\terror: abortError\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (doApply) {\n\t\t\t\tappliedUpdate[moduleId] = newModuleFactory;\n\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n\t\t\t\t\tif (__webpack_require__.o(result.outdatedDependencies, moduleId)) {\n\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n\t\t\t\t\t\taddAllToSet(\n\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (doDispose) {\n\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentUpdate = undefined;\n\n\t// Store self accepted outdated modules to require them later by the module system\n\tvar outdatedSelfAcceptedModules = [];\n\tfor (var j = 0; j < outdatedModules.length; j++) {\n\t\tvar outdatedModuleId = outdatedModules[j];\n\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\tif (\n\t\t\tmodule &&\n\t\t\t(module.hot._selfAccepted || module.hot._main) &&\n\t\t\t// removed self-accepted modules should not be required\n\t\t\tappliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&\n\t\t\t// when called invalidate self-accepting is not possible\n\t\t\t!module.hot._selfInvalidated\n\t\t) {\n\t\t\toutdatedSelfAcceptedModules.push({\n\t\t\t\tmodule: outdatedModuleId,\n\t\t\t\trequire: module.hot._requireSelf,\n\t\t\t\terrorHandler: module.hot._selfAccepted\n\t\t\t});\n\t\t}\n\t}\n\n\tvar moduleOutdatedDependencies;\n\n\treturn {\n\t\tdispose: function () {\n\t\t\tcurrentUpdateRemovedChunks.forEach(function (chunkId) {\n\t\t\t\tdelete installedChunks[chunkId];\n\t\t\t});\n\t\t\tcurrentUpdateRemovedChunks = undefined;\n\n\t\t\tvar idx;\n\t\t\tvar queue = outdatedModules.slice();\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tvar moduleId = queue.pop();\n\t\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\t\tif (!module) continue;\n\n\t\t\t\tvar data = {};\n\n\t\t\t\t// Call dispose handlers\n\t\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n\t\t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n\t\t\t\t\tdisposeHandlers[j].call(null, data);\n\t\t\t\t}\n\t\t\t\t__webpack_require__.hmrD[moduleId] = data;\n\n\t\t\t\t// disable module (this disables requires from this module)\n\t\t\t\tmodule.hot.active = false;\n\n\t\t\t\t// remove module from cache\n\t\t\t\tdelete __webpack_require__.c[moduleId];\n\n\t\t\t\t// when disposing there is no need to call dispose handler\n\t\t\t\tdelete outdatedDependencies[moduleId];\n\n\t\t\t\t// remove \"parents\" references from all children\n\t\t\t\tfor (j = 0; j < module.children.length; j++) {\n\t\t\t\t\tvar child = __webpack_require__.c[module.children[j]];\n\t\t\t\t\tif (!child) continue;\n\t\t\t\t\tidx = child.parents.indexOf(moduleId);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tchild.parents.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove outdated dependency from module children\n\t\t\tvar dependency;\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tmodule = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tidx = module.children.indexOf(dependency);\n\t\t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tapply: function (reportError) {\n\t\t\t// insert new code\n\t\t\tfor (var updateModuleId in appliedUpdate) {\n\t\t\t\tif (__webpack_require__.o(appliedUpdate, updateModuleId)) {\n\t\t\t\t\t__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// run new runtime modules\n\t\t\tfor (var i = 0; i < currentUpdateRuntime.length; i++) {\n\t\t\t\tcurrentUpdateRuntime[i](__webpack_require__);\n\t\t\t}\n\n\t\t\t// call accept handlers\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tvar callbacks = [];\n\t\t\t\t\t\tvar errorHandlers = [];\n\t\t\t\t\t\tvar dependenciesForCallbacks = [];\n\t\t\t\t\t\tfor (var j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tvar acceptCallback =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedDependencies[dependency];\n\t\t\t\t\t\t\tvar errorHandler =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedErrorHandlers[dependency];\n\t\t\t\t\t\t\tif (acceptCallback) {\n\t\t\t\t\t\t\t\tif (callbacks.indexOf(acceptCallback) !== -1) continue;\n\t\t\t\t\t\t\t\tcallbacks.push(acceptCallback);\n\t\t\t\t\t\t\t\terrorHandlers.push(errorHandler);\n\t\t\t\t\t\t\t\tdependenciesForCallbacks.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var k = 0; k < callbacks.length; k++) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcallbacks[k].call(null, moduleOutdatedDependencies);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (typeof errorHandlers[k] === \"function\") {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\terrorHandlers[k](err, {\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k]\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Load self accepted modules\n\t\t\tfor (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {\n\t\t\t\tvar item = outdatedSelfAcceptedModules[o];\n\t\t\t\tvar moduleId = item.module;\n\t\t\t\ttry {\n\t\t\t\t\titem.require(moduleId);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (typeof item.errorHandler === \"function\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\titem.errorHandler(err, {\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\tmodule: __webpack_require__.c[moduleId]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\ttype: \"self-accept-errored\",\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn outdatedModules;\n\t\t}\n\t};\n}\n__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {\n\tif (!currentUpdate) {\n\t\tcurrentUpdate = {};\n\t\tcurrentUpdateRuntime = [];\n\t\tcurrentUpdateRemovedChunks = [];\n\t\tapplyHandlers.push(applyHandler);\n\t}\n\tif (!__webpack_require__.o(currentUpdate, moduleId)) {\n\t\tcurrentUpdate[moduleId] = __webpack_require__.m[moduleId];\n\t}\n};\n__webpack_require__.hmrC.jsonp = function (\n\tchunkIds,\n\tremovedChunks,\n\tremovedModules,\n\tpromises,\n\tapplyHandlers,\n\tupdatedModulesList\n) {\n\tapplyHandlers.push(applyHandler);\n\tcurrentUpdateChunks = {};\n\tcurrentUpdateRemovedChunks = removedChunks;\n\tcurrentUpdate = removedModules.reduce(function (obj, key) {\n\t\tobj[key] = false;\n\t\treturn obj;\n\t}, {});\n\tcurrentUpdateRuntime = [];\n\tchunkIds.forEach(function (chunkId) {\n\t\tif (\n\t\t\t__webpack_require__.o(installedChunks, chunkId) &&\n\t\t\tinstalledChunks[chunkId] !== undefined\n\t\t) {\n\t\t\tpromises.push(loadUpdateChunk(chunkId, updatedModulesList));\n\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t} else {\n\t\t\tcurrentUpdateChunks[chunkId] = false;\n\t\t}\n\t});\n\tif (__webpack_require__.f) {\n\t\t__webpack_require__.f.jsonpHmr = function (chunkId, promises) {\n\t\t\tif (\n\t\t\t\tcurrentUpdateChunks &&\n\t\t\t\t__webpack_require__.o(currentUpdateChunks, chunkId) &&\n\t\t\t\t!currentUpdateChunks[chunkId]\n\t\t\t) {\n\t\t\t\tpromises.push(loadUpdateChunk(chunkId));\n\t\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t\t}\n\t\t};\n\t}\n};\n\n__webpack_require__.hmrM = () => {\n\tif (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");\n\treturn fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {\n\t\tif(response.status === 404) return; // no update available\n\t\tif(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);\n\t\treturn response.json();\n\t});\n};\n\n// no on chunks loaded\n\n// no jsonp function","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__(\"../../node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=5500&pathname=%2Fws&logging=info&overlay=true&reconnect=10&hot=true&live-reload=true\");\n__webpack_require__(\"../../node_modules/webpack/hot/dev-server.js\");\nvar __webpack_exports__ = __webpack_require__(\"./page/source/index.ts\");\n",""],"names":["exports","gHeight","gWidth","gDepth","lGpu","gpu_device_1","request","web_gpu_generator_factory_1","web_gpu_shader_interpreter_1","lTextureGroup","textureGroup","addBuffer","addTarget","lShader","renderShader","shader_wgsl_1","lTransformationGroupLayout","pipelineLayout","getGroupLayout","lTransformationGroup","createGroup","lCubeTransform","transform_1","setScale","setData","getBind","layout","create","Float32Array","getMatrix","Transformation","dataArray","lCubeInstanceTransformationData","Array","lWidthIndex","lHeightIndex","lDepthIndex","push","lWorldGroupLayout","lWorldGroup","lPerspectiveProjection","perspective_projection_1","aspectRatio","width","height","angleOfView","near","far","lCamera","view_projection_1","transformation","setTranslation","ViewProjection","lAmbientLight","ambient_light_1","setColor","lUserGroupLayout","lUserGroup","lCubeTexture","createImageTexture","lCubeSampler","lMesh","parameterLayout","createData","cube_1","set","lRenderTargets","addColorBuffer","texture_operation_1","Clear","Keep","setDepthStencilBuffer","lPipeline","createPipeline","primitiveCullMode","primitive_cullmode_1","Back","lInstructionExecutor","instructionExecutor","lRenderInstruction","createVertexFragmentInstruction","addStep","lLastTime","lRender","pTime","startNewFrame","execute","lFps","window","currentFps","requestAnimationFrame","Euler","x","mX","pValue","y","mY","z","mZ","constructor","Matrix","fromArray","pArray","pHeight","pWidth","lData","lRowIndex","lRowData","lColumnIndex","identity","pSize","fill","data","mData","length","pData","add","pAddData","core_data_1","adjoint","lMatrixData","lMatrixRow","lColumIndex","lDeterminant","omit","determinant","Math","pow","lCofactorMatrix","transpose","lIterationIndex","lSignedNumber","lDeterminantMatrix","inverse","lAdjoint","mult","pMultData","lProduct","lComponentIndex","pOmitRow","pOmitColumn","sub","vectorMult","lVectorComponent","lMutiplicatedMatrix","lVectorData","vector_1","Quaternion","fromRotation","pPitch","pYaw","pRoll","lPitchRadian","PI","lYawRadian","lRollRadian","lCosPitch","cos","lSinPitch","sin","lCosYaw","lSinYaw","lCosRoll","lSinRoll","lQuaternion","w","vectorForward","lSquareX","lSquareY","lProductXz","lProductYw","mW","lProductYz","lProductXw","lX","lY","lZ","vectorRight","lSquareZ","lProductXy","lProductZw","vectorUp","pW","pX","pY","pZ","addEulerRotation","asEuler","lEuler","euler_1","lSinPitchCosYaw","lCosPitchCosYaw","atan2","lPitchDegree","sqrt","lYawDegree","lSinRollCosYaw","lCosRollCosYaw","lRollDegree","asMatrix","lMatrix","matrix_1","pQuaternion","lW","normalize","lLength","hypot","Vector","lIndex","lItem","multCross","pVector","multDot","pSubData","AmbientLight","mColor","pRed","pGreen","pBlue","Transform","pivotX","mPivot","pivotY","pivotZ","rotationPitch","mRotation","rotationRoll","rotationYaw","scaleDepth","mScale","scaleHeight","scaleWidth","translationX","mTranslation","translationY","translationZ","quaternion_1","addRotation","addScale","pDepth","addTranslation","pType","TransformMatrix","Scale","Translation","Rotation","PivotRotation","lRotationMatrix","lPivotRotation","lScale","lTranslation","lRotation","setRotation","lPitch","lYaw","lRoll","translateInDirection","pForward","pRight","pUp","lTranslationVector","lDirectionVector","PerspectiveProjection","mAngleOfView","mCacheProjectionMatrix","mAspectRatio","mFar","mNear","projectionMatrix","createMatrix","lFar","lNear","lTop","tan","lBottom","lRight","lLeft","projection","mProjection","mTransformation","pProjection","CameraMatrix","Projection","View","lView","lProjection","BindDataGroupLayout","gpu_object_1","bindingNames","mBindings","keys","bindings","lBindingList","lBinding","values","index","identifier","mIdentifier","pDevice","addUpdateListener","lIdentifier","lBind","name","accessMode","bindingIndex","memoryType","visibility","addBinding","pLayout","pName","triggerAutoUpdate","gpu_object_update_reason_1","ChildData","bind_data_group_1","device","has","get","BindDataGroup","mLayout","pBindGroupLayout","mBindData","getData","pBindName","PipelineDataLayout","groups","mBindGroups","addGroupLayout","pIndex","GpuBuffer","dataType","mDataType","mItemCount","memoryLayout","size","BYTES_PER_ELEMENT","pInitialData","writeRaw","read","pLayoutPath","lLocation","locationOf","readRaw","offset","pOffset","lOffset","lSize","lBufferGenerator","generator","write","InstructionExecuter","mInstructionList","createComputeInstruction","lInstruction","compute_instruction_1","pRenderTargets","vertex_fragment_instruction_1","startExecution","endExecution","ComputeInstruction","executor","mExecutor","steps","mStepList","pExecutor","pPipeline","pBindData","lStep","pipeline","bindData","lGroup","shader","lBindDataGroup","lBindGroupLayout","VertexFragmentInstruction","renderTargets","mRenderTargets","pParameter","pInstanceCount","parameter","instanceCount","BaseGeneratorFactory","mDevice","mGeneratorConstructors","mGenerators","init","initInternals","pBaseObject","lGeneratorConstructor","lNullCache","lGenerator","registerGenerator","pGenerator","BaseNativeBufferGenerator","base_native_generator_1","BaseNativeGenerator","factory","mFactory","gpuObject","mGpuObject","updateReasons","mUpdateReasons","pFactory","mNative","mLastGeneratedFrame","nativeLifeTime","NativeObjectLifeTime","Persistent","Single","invalidate","LifeTime","Frame","frameCount","any","destroy","generate","clear","pDestroyReason","_pNative","GpuDevice","pShaderInterpreter","lDevice","mFrameCounter","mGenerator","shaderInterpreter","mShaderInterpreter","shader_interpreter_factory_1","instruction_executor_1","pSource","pVertexEntry","pFragmentEntry","vertex_fragment_shader_1","pMultisampleLevel","texture_group_1","GpuObjectUpdateReason","mReasons","Set","pReason","UpdateReason","GpuObject","autoUpdate","mAutoUpdate","mUpdateListenerList","pListener","removeUpdateListener","delete","update","pUpdateReason","lUpdateListener","WebGpuBindDataGroupGenerator","lEntryList","lBindname","lBindLayout","lBindData","lGroupEntry","binding","resource","gpu_buffer_1","buffer","video_texture_1","texture_sampler_1","frame_buffer_texture_1","image_texture_1","canvas_texture_1","gpu","createBindGroup","label","entries","WebGpuBindDataGroupLayoutGenerator","lEntry","lLayoutEntry","base_buffer_memory_layout_1","lBufferBindingType","bindType","buffer_bind_type_enum_1","Uniform","Storage","access_mode_enum_1","Read","lBufferLayout","type","minBindingSize","hasDynamicOffset","sampler_memory_layout_1","lSamplerBindingType","samplerType","sampler_type_enum_1","Comparison","Filter","lSamplerLayout","sampler","texture_memory_layout_1","texture_bind_type_enum_1","External","lExternalTextureLayout","externalTexture","Images","lTextureLayout","sampleType","sampleTypeFromLayout","multisampled","viewDimension","dimension","texture","Write","lStorageTextureLayout","access","format","formatFromLayout","storageTexture","createBindGroupLayout","WebGpuCanvasTextureGenerator","mContext","_pNativeObject","unconfigure","canvas","getContext","configure","usage","usageFromLayout","alphaMode","lTexture","getCurrentTexture","createView","WebGpuFramebufferTextureGenerator","mTexture","createTexture","depth","dimensionFromLayout","sampleCount","multiSampleLevel","WebGpuGpuBufferGenerator","base_native_buffer_generator_1","mReadyBufferList","mWavingBufferList","lBuffer","mapAsync","GPUMapMode","READ","getMappedRange","lStagingBuffer","createBuffer","GPUBufferUsage","MAP_WRITE","COPY_SRC","mappedAtCreation","pop","lBufferArray","unmap","lCommandDecoder","createCommandEncoder","copyBufferToBuffer","queue","submit","finish","WRITE","then","pNativeObject","lCount","lUsage","Undefined","Index","INDEX","STORAGE","UNIFORM","Vertex","VERTEX","memory_copy_type_enum_1","CopyDestination","COPY_DST","CopySource","WebGpuImageTextureGenerator","lImageIndex","images","lBitmap","copyExternalImageToTexture","source","origin","WebGpuPipelineDataLayoutGenerator","lBindGoupIndices","lPipelineLayoutDescriptor","bindGroupLayouts","createPipelineLayout","WebGpuTextureSamplerGenerator","lNativeCompareFunction","compareFunctionToNative","compare","lAddressMode","wrapMode","wrapping_mode_enum_1","ClampToEdge","MirrorRepeat","Repeat","lMipMapFilter","mipmapFilter","filter_mode_enum_1","Linear","Nearest","lSamplerOptions","addressModeU","addressModeV","addressModeW","magFilter","toNativeFilterMode","minFilter","lodMaxClamp","lodMinClamp","maxAnisotropy","createSampler","pFilerMode","WebGpuVertexFragmentShaderGenerator","createShaderModule","code","information","WebGpuVideoTextureGenerator","importExternalTexture","video","colorSpace","WebGpuGeneratorFactory","base_generator_factory_1","mGpuDevice","preferredFormat","navigator","getPreferredCanvasFormat","pMode","mPerformance","mGpuAdapter","web_gpu_gpu_buffer_generator_1","bind_data_group_layout_1","web_gpu_bind_data_group_layout_generator_1","web_gpu_bind_data_group_generator_1","pipeline_data_layout_1","web_gpu_pipeline_data_layout_generator_1","web_gpu_canvas_texture_generator_1","web_gpu_frame_buffer_texture_generator_1","web_gpu_video_texture_generator_1","web_gpu_image_texture_generator_1","web_gpu_texture_sampler_generator_1","web_gpu_vertex_fragment_shader_generator_1","byteCountOfVertexFormat","pPrimitiveFormat","buffer_primitive_format_1","Float","Int","Uint","Vec2Float","Vec2Uint","Vec2Int","Vec3Int","Vec3Float","Vec3Uint","Vec4Int","Vec4Float","Vec4Uint","Unsupported","pCompareFunction","compare_function_enum_1","Allways","Greater","Equal","GreaterEqual","LessEqual","Less","Never","NotEqual","texture_dimension_enum_1","OneDimension","TwoDimension","Cube","CubeArray","ThreeDimension","TwoDimensionArray","texture_format_enum_1","BlueRedGreenAlpha","Depth","DepthStencil","Red","RedGreen","RedGreenBlueAlpha","RedGreenBlueAlphaInteger","RedGreenInteger","RedInteger","Stencil","lAdapter","mAdapters","requestAdapter","powerPreference","mDevices","requestDevice","toNativeVertexFormat","GPUTextureUsage","texture_usage_enum_1","RenderAttachment","RENDER_ATTACHMENT","StorageBinding","STORAGE_BINDING","TextureBinding","TEXTURE_BINDING","WebGpuShaderInterpreter","base_shader_interpreter_1","fetchFunctionDefinitions","pSourceCode","lFunctionRegex","lFunctionList","lFunctionMatch","matchAll","lFunctionName","lFunctionResult","lFunctionAttributes","lFunctionParameter","lAttachments","lAttributeMatch","lAttributeName","lAttributeValue","lFunctionBodyStart","slice","lBracketRegex","lBracketLayer","lClosingBracketIndex","lBracketMatch","exec","lBracket","lFunctionBody","lParameterVariableList","fetchVariableDefinitions","lReturnTypes","at","returnType","attachments","body","fetchStructDefinitions","lStuctRegex","lStructDefinitionList","lStructMatch","lStructName","lStructBody","properies","fetchValueDefinitions","lAllGroupLines","reduce","pCurrent","pLine","functionFromDefinition","pDefinition","lParameter","map","pParameterDefintion","valueFromDefinition","value","lReturnType","lTag","compute_stage_enum_1","None","Fragment","Compute","lUsedGlobals","lGlobalValue","includes","lAttachmentValueRexgex","lAttachment","lAttachmentName","lAttachmentValues","pMatch","trim","filter","entryPoints","return","usedGlobals","setupShaderTypes","pAddType","wgsl_type_enum_1","Boolean","variants","align","Integer32","UnsignedInteger32","Float32","Float16","Vector2","generic","Vector3","Vector4","Matrix22","aliases","Matrix23","Matrix24","Matrix32","Matrix33","Matrix34","Matrix42","Matrix43","Matrix44","Atomic","Texture1d","Texture2d","Texture2dArray","Texture3d","TextureCube","TextureCubeArray","TextureMultisampled2d","TextureExternal","TextureStorage1d","TextureStorage2d","TextureStorage2dArray","TextureStorage3d","TextureDepth2d","TextureDepth2dArray","TextureDepthCube","TextureDepthCubeArray","TextureDepthMultisampled2d","Sampler","SamplerComparison","Reference","Pointer","pValueDefinition","lDefinitionType","typeFor","typeGenerics","lBufferBindType","lBindingTypeEnum","lAccessMode","lAccessEnum","lBindingIndex","parseInt","lParameterIndex","lCreationParameter","valueDefinition","typeDefinition","bufferBindType","groupIndex","memoryIndex","location","visibilityOf","createStructBufferLayout","typeName","createSamplerLayout","createArrayBufferLayout","createLinearBufferLayout","createTextureLayout","lArraySize","lArraySizeGeneric","isNaN","lInnerTypeDefinition","lInnerType","lArrayMemoryLayout","array_buffer_memory_layout_1","arraySize","innerType","group","lLinearBufferLayout","linear_buffer_memory_layout_1","alignment","locationIndex","primitiveFormat","lSamplerType","lSamplerMemoryLayout","lStructMemoryLayout","struct_buffer_memory_layout_1","structName","struct","lPropertyIndex","properties","lProperty","addProperty","lTextureWgslType","lUsesMultisample","textureDimensionFromType","textureDefaultFormatFromType","textureBindTypeFromType","pSourceSnipped","lDefinitionRegex","lVariableList","lDefinitionMatch","lVariableTypeName","lVariableName","lVariableAttributes","lVariableAccess","lVariableGenerics","lAccessList","split","lGenericList","lGenericMatch","pTextureType","WgslType","BaseMemoryLayout","mAccessMode","mBindingIndex","mMemoryType","Setting","mName","mVisibility","pGpu","ArrayBufferMemoryLayout","mArraySize","mInnerType","ceil","parent","pPathName","lPathName","lItemIndexString","shift","lArrayItemSize","lArrayItemOffset","lInnerLocation","BaseBufferMemoryLayout","base_memory_layout_1","mBindType","mParent","LinearBufferMemoryLayout","mAlignment","mFormat","mLocationIndex","mSize","StructBufferMemoryLayout","mInnerProperties","pProperty","mStructName","pOrder","sort","pA","pB","recalculateAlignment","bindingLayouts","lLocationTypes","lPropertyType","locationLayouts","lPropertyName","lOrderedTypeList","pOrderA","pOrderB","lPropertyOffset","lPropertyLayout","lPropertyLocation","lRawDataSize","lType","SamplerMemoryLayout","mSamplerType","TextureMemoryLayout","mDimension","mMultisampled","mUsage","createCanvasTexture","lCanvasTexture","createFrameBufferTexture","lFrameBufferTexture","pSourceList","lImageTexture","load","createVideoTexture","lVideoTexture","VertexParameterLayout","count","max","mParameter","mParameterNames","lLocationLayoutList","lLocationLayout","lName","lParentLayout","pIndexData","vertex_parameter_1","getIndexOf","getLayoutOf","VertexParameter","indexBuffer","mIndexBuffer","pVertexParameterLayout","pIndices","lIndexLayout","lIndexBufferLayout","Uint32Array","lParameterBuffer","RenderTargets","colorBuffer","mColorBuffer","depthStencilBuffer","mDepthBuffer","multisampleCount","mTextureGroup","pTextureGroup","pBufferName","pClearValue","pLoadOp","pStoreOp","pTargetName","lColorBuffer","getBufferTextureOf","lTargetBuffer","getTargetTextureOf","clearValue","loadOperation","storeOperation","resolveTarget","lDepthBuffer","onDepthBufferUpdate","depthClearValue","depthLoadOperation","depthStoreOperation","stencilClearValue","stencilLoadOperation","stencilStoreOperation","TextureGroup","resize","mMultisampleLevel","mBufferTextures","mTargetTextures","lMemoryLayout","createColorMemoryLayout","createDepthMemoryLayout","createCanvasMemoryLayout","render_targets_1","RenderTarget","pMultisampled","VertexFragmentPipeline","depthCompare","mDepthCompare","mPrimitiveCullMode","primitiveFrontFace","mPrimitiveFrontFace","primitiveTopology","mPrimitiveTopology","mShader","writeDepth","mDepthWriteEnabled","pShader","primitive_topology_1","TriangleList","primitive_front_face_1","ClockWise","BaseShader","mShaderInformation","mPipelineLayout","interpret","lGroupIndex","lGroupLayout","mBindGroupLayoutCache","getEntryPoints","pStage","lEntryPointFunctions","pFunction","BaseShaderInterpreter","mEntryPoints","mSourceCode","mShaderTypes","mShaderTypeAliases","lVariant","lAlias","generics","lShaderFunctionDefinitionList","lShaderValueDefinitionList","lShaderStructDefinitionList","mShaderStructDefinitions","lStructDefinition","mShaderFunctions","convertFunctions","mShaderValue","convertValues","readEntryPoints","readBindings","getFunction","structFromDefinition","pStructDefinition","lShaderStruct","pTypeName","pGenericNames","lRegularType","lVariantGenerics","lGenericsMatches","lTargetGeneric","lSourceGeneric","toString","lAliasType","lComputeStage","lShaderFunction","searchEntryPointsOf","pFunctionDefinitions","lShaderFunctions","lDefnition","pValueDefinitions","lShaderValues","lShaderValue","lBindings","lEntryPoints","pScannedNames","lUsedFunctionList","lGlobal","ShaderInterpreterFactory","pInterpreter","mInterpreterConstructor","VertexFragmentShader","base_shader_1","fragmentEntry","mFragmentEntry","mParameterLayout","renderTargetCount","mAttachmentCount","vertexEntry","mVertexEntry","lVertexEntryFunction","lFragmentEntryFunction","vertex_parameter_layout_1","lFragmentReturn","vertex_fragment_pipeline_1","CanvasTexture","mCanvas","mMemoryLayout","document","createElement","FrameBufferTexture","mDepth","mHeight","mMultiSampleLevel","mWidth","ImageTexture","mImageList","lHeight","lWidth","lImageLoadPromiseList","lImage","Image","src","decode","naturalWidth","naturalHeight","createImageBitmap","Promise","all","Data","TextureSampler","mCompare","mLodMaxClamp","mLodMinClamp","mMagFilter","mMaxAnisotropy","mMinFilter","mMipmapFilter","mWrapMode","VideoTexture","mVideo","videoHeight","loop","videoWidth","HTMLVideoElement","muted","pause","play","AccessMode","BufferBindType","BufferPrimitiveFormat","CompareFunction","ComputeStage","FilterMode","MemoryCopyType","PrimitiveCullMode","PrimitiveFrontFace","PrimitiveTopology","SamplerType","TextureBindType","TextureDimension","TextureFormat","TextureOperation","TextureUsage","WrappingMode"],"sourceRoot":""}