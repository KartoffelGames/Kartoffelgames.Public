{"version":3,"file":".././page/build/page.js","mappings":";;;;;;;;;;;AAAY;;AAEZ;;AAEA;AACA,mDAAmD,IAAI,SAAS,MAAM,IAAI;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,GAAG;AACH;AACA,uBAAuB;AACvB,GAAG;AACH,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,UAAU,+BAA+B;AAChF;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AC/KA,MAAAA,MAAA,GAAAC,mBAAA;AACA,MAAAC,QAAA,GAAAD,mBAAA;AAEA,MAAaE,YAAY;EAGrB;;;EAGA,IAAWC,IAAIA,CAAA;IACX,OAAO,IAAI,CAACC,MAAM,CAACD,IAAI;EAC3B;EAEA;;;EAGAE,YAAA;IACI,IAAI,CAACD,MAAM,GAAG,IAAIH,QAA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AC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEV;AACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEX;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEV;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAEV;AACA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CACd;AAED;AACaA,yBAAiB,GAAG;AAC7B;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC;AACP;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC;AACP;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC;AACP;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC;AACP;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC;AACP;AACA,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CACV;;;;;;;;;;;;;;;;;;AC5ID,MAAA8M,mBAAA,GAAA1N,mBAAA;AAIA,MAAA2N,YAAA,GAAA3N,mBAAA;AACA,MAAA4N,8BAAA,GAAA5N,mBAAA;AACA,MAAA6N,kCAAA,GAAA7N,mBAAA;AAEA,MAAA8N,gBAAA,GAAA9N,mBAAA;AAIA,MAAA+N,oBAAA,GAAA/N,mBAAA;AACA,MAAAgO,yBAAA,GAAAhO,mBAAA;AACA,MAAAiO,mBAAA,GAAAjO,mBAAA;AACA,MAAAkO,2BAAA,GAAAlO,mBAAA;AACA,MAAAmO,wBAAA,GAAAnO,mBAAA;AACA,MAAAoO,qBAAA,GAAApO,mBAAA;AACA,MAAAqO,iCAAA,GAAArO,mBAAA;AACA,MAAAsO,eAAA,GAAAtO,mBAAA;AACA,MAAA0M,WAAA,GAAA1M,mBAAA;AACA,MAAAuO,wBAAA,GAAAvO,mBAAA;AACA,MAAAwO,iBAAA,GAAAxO,mBAAA;AACA,MAAAyO,WAAA,GAAAzO,mBAAA;AACA,MAAA0O,kBAAA,GAAA1O,mBAAA;AACA,MAAA2O,uBAAA,GAAA3O,mBAAA;AACA,MAAA4O,MAAA,GAAA5O,mBAAA;AAEA,MAAM6O,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAe,EAAEC,cAA6B,EAAEC,WAAuB,EAAEC,WAAsB,EAAI;IAC3H,MAAMC,OAAO,GAAW,EAAE;IAC1B,MAAMC,MAAM,GAAW,EAAE;IACzB,MAAMC,MAAM,GAAW,EAAE;IAEzB;IACA,MAAMC,cAAc,GAAGP,IAAI,CAACQ,MAAM,CAACd,kBAAA,CAAAe,OAAU,CAAC,CAACC,KAAK,CAAEC,YAAY,IAAI;MAClE;MACAA,YAAY,CAACC,SAAS,CAAC,kBAAkB,EAAE7B,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC;MAE/D;MACAH,YAAY,CAACI,gBAAgB,CAAC,aAAa,EAAGC,qBAAqB,IAAI;QACnEA,qBAAqB,CAACC,MAAM,CAAC,UAAU,EAAErC,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAE9B,iCAAA,CAAA+B,uBAAuB,CAACC,KAAK,CAAC,CACjGC,aAAa,CAAC,UAAU,EAAE,CAAC,EAAEzC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;QAEpER,qBAAqB,CAACC,MAAM,CAAC,IAAI,EAAErC,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAE9B,iCAAA,CAAA+B,uBAAuB,CAACN,MAAM,CAAC,CAC5FQ,aAAa,CAAC,IAAI,EAAE,CAAC,EAAEzC,kCAAA,CAAA0C,yBAAyB,CAACE,OAAO,CAAC;QAE9DT,qBAAqB,CAACC,MAAM,CAAC,QAAQ,EAAErC,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAE9B,iCAAA,CAAA+B,uBAAuB,CAACN,MAAM,CAAC,CAChGQ,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAEzC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;MACtE,CAAC,CAAC;MAEF;MACAb,YAAY,CAACe,kBAAkB,CAAC,eAAe,CAAC,CAC3CC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE/C,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;MAEjG;MACAb,YAAY,CAACiB,KAAK,CAAC,CAAC,EAAE,IAAIlD,mBAAA,CAAAmD,eAAe,CAAC7B,IAAI,EAAE,QAAQ,CAAC,CAACU,KAAK,CAAEoB,eAAe,IAAI;QAChFA,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,sBAAsB,EAAEhD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC,CAClEkB,aAAa,CAACpD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACU,QAAQ,CAAC;QAErFH,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,mBAAmB,EAAEhD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,EAAE5B,2BAAA,CAAAgD,kBAAkB,CAACC,IAAI,CAAC,CACxFC,SAAS,EAAE,CAACJ,aAAa,CAACpD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;MACpG,CAAC,CAAC,CAAC;MAEH;MACAb,YAAY,CAACiB,KAAK,CAAC,CAAC,EAAEzB,WAAW,CAACkC,MAAM,CAAC;MAEzC;MACA1B,YAAY,CAACiB,KAAK,CAAC,CAAC,EAAE,IAAIlD,mBAAA,CAAAmD,eAAe,CAAC7B,IAAI,EAAE,MAAM,CAAC,CAACU,KAAK,CAAEoB,eAAe,IAAI;QAC9EA,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,oBAAoB,EAAEhD,oBAAA,CAAA8B,YAAY,CAACyB,QAAQ,CAAC,CAClEC,WAAW,CAACtD,mBAAA,CAAAuD,WAAW,CAACC,MAAM,CAAC;QAEpCX,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,aAAa,EAAEhD,oBAAA,CAAA8B,YAAY,CAACyB,QAAQ,GAAGvD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC,CACjF4B,WAAW,CAACvD,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAExD,qBAAA,CAAAyD,aAAa,CAACC,UAAU,EAAE,KAAK,CAAC;MACzF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF;IACA,MAAMC,oBAAoB,GAAuBxC,cAAc,CAACyC,kBAAkB,CAAC,aAAa,EAAE,eAAe,CAAC;IAGlH;IACA,MAAMC,2BAA2B,GAAGF,oBAAoB,CAACV,MAAM,CAACa,cAAc,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;IAEjG;IACA,MAAMC,iBAAiB,GAAc,IAAI1F,WAAA,CAAAjE,SAAS,EAAE;IACpD2J,iBAAiB,CAACrH,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnCkH,2BAA2B,CAAC9R,IAAI,CAAC,sBAAsB,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAACF,iBAAiB,CAACtI,SAAS,CAAC4C,WAAA,CAAA1C,eAAe,CAACO,cAAc,CAAC,CAACnI,SAAS,CAAC,CAAC;IAE9J;IACA,MAAMmQ,+BAA+B,GAAkB,IAAI5Q,KAAK,EAAU;IAC1E,KAAK,IAAI6Q,WAAW,GAAW,CAAC,EAAEA,WAAW,GAAGnD,MAAM,EAAEmD,WAAW,EAAE,EAAE;MACnE,KAAK,IAAIC,YAAY,GAAW,CAAC,EAAEA,YAAY,GAAGrD,OAAO,EAAEqD,YAAY,EAAE,EAAE;QACvE,KAAK,IAAIC,WAAW,GAAW,CAAC,EAAEA,WAAW,GAAGpD,MAAM,EAAEoD,WAAW,EAAE,EAAE;UACnEH,+BAA+B,CAACxQ,IAAI,CAACyQ,WAAW,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/F;MACJ;IACJ;IACAT,2BAA2B,CAAC9R,IAAI,CAAC,mBAAmB,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAACC,+BAA+B,CAAC,CAAC;IAErH;;;IAGA,MAAMI,iBAAiB,GAAGZ,oBAAoB,CAACV,MAAM,CAACa,cAAc,CAAC,MAAM,CAAC,CAACC,MAAM,EAAE;IAErF;IACAQ,iBAAiB,CAACxS,IAAI,CAAC,aAAa,CAAC,CAACyS,WAAW,CAAC,wDAAwD,EAAE,wDAAwD,EAAE,0DAA0D,CAAC;IAEjO;IACAD,iBAAiB,CAACxS,IAAI,CAAC,oBAAoB,CAAC,CAAC0S,aAAa,EAAE;IAE5D;IACA,MAAMC,KAAK,GAAoBf,oBAAoB,CAACgB,eAAe,CAACZ,MAAM,CAAC1D,WAAA,CAAAhB,iBAAiB,CAAC;IAC7FqF,KAAK,CAACE,GAAG,CAAC,UAAU,EAAEvE,WAAA,CAAAnB,sBAAsB,CAAC;IAC7CwF,KAAK,CAACE,GAAG,CAAC,IAAI,EAAEvE,WAAA,CAAAlB,gBAAgB,CAAC;IACjCuF,KAAK,CAACE,GAAG,CAAC,QAAQ,EAAEvE,WAAA,CAAAjB,oBAAoB,CAAC;IAEzC;IACA,MAAMyF,gBAAgB,GAA2BlB,oBAAoB,CAACI,MAAM,CAAClD,cAAc,CAAC;IAC5FgE,gBAAgB,CAACC,iBAAiB,GAAGlF,yBAAA,CAAAmF,iBAAiB,CAACC,KAAK;IAC5DH,gBAAgB,CAACI,YAAY,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC9CC,MAAO,CAACC,cAAc,GAAIC,QAAgB,IAAI;MAChDP,gBAAgB,CAACI,YAAY,CAAC,kBAAkB,EAAEG,QAAQ,CAAC;IAC/D,CAAC;IAEDtE,WAAW,CAACuE,OAAO,CAACR,gBAAgB,EAAEH,KAAK,EAAE,CAACb,2BAA2B,EAAE9C,WAAW,EAAEwD,iBAAiB,CAAC,EAAEtD,MAAM,GAAGD,OAAO,GAAGE,MAAM,CAAC;EAC1I,CAAC;EAAA,gBAjGKT,YAAYA,CAAA6E,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA/E,IAAA,CAAAgF,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiGjB;AAED,MAAMC,gBAAgB,GAAGA,CAAChF,IAAe,EAAEC,cAA6B,EAAEC,WAAuB,EAAEC,WAAsB,KAAU;EAC/H;EACA,MAAM8E,eAAe,GAAGjF,IAAI,CAACQ,MAAM,CAACb,uBAAA,CAAAc,OAAc,CAAC,CAACC,KAAK,CAAEC,YAAY,IAAI;IACvE;IACAA,YAAY,CAACI,gBAAgB,CAAC,aAAa,EAAGC,qBAAqB,IAAI;MACnEA,qBAAqB,CAACC,MAAM,CAAC,UAAU,EAAErC,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAE9B,iCAAA,CAAA+B,uBAAuB,CAACC,KAAK,CAAC,CACjGC,aAAa,CAAC,UAAU,EAAE,CAAC,EAAEzC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;MAEpER,qBAAqB,CAACC,MAAM,CAAC,IAAI,EAAErC,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAE9B,iCAAA,CAAA+B,uBAAuB,CAACN,MAAM,CAAC,CAC5FQ,aAAa,CAAC,IAAI,EAAE,CAAC,EAAEzC,kCAAA,CAAA0C,yBAAyB,CAACE,OAAO,CAAC;MAE9DT,qBAAqB,CAACC,MAAM,CAAC,QAAQ,EAAErC,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAE9B,iCAAA,CAAA+B,uBAAuB,CAACN,MAAM,CAAC,CAChGQ,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAEzC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;IACtE,CAAC,CAAC;IAEF;IACAb,YAAY,CAACe,kBAAkB,CAAC,eAAe,CAAC,CAC3CC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE/C,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;IAEjG;IACAb,YAAY,CAACiB,KAAK,CAAC,CAAC,EAAE,IAAIlD,mBAAA,CAAAmD,eAAe,CAAC7B,IAAI,EAAE,QAAQ,CAAC,CAACU,KAAK,CAAEoB,eAAe,IAAI;MAChFA,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,sBAAsB,EAAEhD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC,CAClEkB,aAAa,CAACpD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACU,QAAQ,CAAC;IACzF,CAAC,CAAC,CAAC;IAEH;IACAtB,YAAY,CAACiB,KAAK,CAAC,CAAC,EAAEzB,WAAW,CAACkC,MAAM,CAAC;EAC7C,CAAC,CAAC;EAEF;EACA,MAAM6C,qBAAqB,GAAGD,eAAe,CAACjC,kBAAkB,CAAC,aAAa,EAAE,eAAe,CAAC;EAEhG;EACA,MAAMmC,4BAA4B,GAAGF,eAAe,CAAC5C,MAAM,CAACa,cAAc,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;EAE7F;EACA,MAAMiC,kBAAkB,GAAc,IAAI1H,WAAA,CAAAjE,SAAS,EAAE;EACrD2L,kBAAkB,CAACrJ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpCoJ,4BAA4B,CAAChU,IAAI,CAAC,sBAAsB,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAAC8B,kBAAkB,CAACtK,SAAS,CAAC4C,WAAA,CAAA1C,eAAe,CAACO,cAAc,CAAC,CAACnI,SAAS,CAAC,CAAC;EAEhK,MAAMiS,iBAAiB,GAA2BH,qBAAqB,CAAC/B,MAAM,CAAClD,cAAc,CAAC;EAC9FoF,iBAAiB,CAACnB,iBAAiB,GAAGlF,yBAAA,CAAAmF,iBAAiB,CAACC,KAAK;EAE7D;EACA,MAAMN,KAAK,GAAoBoB,qBAAqB,CAACnB,eAAe,CAACZ,MAAM,CAAC1D,WAAA,CAAAhB,iBAAiB,CAAC;EAC9FqF,KAAK,CAACE,GAAG,CAAC,UAAU,EAAEvE,WAAA,CAAAnB,sBAAsB,CAAC;EAC7CwF,KAAK,CAACE,GAAG,CAAC,IAAI,EAAEvE,WAAA,CAAAlB,gBAAgB,CAAC;EACjCuF,KAAK,CAACE,GAAG,CAAC,QAAQ,EAAEvE,WAAA,CAAAjB,oBAAoB,CAAC;EAEzC0B,WAAW,CAACuE,OAAO,CAACY,iBAAiB,EAAEvB,KAAK,EAAE,CAACqB,4BAA4B,EAAEhF,WAAW,CAAC,EAAEA,WAAW,CAAChP,IAAI,CAAC,aAAa,CAAC,CAACmU,GAAG,EAAa,CAAC/R,MAAM,GAAG,EAAE,CAAC;AAC5J,CAAC;AAEDwM,iBAAA,CAAC,aAAW;EACR,MAAMwF,IAAI,SAAoB5G,YAAA,CAAA6G,SAAS,CAACC,OAAO,CAAC,kBAAkB,CAAC;EAEnE;EACA,MAAMC,cAAc,GAAkBH,IAAI,CAACI,MAAM,CAACC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAsB,CAAC;EAEzG;EACA,MAAMC,cAAc,GAAkBP,IAAI,CAACQ,aAAa,EAAE,CAACrF,KAAK,CAAEsF,MAAM,IAAI;IACxE;IACAA,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE,CAAC,CACxDC,GAAG,CAACZ,cAAc,CAAC;IAExB;IACAM,MAAM,CAACO,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAC1BC,GAAG,CAACpH,qBAAA,CAAAyD,aAAa,CAAC4D,WAAW,CAAC;EACvC,CAAC,CAAC;EAEF;EACA,CAAC,MAAK;IACF,MAAMC,cAAc,GAAmBd,QAAQ,CAACe,aAAa,CAAC,iBAAiB,CAAmB;IAClG,IAAIC,cAAc,CAAC,MAAK;MACpB,MAAMC,gBAAgB,GAAW3S,IAAI,CAAC4S,GAAG,CAAC,CAAC,EAAEJ,cAAc,CAACK,YAAY,GAAG,EAAE,CAAC;MAC9E,MAAMC,eAAe,GAAW9S,IAAI,CAAC4S,GAAG,CAACJ,cAAc,CAACO,WAAW,GAAG,EAAE,EAAE,CAAC,CAAC;MAE5E;MACAnB,cAAc,CAACoB,MAAM,CAACL,gBAAgB,EAAEG,eAAe,EAAE,CAAC,CAAC;IAC/D,CAAC,CAAC,CAACG,OAAO,CAACT,cAAc,CAAC;EAC9B,CAAC,EAAC,CAAE;EAGJ,MAAMU,iBAAiB,GAAG,IAAI1I,mBAAA,CAAAmD,eAAe,CAAC0D,IAAI,EAAE,OAAO,CAAC,CAAC7E,KAAK,CAAEoB,eAAe,IAAI;IACnFA,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,sBAAsB,EAAEhD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC,CAClEkB,aAAa,CAACpD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACU,QAAQ,CAAC;IAErFH,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,WAAW,EAAEhD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC,CACvDkB,aAAa,CAACpD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAAC8F,MAAM,CAAC;IAEnFvF,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,cAAc,EAAEhD,oBAAA,CAAA8B,YAAY,CAACyB,QAAQ,CAAC,CAC5DgF,UAAU,CAAEC,OAAO,IAAI;MACpBA,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,CAACC,WAAW,CAAC7I,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;IAC3G,CAAC,CAAC;IAENM,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,aAAa,EAAEhD,oBAAA,CAAA8B,YAAY,CAACyB,QAAQ,GAAGvD,oBAAA,CAAA8B,YAAY,CAACC,MAAM,EAAE5B,2BAAA,CAAAgD,kBAAkB,CAACC,IAAI,CAAC,CAC1GC,SAAS,EAAE,CAACkF,UAAU,CAAEC,OAAO,IAAI;MAChCA,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,CAACC,WAAW,CAAC7I,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;MAC1G+F,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,CAACC,WAAW,CAAC7I,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO,CAAC;MACvG+F,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,CAACC,WAAW,CAAC7I,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAAC8F,MAAM,CAAC;IAC1G,CAAC,CAAC;IAENvF,eAAe,CAACC,OAAO,CAAC,CAAC,EAAE,YAAY,EAAEhD,oBAAA,CAAA8B,YAAY,CAACyB,QAAQ,EAAEpD,2BAAA,CAAAgD,kBAAkB,CAACwF,SAAS,CAAC,CACxF1F,aAAa,CAACpD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEtC,kCAAA,CAAA0C,yBAAyB,CAAC8F,MAAM,CAAC;EAEvF,CAAC,CAAC;EAOF;;;EAGA,MAAMM,WAAW,GAAcP,iBAAiB,CAACjE,MAAM,EAAE;EAEzD;EACA,MAAMyE,sBAAsB,GAA0B,IAAIrI,wBAAA,CAAAhD,qBAAqB,EAAE;EACjFqL,sBAAsB,CAACjL,WAAW,GAAGmJ,cAAc,CAACzS,KAAK,GAAGyS,cAAc,CAACxS,MAAM;EACjFsU,sBAAsB,CAACpL,WAAW,GAAG,EAAE;EACvCoL,sBAAsB,CAAC7K,IAAI,GAAG,GAAG;EACjC6K,sBAAsB,CAAC/K,GAAG,GAAGgL,MAAM,CAACC,gBAAgB;EACpDhC,cAAc,CAACiC,uBAAuB,CAAC,MAAK;IACxCH,sBAAsB,CAACjL,WAAW,GAAGmJ,cAAc,CAACzS,KAAK,GAAGyS,cAAc,CAACxS,MAAM;EACrF,CAAC,EAAE,CAACwL,gBAAA,CAAAkJ,6BAA6B,CAACC,MAAM,CAAC,CAAC;EAE1C;EACA,MAAMC,OAAO,GAAmB,IAAI1I,iBAAA,CAAA7B,cAAc,CAACiK,sBAAsB,CAAC;EAC1EM,OAAO,CAACpK,cAAc,CAAC9B,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/C2L,WAAW,CAACxW,IAAI,CAAC,sBAAsB,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAAC4E,OAAO,CAACpN,SAAS,CAAC0E,iBAAA,CAAAvB,YAAY,CAACN,cAAc,CAAC,CAACvK,SAAS,CAAC,CAAC;EAEjI;EACA,MAAM+U,aAAa,GAAiB,IAAI7I,eAAA,CAAApO,YAAY,EAAE;EACtDiX,aAAa,CAAC5W,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACrCoW,WAAW,CAACxW,IAAI,CAAC,cAAc,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAAC6E,aAAa,CAAChX,IAAI,CAAC,CAAC;EAEnF;EACAwW,WAAW,CAACxW,IAAI,CAAC,aAAa,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAAC,CAC1D,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,WAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACxE,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,WAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC3E,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,WAAY,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC/E,CAAC,CAAC;EAEH;EACAqE,WAAW,CAACxW,IAAI,CAAC,WAAW,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM8E,gBAAgB,GAA4BT,WAAW,CAACxW,IAAI,CAAC,WAAW,CAAC,CAACmU,GAAG,EAAE;EAErF;EACAqC,WAAW,CAACxW,IAAI,CAAC,YAAY,CAAC,CAACkS,YAAY,CAAC,IAAIC,YAAY,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM+E,YAAY,GAA2BV,WAAW,CAACxW,IAAI,CAAC,YAAY,CAAC,CAACmU,GAAG,EAAE;EAC3EhB,MAAO,CAACgE,WAAW,GAAG,MAAK;IAC7BD,YAAY,CAACE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAI;MACzC;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAMD;EACA,MAAMG,WAAW,GAAerD,IAAI,CAACsD,UAAU,CAAC/C,cAAc,CAAC;EAC/D,MAAMjG,YAAY,CAAC0F,IAAI,EAAEO,cAAc,EAAE8C,WAAW,EAAEjB,WAAW,CAAC;EAClE3C,gBAAgB,CAACO,IAAI,EAAEO,cAAc,EAAE8C,WAAW,EAAEjB,WAAW,CAAC;EAGhE;;;EAGA,IAAA/H,MAAA,CAAAkJ,kBAAkB,EAACpD,cAAc,CAACC,MAAM,EAAEuC,OAAO,EAAEP,WAAW,CAACxW,IAAI,CAAC,sBAAsB,CAAC,CAACmU,GAAG,EAAE,CAAC;EAElG;;;EAGA,MAAMyD,eAAe,GAAiBxD,IAAI,CAACyD,QAAQ,CAAEC,SAAS,IAAI;IAC9DL,WAAW,CAACM,OAAO,CAACD,SAAS,CAAC;EAClC,CAAC,CAAC;EAGF,MAAME,SAAS,GAAGvD,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAE;EAExD;EACA,IAAIuD,SAAS,GAAW,CAAC;EACzB,IAAIC,WAAW,GAAW,CAAC;EAC3B,MAAMC,OAAO,GAAIC,KAAa,IAAI;IAC9B;IACAhE,IAAI,CAACiE,aAAa,EAAE;IAEpB;IACApB,gBAAgB,CAACqB,KAAK,CAAC,CAACF,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;IAE1C;IACAR,eAAe,CAACG,OAAO,EAAE;IAEzB;IACA,MAAMQ,IAAI,GAAW,IAAI,IAAIH,KAAK,GAAGH,SAAS,CAAC;IAC/CC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,IAAIA,WAAW,GAAG,IAAI,GAAGK,IAAI;IACpDN,SAAS,GAAGG,KAAK;IAEjB;IACA,IAAA3J,MAAA,CAAA+J,gBAAgB,EAACD,IAAI,EAAE5D,cAAc,CAACzS,KAAK,CAAC;IAE5C;IACA8V,SAAS,CAACS,WAAW,GAAGP,WAAW,CAACQ,OAAO,CAAC,CAAC,CAAC;IAE9C;IACAC,qBAAqB,CAACR,OAAO,CAAC;EAClC,CAAC;EACDQ,qBAAqB,CAACR,OAAO,CAAC;AAClC,CAAC,EAAC,CAAE;;;;;;;;;;;;;;;;;AClVJ,MAAAvY,MAAA,GAAAC,mBAAA;AACA,MAAA+Y,gBAAA,GAAA/Y,mBAAA;AAEA,MAAAwO,iBAAA,GAAAxO,mBAAA;AAEO,MAAM8X,kBAAkB,GAAGA,CAACkB,OAA0B,EAAEC,OAAuB,EAAEC,aAAsC,KAAU;EACpI;EACA,MAAMC,sBAAsB,GAAwB,IAAIJ,gBAAA,CAAAK,mBAAmB,EAAE;EAC7ED,sBAAsB,CAACE,SAAS,CAAC,SAAS,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACC,IAAI,CAAC,CAAC;EAClEJ,sBAAsB,CAACE,SAAS,CAAC,MAAM,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACE,IAAI,CAAC,CAAC;EAC/DL,sBAAsB,CAACE,SAAS,CAAC,MAAM,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACG,IAAI,CAAC,CAAC;EAC/DN,sBAAsB,CAACE,SAAS,CAAC,OAAO,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACI,IAAI,CAAC,CAAC;EAChEP,sBAAsB,CAACE,SAAS,CAAC,IAAI,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACK,SAAS,CAAC,CAAC;EAClER,sBAAsB,CAACE,SAAS,CAAC,MAAM,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACM,WAAW,CAAC,CAAC;EACtET,sBAAsB,CAACE,SAAS,CAAC,YAAY,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACO,IAAI,CAAC,CAAC;EACrEV,sBAAsB,CAACE,SAAS,CAAC,aAAa,EAAE,CAACN,gBAAA,CAAAO,cAAc,CAACQ,IAAI,CAAC,CAAC;EACtEX,sBAAsB,CAACE,SAAS,CAAC,KAAK,EAAE,CAACN,gBAAA,CAAAgB,WAAW,CAACC,KAAK,CAAC,CAAC;EAC5Db,sBAAsB,CAACE,SAAS,CAAC,OAAO,EAAE,CAACN,gBAAA,CAAAgB,WAAW,CAACE,KAAK,CAAC,CAAC;EAC9Dd,sBAAsB,CAACe,gBAAgB,GAAG,GAAG;EAC7C,MAAMC,mBAAmB,GAAuB,IAAIpB,gBAAA,CAAAqB,kBAAkB,CAACjB,sBAAsB,CAAC;EAC9F,MAAMkB,aAAa,GAAiB,IAAItB,gBAAA,CAAAuB,YAAY,CAACH,mBAAmB,CAAC;EACzEE,aAAa,CAACE,iBAAiB,CAAC,IAAIxB,gBAAA,CAAAyB,sBAAsB,EAAE,CAAC;EAE7D,MAAMC,mBAAmB,GAA+B,IAAI1a,MAAA,CAAA2a,UAAU,EAAkB;EACxF,MAAMC,SAAS,GAAoBN,aAAa,CAACO,OAAO,CAAC,CAAC,CAAC;EAC3DD,SAAS,CAACE,gBAAgB,CAAC,mBAAmB,EAAGC,MAAM,IAAI;IACvDL,mBAAmB,CAACzH,GAAG,CAAC8H,MAAM,CAACC,MAAM,EAAED,MAAM,CAACE,KAAK,CAAC;EACxD,CAAC,CAAC;EACF1H,MAAM,CAAC2H,WAAW,CAAC,MAAK;IACpB,MAAMC,MAAM,GAAG,EAAE;IAEjB;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;MACzC2E,OAAO,CAACnM,cAAc,CAAC7B,oBAAoB,CAAEwP,mBAAmB,CAACnG,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,GAAI4G,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1G;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,MAAM,CAAE,GAAG,CAAC,EAAE;MACtC2E,OAAO,CAACnM,cAAc,CAAC7B,oBAAoB,CAAC,EAAEwP,mBAAmB,CAACnG,GAAG,CAAC,MAAM,CAAE,GAAG,EAAE,CAAC,GAAG4G,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACxG;IAEA;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,OAAO,CAAE,GAAG,CAAC,EAAE;MACvC2E,OAAO,CAACnM,cAAc,CAAC7B,oBAAoB,CAAC,CAAC,EAAGwP,mBAAmB,CAACnG,GAAG,CAAC,OAAO,CAAE,GAAG,EAAE,GAAI4G,MAAM,EAAE,CAAC,CAAC;IACxG;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,MAAM,CAAE,GAAG,CAAC,EAAE;MACtC2E,OAAO,CAACnM,cAAc,CAAC7B,oBAAoB,CAAC,CAAC,EAAE,EAAEwP,mBAAmB,CAACnG,GAAG,CAAC,MAAM,CAAE,GAAG,EAAE,CAAC,GAAG4G,MAAM,EAAE,CAAC,CAAC;IACxG;IAEA;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,EAAE;MACpC2E,OAAO,CAACnM,cAAc,CAAC7B,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAGwP,mBAAmB,CAACnG,GAAG,CAAC,IAAI,CAAE,GAAG,EAAE,GAAI4G,MAAM,CAAC;IACrG;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,MAAM,CAAE,GAAG,CAAC,EAAE;MACtC2E,OAAO,CAACnM,cAAc,CAAC7B,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAEwP,mBAAmB,CAACnG,GAAG,CAAC,MAAM,CAAE,GAAG,EAAE,CAAC,GAAG4G,MAAM,CAAC;IACxG;IAEA;IACA,IAAIT,mBAAmB,CAACnG,GAAG,CAAC,KAAK,CAAE,GAAG,CAAC,IAAImG,mBAAmB,CAACnG,GAAG,CAAC,KAAK,CAAE,GAAG,CAAC,EAAE;MAC5E2E,OAAO,CAACnM,cAAc,CAAC/F,gBAAgB,CAAC,CAAC,EAAE0T,mBAAmB,CAACnG,GAAG,CAAC,KAAK,CAAE,EAAE,CAAC,CAAC;IAClF;IACA,IAAImG,mBAAmB,CAACnG,GAAG,CAAC,OAAO,CAAE,GAAG,CAAC,IAAImG,mBAAmB,CAACnG,GAAG,CAAC,OAAO,CAAE,GAAG,CAAC,EAAE;MAChF2E,OAAO,CAACnM,cAAc,CAAC/F,gBAAgB,CAAC0T,mBAAmB,CAACnG,GAAG,CAAC,OAAO,CAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACpF;IACA,IAAImG,mBAAmB,CAACnG,GAAG,CAAC,YAAY,CAAE,GAAG,CAAC,EAAE;MAC5C2E,OAAO,CAACnM,cAAc,CAAC/F,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE0T,mBAAmB,CAACnG,GAAG,CAAC,YAAY,CAAE,CAAC;IACzF;IACA,IAAImG,mBAAmB,CAACnG,GAAG,CAAC,aAAa,CAAE,GAAG,CAAC,EAAE;MAC7C2E,OAAO,CAACnM,cAAc,CAAC/F,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC0T,mBAAmB,CAACnG,GAAG,CAAC,aAAa,CAAE,CAAC;IAC3F;IAEA;IACA4E,aAAa,CAACiC,QAAQ,CAAClC,OAAO,CAACnP,SAAS,CAAC0E,iBAAA,CAAAvB,YAAY,CAACN,cAAc,CAAC,CAACvK,SAAS,CAAC;EACpF,CAAC,EAAE,CAAC,CAAC;EACL4W,OAAO,CAAC6B,gBAAgB,CAAC,OAAO,EAAE,MAAK;IACnC7B,OAAO,CAACoC,kBAAkB,EAAE;EAChC,CAAC,CAAC;AACN,CAAC;AAtEYxa,0BAAkB,GAAAkX,kBAAA;AAwElBlX,wBAAgB,GAAG,CAAC,MAAK;EAClC,IAAIya,OAAO,GAAW,CAAC;EAEvB,OAAO,CAACC,IAAY,EAAE7Z,MAAc,KAAU;IAC1C,MAAM8Z,OAAO,GAAsB3G,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAsB;IAC9F,MAAM2G,cAAc,GAA6BD,OAAO,CAACE,UAAU,CAAC,IAAI,EAAE;MAAEC,kBAAkB,EAAE;IAAI,CAAE,CAAE;IAExG,IAAGH,OAAO,CAAClZ,KAAK,GAAG,CAAC,EAAE;MAClB;IACJ;IAEA;IACA,IAAIZ,MAAM,KAAK8Z,OAAO,CAAClZ,KAAK,EAAE;MAC1BkZ,OAAO,CAAClZ,KAAK,GAAGZ,MAAM;MACtB8Z,OAAO,CAACjZ,MAAM,GAAG,EAAE;IACvB;IAEA;IACA,MAAMqZ,YAAY,GAAcH,cAAc,CAACI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEL,OAAO,CAAClZ,KAAK,GAAG,CAAC,EAAEkZ,OAAO,CAACjZ,MAAM,CAAC;IAEpG;IACA,IAAIuZ,QAAQ,GAAW,CAAC;IACxB,IAAIR,OAAO,GAAGC,IAAI,EAAE;MAChBO,QAAQ,GAAGR,OAAO,GAAGC,IAAI;MACzBD,OAAO,GAAGC,IAAI;IAClB;IAEA;IACA,IAAIO,QAAQ,KAAK,CAAC,EAAE;MAChBL,cAAc,CAACM,SAAS,CAACP,OAAO,CAAClZ,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEkZ,OAAO,CAACjZ,MAAM,CAAC;IACrE,CAAC,MAAM;MACHkZ,cAAc,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEP,OAAO,CAAClZ,KAAK,EAAEkZ,OAAO,CAACjZ,MAAM,CAAC;IACjE;IAEA;IACA,MAAMyZ,YAAY,GAAW7Y,IAAI,CAAC8Y,KAAK,CAACT,OAAO,CAACjZ,MAAM,GAAGuZ,QAAQ,CAAC;IAClEL,cAAc,CAACS,YAAY,CAACN,YAAY,EAAE,CAAC,EAAEJ,OAAO,CAACjZ,MAAM,GAAIyZ,YAAa,EAAE,CAAC,EAAE,CAAC,EAAER,OAAO,CAAClZ,KAAK,GAAG,CAAC,EAAE0Z,YAAY,CAAC;IAEpH;IACA,MAAMG,WAAW,GAAYZ,IAAI,GAAGD,OAAO,GAAIE,OAAO,CAACjZ,MAAM;IAE7D;IACAkZ,cAAc,CAACW,SAAS,GAAG,SAAS;IACpCX,cAAc,CAACY,QAAQ,CAACb,OAAO,CAAClZ,KAAK,GAAG,CAAC,EAAEkZ,OAAO,CAACjZ,MAAM,GAAG4Z,WAAW,EAAE,CAAC,EAAEA,WAAW,CAAC;EAC5F,CAAC;AACL,CAAC,EAAC,CAAE;;;;;;;;;;;;;;;;;;;AC1HJ,MAAAnc,MAAA,GAAAC,mBAAA;AACA,MAAAqc,YAAA,GAAArc,mBAAA;AAEA,MAAAsc,wBAAA,GAAAtc,mBAAA;AACA,MAAAuc,2BAAA,GAAAvc,mBAAA;AACA,MAAA4N,8BAAA,GAAA5N,mBAAA;AACA,MAAAwc,uBAAA,GAAAxc,mBAAA;AACA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAA0c,eAAA,GAAA1c,mBAAA;AACA,MAAA2c,iBAAA,GAAA3c,mBAAA;AACA,MAAA4c,eAAA,GAAA5c,mBAAA;AAIA,MAAa6c,kBAAmB,SAAQP,wBAAA,CAAAQ,mBAAgD;EAIpF;;;;;;;;EAQAzc,YAAmB0c,OAA6B,EAAEC,YAA6B,EAAEC,eAA+C,EAAEC,aAAoC;IAClK,KAAK,CAACD,eAAe,EAAEC,aAAa,CAAC;IAErC;IACA,IAAI,CAACC,YAAY,GAAGH,YAAY;IAChC,IAAI,CAACI,WAAW,GAAGL,OAAO;EAC9B;EAUO1K,YAAYA,CAACgL,WAA+C,EAAEC,kBAAA,GAAoC,IAAI;IACzG;IACA,IAAI,EAAE,IAAI,CAACF,WAAW,CAAC/L,MAAM,YAAYkL,2BAAA,CAAAgB,sBAAsB,CAAC,EAAE;MAC9D,MAAM,IAAIxd,MAAA,CAAAY,SAAS,CAAC,+CAA+C,EAAE,IAAI,CAAC;IAC9E;IAEA;IACA,MAAM6c,aAAa,GAA0B,CAAC,MAAK;MAC/C;MACA,IAAI,OAAOH,WAAW,KAAK,QAAQ,EAAE;QACjC,OAAOA,WAAW;MACtB;MAEA;MACA,QAAQ,IAAI;QACR,KAAKA,WAAW,YAAY/K,YAAY;UAAE;YACtC,OAAO1E,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO;UACxC;QACA,KAAKkN,WAAW,YAAYI,WAAW;UAAE;YACrC,OAAO7P,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;UACvC;QACA,KAAKL,WAAW,YAAYM,UAAU;UAAE;YACpC,OAAO/P,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM;UACvC;QACA;UAAS;YACL,MAAM,IAAI7d,MAAA,CAAAY,SAAS,CAAC,yDAAyD,EAAE,IAAI,CAAC;UACxF;MACJ;IACJ,CAAC,EAAC,CAAE;IAEJ;IACA,MAAMkd,kBAAkB,GAAWP,kBAAkB,IAAI,CAAC,MAAK;MAC3D;MACA,IAAI,IAAI,CAACF,WAAW,CAAC/L,MAAM,CAACyM,YAAY,KAAK,CAAC,EAAE;QAC5C,OAAO,CAAC;MACZ;MAEA;MACA,IAAI,OAAOT,WAAW,KAAK,QAAQ,EAAE;QACjC,MAAM,IAAItd,MAAA,CAAAY,SAAS,CAAC,+BAA+B,IAAI,CAACyc,WAAW,CAACW,IAAI,sCAAsC,EAAE,IAAI,CAAC;MACzH;MAEA;MACA,MAAMC,iBAAiB,GAAWX,WAAW,CAAC9a,MAAM,GAAG8a,WAAW,CAACY,iBAAiB;MAEpF;MACA,MAAMC,UAAU,GAAW,CAACF,iBAAiB,GAAG,IAAI,CAACZ,WAAW,CAAC/L,MAAM,CAAC8M,SAAS,IAAI,IAAI,CAACf,WAAW,CAAC/L,MAAM,CAACyM,YAAY;MACzH,IAAII,UAAU,GAAG,CAAC,GAAG,CAAC,EAAE;QACpB,MAAM,IAAIne,MAAA,CAAAY,SAAS,CAAC,mHAAmH,EAAE,IAAI,CAAC;MAClJ;MAEA,OAAOud,UAAU;IACrB,CAAC,EAAC,CAAE;IAEJ;IACA,MAAME,OAAO,GAA0B,IAAI/B,YAAA,CAAAgC,SAAS,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAAClB,WAAW,CAAC/L,MAAM,EAAEmM,aAAa,EAAEK,kBAAkB,CAAC;IAE7H;IACA,IAAI,OAAOR,WAAW,KAAK,QAAQ,EAAE;MACjCe,OAAO,CAACG,WAAW,CAAC,MAAK;QACrB,OAAOlB,WAAW;MACtB,CAAC,CAAC;IACN;IAEA;IACA,IAAI,CAACmB,QAAQ,CAACJ,OAAO,CAAC;EAC1B;EAEA;;;;;;;EAOaxL,WAAWA,CAAC,GAAG6L,WAA0B;IAAA,IAAAC,KAAA;IAAA,OAAA3P,iBAAA;MAClD;MACA,IAAI,EAAE2P,KAAI,CAACtB,WAAW,CAAC/L,MAAM,YAAYoL,uBAAA,CAAAkC,mBAAmB,CAAC,EAAE;QAC3D,MAAM,IAAI5e,MAAA,CAAAY,SAAS,CAAC,sDAAsD,EAAE+d,KAAI,CAAC;MACrF;MAEA;MACA,MAAME,QAAQ,GAAiB,IAAIlC,eAAA,CAAAmC,YAAY,CAACH,KAAI,CAACJ,MAAM,EAAEI,KAAI,CAACtB,WAAW,CAAC/L,MAAM,CAAC;MAErF;MACA,MAAMyN,aAAa,GAAkBF,QAAQ,CAACG,IAAI,CAAC,GAAGN,WAAW,CAAC;MAElE;MACAC,KAAI,CAACF,QAAQ,CAACI,QAAQ,CAAC;MAEvB,OAAOE,aAAa;IAAC;EACzB;EAEA;;;EAGOjM,aAAaA,CAAA;IAChB;IACA,IAAI,EAAE,IAAI,CAACuK,WAAW,CAAC/L,MAAM,YAAYmL,uBAAA,CAAAwC,mBAAmB,CAAC,EAAE;MAC3D,MAAM,IAAIjf,MAAA,CAAAY,SAAS,CAAC,gDAAgD,EAAE,IAAI,CAAC;IAC/E;IAEA;IACA,IAAI,CAAC6d,QAAQ,CAAC,IAAI7B,iBAAA,CAAAsC,cAAc,CAAC,IAAI,CAACX,MAAM,EAAE,IAAI,CAAClB,WAAW,CAAC/L,MAAM,CAAC,CAAC;EAC3E;EAEA;;;;;EAKO6N,WAAWA,CAACC,OAAe;IAC9B;IACA,IAAI,EAAE,IAAI,CAAC/B,WAAW,CAAC/L,MAAM,YAAYoL,uBAAA,CAAAkC,mBAAmB,CAAC,EAAE;MAC3D,MAAM,IAAI5e,MAAA,CAAAY,SAAS,CAAC,gDAAgD,EAAE,IAAI,CAAC;IAC/E;IAEA;IACA,MAAMye,aAAa,GAAiB,IAAIxC,eAAA,CAAAyC,YAAY,CAAC,IAAI,CAACf,MAAM,EAAE,IAAI,CAAClB,WAAW,CAAC/L,MAAM,CAAC;IAC1F+N,aAAa,CAACE,MAAM,GAAGH,OAAO;IAE9B;IACA,IAAI,CAACX,QAAQ,CAACY,aAAa,CAAC;EAChC;EAEA;;;;;;;;EAQO9K,GAAGA,CAAA;IACN;IACA,IAAI,CAAC,IAAI,CAAC6I,YAAY,EAAE;MACpB,MAAM,IAAIpd,MAAA,CAAAY,SAAS,CAAC,0BAA0B,EAAE,IAAI,CAAC;IACzD;IAEA;IACA,OAAO,IAAI,CAACwc,YAAiB;EACjC;EAEA;;;;;EAKOnK,GAAGA,CAACxQ,KAAe;IACtB,IAAI,CAACgc,QAAQ,CAAChc,KAAK,CAAC;EACxB;;AAlLJ5B,0BAAA,GAAAic,kBAAA;;;;;;;;;;;;;;;;;ACdA,MAAA9c,MAAA,GAAAC,mBAAA;AAEA,MAAAkO,2BAAA,GAAAlO,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAAuc,2BAAA,GAAAvc,mBAAA;AACA,MAAAwc,uBAAA,GAAAxc,mBAAA;AACA,MAAAyc,uBAAA,GAAAzc,mBAAA;AAEA,MAAAwf,YAAA,GAAAxf,mBAAA;AACA,MAAAyf,yBAAA,GAAAzf,mBAAA;AAEA;AAEA;;;AAGA,MAAa6Q,eAAgB,SAAQ0O,YAAA,CAAAG,SAAoF;EAIrH;;;EAGA,IAAWC,YAAYA,CAAA;IACnB;IACA,IAAI,CAACC,WAAW,EAAE;IAElB,OAAO,CAAC,GAAG,IAAI,CAACC,SAAS,CAACC,IAAI,EAAE,CAAC;EACrC;EAEA;;;EAGA,IAAWC,QAAQA,CAAA;IACf;IACA,IAAI,CAACH,WAAW,EAAE;IAElB,MAAMI,YAAY,GAAsB,IAAIre,KAAK,EAAc;IAC/D,KAAK,MAAMse,QAAQ,IAAI,IAAI,CAACJ,SAAS,CAACK,MAAM,EAAE,EAAE;MAC5CF,YAAY,CAACC,QAAQ,CAACE,KAAK,CAAC,GAAGF,QAAQ;IAC3C;IAEA,OAAOD,YAAY;EACvB;EAEA;;;EAGA,IAAWjC,IAAIA,CAAA;IACX,OAAO,IAAI,CAACqC,KAAK;EACrB;EAEA;;;EAGA,IAAoBC,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;;;;EAMAhgB,YAAmBigB,OAAkB,EAAEC,KAAa;IAChD,KAAK,CAACD,OAAO,CAAC;IAEd;IACA;IAEA;IACA,IAAI,CAACF,KAAK,GAAGG,KAAK;IAElB;IACA,IAAI,CAACV,SAAS,GAAG,IAAI9f,MAAA,CAAA2a,UAAU,EAAsB;EACzD;EAEA;;;;;EAKOvI,MAAMA,CAAA;IACT;IACA,IAAI,CAACyN,WAAW,EAAE;IAElB,OAAO,IAAIJ,YAAA,CAAAgB,SAAS,CAAC,IAAI,CAAClC,MAAM,EAAE,IAAI,CAAC;EAC3C;EAEA;;;;EAIOmC,OAAOA,CAACF,KAAa;IACxB;IACA,IAAI,CAACX,WAAW,EAAE;IAElB,IAAI,CAAC,IAAI,CAACC,SAAS,CAACa,GAAG,CAACH,KAAK,CAAC,EAAE;MAC5B,MAAM,IAAIxgB,MAAA,CAAAY,SAAS,CAAC,QAAQ4f,KAAK,kBAAkB,EAAE,IAAI,CAAC;IAC9D;IAEA,OAAO,IAAI,CAACV,SAAS,CAACvL,GAAG,CAACiM,KAAK,CAAE;EACrC;EAEA;;;;;;;EAOgB7Q,KAAKA,CAACiR,cAAqE;IACvF,OAAO,KAAK,CAACjR,KAAK,CAACiR,cAAc,CAAC;EACtC;EAEA;;;EAGmBC,cAAcA,CAAA;IAC7B,MAAMC,UAAU,GAAmC,IAAIlf,KAAK,EAA2B;IAEvF;IACA,KAAK,MAAMmf,MAAM,IAAI,IAAI,CAACf,QAAQ,EAAE;MAChC;MACA,MAAMgB,YAAY,GAA4B;QAC1CC,UAAU,EAAEF,MAAM,CAACE,UAAU;QAC7BjQ,OAAO,EAAE+P,MAAM,CAACX;OACnB;MAED;MACA,QAAQ,IAAI;QACR;QACA,KAAKW,MAAM,CAACzP,MAAM,YAAYkL,2BAAA,CAAAgB,sBAAsB;UAAE;YAClD;YACA,MAAM0D,kBAAkB,GAAyB,CAAC,MAAK;cACnD,QAAQH,MAAM,CAACI,WAAW;gBACtB,KAAKhT,2BAAA,CAAAgD,kBAAkB,CAACiQ,IAAI;kBAAE;oBAC1B,OAAO,SAAS;kBACpB;gBACA,KAAKjT,2BAAA,CAAAgD,kBAAkB,CAACC,IAAI;kBAAE;oBAC1B,OAAO,mBAAmB;kBAC9B;gBACA;kBAAS;oBACL,OAAO,SAAS;kBACpB;cACJ;YACJ,CAAC,EAAC,CAAE;YAEJ;YACA4P,YAAY,CAAC9Q,MAAM,GAAG;cAClBmR,IAAI,EAAEH,kBAAkB;cACxBI,cAAc,EAAE,CAAC;cACjBC,gBAAgB,EAAE;aACsB;YAE5C;UACJ;QAEA;QACA,KAAKR,MAAM,CAACzP,MAAM,YAAYmL,uBAAA,CAAAwC,mBAAmB;UAAE;YAC/C;YACA+B,YAAY,CAACQ,OAAO,GAAG;cACnBH,IAAI,EAAEN,MAAM,CAACzP,MAAM,CAACmQ;aACqB;YAE7C;UACJ;QAEA;QACA,KAAKV,MAAM,CAACzP,MAAM,YAAYoL,uBAAA,CAAAkC,mBAAmB;UAAE;YAC/C;YACA,IAAImC,MAAM,CAACI,WAAW,KAAKhT,2BAAA,CAAAgD,kBAAkB,CAACiQ,IAAI,EAAE;cAChD;cACA,MAAMM,0BAA0B,GAA4B,IAAI,CAACnD,MAAM,CAACoD,eAAe,CAACC,YAAY,CAACb,MAAM,CAACzP,MAAM,CAACuQ,MAAM,CAAC;cAE1H;cACAb,YAAY,CAACc,OAAO,GAAG;gBACnBC,UAAU,EAAEL,0BAA0B,CAACM,WAAW,CAACC,OAAO;gBAC1DC,YAAY,EAAEnB,MAAM,CAACzP,MAAM,CAAC4Q,YAAY;gBACxCC,aAAa,EAAEpB,MAAM,CAACzP,MAAM,CAAC8Q;eACY;cAE7C;YACJ;YAEA;YACA,IAAIC,cAAuC;YAC3C,QAAQtB,MAAM,CAACI,WAAW;cACtB,KAAKhT,2BAAA,CAAAgD,kBAAkB,CAACwF,SAAS;gBAAE;kBAC/B0L,cAAc,GAAG,YAAY;kBAC7B;gBACJ;cACA,KAAKlU,2BAAA,CAAAgD,kBAAkB,CAACmR,KAAK;gBAAE;kBAC3BD,cAAc,GAAG,YAAY;kBAC7B;gBACJ;cACA,KAAKlU,2BAAA,CAAAgD,kBAAkB,CAACC,IAAI;gBAAE;kBAC1BiR,cAAc,GAAG,WAAW;kBAC5B;gBACJ;YACJ;YAEA;YACArB,YAAY,CAACuB,cAAc,GAAG;cAC1BC,MAAM,EAAEH,cAAe;cACvBR,MAAM,EAAEd,MAAM,CAACzP,MAAM,CAACuQ,MAA0B;cAChDM,aAAa,EAAEpB,MAAM,CAACzP,MAAM,CAAC8Q;aACmB;UACxD;MACJ;MAEA;MACAtB,UAAU,CAAC9e,IAAI,CAACgf,YAAY,CAAC;IACjC;IAEA;IACA,OAAO,IAAI,CAACzC,MAAM,CAACkE,GAAG,CAACC,qBAAqB,CAAC;MACzCC,KAAK,EAAE,mBAAmB,IAAI,CAACtC,KAAK,EAAE;MACtCuC,OAAO,EAAE9B;KACZ,CAAC;EACN;EAEA;;;;;EAKmB+B,OAAOA,CAACC,WAAqC;IAC5D;IACA,MAAMC,eAAe,GAAgB,IAAIC,GAAG,EAAU;IACtD,MAAMC,YAAY,GAAgB,IAAID,GAAG,EAAU;IAEnD;IACA,KAAK,MAAM9C,QAAQ,IAAI4C,WAAW,CAAC9C,QAAQ,EAAE;MACzC;MACA,IAAI,CAACE,QAAQ,CAAC5O,MAAM,EAAE;QAClB,MAAM,IAAItR,MAAA,CAAAY,SAAS,CAAC,uBAAuBsf,QAAQ,CAAClC,IAAI,wBAAwB,EAAE,IAAI,CAAC;MAC3F;MAEA;MACA,IAAI,CAAC8B,SAAS,CAAC7M,GAAG,CAACiN,QAAQ,CAAClC,IAAI,EAAE;QAC9BA,IAAI,EAAEkC,QAAQ,CAAClC,IAAI;QACnBoC,KAAK,EAAEF,QAAQ,CAACE,KAAK;QACrB9O,MAAM,EAAE4O,QAAQ,CAAC5O,MAAM;QACvB2P,UAAU,EAAEf,QAAQ,CAACe,UAAU;QAC/BE,WAAW,EAAEjB,QAAQ,CAACiB;OACzB,CAAC;MAEF;MACAjB,QAAQ,CAAC5O,MAAM,CAAC0F,uBAAuB,CAAC,MAAK;QACzC,IAAI,CAACkM,UAAU,CAACC,+BAA+B,CAACC,MAAM,CAAC;MAC3D,CAAC,CAAC;MAEF;MACA,IAAIL,eAAe,CAACpC,GAAG,CAACT,QAAQ,CAACE,KAAK,CAAC,IAAI6C,YAAY,CAACtC,GAAG,CAACT,QAAQ,CAAClC,IAAI,CAAC,EAAE;QACxE,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,YAAYsf,QAAQ,CAAClC,IAAI,iBAAiBkC,QAAQ,CAACE,KAAK,gBAAgB,EAAE,IAAI,CAAC;MACvG;MAEA;MACA2C,eAAe,CAACrgB,GAAG,CAACwd,QAAQ,CAACE,KAAK,CAAC;MACnC6C,YAAY,CAACvgB,GAAG,CAACwd,QAAQ,CAAClC,IAAI,CAAC;IACnC;EACJ;EAEA;;;;;;;EAOmBqF,mBAAmBA,CAACP,WAA4C;IAC/E,OAAO,IAAIpD,yBAAA,CAAA4D,oBAAoB,CAACR,WAAW,CAAC;EAChD;;AAlQJjiB,uBAAA,GAAAiQ,eAAA;AA6QA,IAAYqS,+BAGX;AAHD,WAAYA,+BAA+B;EACvCA,+BAAA,2BAAuB;EACvBA,+BAAA,oCAAgC;AACpC,CAAC,EAHWA,+BAA+B,KAAAtiB,uCAAA,GAA/BsiB,+BAA+B;;;;;;;;;;;;;;;;;ACjS3C,MAAAnjB,MAAA,GAAAC,mBAAA;AACA,MAAAsjB,mBAAA,GAAAtjB,mBAAA;AACA,MAAAkO,2BAAA,GAAAlO,mBAAA;AACA,MAAAujB,oBAAA,GAAAvjB,mBAAA;AACA,MAAAqc,YAAA,GAAArc,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAEA,MAAAuc,2BAAA,GAAAvc,mBAAA;AACA,MAAAwc,uBAAA,GAAAxc,mBAAA;AACA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAAwjB,cAAA,GAAAxjB,mBAAA;AACA,MAAAyjB,gBAAA,GAAAzjB,mBAAA;AACA,MAAA0jB,sBAAA,GAAA1jB,mBAAA;AACA,MAAA0c,eAAA,GAAA1c,mBAAA;AACA,MAAA2c,iBAAA,GAAA3c,mBAAA;AACA,MAAA2jB,uBAAA,GAAA3jB,mBAAA;AAGA,MAAawgB,SAAU,SAAQjB,YAAA,CAAAG,SAAkD;EAI7E;;;EAGA,IAAWrO,MAAMA,CAAA;IACb,OAAO,IAAI,CAACuS,OAAO;EACvB;EAEA;;;EAGA,IAAoBvD,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;;EAIAhgB,YAAmBigB,OAAkB,EAAEuD,gBAAiC;IACpE,KAAK,CAACvD,OAAO,CAAC;IAEd,IAAI,CAACsD,OAAO,GAAGC,gBAAgB;IAC/B,IAAI,CAACC,SAAS,GAAG,IAAI/jB,MAAA,CAAA2a,UAAU,EAAoB;IAEnD;IACAmJ,gBAAgB,CAAC9M,uBAAuB,CAAC,MAAK;MAC1C,IAAI,CAACkM,UAAU,CAACc,yBAAyB,CAACC,gBAAgB,CAAC;IAC/D,CAAC,CAAC;EACN;EAEA;;;;;;;EAOO7jB,IAAIA,CAAC8jB,SAAiB;IACzB,MAAMC,WAAW,GAAyB,IAAI,CAACN,OAAO,CAACnD,OAAO,CAACwD,SAAS,CAAC;IACzE,MAAMviB,KAAK,GAAoB,IAAI,CAACoiB,SAAS,CAACxP,GAAG,CAAC2P,SAAS,CAAC,IAAI,IAAI;IAEpE;IACA,MAAME,oBAAoB,GAAmC;MACzD7F,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB8F,OAAO,EAAE,IAAI;MAAE;MACfjkB,IAAI,EAAE;KACT;IAED,OAAO,IAAIwjB,uBAAA,CAAA9G,kBAAkB,CAACqH,WAAW,EAAExiB,KAAK,EAAEyiB,oBAAoB,EAAG3hB,KAAe,IAAI;MACxF;MACA,QAAQ,IAAI;QACR;QACA,KAAKA,KAAK,YAAY6Z,YAAA,CAAAgC,SAAS;UAAE;YAC7B,IAAI,EAAE6F,WAAW,CAAC7S,MAAM,YAAYkL,2BAAA,CAAAgB,sBAAsB,CAAC,EAAE;cACzD,MAAM,IAAIxd,MAAA,CAAAY,SAAS,CAAC,8BAA8BsjB,SAAS,yCAAyC,EAAE,IAAI,CAAC;YAC/G;YAEA;YACA,IAAIC,WAAW,CAAChD,WAAW,KAAKhT,2BAAA,CAAAgD,kBAAkB,CAACiQ,IAAI,EAAE;cACrD3e,KAAK,CAAC6hB,WAAW,CAACf,mBAAA,CAAAgB,WAAW,CAACC,OAAO,CAAC;YAC1C,CAAC,MAAM;cACH/hB,KAAK,CAAC6hB,WAAW,CAACf,mBAAA,CAAAgB,WAAW,CAACE,OAAO,CAAC;YAC1C;YAEA;UACJ;QAEA;QACA,KAAKhiB,KAAK,YAAYma,iBAAA,CAAAsC,cAAc;UAAE;YAClC,IAAI,EAAEiF,WAAW,CAAC7S,MAAM,YAAYmL,uBAAA,CAAAwC,mBAAmB,CAAC,EAAE;cACtD,MAAM,IAAIjf,MAAA,CAAAY,SAAS,CAAC,uCAAuCsjB,SAAS,kDAAkD,EAAE,IAAI,CAAC;YACjI;YAEA;UACJ;QAEA;QACA,KAAKzhB,KAAK,YAAYghB,cAAA,CAAAiB,WAAW;UAAE;YAC/B,IAAI,EAAEP,WAAW,CAAC7S,MAAM,YAAYoL,uBAAA,CAAAkC,mBAAmB,CAAC,EAAE;cACtD,MAAM,IAAI5e,MAAA,CAAAY,SAAS,CAAC,+BAA+BsjB,SAAS,0CAA0C,EAAE,IAAI,CAAC;YACjH;YAEA;YACA,IAAIC,WAAW,CAAChD,WAAW,KAAKhT,2BAAA,CAAAgD,kBAAkB,CAACiQ,IAAI,EAAE;cACrD3e,KAAK,CAAC6hB,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACH,OAAO,CAAC;YAC3C,CAAC,MAAM;cACH/hB,KAAK,CAAC6hB,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACC,cAAc,CAAC;YAClD;YAEA;UACJ;QAEA;UAAS;YACL,MAAM,IAAI5kB,MAAA,CAAAY,SAAS,CAAC,4CAA4CsjB,SAAS,IAAI,EAAE,IAAI,CAAC;UACxF;MACJ;MAEA;MACA,IAAI,CAACH,SAAS,CAAC9Q,GAAG,CAACiR,SAAS,EAAEzhB,KAAK,CAAC;MAEpC;MACAA,KAAK,CAACuU,uBAAuB,CAAC,MAAK;QAC/B,IAAI,CAACkM,UAAU,CAACc,yBAAyB,CAACC,gBAAgB,CAAC;MAC/D,CAAC,CAAC,CAAC,CAAC;MAEJ;MACA,IAAI,CAACf,UAAU,CAACc,yBAAyB,CAACC,gBAAgB,CAAC;IAC/D,CAAC,CAAC;EACN;EAEA;;;EAGmBpD,cAAcA,CAAA;IAC7B;IACA,IAAI,CAACqC,UAAU,CAACc,yBAAyB,CAACC,gBAAgB,CAAC;IAE3D,MAAMnD,UAAU,GAA6B,IAAIlf,KAAK,EAAqB;IAE3E,KAAK,MAAMijB,SAAS,IAAI,IAAI,CAACvT,MAAM,CAACsO,YAAY,EAAE;MAC9C;MACA,MAAMkF,SAAS,GAAyB,IAAI,CAACf,SAAS,CAACxP,GAAG,CAACsQ,SAAS,CAAC;MACrE,IAAI,CAACC,SAAS,EAAE;QACZ,MAAM,IAAI9kB,MAAA,CAAAY,SAAS,CAAC,qBAAqBikB,SAAS,eAAe,EAAE,IAAI,CAAC;MAC5E;MAEA;MACA,MAAMV,WAAW,GAAyB,IAAI,CAAC7S,MAAM,CAACoP,OAAO,CAACmE,SAAS,CAAC;MAExE;MACA,MAAME,WAAW,GAAsB;QAAE/T,OAAO,EAAEmT,WAAW,CAAC/D,KAAK;QAAE4E,QAAQ,EAAO;MAAI,CAAE;MAE1F;MACA,IAAIF,SAAS,YAAYxI,YAAA,CAAAgC,SAAS,EAAE;QAChCyG,WAAW,CAACC,QAAQ,GAAG;UAAE9U,MAAM,EAAE4U,SAAS,CAACxE;QAAM,CAAE;QAEnDQ,UAAU,CAAC9e,IAAI,CAAC+iB,WAAW,CAAC;QAC5B;MACJ;MAEA;MACA,IAAID,SAAS,YAAYlI,iBAAA,CAAAsC,cAAc,EAAE;QACrC6F,WAAW,CAACC,QAAQ,GAAGF,SAAS,CAACxE,MAAM;QACvCQ,UAAU,CAAC9e,IAAI,CAAC+iB,WAAW,CAAC;QAC5B;MACJ;MAEA;MACA,IAAID,SAAS,YAAYnB,sBAAA,CAAAsB,kBAAkB,EAAE;QACzCF,WAAW,CAACC,QAAQ,GAAGF,SAAS,CAACxE,MAAM;QAEvCQ,UAAU,CAAC9e,IAAI,CAAC+iB,WAAW,CAAC;QAC5B;MACJ;MAEA;MACA,IAAID,SAAS,YAAYnI,eAAA,CAAAmC,YAAY,EAAE;QACnCiG,WAAW,CAACC,QAAQ,GAAGF,SAAS,CAACxE,MAAM;QAEvCQ,UAAU,CAAC9e,IAAI,CAAC+iB,WAAW,CAAC;QAC5B;MACJ;MAEA;MACA,IAAID,SAAS,YAAYpB,gBAAA,CAAAwB,aAAa,EAAE;QACpCH,WAAW,CAACC,QAAQ,GAAGF,SAAS,CAACxE,MAAM;QAEvCQ,UAAU,CAAC9e,IAAI,CAAC+iB,WAAW,CAAC;QAC5B;MACJ;MAEA,MAAM,IAAI/kB,MAAA,CAAAY,SAAS,CAAC,kBAAkBkkB,SAAS,iBAAiB,EAAE,IAAI,CAAC;IAC3E;IAEA,OAAO,IAAI,CAACvG,MAAM,CAACkE,GAAG,CAAC0C,eAAe,CAAC;MACnCxC,KAAK,EAAE,YAAY;MACnBrR,MAAM,EAAE,IAAI,CAACA,MAAM,CAACgP,MAAM;MAC1BsC,OAAO,EAAE9B;KACZ,CAAC;EACN;;AAvLJjgB,iBAAA,GAAA4f,SAAA;AA4LA,IAAYuD,yBAEX;AAFD,WAAYA,yBAAyB;EACjCA,yBAAA,qCAAiC;AACrC,CAAC,EAFWA,yBAAyB,KAAAnjB,iCAAA,GAAzBmjB,yBAAyB;;;;;;;;;;;;;;;;;AC/MrC,MAAAhkB,MAAA,GAAAC,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAamlB,cAAe,SAAQ5F,YAAA,CAAAG,SAA4D;EAM5F;;;EAGA,IAAW0F,MAAMA,CAAA;IACb,OAAO,CAAC,GAAG,IAAI,CAACC,eAAe,CAACvF,IAAI,EAAE,CAAC;EAC3C;EAEA;;;EAGA,IAAoBO,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;;;;EAMAhgB,YAAmBigB,OAAkB,EAAEgF,cAAmD;IACtF,KAAK,CAAChF,OAAO,CAAC;IAEd;IACA,IAAI,CAAC+E,eAAe,GAAG,IAAItlB,MAAA,CAAA2a,UAAU,EAAkB;IACvD,IAAI,CAAC6K,kBAAkB,GAAG,IAAIxlB,MAAA,CAAA2a,UAAU,EAA2B;IACnE,IAAI,CAAC8K,WAAW,GAAG,IAAIzlB,MAAA,CAAA2a,UAAU,EAA2B;IAC5D,IAAI,CAAC+K,8BAA8B,GAAG,IAAIC,OAAO,EAA6E;IAE9H;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,KAAK,MAAM,CAACC,WAAW,EAAEC,MAAM,CAAC,IAAIN,cAAc,EAAE;MAChD;MACA,IAAI,IAAI,CAACD,eAAe,CAAC3E,GAAG,CAACkF,MAAM,CAAC7H,IAAI,CAAC,EAAE;QACvC,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,uBAAuBilB,MAAM,CAAC7H,IAAI,cAAc,EAAE,IAAI,CAAC;MAC/E;MAEA;MACA,IAAI,IAAI,CAACwH,kBAAkB,CAAC7E,GAAG,CAACiF,WAAW,CAAC,EAAE;QAC1C,MAAM,IAAI5lB,MAAA,CAAAY,SAAS,CAAC,iCAAiCglB,WAAW,cAAc,EAAE,IAAI,CAAC;MACzF;MAEA;MACA,IAAI,CAACN,eAAe,CAACrS,GAAG,CAAC4S,MAAM,CAAC7H,IAAI,EAAE4H,WAAW,CAAC;MAElD;MACA,IAAI,CAACJ,kBAAkB,CAACvS,GAAG,CAAC2S,WAAW,EAAEC,MAAM,CAAC;MAChD,IAAI,CAACJ,WAAW,CAACxS,GAAG,CAAC2S,WAAW,EAAEC,MAAM,CAAC;MAEzC;MACA,MAAMC,SAAS,GAA6DA,CAAA,KAAK;QAC7E,IAAI,CAAC5C,UAAU,CAAC6C,8BAA8B,CAACC,WAAW,CAAC;MAC/D,CAAC;MACDH,MAAM,CAAC7O,uBAAuB,CAAC8O,SAAS,CAAC;MACzC,IAAI,CAACJ,8BAA8B,CAACzS,GAAG,CAAC4S,MAAM,EAAEC,SAAS,CAAC;IAC9D;EACJ;EAEA;;;;;EAKO3T,cAAcA,CAAC8T,UAAkB;IACpC,MAAML,WAAW,GAAuB,IAAI,CAACN,eAAe,CAAC/Q,GAAG,CAAC0R,UAAU,CAAC;IAE5E;IACA,IAAI,OAAOL,WAAW,KAAK,WAAW,EAAE;MACpC,MAAM,IAAI5lB,MAAA,CAAAY,SAAS,CAAC,sBAAsBqlB,UAAU,oBAAoB,EAAE,IAAI,CAAC;IACnF;IAEA;IACA,OAAO,IAAI,CAACR,WAAW,CAAClR,GAAG,CAACqR,WAAW,CAAE;EAC7C;EAEA;;;;;;;EAOOM,UAAUA,CAACD,UAAkB;IAChC,MAAME,eAAe,GAAuB,IAAI,CAACb,eAAe,CAAC/Q,GAAG,CAAC0R,UAAU,CAAC;IAChF,IAAI,OAAOE,eAAe,KAAK,WAAW,EAAE;MACxC,MAAM,IAAInmB,MAAA,CAAAY,SAAS,CAAC,gDAAgDqlB,UAAU,IAAI,EAAE,IAAI,CAAC;IAC7F;IAEA,OAAOE,eAAe;EAC1B;EAEA;;;;;EAKOC,sBAAsBA,CAAC5F,KAAa;IACvC,MAAM2F,eAAe,GAAW,IAAI,CAACD,UAAU,CAAC1F,KAAK,CAAC;IAEtD;IACA,MAAM6F,cAAc,GAAgC,IAAI,CAACZ,WAAW,CAAClR,GAAG,CAAC4R,eAAe,CAAC;IACzF,IAAIE,cAAc,EAAE;MAChB;MACAA,cAAc,CAACC,0BAA0B,CAAC,IAAI,CAACZ,8BAA8B,CAACnR,GAAG,CAAC8R,cAAc,CAAE,CAAC;MAEnG;MACA,IAAI,CAACf,eAAe,CAACiB,MAAM,CAACF,cAAc,CAACrI,IAAI,CAAC;IACpD;IAEA;IACA,IAAI,CAACyH,WAAW,CAACc,MAAM,CAACJ,eAAe,CAAC;EAC5C;EAEA;;;;;;EAMOK,YAAYA,CAACP,UAAkB,EAAEQ,UAA2B;IAC/D,MAAMN,eAAe,GAAW,IAAI,CAACD,UAAU,CAACD,UAAU,CAAC;IAE3D;IACA,MAAMS,aAAa,GAAgC,IAAI,CAAClB,kBAAkB,CAACjR,GAAG,CAAC4R,eAAe,CAAC;IAC/F,IAAI,CAACO,aAAa,EAAE;MAChB,MAAM,IAAI1mB,MAAA,CAAAY,SAAS,CAAC,kDAAkD,EAAE,IAAI,CAAC;IACjF;IAEA;IACA,MAAM+lB,mBAAmB,GAAgCF,UAAU,CAACzG,QAAQ;IAC5E,MAAM4G,uBAAuB,GAAgCH,UAAU,CAACzG,QAAQ;IAEhF;IACA,IAAI2G,mBAAmB,CAACnkB,MAAM,KAAKokB,uBAAuB,CAACpkB,MAAM,EAAE;MAC/D,MAAM,IAAIxC,MAAA,CAAAY,SAAS,CAAC,kDAAkD,EAAE,IAAI,CAAC;IACjF;IAEA;IACA,KAAK,IAAIimB,aAAa,GAAW,CAAC,EAAEA,aAAa,GAAGF,mBAAmB,CAACnkB,MAAM,EAAEqkB,aAAa,EAAE,EAAE;MAC7F,MAAMC,eAAe,GAAqCH,mBAAmB,CAACI,EAAE,CAACF,aAAa,CAAC;MAC/F,MAAMG,mBAAmB,GAAqCJ,uBAAuB,CAACG,EAAE,CAACF,aAAa,CAAC;MAEvG;MACA,IAAIC,eAAe,KAAKE,mBAAmB,EAAE;QACzC;MACJ;MAEA;MACA,IAAI,OAAOF,eAAe,KAAK,WAAW,EAAE;QACxC,MAAM,IAAI9mB,MAAA,CAAAY,SAAS,CAAC,2CAA2CimB,aAAa,sDAAsD,EAAE,IAAI,CAAC;MAC7I;MAEA;MACA,IAAI,OAAOG,mBAAmB,KAAK,WAAW,EAAE;QAC5C,MAAM,IAAIhnB,MAAA,CAAAY,SAAS,CAAC,wCAAwCimB,aAAa,IAAI,EAAE,IAAI,CAAC;MACxF;MAEA;MACA,IAAIC,eAAe,CAAC9I,IAAI,KAAKgJ,mBAAmB,CAAChJ,IAAI,EAAE;QACnD,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,8BAA8BomB,mBAAmB,CAAChJ,IAAI,oBAAoB8I,eAAe,CAAC9I,IAAI,GAAG,EAAE,IAAI,CAAC;MAChI;MAEA;MACA,IAAIgJ,mBAAmB,CAAC7F,WAAW,KAAK6F,mBAAmB,CAAC7F,WAAW,EAAE;QACrE,MAAM,IAAInhB,MAAA,CAAAY,SAAS,CAAC,8BAA8BomB,mBAAmB,CAAChJ,IAAI,oCAAoC,EAAE,IAAI,CAAC;MACzH;MAEA;MACA,IAAI,CAACgJ,mBAAmB,CAAC/F,UAAU,GAAG6F,eAAe,CAAC7F,UAAU,MAAM+F,mBAAmB,CAAC/F,UAAU,EAAE;QAClG,MAAM,IAAIjhB,MAAA,CAAAY,SAAS,CAAC,8BAA8BomB,mBAAmB,CAAChJ,IAAI,+CAA+C,EAAE,IAAI,CAAC;MACpI;MAEA;MACA,IAAIgJ,mBAAmB,CAAC1mB,WAAW,KAAKwmB,eAAe,CAACxmB,WAAW,EAAE;QACjE,MAAM,IAAIN,MAAA,CAAAY,SAAS,CAAC,8BAA8BomB,mBAAmB,CAAChJ,IAAI,kEAAkE,EAAE,IAAI,CAAC;MACvJ;MAEA;IACJ;IAEA;IACA,MAAMqI,cAAc,GAAgC,IAAI,CAACZ,WAAW,CAAClR,GAAG,CAAC4R,eAAe,CAAC;IACzF,IAAIE,cAAc,EAAE;MAChB;MACAA,cAAc,CAACC,0BAA0B,CAAC,IAAI,CAACZ,8BAA8B,CAACnR,GAAG,CAAC8R,cAAc,CAAE,CAAC;IACvG;IAEA;IACA,MAAMP,SAAS,GAA6DA,CAAA,KAAK;MAC7E,IAAI,CAAC5C,UAAU,CAAC6C,8BAA8B,CAACC,WAAW,CAAC;IAC/D,CAAC;IACDS,UAAU,CAACzP,uBAAuB,CAAC8O,SAAS,CAAC;IAC7C,IAAI,CAACJ,8BAA8B,CAACzS,GAAG,CAACwT,UAAU,EAAEX,SAAS,CAAC;IAE9D;IACA,IAAI,CAAC5C,UAAU,CAAC6C,8BAA8B,CAACkB,YAAY,CAAC;EAChE;EAEA;;;;;;EAMOC,mBAAmBA,CAACC,MAAc,EAAEnK,OAAwB;IAC/D;IACA,IAAI,IAAI,CAACwI,kBAAkB,CAAC7E,GAAG,CAACwG,MAAM,CAAC,EAAE;MACrC,MAAM,IAAInnB,MAAA,CAAAY,SAAS,CAAC,mEAAmE,EAAE,IAAI,CAAC;IAClG;IAEA;IACA,MAAMylB,cAAc,GAAgC,IAAI,CAACZ,WAAW,CAAClR,GAAG,CAAC4S,MAAM,CAAC;IAChF,IAAId,cAAc,EAAE;MAChB;MACAA,cAAc,CAACC,0BAA0B,CAAC,IAAI,CAACZ,8BAA8B,CAACnR,GAAG,CAAC8R,cAAc,CAAE,CAAC;MAEnG;MACA,IAAI,CAACf,eAAe,CAACiB,MAAM,CAACF,cAAc,CAACrI,IAAI,CAAC;IACpD;IAEA;IACA,IAAI,CAACyH,WAAW,CAACxS,GAAG,CAACkU,MAAM,EAAEnK,OAAO,CAAC;IACrC,IAAI,CAACsI,eAAe,CAACrS,GAAG,CAAC+J,OAAO,CAACgB,IAAI,EAAEmJ,MAAM,CAAC;IAE9C;IACA,MAAMrB,SAAS,GAA6DA,CAAA,KAAK;MAC7E,IAAI,CAAC5C,UAAU,CAAC6C,8BAA8B,CAACC,WAAW,CAAC;IAC/D,CAAC;IACDhJ,OAAO,CAAChG,uBAAuB,CAAC8O,SAAS,CAAC;IAC1C,IAAI,CAACJ,8BAA8B,CAACzS,GAAG,CAAC+J,OAAO,EAAE8I,SAAS,CAAC;IAE3D;IACA,IAAI,CAAC5C,UAAU,CAAC6C,8BAA8B,CAACkB,YAAY,CAAC;EAChE;EAEA;;;EAGmBpG,cAAcA,CAAA;IAC7B;IACA,MAAMuG,yBAAyB,GAAG;MAAEC,gBAAgB,EAAE,IAAIzlB,KAAK;IAAsB,CAAE;IACvF,KAAK,MAAM,CAACgkB,WAAW,EAAE0B,gBAAgB,CAAC,IAAI,IAAI,CAAC7B,WAAW,EAAE;MAC5D2B,yBAAyB,CAACC,gBAAgB,CAACzB,WAAW,CAAC,GAAG0B,gBAAgB,CAAChH,MAAM;IACrF;IAEA;IACA,IAAI,IAAI,CAACmF,WAAW,CAAC8B,IAAI,KAAKH,yBAAyB,CAACC,gBAAgB,CAAC7kB,MAAM,EAAE;MAC7E,MAAM,IAAIxC,MAAA,CAAAY,SAAS,CAAC,yCAAyC,EAAE,IAAI,CAAC;IACxE;IAEA;IACA,OAAO,IAAI,CAAC2d,MAAM,CAACkE,GAAG,CAAC+E,oBAAoB,CAACJ,yBAAyB,CAAC;EAC1E;;AAzQJvmB,sBAAA,GAAAukB,cAAA;AA4QA,IAAYW,8BAGX;AAHD,WAAYA,8BAA8B;EACtCA,8BAAA,iCAA6B;EAC7BA,8BAAA,+BAA2B;AAC/B,CAAC,EAHWA,8BAA8B,KAAAllB,sCAAA,GAA9BklB,8BAA8B;;;;;;;;;;;;;;;;;AClR1C,MAAAxJ,wBAAA,GAAAtc,mBAAA;AACA,MAAAwnB,4BAAA,GAAAxnB,mBAAA;AAIA,MAAAynB,gCAAA,GAAAznB,mBAAA;AACA,MAAA0nB,6BAAA,GAAA1nB,mBAAA;AAIA,MAAa2nB,qCAAsC,SAAQrL,wBAAA,CAAAQ,mBAAmE;EAC1H;;;;;;;EAOO1L,SAASA,CAACnP,KAAA,GAAgB,CAAC,CAAC;IAC/B,OAAO,IAAI0lB,qCAAqC,CAAC,IAAI,CAACC,eAAe,EAAGC,aAAqC,IAAI;MAC7G,MAAMC,OAAO,GAA4B,IAAIN,4BAAA,CAAAO,uBAAuB,CAAC,IAAI,CAACzJ,MAAM,EAAE;QAC9E0J,SAAS,EAAE/lB,KAAK;QAChBgmB,SAAS,EAAEJ;OACd,CAAC;MAEF,IAAI,CAACrJ,QAAQ,CAACsJ,OAAO,CAAC;IAC1B,CAAC,CAAC;EACN;EAEA;;;;;;EAMO9W,aAAaA,CAACkX,gBAAuC,EAAEC,oBAA+C;IACzG,MAAML,OAAO,GAAgC,IAAIL,gCAAA,CAAAW,2BAA2B,CAAC,IAAI,CAAC9J,MAAM,EAAE;MACtF+J,eAAe,EAAEH,gBAAgB;MACjCI,mBAAmB,EAAEH;KACxB,CAAC;IAEF;IACA,IAAI,CAAC3J,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;EAEA;;;;;EAKOxR,UAAUA,CAACiS,UAA2D;IACzE;IACA,MAAMT,OAAO,GAA6B,IAAIJ,6BAAA,CAAAc,wBAAwB,CAAC,IAAI,CAAClK,MAAM,CAAC;IACnFwJ,OAAO,CAACpY,KAAK,CAAC6Y,UAAU,CAAC;IAEzB;IACA,IAAI,CAAC/J,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;;AA/CJlnB,6CAAA,GAAA+mB,qCAAA;;;;;;;;;;;;;;;;;ACNA,MAAArL,wBAAA,GAAAtc,mBAAA;AAEA,MAAAwnB,4BAAA,GAAAxnB,mBAAA;AAIA,MAAAynB,gCAAA,GAAAznB,mBAAA;AACA,MAAA0nB,6BAAA,GAAA1nB,mBAAA;AAEA,MAAAwc,uBAAA,GAAAxc,mBAAA;AACA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAAyoB,6CAAA,GAAAzoB,mBAAA;AAGA,MAAa0oB,gCAAiC,SAAQpM,wBAAA,CAAAQ,mBAAmE;EACrH;;;;;;;EAOAzc,YAAmB4c,eAAmE,EAAEC,aAAmC;IACvH,KAAK,CAACD,eAAe,EAAEC,aAAa,CAAC;EACzC;EAEA;;;;;;;EAOO9L,SAASA,CAACnP,KAAA,GAAgB,CAAC,CAAC;IAC/B,OAAO,IAAIwmB,6CAAA,CAAAd,qCAAqC,CAAC,IAAI,CAACC,eAAe,EAAGC,aAAqC,IAAI;MAC7G,MAAMC,OAAO,GAA4B,IAAIN,4BAAA,CAAAO,uBAAuB,CAAC,IAAI,CAACzJ,MAAM,EAAE;QAC9E0J,SAAS,EAAE/lB,KAAK;QAChBgmB,SAAS,EAAEJ;OACd,CAAC;MAEF,IAAI,CAACrJ,QAAQ,CAACsJ,OAAO,CAAC;IAC1B,CAAC,CAAC;EACN;EAEA;;;;;;EAMO9W,aAAaA,CAACkX,gBAAuC,EAAEC,oBAA+C;IACzG,MAAML,OAAO,GAAgC,IAAIL,gCAAA,CAAAW,2BAA2B,CAAC,IAAI,CAAC9J,MAAM,EAAE;MACtF+J,eAAe,EAAEH,gBAAgB;MACjCI,mBAAmB,EAAEH;KACxB,CAAC;IAEF;IACA,IAAI,CAAC3J,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;EAEA;;;;;EAKOvW,WAAWA,CAACoX,YAAyB;IACxC,MAAMb,OAAO,GAAwB,IAAItL,uBAAA,CAAAwC,mBAAmB,CAAC,IAAI,CAACV,MAAM,EAAE;MACtEkD,WAAW,EAAEmH;KAChB,CAAC;IAEF;IACA,IAAI,CAACnK,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;EAEA;;;;;EAKOxR,UAAUA,CAACiS,UAA2D;IACzE;IACA,MAAMT,OAAO,GAA6B,IAAIJ,6BAAA,CAAAc,wBAAwB,CAAC,IAAI,CAAClK,MAAM,CAAC;IACnFwJ,OAAO,CAACpY,KAAK,CAAC6Y,UAAU,CAAC;IAEzB;IACA,IAAI,CAAC/J,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;EAEA;;;;;;;;EAQOpW,WAAWA,CAACkX,iBAAmC,EAAEC,cAA6B,EAAEC,aAAsB;IACzG,MAAMhB,OAAO,GAAwB,IAAIrL,uBAAA,CAAAkC,mBAAmB,CAAC,IAAI,CAACL,MAAM,EAAE;MACtE6D,SAAS,EAAEyG,iBAAiB;MAC5BhH,MAAM,EAAEiH,cAAc;MACtB5G,YAAY,EAAE6G;KACjB,CAAC;IAEF;IACA,IAAI,CAACtK,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;;AA3FJlnB,wCAAA,GAAA8nB,gCAAA;;;;;;;;;;;;;;;;;ACjBA,MAAAxa,2BAAA,GAAAlO,mBAAA;AACA,MAAA+oB,kBAAA,GAAA/oB,mBAAA;AAEA,MAAAgpB,uCAAA,GAAAhpB,mBAAA;AAEA,MAAaqjB,oBAAqB,SAAQ0F,kBAAA,CAAAE,cAAwC;EAC9E;;;;;;;;;EASOlY,OAAOA,CAACmW,MAAc,EAAE3G,KAAa,EAAE2I,WAAyB,EAAEC,eAAoC;IACzG;IACA,IAAI,CAACC,iBAAiB,EAAE;IAExB;IACA,MAAMC,KAAK,GAAwB;MAC/BtL,IAAI,EAAEwC,KAAK;MACXJ,KAAK,EAAE+G,MAAM;MACblG,UAAU,EAAEkI,WAAW;MACvB7X,MAAM,EAAE,IAAI;MACZ6P,WAAW,EAAEiI,eAAe,IAAIjb,2BAAA,CAAAgD,kBAAkB,CAACiQ;KACtD;IAED;IACA,IAAI,CAACmI,SAAS,CAACvJ,QAAQ,CAAChe,IAAI,CAACsnB,KAAK,CAAC;IAEnC;IACA,OAAO,IAAIL,uCAAA,CAAAN,gCAAgC,CAAC,IAAI,CAACd,eAAe,EAAGC,aAA+B,IAAI;MAClGwB,KAAK,CAAChY,MAAM,GAAGwW,aAAa;IAChC,CAAC,CAAC;EACN;EAEA;;;;;EAKmB0B,eAAeA,CAACC,cAAwC;IACvEA,cAAc,CAACzJ,QAAQ,GAAG,IAAIpe,KAAK,EAAuB;EAC9D;;AAvCJf,4BAAA,GAAAyiB,oBAAA;;;;;;;;;;;;;;;;;;;ACNA,MAAAtjB,MAAA,GAAAC,mBAAA;AACA,MAAAsjB,mBAAA,GAAAtjB,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAA4N,8BAAA,GAAA5N,mBAAA;AAEA;;;AAGA,MAAaqe,SAAiD,SAAQkB,YAAA,CAAAG,SAA+C;EASjH;;;EAGA,IAAW+J,QAAQA,CAAA;IACf,OAAO,IAAI,CAACC,SAAS;EACzB;EAEA;;;EAGA,IAAWnnB,MAAMA,CAAA;IACb,OAAO,IAAI,CAAConB,UAAU;EAC1B;EAEA;;;EAGA,IAAoBtJ,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;EAGA,IAAWiH,IAAIA,CAAA;IACX;IACA,OAAS,IAAI,CAACqC,UAAU,GAAG,IAAI,CAACC,cAAc,GAAI,CAAC,GAAI,CAAC,CAAC;EAC7D;EAEA;;;;EAIA,IAAWC,qBAAqBA,CAAA;IAC5B,OAAO,IAAI,CAACC,YAAY,CAACC,UAAU;EACvC;EAAE,IAAIF,qBAAqBA,CAACG,MAAc;IACtC,IAAI,CAACF,YAAY,CAACC,UAAU,GAAGC,MAAM;EACzC;EAEA;;;EAGA,IAAYJ,cAAcA,CAAA;IACtB;IACA,OAAO,CAAC,MAAK;MACT,QAAQ,IAAI,CAACF,SAAS;QAClB,KAAK9b,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO;QAClC,KAAKvC,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM;QACjC,KAAKhQ,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;UAC7B,OAAO,CAAC;QAEZ;UAAS;UACL,MAAM,IAAI3d,MAAA,CAAAY,SAAS,CAAC,+BAA+B,IAAI,CAAC+oB,SAAS,QAAQ,EAAE,IAAI,CAAC;MACxF;IACJ,CAAC,EAAC,CAAE;EACR;EAEA;;;;;;EAMArpB,YAAmBigB,OAAkB,EAAEvD,OAA+B,EAAEkN,SAAgC,EAAE3M,kBAAA,GAAoC,IAAI;IAC9I,KAAK,CAACgD,OAAO,CAAC;IACd,IAAI,CAACsD,OAAO,GAAG7G,OAAO;IAEtB;IACA,IAAI,CAAC2M,SAAS,GAAGO,SAAS;IAE1B;IACA,IAAI,CAACC,YAAY,GAAG5G,mBAAA,CAAAgB,WAAW,CAACnD,IAAI;IAEpC;IACA,IAAI,CAAC2I,YAAY,GAAG;MAChBC,UAAU,EAAElT,MAAM,CAACC,gBAAgB;MACnCqT,KAAK,EAAE,IAAIxoB,KAAK,EAAa;MAC7BsO,MAAM,EAAE,IAAI8S,GAAG;KAClB;IACD,IAAI,CAACqH,WAAW,GAAG,IAAI;IAEvB,IAAIrN,OAAO,CAACe,YAAY,KAAK,CAAC,IAAIR,kBAAkB,KAAK,IAAI,EAAE;MAC3D,MAAM,IAAIvd,MAAA,CAAAY,SAAS,CAAC,yEAAyE,EAAE,IAAI,CAAC;IACxG;IAEA;IACA,MAAM0pB,SAAS,GAAW,CAAC/M,kBAAkB,IAAI,CAAC,IAAIP,OAAO,CAACe,YAAY,GAAGf,OAAO,CAACoB,SAAS;IAE9F;IACA,IAAI,CAACwL,UAAU,GAAGU,SAAS,GAAG,CAAC,CAAC,CAAC;IAEjC;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAEhC;IACAvN,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACsH,yBAAyB,CAACC,aAAa,CAAC;IAC5D,CAAC,CAAC;EACN;EAEA;;;;;;EAMOnG,WAAWA,CAACoG,MAAmB;IAClC;IACA,IAAI,CAAC,IAAI,CAACP,YAAY,GAAGO,MAAM,MAAM,CAAC,EAAE;MACpC,IAAI,CAACP,YAAY,IAAIO,MAAM;MAE3B,IAAI,CAACxH,UAAU,CAACsH,yBAAyB,CAACC,aAAa,CAAC;IAC5D;IAEA,OAAO,IAAI;EACf;EAEA;;;;;EAKOjM,WAAWA,CAACrB,aAA0B;IACzC;IACA,IAAI,CAACoN,oBAAoB,GAAGpN,aAAa;IAEzC;IACA,IAAI,CAAC+F,UAAU,CAACsH,yBAAyB,CAACC,aAAa,CAAC;IAExD,OAAO,IAAI;EACf;EAEA;;;;EAIaE,IAAIA,CAACC,WAA0B;IAAA,IAAAjM,KAAA;IAAA,OAAA3P,iBAAA;MACxC,MAAM6b,SAAS,GAAGlM,KAAI,CAACkF,OAAO,CAACiH,UAAU,CAACF,WAAW,CAAC;MACtD,OAAOjM,KAAI,CAACnH,OAAO,CAACqT,SAAS,CAACE,MAAM,EAAEF,SAAS,CAACtD,IAAI,CAAC;IAAC;EAC1D;EAEA;;;;;;EAMa/P,OAAOA,CAACwT,OAA4B,EAAE9oB,KAA0B;IAAA,IAAA+oB,MAAA;IAAA,OAAAjc,iBAAA;MACzE;MACAic,MAAI,CAAC3G,WAAW,CAACf,mBAAA,CAAAgB,WAAW,CAAC2G,UAAU,CAAC;MAExC,MAAMC,OAAO,GAAWH,OAAO,IAAI,CAAC;MACpC,MAAMI,KAAK,GAAWlpB,KAAK,IAAI+oB,MAAI,CAAC1D,IAAI;MAExC;MACA,IAAI0D,MAAI,CAACZ,WAAW,KAAK,IAAI,EAAE;QAC3BY,MAAI,CAACZ,WAAW,GAAGY,MAAI,CAAC1M,MAAM,CAACkE,GAAG,CAACnQ,YAAY,CAAC;UAC5CqQ,KAAK,EAAE,gBAAgB;UACvB4E,IAAI,EAAE0D,MAAI,CAAC1D,IAAI;UACf8D,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE,QAAQ;UACxDC,gBAAgB,EAAE;SACrB,CAAC;MACN;MAEA;MACA,MAAMC,eAAe,GAAsBT,MAAI,CAAC1M,MAAM,CAACkE,GAAG,CAACkJ,oBAAoB,EAAE;MACjFD,eAAe,CAACE,kBAAkB,CAACX,MAAI,CAAC3K,MAAM,EAAE6K,OAAO,EAAEF,MAAI,CAACZ,WAAW,EAAEc,OAAO,EAAEC,KAAK,CAAC;MAC1FH,MAAI,CAAC1M,MAAM,CAACkE,GAAG,CAACoJ,KAAK,CAACC,MAAM,CAAC,CAACJ,eAAe,CAACK,MAAM,EAAE,CAAC,CAAC;MAExD;MACA,MAAMd,MAAI,CAACZ,WAAW,CAAC2B,QAAQ,CAACC,UAAU,CAACC,IAAI,EAAEf,OAAO,EAAEC,KAAK,CAAC;MAEhE;MACA,MAAMe,iBAAiB,GAAUlB,MAAI,CAACmB,gBAAgB,CAACnB,MAAI,CAACZ,WAAW,CAACgC,cAAc,EAAE,CAACC,KAAK,CAAC,CAAC,CAAC,CAAU;MAE3G;MACArB,MAAI,CAACZ,WAAW,CAACkC,KAAK,EAAE;MAExB;MACA,OAAOJ,iBAAiB;IAAC;EAC7B;EAEA;;;;;EAKazT,KAAKA,CAACjW,KAAwB,EAAEmoB,WAA0B;IAAA,IAAA4B,MAAA;IAAA,OAAAxd,iBAAA;MACnE,MAAM6b,SAAS,GAAG2B,MAAI,CAAC3I,OAAO,CAACiH,UAAU,CAACF,WAAW,CAAC;MAEtD;MACA,OAAO4B,MAAI,CAACpR,QAAQ,CAAC3Y,KAAK,EAAEooB,SAAS,CAACE,MAAM,CAAC;IAAC;EAClD;EAEA;;;;;;EAMa3P,QAAQA,CAAC3Y,KAAwB,EAAEuoB,OAAgB;IAAA,IAAAyB,MAAA;IAAA,OAAAzd,iBAAA;MAC5D;MACAyd,MAAI,CAACnI,WAAW,CAACf,mBAAA,CAAAgB,WAAW,CAACmI,eAAe,CAAC;MAE7C;MACA;MACA,MAAMC,OAAO,GAAcF,MAAI,CAACnM,MAAM;MAEtC;MACA,IAAIsM,cAAc,GAAqB,IAAI;MAC3C,IAAIH,MAAI,CAAC1C,YAAY,CAACK,KAAK,CAAC5nB,MAAM,KAAK,CAAC,EAAE;QACtC;QACA,IAAIiqB,MAAI,CAAC1C,YAAY,CAAC7Z,MAAM,CAACqX,IAAI,GAAGkF,MAAI,CAAC1C,YAAY,CAACC,UAAU,EAAE;UAC9D4C,cAAc,GAAGH,MAAI,CAAClO,MAAM,CAACkE,GAAG,CAACnQ,YAAY,CAAC;YAC1CqQ,KAAK,EAAE,8BAA8B8J,MAAI,CAAC1C,YAAY,CAAC7Z,MAAM,CAACqX,IAAI,EAAE;YACpEA,IAAI,EAAEkF,MAAI,CAAClF,IAAI;YACf8D,KAAK,EAAEC,cAAc,CAACuB,SAAS,GAAGvB,cAAc,CAACwB,QAAQ;YACzDrB,gBAAgB,EAAE;WACrB,CAAC;UAEF;UACAgB,MAAI,CAAC1C,YAAY,CAAC7Z,MAAM,CAACxN,GAAG,CAACkqB,cAAc,CAAC;QAChD;MACJ,CAAC,MAAM;QACH;QACAA,cAAc,GAAGH,MAAI,CAAC1C,YAAY,CAACK,KAAK,CAAC2C,GAAG,EAAG;MACnD;MAEA;MACA,MAAMC,eAAe,GAAWvqB,KAAK,CAACD,MAAM,GAAGiqB,MAAI,CAAC5C,cAAc;MAClE,MAAMsB,OAAO,GAAWH,OAAO,IAAI,CAAC;MAEpC;MACA,IAAI,CAAC4B,cAAc,EAAE;QACjB;QACAH,MAAI,CAAClO,MAAM,CAACkE,GAAG,CAACoJ,KAAK,CAACoB,WAAW,CAACN,OAAO,EAAExB,OAAO,EAAEsB,MAAI,CAACL,gBAAgB,CAAC3pB,KAAK,CAAC,EAAE,CAAC,EAAEuqB,eAAe,CAAC;QAErG;MACJ;MAEA;MACA,MAAME,YAAY,GAAeT,MAAI,CAACL,gBAAgB,CAACQ,cAAc,CAACP,cAAc,CAAClB,OAAO,EAAE6B,eAAe,CAAC,CAAC;MAC/GE,YAAY,CAACja,GAAG,CAACxQ,KAAK,CAAC;MAEvB;MACAmqB,cAAc,CAACL,KAAK,EAAE;MAEtB;MACA,MAAMb,eAAe,GAAsBe,MAAI,CAAClO,MAAM,CAACkE,GAAG,CAACkJ,oBAAoB,EAAE;MACjFD,eAAe,CAACE,kBAAkB,CAACgB,cAAc,EAAEzB,OAAO,EAAEwB,OAAO,EAAExB,OAAO,EAAE6B,eAAe,CAAC;MAC9FP,MAAI,CAAClO,MAAM,CAACkE,GAAG,CAACoJ,KAAK,CAACC,MAAM,CAAC,CAACJ,eAAe,CAACK,MAAM,EAAE,CAAC,CAAC;MAExD;MACAa,cAAc,CAACZ,QAAQ,CAACC,UAAU,CAACkB,KAAK,CAAC,CAAC1V,IAAI,CAAC,MAAK;QAChD;QACA,IAAIgV,MAAI,CAAC1C,YAAY,CAAC7Z,MAAM,CAACyQ,GAAG,CAACiM,cAAc,CAAC,EAAE;UAC9CH,MAAI,CAAC1C,YAAY,CAACK,KAAK,CAACpoB,IAAI,CAAC4qB,cAAc,CAAC;QAChD;MACJ,CAAC,CAAC,CAACQ,KAAK,CAAC,MAAK;QACV;QACAX,MAAI,CAAC1C,YAAY,CAAC7Z,MAAM,CAACqW,MAAM,CAACqG,cAAc,CAAC;QAC/CA,cAAc,CAACS,OAAO,EAAE;MAC5B,CAAC,CAAC;IAAC;EACP;EAEA;;;EAGmBC,aAAaA,CAACC,aAAwB,EAAEC,QAAiE;IACxHD,aAAa,CAACF,OAAO,EAAE;IAEvB;IACA;IACA;IACA,KAAK,MAAMI,YAAY,IAAI,IAAI,CAAC1D,YAAY,CAAC7Z,MAAM,EAAE;MACjDud,YAAY,CAACJ,OAAO,EAAE;IAC1B;IACA,IAAI,CAACtD,YAAY,CAAC7Z,MAAM,CAACwd,KAAK,EAAE;IAEhC;IACA,OAAO,IAAI,CAAC3D,YAAY,CAACK,KAAK,CAAC5nB,MAAM,GAAG,CAAC,EAAE;MACvC;MACA,IAAI,CAACunB,YAAY,CAACK,KAAK,CAAC2C,GAAG,EAAE;IACjC;IACA;EACJ;EAEA;;;EAGmBlM,cAAcA,CAAA;IAC7B;IACA,MAAM8M,WAAW,GAAsB,IAAI,CAACpD,oBAAoB,GAAE,CAAE;IAEpE;IACA,MAAMlM,OAAO,GAAc,IAAI,CAACE,MAAM,CAACkE,GAAG,CAACnQ,YAAY,CAAC;MACpDqQ,KAAK,EAAE,2BAA2B;MAClC4E,IAAI,EAAE,IAAI,CAACA,IAAI;MACf8D,KAAK,EAAE,IAAI,CAAClB,YAAY;MACxBsB,gBAAgB,EAAE,CAAC,CAACkC;KACvB,CAAC;IAEF;IACA,IAAIA,WAAW,EAAE;MACb;MACA,MAAMC,aAAa,GAAe,IAAI,CAACxB,gBAAgB,CAAC/N,OAAO,CAACgO,cAAc,EAAE,CAAC;MAEjF;MACA,IAAIuB,aAAa,CAACprB,MAAM,KAAKmrB,WAAW,CAACnrB,MAAM,EAAE;QAC7C,MAAM,IAAIxC,MAAA,CAAAY,SAAS,CAAC,gCAAgC+sB,WAAW,CAACnrB,MAAM,uCAAuCorB,aAAa,CAACprB,MAAM,KAAK,EAAE,IAAI,CAAC;MACjJ;MAEA;MACAorB,aAAa,CAAC3a,GAAG,CAAC0a,WAAW,CAAC;MAE9B;MACAtP,OAAO,CAACkO,KAAK,EAAE;IACnB;IAEA,OAAOlO,OAAO;EAClB;EAEA;;;;;;;EAOQ+N,gBAAgBA,CAACyB,YAAiD;IACtE;IACA,MAAMC,uBAAuB,GAAG,CAAC,MAAK;MAClC,QAAQ,IAAI,CAACnE,SAAS;QAClB,KAAK9b,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO;UAC9B,OAAOmC,YAAY;QACvB,KAAK1E,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM;UAC7B,OAAOD,UAAU;QACrB,KAAK/P,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;UAC7B,OAAOD,WAAW;QAEtB;UAAS;UACL,MAAM,IAAI1d,MAAA,CAAAY,SAAS,CAAC,yCAAyC,IAAI,CAAC+oB,SAAS,QAAQ,EAAE,IAAI,CAAC;MAClG;IACJ,CAAC,EAAC,CAAE;IAEJ,OAAO,IAAImE,uBAAuB,CAACD,YAAY,CAAC;EACpD;;AAnWJhtB,iBAAA,GAAAyd,SAAA;AA4WA,IAAYkM,yBAEX;AAFD,WAAYA,yBAAyB;EACjCA,yBAAA,mCAA+B;AACnC,CAAC,EAFWA,yBAAyB,KAAA3pB,iCAAA,GAAzB2pB,yBAAyB;;;;;;;;;;;;;;;;;ACxXrC,MAAAxqB,MAAA,GAAAC,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAEA,MAAa8tB,YAAa,SAAQvO,YAAA,CAAAG,SAAS;EAIvC;;;EAGA,IAAWqO,OAAOA,CAAA;IACd,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAChB,MAAM,IAAIjuB,MAAA,CAAAY,SAAS,CAAC,0BAA0B,EAAE,IAAI,CAAC;IACzD;IAEA,OAAO,IAAI,CAACqtB,QAAQ;EACxB;EAEA3tB,YAAmBigB,OAAkB,EAAE2N,UAAgC;IACnE,KAAK,CAAC3N,OAAO,CAAC;IAEd,IAAI,CAAC4N,kBAAkB,GAAGD,UAAU;IACpC,IAAI,CAACD,QAAQ,GAAG,IAAI;EACxB;EAEO9V,OAAOA,CAAA;IACV,IAAI,CAAC8V,QAAQ,GAAG,IAAI,CAAC1P,MAAM,CAACkE,GAAG,CAACkJ,oBAAoB,CAAC;MACjDhJ,KAAK,EAAE;KACV,CAAC;IAEF,IAAI,CAACwL,kBAAkB,CAAC,IAAI,CAAC;IAE7B;IACA;IACA,IAAI,CAAC5P,MAAM,CAACkE,GAAG,CAACoJ,KAAK,CAACC,MAAM,CAAC,CAAC,IAAI,CAACmC,QAAQ,CAAClC,MAAM,EAAE,CAAC,CAAC;IACtD,IAAI,CAACkC,QAAQ,GAAG,IAAI;EACxB;;AAjCJptB,oBAAA,GAAAktB,YAAA;;;;;;;;;;;;;;;;;ACJA,MAAA/tB,MAAA,GAAAC,mBAAA;AAIA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAamuB,WAAY,SAAQ5O,YAAA,CAAAG,SAAS;EAGtC;;;;EAIArf,YAAmBigB,OAAkB;IACjC,KAAK,CAACA,OAAO,CAAC;IAEd,IAAI,CAAC8N,gBAAgB,GAAG,IAAIzsB,KAAK,EAAsB;EAC3D;EAEA;;;;;EAKO8R,OAAOA,CAAC4a,SAA0B,EAAEC,eAAyC,EAAEC,SAA2B;IAC7G,MAAMC,KAAK,GAAuB;MAC9BC,EAAE,EAAEC,MAAM,CAAC,YAAY,CAAC;MACxBC,QAAQ,EAAEN,SAAS;MACnBO,QAAQ,EAAE,IAAIjtB,KAAK,EAAa;MAChCktB,cAAc,EAAEP;KACnB;IAED;IAEA;IACA,MAAMQ,WAAW,GAAkC,IAAI/uB,MAAA,CAAA2a,UAAU,EAAqB;IACtF,KAAK,MAAMqU,UAAU,IAAIR,SAAS,EAAE;MAChC;MACA,IAAIO,WAAW,CAACpO,GAAG,CAACqO,UAAU,CAAC1d,MAAM,CAAC0M,IAAI,CAAC,EAAE;QACzC,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,eAAeouB,UAAU,CAAC1d,MAAM,CAAC0M,IAAI,iDAAiD,EAAE,IAAI,CAAC;MACrH;MAEA;MACA+Q,WAAW,CAAC9b,GAAG,CAAC+b,UAAU,CAAC1d,MAAM,CAAC0M,IAAI,EAAEgR,UAAU,CAAC;IACvD;IAEA;IACA,MAAMC,eAAe,GAAmBX,SAAS,CAACY,MAAM,CAACzf,MAAM,CAAC6B,MAAM;IACtE,KAAK,MAAM6d,UAAU,IAAIF,eAAe,CAAC5J,MAAM,EAAE;MAC7C;MACA,MAAM+J,cAAc,GAA0BL,WAAW,CAACxa,GAAG,CAAC4a,UAAU,CAAC;MACzE,IAAI,CAACC,cAAc,EAAE;QACjB,MAAM,IAAIpvB,MAAA,CAAAY,SAAS,CAAC,wBAAwBuuB,UAAU,YAAY,EAAE,IAAI,CAAC;MAC7E;MAEA;MACA,MAAM7H,gBAAgB,GAAG2H,eAAe,CAAC9c,cAAc,CAACgd,UAAU,CAAC;MACnE,IAAIC,cAAc,CAAC9d,MAAM,KAAKgW,gBAAgB,EAAE;QAC5C,MAAM,IAAItnB,MAAA,CAAAY,SAAS,CAAC,wDAAwD,EAAE,IAAI,CAAC;MACvF;MAEA6tB,KAAK,CAACI,QAAQ,CAACI,eAAe,CAAC/I,UAAU,CAACiJ,UAAU,CAAC,CAAC,GAAGC,cAAc;IAC3E;IAEA,IAAI,CAACf,gBAAgB,CAACrsB,IAAI,CAACysB,KAAK,CAAC;IAEjC,OAAOA,KAAK,CAACC,EAAE;EACnB;EAEA;;;;EAIOvW,OAAOA,CAAC+V,UAAwB;IACnC;IACA,MAAMmB,mBAAmB,GAA0BnB,UAAU,CAACF,OAAO,CAACsB,gBAAgB,EAAE;IAExF;IACA,IAAIC,SAAS,GAA2B,IAAI;IAE5C;IACA,MAAMC,cAAc,GAAqB,IAAI5tB,KAAK,EAAa;IAC/D,IAAI6tB,0BAA0B,GAAW,CAAC,CAAC;IAE3C;IACA,KAAK,MAAMC,YAAY,IAAI,IAAI,CAACrB,gBAAgB,EAAE;MAC9C;MACA,IAAIsB,+BAA+B,GAAW,CAAC,CAAC;MAEhD;MACA,MAAMV,eAAe,GAAmBS,YAAY,CAACd,QAAQ,CAACM,MAAM,CAACzf,MAAM,CAAC6B,MAAM;MAClF,KAAK,MAAMse,cAAc,IAAIX,eAAe,CAAC5J,MAAM,EAAE;QACjD,MAAMc,eAAe,GAAW8I,eAAe,CAAC/I,UAAU,CAAC0J,cAAc,CAAC;QAE1E,MAAMC,aAAa,GAA0BH,YAAY,CAACb,QAAQ,CAAC1I,eAAe,CAAC;QACnF,MAAM2J,iBAAiB,GAAqBN,cAAc,CAACrJ,eAAe,CAAC;QAE3E;QACA,IAAIA,eAAe,GAAGwJ,+BAA+B,EAAE;UACnDA,+BAA+B,GAAGxJ,eAAe;QACrD;QAEA;QACA,IAAI0J,aAAa,KAAKC,iBAAiB,EAAE;UACrC;UACAN,cAAc,CAACrJ,eAAe,CAAC,GAAG0J,aAAa;UAE/C;UACAR,mBAAmB,CAACU,YAAY,CAAC5J,eAAe,EAAE0J,aAAa,CAACvP,MAAM,CAAC;QAC3E;MACJ;MAEA;MACA,IAAIoP,YAAY,CAACd,QAAQ,KAAKW,SAAS,EAAE;QACrCA,SAAS,GAAGG,YAAY,CAACd,QAAQ;QAEjC;QACAS,mBAAmB,CAACW,WAAW,CAACT,SAAS,CAACjP,MAAM,CAAC;QAEjD;QACA;QACA,IAAImP,0BAA0B,GAAGE,+BAA+B,EAAE;UAC9D,KAAK,IAAIxJ,eAAe,GAAYwJ,+BAA+B,GAAG,CAAE,EAAExJ,eAAe,GAAIsJ,0BAA0B,GAAG,CAAE,EAAEtJ,eAAe,EAAE,EAAE;YAC7IkJ,mBAAmB,CAACU,YAAY,CAAC5J,eAAe,EAAE,IAAI,CAAC;UAC3D;QACJ;QAEA;QACAsJ,0BAA0B,GAAGE,+BAA+B;MAChE;MAEA;MACAN,mBAAmB,CAACY,kBAAkB,CAAC,GAAGP,YAAY,CAACZ,cAAc,CAAC;MAEtE;IACJ;IAEAO,mBAAmB,CAACa,GAAG,EAAE;EAC7B;EAEA;;;;;;;EAOOC,UAAUA,CAACC,cAAsB;IACpC;IACA,MAAMC,iBAAiB,GAAW,IAAI,CAAChC,gBAAgB,CAACiC,SAAS,CAAEC,YAAgC,IAAI;MACnG,OAAOA,YAAY,CAAC7B,EAAE,KAAK0B,cAAc;IAC7C,CAAC,CAAC;IAEF;IACA,IAAIC,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC1B,IAAI,CAAChC,gBAAgB,CAACmC,MAAM,CAACH,iBAAiB,EAAE,CAAC,CAAC;MAClD,OAAO,IAAI;IACf;IAEA,OAAO,KAAK;EAChB;;AA1JJxvB,mBAAA,GAAAutB,WAAA;;;;;;;;;;;;;;;;;ACRA,MAAApuB,MAAA,GAAAC,mBAAA;AACA,MAAAwf,YAAA,GAAAxf,mBAAA;AAIA,MAAAuf,YAAA,GAAAvf,mBAAA;AAEA,MAAA8N,gBAAA,GAAA9N,mBAAA;AAIA,MAAawwB,UAAW,SAAQjR,YAAA,CAAAG,SAAS;EAKrC;;;;;;;EAOArf,YAAmBigB,OAAkB,EAAErR,cAA6B,EAAEwhB,aAAsB;IACxF,KAAK,CAACnQ,OAAO,CAAC;IAEd,IAAI,CAAC8N,gBAAgB,GAAG,IAAIzsB,KAAK,EAAqB;IACtD,IAAI,CAAC+uB,cAAc,GAAGzhB,cAAc;IACpC,IAAI,CAAC0hB,aAAa,GAAG;MACjBC,OAAO,EAAEH,aAAa;MACtBI,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE;KACX;IAED;IACA9hB,cAAc,CAAC8H,uBAAuB,CAAC,MAAK;MACxC,IAAI,CAAC4Z,aAAa,CAACI,MAAM,GAAG,IAAI;IACpC,CAAC,EAAE,CACCjjB,gBAAA,CAAAkJ,6BAA6B,CAACga,mBAAmB,EACjDljB,gBAAA,CAAAkJ,6BAA6B,CAACia,iBAAiB,EAC/CnjB,gBAAA,CAAAkJ,6BAA6B,CAACC,MAAM,EACpCnJ,gBAAA,CAAAkJ,6BAA6B,CAACka,iBAAiB,CAClD,CAAC;EACN;EAEA;;;;;;;;EAQOzd,OAAOA,CAAC4a,SAAiC,EAAE8C,UAA2B,EAAE5C,SAA2B,EAAE6C,cAAA,GAAyB,CAAC;IAClI;IACA,IAAI,IAAI,CAACV,cAAc,KAAKrC,SAAS,CAACtZ,aAAa,EAAE;MACjD,MAAM,IAAIhV,MAAA,CAAAY,SAAS,CAAC,wDAAwD,EAAE,IAAI,CAAC;IACvF;IAEA,MAAM6tB,KAAK,GAAsB;MAC7BG,QAAQ,EAAEN,SAAS;MACnBze,SAAS,EAAEuhB,UAAU;MACrBE,aAAa,EAAED,cAAc;MAC7BxC,QAAQ,EAAE,IAAIjtB,KAAK;KACtB;IAED;IACA,MAAMmtB,WAAW,GAAkC,IAAI/uB,MAAA,CAAA2a,UAAU,EAAqB;IACtF,KAAK,MAAMqU,UAAU,IAAIR,SAAS,EAAE;MAChC;MACA,IAAIO,WAAW,CAACpO,GAAG,CAACqO,UAAU,CAAC1d,MAAM,CAAC0M,IAAI,CAAC,EAAE;QACzC,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,eAAeouB,UAAU,CAAC1d,MAAM,CAAC0M,IAAI,iDAAiD,EAAE,IAAI,CAAC;MACrH;MAEA;MACA+Q,WAAW,CAAC9b,GAAG,CAAC+b,UAAU,CAAC1d,MAAM,CAAC0M,IAAI,EAAEgR,UAAU,CAAC;IACvD;IAEA;IACA,MAAMC,eAAe,GAAmBX,SAAS,CAACY,MAAM,CAACzf,MAAM,CAAC6B,MAAM;IACtE,KAAK,MAAM6d,UAAU,IAAIF,eAAe,CAAC5J,MAAM,EAAE;MAC7C;MACA,MAAM+J,cAAc,GAA0BL,WAAW,CAACxa,GAAG,CAAC4a,UAAU,CAAC;MACzE,IAAI,CAACC,cAAc,EAAE;QACjB,MAAM,IAAIpvB,MAAA,CAAAY,SAAS,CAAC,wBAAwBuuB,UAAU,YAAY,EAAE,IAAI,CAAC;MAC7E;MAEA;MACA,MAAM7H,gBAAgB,GAAG2H,eAAe,CAAC9c,cAAc,CAACgd,UAAU,CAAC;MACnE,IAAIC,cAAc,CAAC9d,MAAM,KAAKgW,gBAAgB,EAAE;QAC5C,MAAM,IAAItnB,MAAA,CAAAY,SAAS,CAAC,iCAAiCuuB,UAAU,iCAAiC,EAAE,IAAI,CAAC;MAC3G;MAEAV,KAAK,CAACI,QAAQ,CAACI,eAAe,CAAC/I,UAAU,CAACiJ,UAAU,CAAC,CAAC,GAAGC,cAAc;IAC3E;IAEA,IAAI,CAACf,gBAAgB,CAACrsB,IAAI,CAACysB,KAAK,CAAC;IAEjC;IACA,IAAIH,SAAS,CAACwC,UAAU,EAAE;MACtB,IAAI,CAACF,aAAa,CAACE,UAAU,GAAG,IAAI;IACxC;IAEA;IACA,IAAI,CAACF,aAAa,CAACI,MAAM,GAAG,IAAI;IAEhC;IACA1C,SAAS,CAACtX,uBAAuB,CAAC,MAAK;MACnC,IAAI,CAAC4Z,aAAa,CAACI,MAAM,GAAG,IAAI;IACpC,CAAC,CAAC;IACFI,UAAU,CAACpa,uBAAuB,CAAC,MAAK;MACpC,IAAI,CAAC4Z,aAAa,CAACI,MAAM,GAAG,IAAI;IACpC,CAAC,CAAC;IAEF;IACA,KAAK,MAAM7B,UAAU,IAAIF,eAAe,CAAC5J,MAAM,EAAE;MAC7C0J,WAAW,CAACxa,GAAG,CAAC4a,UAAU,CAAE,CAACnY,uBAAuB,CAAC,MAAK;QACtD,IAAI,CAAC4Z,aAAa,CAACI,MAAM,GAAG,IAAI;MACpC,CAAC,EAAE,CAACvR,YAAA,CAAAuE,yBAAyB,CAACC,gBAAgB,CAAC,CAAC;IACpD;EACJ;EAEA;;;;;EAKO9L,OAAOA,CAAC+V,UAAwB;IACnC;IACA,IAAI,IAAI,CAAC0C,aAAa,CAACC,OAAO,EAAE;MAC5B,IAAI,CAACU,aAAa,CAACrD,UAAU,CAAC;IAClC,CAAC,MAAM;MACH,IAAI,CAACsD,aAAa,CAACtD,UAAU,CAAC;IAClC;EACJ;EAEA;;;;;EAKQqD,aAAaA,CAACrD,UAAwB;IAC1C;IACA,IAAI,CAAC,IAAI,CAAC0C,aAAa,CAACI,MAAM,EAAE;MAC5B;MACA,MAAMS,8BAA8B,GAAqC;QACrEC,YAAY,EAAE,IAAI,CAACf,cAAc,CAACgB,aAAa,CAACC,GAAG,CAAoBC,aAAa,IAAI;UACpF,OAAOA,aAAa,CAACvgB,MAAM,CAACuQ,MAA0B;QAC1D,CAAC,CAAC;QAEF;QACAiQ,WAAW,EAAE,IAAI,CAACnB,cAAc,CAACoB,gBAAgB;QAEjD;QACAC,aAAa,EAAE,CAAC,IAAI,CAACpB,aAAa,CAACE,UAAU;QAC7CmB,eAAe,EAAE,CAAC,IAAI,CAACrB,aAAa,CAACG;OACxC;MAED;MACA,IAAI,IAAI,CAACJ,cAAc,CAACuB,YAAY,EAAE;QAClCT,8BAA8B,CAACU,kBAAkB,GAAG,IAAI,CAACxB,cAAc,CAACuB,YAAY,CAAC5gB,MAAM,CAACuQ,MAA0B;MAC1H;MAEA;MACA,MAAMuQ,oBAAoB,GAA2B,IAAI,CAAC7T,MAAM,CAACkE,GAAG,CAAC4P,yBAAyB,CAACZ,8BAA8B,CAAC;MAE9H;MACA,IAAI,CAACa,cAAc,CAACF,oBAAoB,CAAC;MAEzC;MACA,IAAI,CAACxB,aAAa,CAACI,MAAM,GAAG;QACxBA,MAAM,EAAEoB,oBAAoB,CAACrG,MAAM,EAAE;QACrCwG,UAAU,EAAE,IAAI,CAAC5B,cAAc,CAACrQ;OACnC;IACL;IAEA;IACA,MAAMkS,kBAAkB,GAAyBtE,UAAU,CAACF,OAAO,CAACyE,eAAe,CAAC,IAAI,CAAC9B,cAAc,CAACrQ,MAAM,CAAC;IAE/G;IACAkS,kBAAkB,CAACE,cAAc,CAAC,CAAC,IAAI,CAAC9B,aAAa,CAACI,MAAM,EAAEA,MAAM,CAAC,CAAC;IAEtE;IACAwB,kBAAkB,CAACtC,GAAG,EAAE;EAC5B;EAEA;;;;;EAKQsB,aAAaA,CAACtD,UAAwB;IAC1C;IACA,MAAMsE,kBAAkB,GAAyBtE,UAAU,CAACF,OAAO,CAACyE,eAAe,CAAC,IAAI,CAAC9B,cAAc,CAACrQ,MAAM,CAAC;IAE/G;IACA,IAAI,CAACgS,cAAc,CAACE,kBAAkB,CAAC;IAEvC;IACAA,kBAAkB,CAACtC,GAAG,EAAE;EAC5B;EAEA;;;;;EAKQoC,cAAcA,CAACK,QAAuD;IAC1E;IACA,IAAIpD,SAAS,GAAkC,IAAI;IAEnD;IACA,MAAMqD,iBAAiB,GAA8C,IAAI5yB,MAAA,CAAA2a,UAAU,EAAiC;IACpH,IAAIkY,gCAAgC,GAAW,CAAC,CAAC;IAEjD;IACA,MAAMrD,cAAc,GAAqB,IAAI5tB,KAAK,EAAa;IAC/D,IAAI6tB,0BAA0B,GAAW,CAAC,CAAC;IAE3C;IACA,KAAK,MAAMC,YAAY,IAAI,IAAI,CAACrB,gBAAgB,EAAE;MAC9C;MACA,IAAIsB,+BAA+B,GAAW,CAAC,CAAC;MAEhD;MACA,MAAMV,eAAe,GAAmBS,YAAY,CAACd,QAAQ,CAACM,MAAM,CAACzf,MAAM,CAAC6B,MAAM;MAClF,KAAK,MAAMse,cAAc,IAAIX,eAAe,CAAC5J,MAAM,EAAE;QACjD,MAAMc,eAAe,GAAW8I,eAAe,CAAC/I,UAAU,CAAC0J,cAAc,CAAC;QAE1E,MAAMC,aAAa,GAA0BH,YAAY,CAACb,QAAQ,CAAC1I,eAAe,CAAC;QACnF,MAAM2J,iBAAiB,GAAqBN,cAAc,CAACrJ,eAAe,CAAC;QAE3E;QACA,IAAIA,eAAe,GAAGwJ,+BAA+B,EAAE;UACnDA,+BAA+B,GAAGxJ,eAAe;QACrD;QAEA;QACA,IAAI0J,aAAa,KAAKC,iBAAiB,EAAE;UACrC;UACAN,cAAc,CAACrJ,eAAe,CAAC,GAAG0J,aAAa;UAE/C;UACA8C,QAAQ,CAAC5C,YAAY,CAAC5J,eAAe,EAAE0J,aAAa,CAACvP,MAAM,CAAC;QAChE;MACJ;MAEA;MACA,IAAIwS,qCAAqC,GAAW,CAAC,CAAC;MAEtD;MACA,MAAMC,YAAY,GAAkBrD,YAAY,CAACd,QAAQ,CAACM,MAAM,CAAClc,eAAe,CAACggB,WAAW;MAC5F,KAAK,IAAIC,YAAY,GAAW,CAAC,EAAEA,YAAY,GAAGF,YAAY,CAACvwB,MAAM,EAAEywB,YAAY,EAAE,EAAE;QACnF;QACA,MAAMC,oBAAoB,GAAWH,YAAY,CAACE,YAAY,CAAC;QAC/D,MAAME,mBAAmB,GAA0BzD,YAAY,CAAC7f,SAAS,CAAC0E,GAAG,CAAC2e,oBAAoB,CAAC;QAEnG;QACA,IAAID,YAAY,GAAGH,qCAAqC,EAAE;UACtDA,qCAAqC,GAAGG,YAAY;QACxD;QAEA;QACA,IAAIE,mBAAmB,KAAKP,iBAAiB,CAACre,GAAG,CAAC0e,YAAY,CAAC,EAAE;UAC7DL,iBAAiB,CAAC3f,GAAG,CAACggB,YAAY,EAAEE,mBAAmB,CAAC;UACxDR,QAAQ,CAACS,eAAe,CAACH,YAAY,EAAEE,mBAAmB,CAAC7S,MAAM,CAAC;QACtE;MACJ;MAEA;MACA,IAAIoP,YAAY,CAACd,QAAQ,KAAKW,SAAS,EAAE;QACrCA,SAAS,GAAGG,YAAY,CAACd,QAAQ;QAEjC;QACA+D,QAAQ,CAAC3C,WAAW,CAACT,SAAS,CAACjP,MAAM,CAAC;QAEtC;QACA;QACA,IAAImP,0BAA0B,GAAGE,+BAA+B,EAAE;UAC9D,KAAK,IAAIxJ,eAAe,GAAYwJ,+BAA+B,GAAG,CAAE,EAAExJ,eAAe,GAAIsJ,0BAA0B,GAAG,CAAE,EAAEtJ,eAAe,EAAE,EAAE;YAC7IwM,QAAQ,CAAC5C,YAAY,CAAC5J,eAAe,EAAE,IAAI,CAAC;UAChD;QACJ;QAEA;QACAsJ,0BAA0B,GAAGE,+BAA+B;QAE5D;QACA;QACA,IAAIkD,gCAAgC,GAAGC,qCAAqC,EAAE;UAC1E,KAAK,IAAIO,2BAA2B,GAAYP,qCAAqC,GAAG,CAAE,EAAEO,2BAA2B,GAAIR,gCAAgC,GAAG,CAAE,EAAEQ,2BAA2B,EAAE,EAAE;YAC7LV,QAAQ,CAACS,eAAe,CAACC,2BAA2B,EAAE,IAAI,CAAC;UAC/D;QACJ;QAEA;QACAR,gCAAgC,GAAGC,qCAAqC;MAC5E;MAEA;MACA,IAAIpD,YAAY,CAAC7f,SAAS,CAACyB,MAAM,CAACgiB,SAAS,EAAE;QACzC;QACAX,QAAQ,CAACY,cAAc,CAAC7D,YAAY,CAAC7f,SAAS,CAAC2jB,WAAY,CAAClT,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;QAE/E;QACAqS,QAAQ,CAACc,WAAW,CAAC/D,YAAY,CAAC7f,SAAS,CAAC2jB,WAAY,CAAChxB,MAAM,EAAEktB,YAAY,CAAC4B,aAAa,CAAC;MAChG,CAAC,MAAM;QACH;QACAqB,QAAQ,CAACe,IAAI,CAAChE,YAAY,CAAC7f,SAAS,CAAC8jB,WAAW,EAAEjE,YAAY,CAAC4B,aAAa,CAAC;MACjF;MAEA;IACJ;EACJ;;AA/SJzwB,kBAAA,GAAA4vB,UAAA;;;;;;;;;;;;;;;;;ACXA,MAAAzwB,MAAA,GAAAC,mBAAA;AACA,MAAA2zB,kBAAA,GAAA3zB,mBAAA;AACA,MAAA4zB,gBAAA,GAAA5zB,mBAAA;AAEA;;;AAGA,MAAa6zB,eAAe;EAIxB;;;;;EAKAxzB,YAAmBigB,OAAkB;IACjC;IACA,IAAI,CAACwT,SAAS,GAAG,IAAI/Q,GAAG,EAAc;IACtC,KAAK,MAAMgR,QAAQ,IAAIzT,OAAO,CAAC0T,QAAQ,EAAE;MACrC,MAAMC,WAAW,GAA2Bl0B,MAAA,CAAAm0B,QAAQ,CAACC,IAAI,CAAaR,kBAAA,CAAAS,UAAU,EAAEL,QAAQ,CAAC;MAC3F,IAAIE,WAAW,EAAE;QACb,IAAI,CAACH,SAAS,CAACrxB,GAAG,CAACwxB,WAAW,CAAC;MACnC;IACJ;IAEA;IACA,IAAI,CAACI,OAAO,GAAG,IAAIt0B,MAAA,CAAA2a,UAAU,EAAoB;IACjD,KAAK,MAAM4Z,UAAU,IAAIv0B,MAAA,CAAAm0B,QAAQ,CAACK,QAAQ,CAAWX,gBAAA,CAAAY,QAAQ,CAAC,EAAE;MAC5D,IAAI,CAACH,OAAO,CAACrhB,GAAG,CAACshB,UAAU,EAAEhU,OAAO,CAACmU,MAAM,CAACH,UAAU,CAAC,IAAI,IAAI,CAAC;IACpE;EACJ;EAEA;;;;;;;EAOOI,QAAQA,CAAC1K,MAAgB;IAC5B,OAAO,IAAI,CAACqK,OAAO,CAAC/f,GAAG,CAAC0V,MAAM,CAAE;EACpC;EAEA;;;;;;;EAOO2K,UAAUA,CAACC,QAAoB;IAClC,OAAO,IAAI,CAACd,SAAS,CAACpT,GAAG,CAACkU,QAAQ,CAAC;EACvC;;AA9CJh0B,uBAAA,GAAAizB,eAAA;;;;;;;;;;;;;;;;;ACPA;;;AAGA,IAAYO,UAeX;AAfD,WAAYA,UAAU;EAClBA,UAAA,2CAAuC;EACvCA,UAAA,kDAA8C;EAC9CA,UAAA,mDAA+C;EAC/CA,UAAA,qEAAiE;EACjEA,UAAA,uDAAmD;EACnDA,UAAA,uDAAmD;EACnDA,UAAA,sCAAkC;EAClCA,UAAA,qDAAiD;EACjDA,UAAA,4BAAwB;EACxBA,UAAA,wDAAoD;EACpDA,UAAA,4CAAwC;EACxCA,UAAA,4CAAwC;EACxCA,UAAA,oCAAgC;EAChCA,UAAA,8CAA0C;AAC9C,CAAC,EAfWA,UAAU,KAAAxzB,kBAAA,GAAVwzB,UAAU;;;;;;;;;;;;;;;;;ACHtB;;;AAGA,IAAYI,QAiCX;AAjCD,WAAYA,QAAQ;EAChBA,QAAA,mDAA+C;EAC/CA,QAAA,mDAA+C;EAC/CA,QAAA,mDAA+C;EAC/CA,QAAA,mDAA+C;EAC/CA,QAAA,mCAA+B;EAC/BA,QAAA,qEAAiE;EACjEA,QAAA,uDAAmD;EACnDA,QAAA,2FAAuF;EACvFA,QAAA,2FAAuF;EACvFA,QAAA,yEAAqE;EACrEA,QAAA,2DAAuD;EACvDA,QAAA,uEAAmE;EACnEA,QAAA,yEAAqE;EACrEA,QAAA,uEAAmE;EACnEA,QAAA,+DAA2D;EAC3DA,QAAA,+DAA2D;EAC3DA,QAAA,uEAAmE;EACnEA,QAAA,uEAAmE;EACnEA,QAAA,yCAAqC;EACrCA,QAAA,mCAA+B;EAC/BA,QAAA,+CAA2C;EAC3CA,QAAA,6DAAyD;EACzDA,QAAA,mEAA+D;EAC/DA,QAAA,iEAA6D;EAC7DA,QAAA,+CAA2C;EAC3CA,QAAA,yEAAqE;EACrEA,QAAA,qEAAiE;EACjEA,QAAA,2EAAuE;EACvEA,QAAA,yDAAqD;EACrDA,QAAA,yDAAqD;EACrDA,QAAA,yDAAqD;EACrDA,QAAA,yEAAqE;AACzE,CAAC,EAjCWA,QAAQ,KAAA5zB,gBAAA,GAAR4zB,QAAQ;;;;;;;;;;;;;;;;;;;ACHpB,MAAAz0B,MAAA,GAAAC,mBAAA;AACA,MAAAmO,wBAAA,GAAAnO,mBAAA;AACA,MAAA60B,eAAA,GAAA70B,mBAAA;AACA,MAAA80B,cAAA,GAAA90B,mBAAA;AACA,MAAA+0B,aAAA,GAAA/0B,mBAAA;AACA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAA8N,gBAAA,GAAA9N,mBAAA;AACA,MAAAg1B,QAAA,GAAAh1B,mBAAA;AACA,MAAAyjB,gBAAA,GAAAzjB,mBAAA;AACA,MAAAi1B,6BAAA,GAAAj1B,mBAAA;AACA,MAAAk1B,kBAAA,GAAAl1B,mBAAA;AAEA,MAAawU,SAAS;;IACM,KAAA2gB,SAAS,GAA+C,IAAIp1B,MAAA,CAAA2a,UAAU,EAAkC;EAAC;;IACzG,KAAA0a,QAAQ,GAAsC,IAAIr1B,MAAA,CAAA2a,UAAU,EAAyB;EAAC;EAE9G;;;;EAIO,OAAajG,OAAOA,CAAC4gB,YAAgC;IAAA,OAAAtmB,iBAAA;MACxD;MAEA;MACA,MAAMumB,QAAQ,GAAsB9gB,SAAS,CAAC2gB,SAAS,CAAC7gB,GAAG,CAAC+gB,YAAY,CAAC,WAAU/hB,MAAM,CAACiiB,SAAS,CAAC/S,GAAG,CAACgT,cAAc,CAAC;QAAEC,eAAe,EAAEJ;MAAY,CAAE,CAAC;MACzJ,IAAI,CAACC,QAAQ,EAAE;QACX,MAAM,IAAIv1B,MAAA,CAAAY,SAAS,CAAC,8BAA8B,EAAE6T,SAAS,CAAC;MAClE;MAEAA,SAAS,CAAC2gB,SAAS,CAACniB,GAAG,CAACqiB,YAAY,EAAEC,QAAQ,CAAC;MAE/C;MACA,MAAMI,OAAO,GAAqBlhB,SAAS,CAAC4gB,QAAQ,CAAC9gB,GAAG,CAACghB,QAAQ,CAAC,WAAUA,QAAQ,CAACK,aAAa,EAAE;MACpG,IAAI,CAACD,OAAO,EAAE;QACV,MAAM,IAAI31B,MAAA,CAAAY,SAAS,CAAC,6BAA6B,EAAE6T,SAAS,CAAC;MACjE;MAEAA,SAAS,CAAC4gB,QAAQ,CAACpiB,GAAG,CAACsiB,QAAQ,EAAEI,OAAO,CAAC;MAEzC,OAAO,IAAIlhB,SAAS,CAACkhB,OAAO,CAAC;IAAC;EAClC;EASA;;;EAGA,IAAWE,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACC,aAAa;EAC7B;EAEA;;;EAGA,IAAWnU,eAAeA,CAAA;IACtB,OAAO,IAAI,CAACoU,gBAAgB;EAChC;EAEA;;;EAGA,IAAWC,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACC,aAAa;EAC7B;EAEA;;;EAGA,IAAWxT,GAAGA,CAAA;IACV,OAAO,IAAI,CAACyT,UAAU;EAC1B;EAEA;;;;EAIA51B,YAAoBigB,OAAkB;IAClC,IAAI,CAAC2V,UAAU,GAAG3V,OAAO;IAEzB;IACA,IAAI,CAACuV,aAAa,GAAG,IAAIX,kBAAA,CAAArB,eAAe,CAACvT,OAAO,CAAC;IAEjD;IACA,IAAI,CAAC0V,aAAa,GAAG,CAAC;IAEtB;IACA,IAAI,CAACF,gBAAgB,GAAG,IAAIb,6BAAA,CAAAiB,yBAAyB,CAAC,IAAI,CAAC;IAE3D;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAIx0B,KAAK,EAAgC;EACzE;EAEA;;;;;EAKOy0B,sBAAsBA,CAACC,SAAuC;IACjE,IAAI,CAACF,oBAAoB,CAACp0B,IAAI,CAACs0B,SAAS,CAAC;EAC7C;EAEA;;;;;;;EAOO1hB,MAAMA,CAACqE,OAA2B;IACrC;IACA,MAAMuC,OAAO,GAAsBvC,OAAO,IAAIpE,QAAQ,CAAC0hB,aAAa,CAAC,QAAQ,CAAC;IAE9E;IACA,MAAMxO,OAAO,GAAwB,IAAIrL,uBAAA,CAAAkC,mBAAmB,CAAC,IAAI,EAAE;MAC/DwD,SAAS,EAAEhU,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY;MACxC3U,MAAM,EAAE,IAAI,CAACF,eAAe,CAAC8U,qBAAqB;MAClDvU,YAAY,EAAE;KACjB,CAAC;IAEF,OAAO,IAAIwB,gBAAA,CAAAwB,aAAa,CAAC,IAAI,EAAE6C,OAAO,EAAEvM,OAAO,CAAC;EACpD;EAEA;;;;;EAKOkb,WAAWA,CAAA;IACd,OAAO,IAAI3B,cAAA,CAAA3G,WAAW,CAAC,IAAI,CAAC;EAChC;EAEA;;;;;EAKOnW,QAAQA,CAAC0e,UAAgC;IAC5C,OAAO,IAAI7B,eAAA,CAAA/G,YAAY,CAAC,IAAI,EAAE4I,UAAU,CAAC;EAC7C;EAEA;;;;;;;;EAQO7e,UAAUA,CAAC5I,cAA6B,EAAEwhB,aAAA,GAAyB,IAAI;IAC1E,OAAO,IAAIsE,aAAA,CAAAvE,UAAU,CAAC,IAAI,EAAEvhB,cAAc,EAAEwhB,aAAa,CAAC;EAC9D;EAEA;;;;;EAKO1b,aAAaA,CAAA;IAChB,OAAO,IAAIjH,gBAAA,CAAA6oB,aAAa,CAAC,IAAI,CAAC;EAClC;EAEA;;;;;EAKOnnB,MAAMA,CAAC2P,OAAe;IACzB,OAAO,IAAI6V,QAAA,CAAA4B,MAAM,CAAC,IAAI,EAAEzX,OAAO,CAAC;EACpC;EAEA;;;EAGO3G,aAAaA,CAAA;IAChB,IAAI,CAACwd,aAAa,EAAE;IAEpB;IACA,KAAK,MAAMnQ,SAAS,IAAI,IAAI,CAACsQ,oBAAoB,EAAE;MAC/CtQ,SAAS,EAAE;IACf;EACJ;;AA7KJjlB,iBAAA,GAAA4T,SAAA;;;;;;;;;;;;;;;;;ACZA,MAAAzU,MAAA,GAAAC,mBAAA;AAIA,MAAsB8c,mBAAmB;EAIrC;;;EAGA,IAAcwB,MAAMA,CAAA;IAChB,OAAO,IAAI,CAACuY,eAAe,CAACvY,MAAM;EACtC;EAEA;;;EAGA,IAAcgL,SAASA,CAAA;IACnB;IACA,OAAO,IAAI,CAACuN,eAAe,CAAC12B,IAA2B;EAC3D;EAEA;;;EAGA,IAAcynB,eAAeA,CAAA;IACzB,OAAO,IAAI,CAACiP,eAAe;EAC/B;EAEA;;;;;EAKAx2B,YAAmB4c,eAA8D,EAAEC,aAAwB;IACvG,IAAI,CAAC2Z,eAAe,GAAG5Z,eAAe;IACtC,IAAI,CAAC6Z,cAAc,GAAG5Z,aAAa;EACvC;EAEA;;;EAGUkM,iBAAiBA,CAAA;IACvB;IACA,IAAI,CAAC,IAAI,CAACyN,eAAe,CAACzS,OAAO,EAAE;MAC/B,MAAM,IAAIrkB,MAAA,CAAAY,SAAS,CAAC,iCAAiC,EAAE,IAAI,CAAC;IAChE;EACJ;EAEA;;;;;EAKU6d,QAAQA,CAAC,GAAGhc,KAA4B;IAC9C,IAAI,CAACs0B,cAAc,CAAC,GAAGt0B,KAAK,CAAC;EACjC;;AArDJ5B,2BAAA,GAAAkc,mBAAA;;;;;;;;;;;;;;;;;ACJA,MAAA/c,MAAA,GAAAC,mBAAA;AAEA,MAAa+2B,4BAA4B;EAIrC;;;EAGA,IAAWC,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACC,YAAY;EAC5B;EAAE,IAAID,WAAWA,CAACE,YAAqB;IACnC,IAAI,CAACA,YAAY,EAAE;MACf,MAAM,IAAIn3B,MAAA,CAAAY,SAAS,CAAC,gDAAgD,EAAE,IAAI,CAAC;IAC/E;IAEA,IAAI,CAACs2B,YAAY,GAAGC,YAAY;EACpC;EAEA;;;EAGA72B,YAAA;IACI,IAAI,CAAC82B,QAAQ,GAAG,IAAIpU,GAAG,EAAY;IACnC,IAAI,CAACkU,YAAY,GAAG,KAAK;EAC7B;EAEA;;;;EAIOx0B,GAAGA,CAAC20B,OAAiB;IACxB,IAAI,CAACD,QAAQ,CAAC10B,GAAG,CAAC20B,OAAO,CAAC;EAC9B;EAEA;;;EAGOC,GAAGA,CAAA;IACN,OAAO,IAAI,CAACF,QAAQ,CAAC7P,IAAI,GAAG,CAAC,IAAK,IAAI,CAAC2P,YAAY;EACvD;EAEA;;;EAGOxJ,KAAKA,CAAA;IACR,IAAI,CAAC0J,QAAQ,CAAC1J,KAAK,EAAE;EACzB;EAEA;;;;EAIO/M,GAAGA,CAAC0W,OAAiB;IACxB,OAAO,IAAI,CAACD,QAAQ,CAACzW,GAAG,CAAC0W,OAAO,CAAC;EACrC;;AArDJx2B,oCAAA,GAAAm2B,4BAAA;;;;;;;;;;;;;;;;;ACFA,MAAAh3B,MAAA,GAAAC,mBAAA;AAIA,MAAsBipB,cAAc;EAGhC;;;EAGA,IAAc3K,MAAMA,CAAA;IAChB,OAAO,IAAI,CAACuY,eAAe,CAACvY,MAAM;EACtC;EAEA;;;EAGA,IAAcgL,SAASA,CAAA;IACnB;IACA,OAAO,IAAI,CAACuN,eAAe,CAAC12B,IAAkB;EAClD;EAEA;;;EAGA,IAAcynB,eAAeA,CAAA;IACzB,OAAO,IAAI,CAACiP,eAAe;EAC/B;EAEA;;;;;EAKAx2B,YAAmB4c,eAAqD;IACpE,IAAI,CAAC4Z,eAAe,GAAG5Z,eAAe;IAEtC;IACA,IAAI,CAACsM,eAAe,CAACtM,eAAe,CAAC9c,IAAI,CAAC;EAC9C;EAEA;;;EAGUipB,iBAAiBA,CAAA;IACvB;IACA,IAAI,CAAC,IAAI,CAACyN,eAAe,CAACzS,OAAO,EAAE;MAC/B,MAAM,IAAIrkB,MAAA,CAAAY,SAAS,CAAC,iCAAiC,EAAE,IAAI,CAAC;IAChE;EACJ;;AA7CJC,sBAAA,GAAAqoB,cAAA;;;;;;;;;;;;;;;;;ACJA,MAAAlpB,MAAA,GAAAC,mBAAA;AAEA,MAAAs3B,iCAAA,GAAAt3B,mBAAA;AAGA;;;AAGA,MAAsB0f,SAAS;EAQ3B;;;EAGA,IAAcpB,MAAMA,CAAA;IAChB,OAAO,IAAI,CAACiZ,OAAO;EACvB;EAEA;;;EAGA,IAAcC,OAAOA,CAAA;IACjB,OAAO,IAAI,CAACC,QAAQ;EACxB;EAEA;;;EAGA,IAAcpX,MAAMA,CAAA;IAChB,OAAO,IAAI,CAACqX,UAAU,EAAE;EAC5B;EAEA;;;;;EAKAr3B,YAAmBigB,OAAkB;IACjC;IACA,IAAI,CAACiX,OAAO,GAAGjX,OAAO;IACtB,IAAI,CAACmX,QAAQ,GAAG,KAAK;IAErB;IACA,IAAI,CAACE,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,aAAa,GAAG,IAAI;IAEzB;IACA,IAAI,CAACC,mBAAmB,GAAG,IAAI93B,MAAA,CAAA2a,UAAU,EAA6E;IACtH,IAAI,CAACod,oBAAoB,GAAG,IAAIR,iCAAA,CAAAP,4BAA4B,EAAqB;EACrF;EAEA;;;;;;;;EAQOhgB,uBAAuBA,CAACsf,SAAqD,EAAE0B,SAAoC;IACtH,IAAI,CAACF,mBAAmB,CAAC7kB,GAAG,CAACqjB,SAAS,EAAE0B,SAAS,GAAG,IAAIhV,GAAG,CAACgV,SAAS,CAAC,GAAG,IAAI,CAAC;IAE9E,OAAO,IAAI;EACf;EAEA;;;EAGOf,WAAWA,CAAA;IACd,IAAI,CAACc,oBAAoB,CAACd,WAAW,GAAG,IAAI;IAE5C;IACA,IAAI,IAAI,CAACY,aAAa,KAAK,IAAI,EAAE;MAC7B,IAAI,CAACvK,aAAa,CAAC,IAAI,CAACuK,aAAa,EAAE,IAAI,CAACE,oBAAoB,CAAC;MACjE,IAAI,CAACF,aAAa,GAAG,IAAI;IAC7B;IAEA,IAAI,CAACD,cAAc,GAAG,IAAI;EAC9B;EAEA;;;EAGO1U,UAAUA,CAAC,GAAG+U,QAAkC;IACnD;IACA;IACA;IAEA;IACA,KAAK,MAAMC,OAAO,IAAID,QAAQ,EAAE;MAC5B;MACA,IAAI,CAACF,oBAAoB,CAACr1B,GAAG,CAACw1B,OAAO,CAAC;MAEtC;MACA,KAAK,MAAM,CAACC,qBAAqB,EAAEC,SAAS,CAAC,IAAI,IAAI,CAACN,mBAAmB,EAAE;QACvE;QACA,IAAI,CAACM,SAAS,IAAIA,SAAS,CAACzX,GAAG,CAACuX,OAAO,CAAC,EAAE;UACtCC,qBAAqB,CAACD,OAAO,CAAC;QAClC;MACJ;IACJ;EACJ;EAEA;;;;EAIO5R,0BAA0BA,CAACgQ,SAAqD;IACnF,IAAI,CAACwB,mBAAmB,CAACvR,MAAM,CAAC+P,SAAS,CAAC;EAC9C;EAEA;;;;;;EAMUhJ,aAAaA,CAAC+K,QAAuB,EAAEC,SAA0D;IACvG;EACJ;EAEA;;;EAGUzY,WAAWA,CAAA;IACjB,IAAI,CAAC,IAAI,CAAC6X,QAAQ,EAAE;MAChB,MAAM,IAAI13B,MAAA,CAAAY,SAAS,CAAC,gDAAgD,EAAE,IAAI,CAAC;IAC/E;EACJ;EAEA;;;;;;;EAOUigB,cAAcA,CAAC0X,eAAqC,EAAED,SAA0D;IACtH,OAAO,IAAI;EACf;EAEA;;;;;EAKUzV,OAAOA,CAAC2V,YAA8C;IAC5D;EACJ;EAEA;;;;;;;;EAQUnV,mBAAmBA,CAACmV,YAAwE;IAClG,OAAO,IAAoB;EAC/B;EAEA;;;;;;;EAOU7oB,KAAKA,CAACiR,cAA+C;IAC3D;IACA,IAAI,IAAI,CAAC8W,QAAQ,EAAE;MACf,MAAM,IAAI13B,MAAA,CAAAY,SAAS,CAAC,6CAA6C,EAAE,IAAI,CAAC;IAC5E;IAEA;IACA,MAAM63B,gBAAgB,GAA+D;MACjFpU,OAAO,EAAE,IAAI;MACb9F,MAAM,EAAE,IAAI,CAACiZ,OAAO;MACpBp3B,IAAI,EAAE;KACT;IAED;IACA,MAAMs4B,YAAY,GAAwB,IAAI,CAACrV,mBAAmB,CAACoV,gBAAgB,CAAC;IACpF,IAAIC,YAAY,KAAK,IAAI,EAAE;MACvB;MACA,IAAI9X,cAAc,EAAE;QAChBA,cAAc,CAAC8X,YAAY,CAAC;MAChC;MAEA;MACA,IAAI,CAAC7V,OAAO,CAAC4V,gBAAgB,CAACr4B,IAAwC,CAAC;IAC3E;IAEA;IACwEq4B,gBAAiB,CAACpU,OAAO,GAAG,KAAK;IAEzG;IACA,IAAI,CAACqT,QAAQ,GAAG,IAAI;IAEpB,OAAO,IAAI;EACf;EAEA;;;;;;;;EAQUiB,YAAYA,CAACN,QAAuB,EAAEC,SAA0D;IACtG,OAAO,KAAK;EAChB;EAEA;;;;;;EAMQX,UAAUA,CAAA;IACd;IACA,IAAI,IAAI,CAACC,cAAc,EAAE;MACrB,MAAM,IAAI53B,MAAA,CAAAY,SAAS,CAAC,8DAA8D,EAAE,IAAI,CAAC;IAC7F;IAEA;IACA,IAAI,CAAC,IAAI,CAAC62B,OAAO,EAAE;MACf;MACA,IAAI,CAAC9nB,KAAK,EAAE;IAChB;IAEA;IACA,IAAI,IAAI,CAACkoB,aAAa,KAAK,IAAI,IAAI,IAAI,CAACE,oBAAoB,CAACT,GAAG,EAAE,EAAE;MAChE;MACA,MAAMsB,kBAAkB,GAAY,IAAI,CAACD,YAAY,CAAC,IAAI,CAACd,aAAa,EAAE,IAAI,CAACE,oBAAoB,CAAC;MACpG,IAAIa,kBAAkB,EAAE;QACpB,IAAI,CAACb,oBAAoB,CAACrK,KAAK,EAAE;MACrC;IACJ;IAEA;IACA,IAAI,IAAI,CAACmK,aAAa,KAAK,IAAI,IAAI,IAAI,CAACE,oBAAoB,CAACT,GAAG,EAAE,EAAE;MAChE;MACA,MAAMuB,cAAc,GAAyB,IAAI,CAAChB,aAAa;MAE/D;MACA,IAAI,CAACA,aAAa,GAAG,IAAI,CAAChX,cAAc,CAACgY,cAAc,EAAE,IAAI,CAACd,oBAAoB,CAAC;MACnF,IAAI,IAAI,CAACF,aAAa,KAAK,IAAI,EAAE;QAC7B,MAAM,IAAI73B,MAAA,CAAAY,SAAS,CAAC,wCAAwC,EAAE,IAAI,CAAC;MACvE;MAEA;MACA,IAAIi4B,cAAc,KAAK,IAAI,EAAE;QACzB,IAAI,CAACvL,aAAa,CAACuL,cAAc,EAAE,IAAI,CAACd,oBAAoB,CAAC;MACjE;MAEA;MACA,IAAI,CAACA,oBAAoB,CAACrK,KAAK,EAAE;IACrC;IAEA,OAAO,IAAI,CAACmK,aAAa;EAC7B;;AApQJh3B,iBAAA,GAAA8e,SAAA;AAiRA;;;;;;;;;;;;;;;;;ACxRA,MAAAH,YAAA,GAAAvf,mBAAA;AAGA,MAAsB64B,gBAAgH,SAAQtZ,YAAA,CAAAG,SAAgD;EAC1L;;;;EAIArf,YAAmBigB,OAAkB;IACjC,KAAK,CAACA,OAAO,CAAC;EAClB;;AAPJ1f,wBAAA,GAAAi4B,gBAAA;;;;;;;;;;;;;;;;;ACJA,MAAA94B,MAAA,GAAAC,mBAAA;AAEA,MAAAuc,2BAAA,GAAAvc,mBAAA;AAEA,MAAa+nB,uBAAwB,SAAQxL,2BAAA,CAAAgB,sBAAsB;EAI/D;;;EAGA,IAAWub,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC7Q,SAAS,CAAC6Q,SAAS;EACnC;EAEA;;;EAGA,IAAW9Q,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC+Q,UAAU;EAC1B;EAEA;;;EAGA,IAAW5a,SAASA,CAAA;IAChB,IAAI,IAAI,CAAC6J,SAAS,GAAG,CAAC,EAAE;MACpB,OAAO,CAAC;IACZ;IAEA,OAAO,IAAI,CAACA,SAAS,IAAI9kB,IAAI,CAAC81B,IAAI,CAAC,IAAI,CAAC/Q,SAAS,CAAC9J,SAAS,GAAG,IAAI,CAAC8J,SAAS,CAAC6Q,SAAS,CAAC,GAAG,IAAI,CAAC7Q,SAAS,CAAC6Q,SAAS,CAAC;EACvH;EAEA;;;EAGA,IAAW7Q,SAASA,CAAA;IAChB,OAAO,IAAI,CAACgR,UAAU;EAC1B;EAEA;;;EAGA,IAAWnb,YAAYA,CAAA;IACnB,IAAI,IAAI,CAACkK,SAAS,GAAG,CAAC,EAAE;MACpB,OAAO,CAAC;IACZ;IAEA,OAAQ9kB,IAAI,CAAC81B,IAAI,CAAC,IAAI,CAAC/Q,SAAS,CAAC9J,SAAS,GAAG,IAAI,CAAC8J,SAAS,CAAC6Q,SAAS,CAAC,GAAG,IAAI,CAAC7Q,SAAS,CAAC6Q,SAAS;EACrG;EAEA;;;;;;EAMAz4B,YAAmBigB,OAAkB,EAAE6Q,UAA4C;IAC/E,KAAK,CAAC7Q,OAAO,CAAC;IAEd;IACA,IAAI,CAACyY,UAAU,GAAG5H,UAAU,CAACnJ,SAAS;IACtC,IAAI,CAACiR,UAAU,GAAG9H,UAAU,CAAClJ,SAAS;IAEtC,IAAI,IAAI,CAACgR,UAAU,CAACnb,YAAY,GAAG,CAAC,EAAE;MAClC,MAAM,IAAI/d,MAAA,CAAAY,SAAS,CAAC,4CAA4C,EAAE,IAAI,CAAC;IAC3E;EACJ;EAEA;;;;EAIgBkqB,UAAUA,CAACqO,SAAwB;IAC/C,MAAMC,SAAS,GAAkB,CAAC,GAAGD,SAAS,CAAC;IAE/C;IACA,MAAME,gBAAgB,GAAuBD,SAAS,CAACE,KAAK,EAAE;IAC9D,IAAI,CAACD,gBAAgB,EAAE;MACnB;MACA,IAAI,IAAI,CAACtb,YAAY,GAAG,CAAC,EAAE;QACvB,MAAM,IAAI/d,MAAA,CAAAY,SAAS,CAAC,+DAA+D,EAAE,IAAI,CAAC;MAC9F;MAEA,OAAO;QAAE2mB,IAAI,EAAE,IAAI,CAACnJ,SAAS;QAAE2M,MAAM,EAAE;MAAC,CAAE;IAC9C;IAEA;IACA,IAAIwO,KAAK,CAAMF,gBAAgB,CAAC,EAAE;MAC9B,MAAM,IAAIr5B,MAAA,CAAAY,SAAS,CAAC,+BAA+B,EAAE,IAAI,CAAC;IAC9D;IAEA;IACA,MAAM44B,cAAc,GAAWr2B,IAAI,CAAC81B,IAAI,CAAC,IAAI,CAAC/Q,SAAS,CAAC9J,SAAS,GAAG,IAAI,CAAC8J,SAAS,CAAC6Q,SAAS,CAAC,GAAG,IAAI,CAAC7Q,SAAS,CAAC6Q,SAAS;IACxH,MAAMU,gBAAgB,GAAWC,QAAQ,CAACL,gBAAgB,CAAC,GAAGG,cAAc;IAE5E;IACA,IAAIJ,SAAS,CAAC52B,MAAM,KAAK,CAAC,EAAE;MACxB,OAAO;QAAE+kB,IAAI,EAAEiS,cAAc;QAAEzO,MAAM,EAAE0O;MAAgB,CAAE;IAC7D;IAEA;IACA,MAAME,cAAc,GAAG,IAAI,CAACzR,SAAS,CAAC4C,UAAU,CAACsO,SAAS,CAAC;IAC3D,OAAO;MAAE7R,IAAI,EAAEoS,cAAc,CAACpS,IAAI;MAAEwD,MAAM,EAAE0O,gBAAgB,GAAGE,cAAc,CAAC5O;IAAM,CAAE;EAC1F;;AApGJlqB,+BAAA,GAAAmnB,uBAAA;;;;;;;;;;;;;;;;;ACFA,MAAA4R,oBAAA,GAAA35B,mBAAA;AAEA,MAAsBud,sBAAsH,SAAQoc,oBAAA,CAAAd,gBAAiD;EAgBjM;;;;;EAKAx4B,YAAmBigB,OAAkB;IACjC,KAAK,CAACA,OAAO,CAAC;EAClB;;AAvBJ1f,8BAAA,GAAA2c,sBAAA;;;;;;;;;;;;;;;;;ACJA,IAAYrN,qBAKX;AALD,WAAYA,qBAAqB;EAC7BA,qBAAA,uBAAmB;EACnBA,qBAAA,uBAAmB;EACnBA,qBAAA,qBAAiB;EACjBA,qBAAA,qBAAiB;AACrB,CAAC,EALWA,qBAAqB,KAAAtP,6BAAA,GAArBsP,qBAAqB;;;;;;;;;;;;;;;;;ACAjC,IAAYK,yBAmBX;AAnBD,WAAYA,yBAAyB;EACjC;EACAA,yBAAA,iBAAa;EAEb;EACAA,yBAAA,kBAAc;EACdA,yBAAA,kBAAc;EACdA,yBAAA,kBAAc;EAEd;EACAA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;EAChBA,yBAAA,oBAAgB;AACpB,CAAC,EAnBWA,yBAAyB,KAAA3P,iCAAA,GAAzB2P,yBAAyB;;;;;;;;;;;;;;;;;ACArC,MAAAxQ,MAAA,GAAAC,mBAAA;AAEA,MAAAuc,2BAAA,GAAAvc,mBAAA;AACA,MAAA4N,8BAAA,GAAA5N,mBAAA;AACA,MAAA6N,kCAAA,GAAA7N,mBAAA;AAEA,MAAaooB,2BAA4B,SAAQ7L,2BAAA,CAAAgB,sBAAsB;EAInE;;;EAGA,IAAoBub,SAASA,CAAA;IACzB,OAAO,IAAI,CAACc,UAAU;EAC1B;EAEA;;;EAGA,IAAWzb,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC0b,KAAK;EACrB;EAEA;;;EAGA,IAAW/b,YAAYA,CAAA;IACnB,OAAO,CAAC;EACZ;EAEA;;;;;;EAMAzd,YAAmBigB,OAAkB,EAAE6Q,UAA6C;IAChF,KAAK,CAAC7Q,OAAO,CAAC;IAEd;IACA,IAAI,CAACuZ,KAAK,GAAG,CAAC,MAAa;MACvB,QAAQ1I,UAAU,CAAC9I,eAAe;QAC9B,KAAKza,8BAAA,CAAAsC,qBAAqB,CAAC4pB,OAAO;UAAE,OAAO,CAAC;QAC5C,KAAKlsB,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO;UAAE,OAAO,CAAC;QAC5C,KAAKvC,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;UAAE,OAAO,CAAC;QAC3C,KAAK9P,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM;UAAE,OAAO,CAAC;MAC/C;IACJ,CAAC,EAAC,CAAE;IAEJ;IACA,CAAC,IAAI,CAACgc,UAAU,EAAE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,MAAuB;MACpD,QAAQ1I,UAAU,CAAC7I,mBAAmB;QAClC,KAAKza,kCAAA,CAAA0C,yBAAyB,CAAC8F,MAAM;UAAE,OAAO,CAAC,IAAI,CAACwjB,KAAK,EAAE,IAAI,CAACA,KAAK,CAAC;QACtE,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAACE,OAAO;UAAE,OAAO,CAAC,IAAI,CAACopB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;QAC/E,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAACwpB,OAAO;UAAE,OAAO,CAAC,IAAI,CAACF,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;QAC/E,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO;UAAE,OAAO,CAAC,IAAI,CAACqpB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;QAC/E,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAACypB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACH,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAAC0pB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACJ,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAAC2pB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACL,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAAC4pB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACN,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAAC6pB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACP,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAAC8pB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACR,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAAC+pB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACT,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAACgqB,QAAQ;UAAE,OAAO,CAAC,IAAI,CAACV,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACpF,KAAKhsB,kCAAA,CAAA0C,yBAAyB,CAACU,QAAQ;UAAE,OAAO,CAAC,IAAI,CAAC4oB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MACxF;IACJ,CAAC,EAAC,CAAE;IAEJ;IACA,IAAI1I,UAAU,CAACqJ,YAAY,EAAE;MACzB,IAAI,IAAI,CAACX,KAAK,GAAG1I,UAAU,CAACqJ,YAAY,EAAE;QACtC,MAAM,IAAIz6B,MAAA,CAAAY,SAAS,CAAC,wEAAwE,EAAE,IAAI,CAAC;MACvG;MAEA,IAAI,CAACi5B,UAAU,GAAGzI,UAAU,CAACqJ,YAAY;IAC7C;IAEA;IACA,IAAIrJ,UAAU,CAACsJ,iBAAiB,EAAE;MAC9B,IAAItJ,UAAU,CAACsJ,iBAAiB,GAAG,IAAI,CAACb,UAAU,KAAK,CAAC,EAAE;QACtD,MAAM,IAAI75B,MAAA,CAAAY,SAAS,CAAC,sEAAsE,EAAE,IAAI,CAAC;MACrG;MAEA,IAAI,CAACi5B,UAAU,GAAGzI,UAAU,CAACsJ,iBAAiB;IAClD;EACJ;EAEA;;;;EAIO5P,UAAUA,CAACqO,SAAwB;IACtC;IACA,IAAIA,SAAS,CAAC32B,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIxC,MAAA,CAAAY,SAAS,CAAC,yCAAyC,EAAE,IAAI,CAAC;IACxE;IAEA,OAAO;MAAE2mB,IAAI,EAAE,IAAI,CAACnJ,SAAS;MAAE2M,MAAM,EAAE;IAAC,CAAE;EAC9C;;AA7FJlqB,mCAAA,GAAAwnB,2BAAA;;;;;;;;;;;;;;;;;ACNA,MAAA9L,wBAAA,GAAAtc,mBAAA;AACA,MAAAwnB,4BAAA,GAAAxnB,mBAAA;AAIA,MAAAynB,gCAAA,GAAAznB,mBAAA;AACA,MAAA0nB,6BAAA,GAAA1nB,mBAAA;AAGA,MAAa06B,qCAAsC,SAAQpe,wBAAA,CAAAQ,mBAA4E;EACnI;;;;;;;EAOO6d,OAAOA,CAAC14B,KAAA,GAAgB,CAAC,CAAC;IAC7B,OAAO,IAAIy4B,qCAAqC,CAAC,IAAI,CAAC9S,eAAe,EAAGC,aAAqC,IAAI;MAC7G,MAAMC,OAAO,GAA4B,IAAIN,4BAAA,CAAAO,uBAAuB,CAAC,IAAI,CAACzJ,MAAM,EAAE;QAC9E0J,SAAS,EAAE/lB,KAAK;QAChBgmB,SAAS,EAAEJ;OACd,CAAC;MAEF,IAAI,CAACrJ,QAAQ,CAACsJ,OAAO,CAAC;IAC1B,CAAC,CAAC;EACN;EAEA;;;;;;EAMOrR,WAAWA,CAACyR,gBAAuC,EAAEC,oBAA+C;IACvG,MAAML,OAAO,GAAgC,IAAIL,gCAAA,CAAAW,2BAA2B,CAAC,IAAI,CAAC9J,MAAM,EAAE;MACtF+J,eAAe,EAAEH,gBAAgB;MACjCI,mBAAmB,EAAEH;KACxB,CAAC;IAEF;IACA,IAAI,CAAC3J,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;EAEA;;;;;EAKO8S,QAAQA,CAACrS,UAA2D;IACvE;IACA,MAAMT,OAAO,GAA6B,IAAIJ,6BAAA,CAAAc,wBAAwB,CAAC,IAAI,CAAClK,MAAM,CAAC;IACnFwJ,OAAO,CAACpY,KAAK,CAAC6Y,UAAU,CAAC;IAEzB;IACA,IAAI,CAAC/J,QAAQ,CAACsJ,OAAO,CAAC;EAC1B;;AA/CJlnB,6CAAA,GAAA85B,qCAAA;;;;;;;;;;;;;;;;;ACTA,MAAA3R,kBAAA,GAAA/oB,mBAAA;AAEA,MAAA66B,4CAAA,GAAA76B,mBAAA;AAEA,MAAa86B,6BAA8B,SAAQ/R,kBAAA,CAAAE,cAAiD;EAChG;;;;;;;EAOOzS,QAAQA,CAAC+J,KAAa;IACzB;IACA,MAAMwa,SAAS,GAA8C;MACzDhd,IAAI,EAAEwC,KAAK;MACXya,UAAU,EAAE,IAAI,CAAC1R,SAAS,CAAC2R,UAAU,CAAC14B,MAAM;MAC5C8O,MAAM,EAAE;KACX;IAED;IACA,IAAI,CAACiY,SAAS,CAAC2R,UAAU,CAACl5B,IAAI,CAACg5B,SAAS,CAAC;IAEzC;IACA,OAAO,IAAIF,4CAAA,CAAAH,qCAAqC,CAAC,IAAI,CAAC9S,eAAe,EAAGC,aAAqC,IAAI;MAC7GkT,SAAS,CAAC1pB,MAAM,GAAGwW,aAAa;IACpC,CAAC,CAAC;EACN;EAEA;;;;;EAKmB0B,eAAeA,CAACC,cAAiD;IAChFA,cAAc,CAACyR,UAAU,GAAG,IAAIt5B,KAAK,EAAyE;EAClH;;AAhCJf,qCAAA,GAAAk6B,6BAAA;;;;;;;;;;;;;;;;;ACJA,MAAA/6B,MAAA,GAAAC,mBAAA;AAIA,MAAAuc,2BAAA,GAAAvc,mBAAA;AACA,MAAAk7B,mCAAA,GAAAl7B,mBAAA;AAEA,MAAawoB,wBAAyB,SAAQjM,2BAAA,CAAAgB,sBAA0D;EAMpG;;;EAGA,IAAWub,SAASA,CAAA;IAChB;IACA,IAAI,CAAClZ,WAAW,EAAE;IAElB,OAAO,IAAI,CAACga,UAAU;EAC1B;EAEA;;;EAGA,IAAWzb,SAASA,CAAA;IAChB;IACA,IAAI,CAACyB,WAAW,EAAE;IAElB,OAAO,IAAI,CAACub,UAAU;EAC1B;EAEA;;;EAGA,IAAWF,UAAUA,CAAA;IACjB;IACA,IAAI,CAACrb,WAAW,EAAE;IAElB,OAAO,IAAI,CAACwb,gBAAgB,CAACzJ,GAAG,CAAE0J,SAAS,IAAKA,SAAS,CAAChqB,MAAM,CAAC;EACrE;EAEA;;;EAGA,IAAWyM,YAAYA,CAAA;IACnB;IACA,IAAI,CAAC8B,WAAW,EAAE;IAElB,OAAO,IAAI,CAAC0b,aAAa;EAC7B;EAEA;;;;;;EAMAj7B,YAAmBigB,OAAkB;IACjC,KAAK,CAACA,OAAO,CAAC;IAEd;IACA,IAAI,CAACsZ,UAAU,GAAG,CAAC;IACnB,IAAI,CAACuB,UAAU,GAAG,CAAC;IACnB,IAAI,CAACG,aAAa,GAAG,CAAC;IAEtB;IACA,IAAI,CAACF,gBAAgB,GAAG,IAAIz5B,KAAK,EAAoC;EACzE;EAEA;;;;EAIgBkpB,UAAUA,CAACqO,SAAwB;IAC/C;IACA,IAAI,CAACtZ,WAAW,EAAE;IAElB,MAAMuZ,SAAS,GAAkB,CAAC,GAAGD,SAAS,CAAC;IAE/C;IACA,MAAMqC,aAAa,GAAuBpC,SAAS,CAACE,KAAK,EAAE;IAC3D,IAAI,CAACkC,aAAa,EAAE;MAChB,IAAI,IAAI,CAACD,aAAa,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIv7B,MAAA,CAAAY,SAAS,CAAC,8DAA8D,EAAE,IAAI,CAAC;MAC7F;MAEA,OAAO;QAAE2mB,IAAI,EAAE,IAAI,CAACnJ,SAAS;QAAE2M,MAAM,EAAE;MAAC,CAAE;IAC9C;IAEA;IACA,IAAI0Q,eAAe,GAAW,CAAC;IAC/B,IAAIC,cAAc,GAA4C,IAAI;IAClE,KAAK,MAAMV,SAAS,IAAI,IAAI,CAACK,gBAAgB,EAAE;MAC3C;MACAI,eAAe,GAAGt4B,IAAI,CAAC81B,IAAI,CAACwC,eAAe,GAAGT,SAAS,CAAC1pB,MAAM,CAACynB,SAAS,CAAC,GAAGiC,SAAS,CAAC1pB,MAAM,CAACynB,SAAS;MAEtG;MACA;MACA,IAAIiC,SAAS,CAAChd,IAAI,KAAKwd,aAAa,EAAE;QAClCE,cAAc,GAAGV,SAAS;QAC1B;MACJ;MAEA;MACA;MACAS,eAAe,IAAIT,SAAS,CAAC1pB,MAAM,CAAC8M,SAAS;IACjD;IAEA;IACA,IAAI,CAACsd,cAAc,EAAE;MACjB,MAAM,IAAI17B,MAAA,CAAAY,SAAS,CAAC,kCAAkC46B,aAAa,cAAc,EAAE,IAAI,CAAC;IAC5F;IAEA,MAAMG,iBAAiB,GAAGD,cAAc,CAACpqB,MAAM,CAACwZ,UAAU,CAACsO,SAAS,CAAC;IACrE,OAAO;MACH7R,IAAI,EAAEoU,iBAAiB,CAACpU,IAAI;MAC5BwD,MAAM,EAAE0Q,eAAe,GAAGE,iBAAiB,CAAC5Q;KAC/C;EACL;EAEA;;;;;;;EAOgBpb,KAAKA,CAACiR,cAAkE;IACpF,KAAK,CAACjR,KAAK,CAACiR,cAAc,CAAC;IAE3B,OAAO,IAAI;EACf;EAEA;;;;;EAKmBiC,OAAOA,CAACC,WAA8C;IACrE;IACA,KAAK,MAAMkY,SAAS,IAAIlY,WAAW,CAACoY,UAAU,EAAE;MAC5C,IAAI,CAACF,SAAS,CAAC1pB,MAAM,EAAE;QACnB,MAAM,IAAItR,MAAA,CAAAY,SAAS,CAAC,oCAAoC,EAAE,IAAI,CAAC;MACnE;MAEA,IAAI,CAACy6B,gBAAgB,CAACr5B,IAAI,CAAC;QACvBi5B,UAAU,EAAED,SAAS,CAACC,UAAU;QAChCjd,IAAI,EAAEgd,SAAS,CAAChd,IAAI;QACpB1M,MAAM,EAAE0pB,SAAS,CAAC1pB;OACrB,CAAC;IACN;IAEA;IACA,IAAI,CAAC+pB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACO,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAI;MAC1D,OAAOD,EAAE,CAACZ,UAAU,GAAGa,EAAE,CAACb,UAAU;IACxC,CAAC,CAAC;IAEF;IACA,IAAIc,YAAY,GAAW,CAAC;IAC5B,KAAK,IAAI5zB,MAAM,GAAW,CAAC,EAAEA,MAAM,GAAG,IAAI,CAACkzB,gBAAgB,CAAC74B,MAAM,EAAE2F,MAAM,EAAE,EAAE;MAC1E,MAAM6zB,eAAe,GAAG,IAAI,CAACX,gBAAgB,CAAClzB,MAAM,CAAC,CAACmJ,MAAM;MAE5D,IAAI0qB,eAAe,CAACje,YAAY,GAAG,CAAC,IAAI5V,MAAM,KAAM,IAAI,CAACkzB,gBAAgB,CAAC74B,MAAM,GAAG,CAAE,EAAE;QACnF,MAAM,IAAIxC,MAAA,CAAAY,SAAS,CAAC,4EAA4E,EAAE,IAAI,CAAC;MAC3G;MAEA;MACAm7B,YAAY,GAAG54B,IAAI,CAAC81B,IAAI,CAAC8C,YAAY,GAAGC,eAAe,CAACjD,SAAS,CAAC,GAAGiD,eAAe,CAACjD,SAAS;MAE9F;MACAgD,YAAY,IAAIC,eAAe,CAAC5d,SAAS;MAEzC;MACA,IAAI4d,eAAe,CAACjD,SAAS,GAAG,IAAI,CAACc,UAAU,EAAE;QAC7C,IAAI,CAACA,UAAU,GAAGmC,eAAe,CAACjD,SAAS;MAC/C;MAEA;MACA,IAAIiD,eAAe,CAACje,YAAY,GAAG,CAAC,EAAE;QAClC,IAAI,CAACwd,aAAa,GAAGS,eAAe,CAACje,YAAY;MACrD;IACJ;IAEA;IACA,IAAI,CAACqd,UAAU,GAAGj4B,IAAI,CAAC81B,IAAI,CAAC8C,YAAY,GAAG,IAAI,CAAClC,UAAU,CAAC,GAAG,IAAI,CAACA,UAAU;EACjF;EAEA;;;;;;;EAOmBxW,mBAAmBA,CAACP,WAAwE;IAC3G,OAAO,IAAIqY,mCAAA,CAAAJ,6BAA6B,CAACjY,WAAW,CAAC;EACzD;;AA/LJjiB,gCAAA,GAAA4nB,wBAAA;;;;;;;;;;;;;;;;;ACPA,MAAAzoB,MAAA,GAAAC,mBAAA;AAEA,MAAAuc,2BAAA,GAAAvc,mBAAA;AACA,MAAA4N,8BAAA,GAAA5N,mBAAA;AACA,MAAA6N,kCAAA,GAAA7N,mBAAA;AAEA,MAAag8B,wBAAyB,SAAQzf,2BAAA,CAAAgB,sBAAsB;EAKhE;;;EAGA,IAAoBub,SAASA,CAAA;IACzB,OAAO,IAAI,CAACe,KAAK;EACrB;EAEA;;;EAGA,IAAW1b,SAASA,CAAA;IAChB,OAAO,CAAC;EACZ;EAEA;;;EAGA,IAAWyD,MAAMA,CAAA;IACb,OAAO,IAAI,CAACqa,OAAO;EACvB;EAEA;;;EAGA,IAAWC,eAAeA,CAAA;IACtB,OAAO,IAAI,CAACC,gBAAgB;EAChC;EAEA;;;EAGA,IAAWre,YAAYA,CAAA;IACnB,OAAO,IAAI,CAAC+b,KAAK;EACrB;EAEA;;;;;;EAMAx5B,YAAmBigB,OAAkB,EAAE6Q,UAA6C;IAChF,KAAK,CAAC7Q,OAAO,CAAC;IAEd;IACA,MAAM8b,mBAAmB,GAAW,CAAC,MAAa;MAC9C,QAAQjL,UAAU,CAACvP,MAAM;QACrB,KAAKhU,8BAAA,CAAAsC,qBAAqB,CAAC4pB,OAAO;UAAE,OAAO,CAAC;QAC5C,KAAKlsB,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO;UAAE,OAAO,CAAC;QAC5C,KAAKvC,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;UAAE,OAAO,CAAC;QAC3C,KAAK9P,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM;UAAE,OAAO,CAAC;MAC/C;IACJ,CAAC,EAAC,CAAE;IAEJ;IACA,IAAI,CAACic,KAAK,GAAG,CAAC;IACd,IAAI,CAACoC,OAAO,GAAG9K,UAAU,CAACvP,MAAM;IAChC,IAAI,CAACua,gBAAgB,GAAGC,mBAAmB;IAE3C;IACA,KAAK,MAAMC,UAAU,IAAIlL,UAAU,CAACvhB,SAAS,EAAE;MAC3C;MACA,MAAM0sB,cAAc,GAAW,CAAC,MAAa;QACzC,QAAQD,UAAU,CAAC/T,mBAAmB;UAClC,KAAKza,kCAAA,CAAA0C,yBAAyB,CAAC8F,MAAM;YAAE,OAAO+lB,mBAAmB;UACjE,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAACE,OAAO;YAAE,OAAO2rB,mBAAmB,GAAG,CAAC;UACtE,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAACwpB,OAAO;YAAE,OAAOqC,mBAAmB,GAAG,CAAC;UACtE,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAACC,OAAO;YAAE,OAAO4rB,mBAAmB,GAAG,CAAC;UACtE,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAACypB,QAAQ;YAAE,OAAOoC,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAAC0pB,QAAQ;YAAE,OAAOmC,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAAC2pB,QAAQ;YAAE,OAAOkC,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAAC4pB,QAAQ;YAAE,OAAOiC,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAAC6pB,QAAQ;YAAE,OAAOgC,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAAC8pB,QAAQ;YAAE,OAAO+B,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAAC+pB,QAAQ;YAAE,OAAO8B,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAACgqB,QAAQ;YAAE,OAAO6B,mBAAmB,GAAG,CAAC,GAAG,CAAC;UAC3E,KAAKvuB,kCAAA,CAAA0C,yBAAyB,CAACU,QAAQ;YAAE,OAAOmrB,mBAAmB,GAAG,CAAC,GAAG,CAAC;QAC/E;MACJ,CAAC,EAAC,CAAE;MAEJ;MACA,IAAI,CAACvC,KAAK,GAAGyC,cAAc,GAAGD,UAAU,CAACvR,MAAM;IACnD;EACJ;EAEA;;;;EAIOD,UAAUA,CAACqO,SAAwB;IACtC;IACA,IAAIA,SAAS,CAAC32B,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIxC,MAAA,CAAAY,SAAS,CAAC,yCAAyC,EAAE,IAAI,CAAC;IACxE;IAEA,OAAO;MAAE2mB,IAAI,EAAE,IAAI,CAACnJ,SAAS;MAAE2M,MAAM,EAAE;IAAC,CAAE;EAC9C;;AArGJlqB,gCAAA,GAAAo7B,wBAAA;;;;;;;;;;;;;;;;;ACJA,MAAArC,oBAAA,GAAA35B,mBAAA;AAEA,MAAagf,mBAAoB,SAAQ2a,oBAAA,CAAAd,gBAAqD;EAG1F;;;EAGA,IAAWrX,WAAWA,CAAA;IAClB,OAAO,IAAI,CAAC+a,YAAY;EAC5B;EAAE,IAAI/a,WAAWA,CAACzX,KAAkB;IAChC,IAAI,CAACwyB,YAAY,GAAGxyB,KAAK;IAEzB,IAAI,CAACkZ,UAAU,CAACuZ,mCAAmC,CAAChrB,WAAW,CAAC;EACpE;EAEA;;;;;;EAMAnR,YAAmBigB,OAAkB,EAAE6Q,UAAwC;IAC3E,KAAK,CAAC7Q,OAAO,CAAC;IAEd,IAAI,CAACic,YAAY,GAAGpL,UAAU,CAAC3P,WAAW;EAC9C;;AAxBJ5gB,2BAAA,GAAAoe,mBAAA;AA+BA,IAAYwd,mCAEX;AAFD,WAAYA,mCAAmC;EAC3CA,mCAAA,qCAAiC;AACrC,CAAC,EAFWA,mCAAmC,KAAA57B,2CAAA,GAAnC47B,mCAAmC;;;;;;;;;;;;;;;;;AChC/C,MAAA7C,oBAAA,GAAA35B,mBAAA;AAEA,MAAa2e,mBAAoB,SAAQgb,oBAAA,CAAAd,gBAAqD;EAK1F;;;EAGA,IAAW1W,SAASA,CAAA;IAChB,OAAO,IAAI,CAACsa,UAAU;EAC1B;EAEA;;;EAGA,IAAW7a,MAAMA,CAAA;IACb,OAAO,IAAI,CAACqa,OAAO;EACvB,CAAC,CAAC;EAEF;;;EAGA,IAAWha,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACya,aAAa;EAC7B;EAEA;;;;;;EAMAr8B,YAAmBigB,OAAkB,EAAE6Q,UAAwC;IAC3E,KAAK,CAAC7Q,OAAO,CAAC;IAEd,IAAI,CAACmc,UAAU,GAAGtL,UAAU,CAAChP,SAAS;IACtC,IAAI,CAAC8Z,OAAO,GAAG9K,UAAU,CAACvP,MAAM;IAChC,IAAI,CAAC8a,aAAa,GAAGvL,UAAU,CAAClP,YAAY;EAChD;;AAtCJrhB,2BAAA,GAAA+d,mBAAA;AA+CA,IAAYge,mCAGX;AAHD,WAAYA,mCAAmC;EAC3CA,mCAAA,2BAAuB;EACvBA,mCAAA,iCAA6B;AACjC,CAAC,EAHWA,mCAAmC,KAAA/7B,2CAAA,GAAnC+7B,mCAAmC;;;;;;;;;;;;;;;;;ACpD/C,MAAA58B,MAAA,GAAAC,mBAAA;AACA,MAAA+N,oBAAA,GAAA/N,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAa48B,eAAgB,SAAQrd,YAAA,CAAAG,SAA8D;EAI/F;;;EAGA,IAAWuP,MAAMA,CAAA;IACb,OAAO,IAAI,CAAC4N,aAAa;EAC7B;EAEA;;;EAGA,IAAoBxc,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;;;;EAMAhgB,YAAmBigB,OAAkB,EAAEwc,OAA4B;IAC/D,KAAK,CAACxc,OAAO,CAAC;IACd,IAAI,CAACuc,aAAa,GAAGC,OAAO;IAE5B;IACA,IAAI,CAACC,UAAU,GAAG,IAAIh9B,MAAA,CAAA2a,UAAU,EAAwC;IAExE;IACA,IAAI,CAACmiB,aAAa,CAACrtB,MAAM,CAACuH,uBAAuB,CAAC,MAAK;MACnD,IAAI,CAACkM,UAAU,CAAC+Z,+BAA+B,CAACpG,MAAM,CAAC;IAC3D,CAAC,CAAC;IACF,IAAI,CAACiG,aAAa,CAACrtB,MAAM,CAAC6B,MAAM,CAAC0F,uBAAuB,CAAC,MAAK;MAC1D,IAAI,CAACkM,UAAU,CAAC+Z,+BAA+B,CAACpG,MAAM,CAAC;IAC3D,CAAC,CAAC;EACN;EAEA;;;;;;;;EAQOvjB,YAAYA,CAAC4pB,cAAsB,EAAEj8B,MAAc;IACtD,MAAMk8B,eAAe,GAAkC,IAAI,CAACL,aAAa,CAACrtB,MAAM,CAACI,SAAS,CAACqtB,cAAc,CAAC;IAE1G;IACA,KAAK,MAAME,MAAM,IAAID,eAAe,EAAE;MAClC;MACA,IAAI,CAAC,IAAI,CAACH,UAAU,CAACrc,GAAG,CAACyc,MAAM,CAAC,EAAE;QAC9B,IAAI,CAACJ,UAAU,CAAC/pB,GAAG,CAACmqB,MAAM,EAAE,EAAE,CAAC;MACnC;MAEA;MACA,IAAI,CAACJ,UAAU,CAACzoB,GAAG,CAAC6oB,MAAM,CAAE,CAACF,cAAc,CAAC,GAAGj8B,MAAM;IACzD;IAEA;IACA,IAAI,CAACiiB,UAAU,CAAC+Z,+BAA+B,CAACI,SAAS,CAAC;IAE1D,OAAO,IAAI;EACf;EAEA;;;EAGmBxc,cAAcA,CAAA;IAC7B;IACA,MAAMyc,mBAAmB,GAAiC;MACtDhsB,MAAM,EAAE,IAAI,CAACwrB,aAAa,CAACrtB,MAAM,CAAC6B,MAAM,CAACgP,MAAM;MAC/Cid,OAAO,EAAE;QACLrO,MAAM,EAAE,IAAI,CAAC4N,aAAa,CAACrtB,MAAM,CAAC6Q,MAAM;QACxCkd,UAAU,EAAE,IAAI,CAACV,aAAa,CAACU,UAAU;QACzCC,SAAS,EAAE,IAAI,CAACT,UAAU,CAACzoB,GAAG,CAACvG,oBAAA,CAAA8B,YAAY,CAAC4tB,OAAO,CAAC,IAAI;;KAE/D;IAED;IACA,OAAO,IAAI,CAACnf,MAAM,CAACkE,GAAG,CAACkb,qBAAqB,CAACL,mBAAmB,CAAC;EACrE;;AApFJz8B,uBAAA,GAAAg8B,eAAA;AAuFA,IAAYI,+BAIX;AAJD,WAAYA,+BAA+B;EACvCA,+BAAA,2BAAuB;EACvBA,+BAAA,2BAAuB;EACvBA,+BAAA,iCAA6B;AACjC,CAAC,EAJWA,+BAA+B,KAAAp8B,uCAAA,GAA/Bo8B,+BAA+B;;;;;;;;;;;;;;;;;AC9F3C,MAAA1gB,wBAAA,GAAAtc,mBAAA;AAIA,MAAa29B,gCAAiC,SAAQrhB,wBAAA,CAAAQ,mBAAwF;EAC1I;;;;;;;;;;EAUOxM,aAAaA,CAACiQ,KAAa,EAAEqd,SAAiB,EAAEC,WAAsC,EAAEC,iBAAA,GAA4B,CAAC;IACxH;IACA,IAAI,CAACtf,QAAQ,CAAC;MACVT,IAAI,EAAEwC,KAAK;MACXwd,QAAQ,EAAEH,SAAS;MACnBI,UAAU,EAAEH,WAAW;MACvB/S,MAAM,EAAEgT;KACX,CAAC;IAEF,OAAO,IAAI;EACf;;AArBJl9B,wCAAA,GAAA+8B,gCAAA;;;;;;;;;;;;;;;;;ACHA,MAAA5U,kBAAA,GAAA/oB,mBAAA;AAEA,MAAAi+B,sCAAA,GAAAj+B,mBAAA;AAEA,MAAak+B,0BAA2B,SAAQnV,kBAAA,CAAAE,cAA8C;EAC1F;;;;;;;EAOOhZ,MAAMA,CAACkuB,WAAmB,EAAEC,OAA8B,EAAEC,SAAkC;IACjG;IACA,MAAMjgB,OAAO,GAAyC;MAClDL,IAAI,EAAEogB,WAAW;MACjBG,QAAQ,EAAED,SAAS;MACnBzc,MAAM,EAAEwc,OAAO;MACfxuB,SAAS,EAAE,IAAIjO,KAAK;KACvB;IAED;IACA,IAAI,CAAC2nB,SAAS,CAACrZ,MAAM,CAAClO,IAAI,CAACqc,OAAO,CAAC;IAEnC;IACA,OAAO,IAAI6f,sCAAA,CAAAN,gCAAgC,CAAC,IAAI,CAAC/V,eAAe,EAAG7K,OAAwC,IAAI;MAC3GqB,OAAO,CAACxO,SAAS,CAAC7N,IAAI,CAACgb,OAAO,CAAC;IACnC,CAAC,CAAC;EACN;EAEA;;;;;EAKmBwM,eAAeA,CAACC,cAAuD;IACtFA,cAAc,CAACvZ,MAAM,GAAG,IAAItO,KAAK,EAAwC;EAC7E;;AAjCJf,kCAAA,GAAAs9B,0BAAA;;;;;;;;;;;;;;;;;ACLA,MAAAn+B,MAAA,GAAAC,mBAAA;AACA,MAAAqO,iCAAA,GAAArO,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAA6N,kCAAA,GAAA7N,mBAAA;AACA,MAAAu+B,6BAAA,GAAAv+B,mBAAA;AACA,MAAAw+B,kBAAA,GAAAx+B,mBAAA;AACA,MAAAy+B,+BAAA,GAAAz+B,mBAAA;AAEA;;;AAGA,MAAa0+B,qBAAsB,SAAQnf,YAAA,CAAAG,SAAuE;EAK9G;;;EAGA,IAAWqT,WAAWA,CAAA;IAClB;IACA,IAAI,CAACnT,WAAW,EAAE;IAElB,OAAO,CAAC,GAAG,IAAI,CAAC+e,OAAO,CAAC7e,IAAI,EAAE,CAAC;EACnC;EAEA;;;;;EAKA,IAAWuT,SAASA,CAAA;IAChB;IACA,IAAI,CAACzT,WAAW,EAAE;IAElB,OAAO,IAAI,CAACgf,UAAU;EAC1B;EAEA;;;EAGA,IAAoBve,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;EAGA,IAAWwe,cAAcA,CAAA;IACrB;IACA,IAAI,CAACjf,WAAW,EAAE;IAElB,OAAO,CAAC,GAAG,IAAI,CAACmd,UAAU,CAACjd,IAAI,EAAE,CAAC;EACtC;EAEA;;;;;;EAMAzf,YAAmBigB,OAAkB;IACjC,KAAK,CAACA,OAAO,CAAC;IAEd,IAAI,CAACse,UAAU,GAAG,KAAK;IACvB,IAAI,CAACD,OAAO,GAAG,IAAI5+B,MAAA,CAAA2a,UAAU,EAAuC;IACpE,IAAI,CAACqiB,UAAU,GAAG,IAAIh9B,MAAA,CAAA2a,UAAU,EAAgD;EACpF;EAEA;;;;EAIOvI,MAAMA,CAAC2sB,UAAyB;IACnC,OAAO,IAAIN,kBAAA,CAAAO,eAAe,CAAC,IAAI,CAACzgB,MAAM,EAAE,IAAI,EAAEwgB,UAAU,CAAC;EAC7D;EAEA;;;;;EAKOlvB,SAASA,CAAC2Q,KAAa;IAC1B,MAAMuH,OAAO,GAAqD,IAAI,CAACiV,UAAU,CAACzoB,GAAG,CAACiM,KAAK,CAAC;IAC5F,IAAI,CAACuH,OAAO,EAAE;MACV,MAAM,IAAI/nB,MAAA,CAAAY,SAAS,CAAC,qBAAqB4f,KAAK,mBAAmB,EAAE,IAAI,CAAC;IAC5E;IAEA,OAAOuH,OAAO;EAClB;EAEA;;;;;EAKOkX,eAAeA,CAACb,WAAmB;IACtC,MAAMrW,OAAO,GAA4C,IAAI,CAAC6W,OAAO,CAACrqB,GAAG,CAAC6pB,WAAW,CAAC;IACtF,IAAI,CAACrW,OAAO,EAAE;MACV,MAAM,IAAI/nB,MAAA,CAAAY,SAAS,CAAC,4BAA4Bw9B,WAAW,mBAAmB,EAAE,IAAI,CAAC;IACzF;IAEA,OAAOrW,OAAO;EAClB;EAEA;;;;;;;EAOgBpY,KAAKA,CAACiR,cAA+D;IACjF,OAAO,KAAK,CAACjR,KAAK,CAACiR,cAAc,CAAC;EACtC;EAEA;;;EAGmBC,cAAcA,CAAA;IAC7B;IACA,MAAMqe,WAAW,GAAiC,IAAIt9B,KAAK,EAAyB;IACpF,MAAMu9B,kBAAkB,GAAgB,IAAIv9B,KAAK,EAAQ;IACzD,KAAK,MAAMyc,OAAO,IAAI,IAAI,CAACugB,OAAO,CAACze,MAAM,EAAE,EAAE;MACzC;MACA,MAAMif,iBAAiB,GAA8B,IAAIx9B,KAAK,EAAsB;MACpF,IAAIy9B,kBAAkB,GAAW,CAAC;MAClC,KAAK,MAAM/C,UAAU,IAAIje,OAAO,CAACxO,SAAS,EAAE;QACxC;QACA,IAAIsvB,kBAAkB,CAAC7C,UAAU,CAAC0B,QAAQ,CAAC,EAAE;UACzC,MAAM,IAAIh+B,MAAA,CAAAY,SAAS,CAAC,8BAA8B07B,UAAU,CAAC0B,QAAQ,2BAA2B,EAAE,IAAI,CAAC;QAC3G;QAEA;QACA,MAAMsB,eAAe,GAAGhD,UAAU,CAAC2B,UAAU,CAACsB,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAS,CAACC,eAAuB,EAAEC,aAAqB,KAAI;UACtH,MAAMC,cAAc,GAAWjG,QAAQ,CAACgG,aAAa,CAAC;UACtD,IAAInG,KAAK,CAACoG,cAAc,CAAC,EAAE;YACvB,OAAOF,eAAe;UAC1B;UAEA,OAAOA,eAAe,GAAGE,cAAc;QAC3C,CAAC,EAAE,CAAC,CAAC;QAEL;QACA,IAAIC,OAAO,GAAoB,GAAGvhB,OAAO,CAACwD,MAAM,IAAIyd,eAAe,EAAqB;QACxF,IAAIhD,UAAU,CAAC2B,UAAU,KAAKnwB,kCAAA,CAAA0C,yBAAyB,CAAC8F,MAAM,EAAE;UAC5DspB,OAAO,GAAGvhB,OAAO,CAACwD,MAAyB;QAC/C;QAEA;QACAud,iBAAiB,CAACp9B,IAAI,CAAC;UACnB6f,MAAM,EAAE+d,OAAO;UACf7U,MAAM,EAAEsU,kBAAkB,GAAG/C,UAAU,CAACvR,MAAM;UAC9C8U,cAAc,EAAEvD,UAAU,CAAC0B;SAC9B,CAAC;QAEF;QACAqB,kBAAkB,IAAI,CAAC,GAAGC,eAAe,GAAGhD,UAAU,CAACvR,MAAM,CAAC,CAAC;QAE/D;QACAoU,kBAAkB,CAAC7C,UAAU,CAAC0B,QAAQ,CAAC,GAAG,IAAI;MAClD;MAEA;MACA,IAAI8B,SAAS,GAAsB,QAAQ;MAC3C,IAAIzhB,OAAO,CAACkgB,QAAQ,KAAKjwB,iCAAA,CAAA+B,uBAAuB,CAAC0vB,QAAQ,EAAE;QACvDD,SAAS,GAAG,UAAU;MAC1B;MAEAZ,WAAW,CAACl9B,IAAI,CAAC;QACbu8B,QAAQ,EAAEuB,SAAS;QACnBE,WAAW,EAAE3hB,OAAO,CAAC/M,MAAM,CAACyM,YAAY;QACxCkiB,UAAU,EAAEb;OACf,CAAC;IACN;IAEA;IACA,IAAID,kBAAkB,CAAC38B,MAAM,KAAK,IAAI,CAACw6B,UAAU,CAACzV,IAAI,EAAE;MACpD,MAAM,IAAIvnB,MAAA,CAAAY,SAAS,CAAC,4DAA4D,EAAE,IAAI,CAAC;IAC3F;IAEA,OAAOs+B,WAAW;EACtB;EAEA;;;;;EAKmBrc,OAAOA,CAACC,WAA2C;IAClE,IAAIod,aAAa,GAAY,IAAI;IAEjC;IACA,KAAK,MAAMC,gBAAgB,IAAIrd,WAAW,CAAC5S,MAAM,EAAE;MAC/C;MACA,MAAMkwB,cAAc,GAAgD,IAAIx+B,KAAK,EAAwC;MACrH,MAAMy+B,oBAAoB,GAAsD,IAAIz+B,KAAK,EAA8C;MACvI,KAAK,MAAM0+B,mBAAmB,IAAIH,gBAAgB,CAACtwB,SAAS,EAAE;QAC1D;QACAwwB,oBAAoB,CAACr+B,IAAI,CAAC;UACtBumB,mBAAmB,EAAE+X,mBAAmB,CAACrC,UAAU;UACnDlT,MAAM,EAAEuV,mBAAmB,CAACvV;SAC/B,CAAC;QAEF;QACA,MAAMwV,gBAAgB,GAAyC;UAC3DviB,IAAI,EAAEsiB,mBAAmB,CAACtiB,IAAI;UAC9BggB,QAAQ,EAAEsC,mBAAmB,CAACtC,QAAQ;UACtCC,UAAU,EAAEqC,mBAAmB,CAACrC,UAAU;UAC1ClT,MAAM,EAAEuV,mBAAmB,CAACvV,MAAM;UAClCyV,UAAU,EAAEL,gBAAgB,CAACniB;SAChC;QAED;QACAoiB,cAAc,CAACp+B,IAAI,CAACu+B,gBAAgB,CAAC;QACrC,IAAI,CAACvD,UAAU,CAAC/pB,GAAG,CAACstB,gBAAgB,CAACviB,IAAI,EAAEuiB,gBAAgB,CAAC;MAChE;MAEA;MACA,MAAME,aAAa,GAAgC;QAC/CziB,IAAI,EAAEmiB,gBAAgB,CAACniB,IAAI;QAC3BugB,QAAQ,EAAE4B,gBAAgB,CAAC5B,QAAQ;QACnC1c,MAAM,EAAEse,gBAAgB,CAACte,MAAM;QAC/BhS,SAAS,EAAEuwB,cAAc;QACzB9uB,MAAM,EAAE,IAAIktB,6BAAA,CAAAvC,wBAAwB,CAAC,IAAI,CAAC1d,MAAM,EAAE;UAC9CsD,MAAM,EAAEse,gBAAgB,CAACte,MAAM;UAC/BhS,SAAS,EAAEwwB;SACd;OACJ;MAED,IAAI,CAACzB,OAAO,CAAC3rB,GAAG,CAACwtB,aAAa,CAACziB,IAAI,EAAEyiB,aAAa,CAAC;MAEnD;MACA,IAAIA,aAAa,CAAClC,QAAQ,KAAKjwB,iCAAA,CAAA+B,uBAAuB,CAACN,MAAM,EAAE;QAC3DmwB,aAAa,GAAG,KAAK;MACzB;IACJ;IAEA,IAAI,CAACrB,UAAU,GAAGqB,aAAa;EACnC;EAEA;;;;;;;EAOmB7c,mBAAmBA,CAACP,WAAqE;IACxG,OAAO,IAAI4b,+BAAA,CAAAP,0BAA0B,CAACrb,WAAW,CAAC;EACtD;;AA/OJjiB,6BAAA,GAAA89B,qBAAA;;;;;;;;;;;;;;;;;ACfA,MAAA3+B,MAAA,GAAAC,mBAAA;AACA,MAAAsjB,mBAAA,GAAAtjB,mBAAA;AACA,MAAAqO,iCAAA,GAAArO,mBAAA;AACA,MAAAqc,YAAA,GAAArc,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AACA,MAAAwnB,4BAAA,GAAAxnB,mBAAA;AACA,MAAA4N,8BAAA,GAAA5N,mBAAA;AACA,MAAA6N,kCAAA,GAAA7N,mBAAA;AACA,MAAAynB,gCAAA,GAAAznB,mBAAA;AAGA,MAAa++B,eAAgB,SAAQxf,YAAA,CAAAG,SAAgD;EAMjF;;;EAGA,IAAW6T,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACkN,YAAY;EAC5B;EAEA;;;EAGA,IAAWpvB,MAAMA,CAAA;IACb,OAAO,IAAI,CAACuS,OAAO;EACvB;EAEA;;;EAGA,IAAW8P,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACgN,QAAQ,CAACn+B,MAAM;EAC/B;EAEA;;;;;;EAMAlC,YAAmBigB,OAAkB,EAAEqgB,sBAA6C,EAAEC,QAAuB;IACzG,KAAK,CAACtgB,OAAO,CAAC;IAEd;IACA,IAAI,CAACsD,OAAO,GAAG+c,sBAAsB;IACrC,IAAI,CAACx+B,KAAK,GAAG,IAAIpC,MAAA,CAAA2a,UAAU,EAAiC;IAE5D;IACA,IAAI,CAACkJ,OAAO,CAAC7M,uBAAuB,CAAC,MAAK;MACtC,IAAI,CAACkM,UAAU,CAAC4d,+BAA+B,CAACC,IAAI,CAAC;IACzD,CAAC,CAAC;IAEF;IACA,MAAMC,YAAY,GAAgC,IAAItZ,gCAAA,CAAAW,2BAA2B,CAAC,IAAI,CAAC9J,MAAM,EAAE;MAC3F+J,eAAe,EAAEza,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;MAC7C4K,mBAAmB,EAAEza,kCAAA,CAAA0C,yBAAyB,CAAC8F;KAClD,CAAC;IAEF;IACA,MAAM2qB,kBAAkB,GAA4B,IAAIxZ,4BAAA,CAAAO,uBAAuB,CAAC,IAAI,CAACzJ,MAAM,EAAE;MACzF0J,SAAS,EAAE4Y,QAAQ,CAACr+B,MAAM;MAC1B0lB,SAAS,EAAE8Y;KACd,CAAC;IAEF;IACA,IAAI,CAACN,YAAY,GAAG,IAAI;IACxB,IAAI,IAAI,CAAC7c,OAAO,CAACyP,SAAS,EAAE;MACxB,IAAI,CAACoN,YAAY,GAAG,IAAIpkB,YAAA,CAAAgC,SAAS,CAAciC,OAAO,EAAE0gB,kBAAkB,EAAEpzB,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM,CAAC,CAACa,WAAW,CAAC,MAAK;QACvH,OAAO,IAAId,WAAW,CAACmjB,QAAQ,CAAC;MACpC,CAAC,CAAC,CAACvc,WAAW,CAACf,mBAAA,CAAAgB,WAAW,CAACjU,KAAK,CAAC;IACrC;IAEA;IACA,IAAI,CAACqwB,QAAQ,GAAGE,QAAQ;EAC5B;EAEA;;;;EAIOtsB,GAAGA,CAACiM,KAAa;IACpB;IACA,IAAI,CAAC,IAAI,CAACpe,KAAK,CAACue,GAAG,CAACH,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIxgB,MAAA,CAAAY,SAAS,CAAC,gCAAgC4f,KAAK,YAAY,EAAE,IAAI,CAAC;IAChF;IAEA,OAAO,IAAI,CAACpe,KAAK,CAACmS,GAAG,CAACiM,KAAK,CAAE;EACjC;EAEA;;;;;EAKOvN,GAAGA,CAACmrB,WAAmB,EAAE37B,KAAoB;IAChD,MAAM89B,gBAAgB,GAAgC,IAAI,CAAC1c,OAAO,CAACob,eAAe,CAACb,WAAW,CAAC;IAE/F;IACA,IAAIz8B,KAAK,GAAkBc,KAAK;IAChC,IAAI,CAAC,IAAI,CAACohB,OAAO,CAACyP,SAAS,IAAIiN,gBAAgB,CAAChC,QAAQ,KAAKjwB,iCAAA,CAAA+B,uBAAuB,CAACC,KAAK,EAAE;MACxF;MACA,MAAM4wB,UAAU,GAAWX,gBAAgB,CAACjvB,MAAM,CAACyM,YAAY,GAAGwiB,gBAAgB,CAACjvB,MAAM,CAAC6qB,eAAe;MAEzG;MACAx6B,KAAK,GAAG,IAAIC,KAAK,EAAU;MAC3B,KAAK,MAAMuG,MAAM,IAAI,IAAI,CAACw4B,QAAQ,EAAE;QAChC,MAAMQ,UAAU,GAAWh5B,MAAM,GAAG+4B,UAAU;QAC9C,MAAME,QAAQ,GAAWD,UAAU,GAAGD,UAAU;QAEhD;QACAv/B,KAAK,CAACK,IAAI,CAAC,GAAGS,KAAK,CAAC6pB,KAAK,CAAC6U,UAAU,EAAEC,QAAQ,CAAC,CAAC;MACpD;IACJ;IAEA;IACA,MAAMC,yBAAyB,GAAY1/B,KAAK,CAACa,MAAM,GAAG+9B,gBAAgB,CAACjvB,MAAM,CAAC6qB,eAAe,GAAKoE,gBAAgB,CAACjvB,MAAM,CAACyM,YAAa;IAE3I;IACA,MAAMujB,gBAAgB,GAA0B,CAAC,MAAK;MAClD,QAAQf,gBAAgB,CAAC1e,MAAM;QAAI;QAC/B,KAAKhU,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO;UAAE;YAChC,OAAO,IAAIkM,YAAA,CAAAgC,SAAS,CAAC,IAAI,CAACC,MAAM,EAAEgiB,gBAAgB,CAACjvB,MAAM,EAAEzD,8BAAA,CAAAsC,qBAAqB,CAACC,OAAO,EAAEixB,yBAAyB,CAAC,CAAC7iB,WAAW,CAAC,MAAK;cAClI,OAAO,IAAIjM,YAAY,CAAC5Q,KAAK,CAAC;YAClC,CAAC,CAAC;UACN;QACA,KAAKkM,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM;UAAE;YAC/B,OAAO,IAAIvB,YAAA,CAAAgC,SAAS,CAAC,IAAI,CAACC,MAAM,EAAEgiB,gBAAgB,CAACjvB,MAAM,EAAEzD,8BAAA,CAAAsC,qBAAqB,CAAC0N,MAAM,EAAEwjB,yBAAyB,CAAC,CAAC7iB,WAAW,CAAC,MAAK;cACjI,OAAO,IAAIZ,UAAU,CAACjc,KAAK,CAAC;YAChC,CAAC,CAAC;UACN;QACA,KAAKkM,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM;UAAE;YAC/B,OAAO,IAAIrB,YAAA,CAAAgC,SAAS,CAAC,IAAI,CAACC,MAAM,EAAEgiB,gBAAgB,CAACjvB,MAAM,EAAEzD,8BAAA,CAAAsC,qBAAqB,CAACwN,MAAM,EAAE0jB,yBAAyB,CAAC,CAAC7iB,WAAW,CAAC,MAAK;cACjI,OAAO,IAAId,WAAW,CAAC/b,KAAK,CAAC;YACjC,CAAC,CAAC;UACN;QACA;UAAS;YACL,MAAM,IAAI3B,MAAA,CAAAY,SAAS,CAAC,WAAW2/B,gBAAgB,CAAC1e,MAAM,oCAAoC,EAAE,IAAI,CAAC;UACrG;MACJ;IACJ,CAAC,EAAC,CAAE;IAEJ;IACAyf,gBAAgB,CAAChd,WAAW,CAACf,mBAAA,CAAAgB,WAAW,CAACxU,MAAM,CAAC;IAEhD;IACA,IAAI,CAAC3N,KAAK,CAAC6Q,GAAG,CAACmrB,WAAW,EAAEkD,gBAAgB,CAAC;IAE7C;IACA,IAAI,CAACpe,UAAU,CAAC4d,+BAA+B,CAACC,IAAI,CAAC;IAErD,OAAOO,gBAAgB;EAC3B;;AAhJJzgC,uBAAA,GAAAm+B,eAAA;AAqJA,IAAY8B,+BAGX;AAHD,WAAYA,+BAA+B;EACvCA,+BAAA,uBAAmB;EACnBA,+BAAA,2BAAuB;AAC3B,CAAC,EAHWA,+BAA+B,KAAAjgC,uCAAA,GAA/BigC,+BAA+B;;;;;;;;;;;;;;;;;ACjK3C,MAAA9gC,MAAA,GAAAC,mBAAA;AACA,MAAAshC,wBAAA,GAAAthC,mBAAA;AAEA,MAAA+oB,kBAAA,GAAA/oB,mBAAA;AACA,MAAAyjB,gBAAA,GAAAzjB,mBAAA;AAEA,MAAAuhC,8BAAA,GAAAvhC,mBAAA;AAEA,MAAawhC,kBAAmB,SAAQzY,kBAAA,CAAAE,cAAqC;EACzE;;;;;EAKA5oB,YAAmB4c,eAAgE;IAC/E,KAAK,CAACA,eAAe,CAAC;EAC1B;EAEA;;;;;;;;EAQOhI,QAAQA,CAACsL,KAAa,EAAEkhB,cAAsB,EAAEC,UAAA,GAAsB,IAAI,EAAEC,WAA6D;IAC5I;IACA,IAAI,CAACvY,iBAAiB,EAAE;IAExB;IACA,MAAMwY,OAAO,GAAsC;MAC/C7jB,IAAI,EAAEwC,KAAK;MACXJ,KAAK,EAAEshB,cAAc;MACrBI,UAAU,EAAEF,WAAW,IAAI,IAAI;MAC/BG,cAAc,EAAGJ,UAAU,GAAIJ,wBAAA,CAAAS,gBAAgB,CAACC,IAAI,GAAGV,wBAAA,CAAAS,gBAAgB,CAACE,KAAK;MAC7EpgB,OAAO,EAAE;KACZ;IAED;IACA,IAAI,CAACyH,SAAS,CAAC4Y,YAAY,CAACngC,IAAI,CAAC6/B,OAAO,CAAC;IAEzC;IACA,OAAO,IAAIL,8BAAA,CAAAY,wBAAwB,CAAC,IAAI,CAACva,eAAe,EAAGwa,QAA4C,IAAI;MACvGR,OAAO,CAAC/f,OAAO,GAAGugB,QAAQ;IAC9B,CAAC,CAAC;EACN;EAEA;;;;;;;;EAQO7sB,eAAeA,CAAC8sB,eAAA,GAAkC,IAAI,EAAEC,gBAAA,GAAkC,IAAI,EAAEC,iBAAA,GAAoC,IAAI,EAAEC,kBAAA,GAAoC,IAAI;IACrL;IACA,IAAI,CAACpZ,iBAAiB,EAAE;IAExB,IAAI,CAACE,SAAS,CAACmZ,YAAY,GAAG;MAC1B5gB,OAAO,EAAE;KACZ;IAED;IACA,IAAIwgB,eAAe,KAAK,IAAI,IAAIC,gBAAgB,KAAK,IAAI,EAAE;MACvD,IAAI,CAAChZ,SAAS,CAACmZ,YAAY,CAACC,KAAK,GAAG;QAChCb,UAAU,EAAES,gBAAgB,IAAI,IAAI;QACpCR,cAAc,EAAGO,eAAe,GAAIf,wBAAA,CAAAS,gBAAgB,CAACC,IAAI,GAAGV,wBAAA,CAAAS,gBAAgB,CAACE;OAChF;IACL;IAEA;IACA,IAAIM,iBAAiB,KAAK,IAAI,IAAIC,kBAAkB,KAAK,IAAI,EAAE;MAC3D,IAAI,CAAClZ,SAAS,CAACmZ,YAAY,CAACE,OAAO,GAAG;QAClCd,UAAU,EAAEW,kBAAkB,IAAI,IAAI;QACtCV,cAAc,EAAGS,iBAAiB,GAAIjB,wBAAA,CAAAS,gBAAgB,CAACC,IAAI,GAAGV,wBAAA,CAAAS,gBAAgB,CAACE;OAClF;IACL;IAEA;IACA,OAAO,IAAIV,8BAAA,CAAAY,wBAAwB,CAAC,IAAI,CAACva,eAAe,EAAGwa,QAA4C,IAAI;MACvG;MACA,IAAIA,QAAQ,YAAY3e,gBAAA,CAAAwB,aAAa,EAAE;QACnC,MAAM,IAAIllB,MAAA,CAAAY,SAAS,CAAC,yDAAyD,EAAE,IAAI,CAAC;MACxF;MAEA,IAAI,CAAC2oB,SAAS,CAACmZ,YAAa,CAAC5gB,OAAO,GAAGugB,QAAQ;IACnD,CAAC,CAAC;EACN;EAEA;;;;;EAKmB7Y,eAAeA,CAACC,cAAqC;IACpEA,cAAc,CAAC0Y,YAAY,GAAG,IAAIvgC,KAAK,EAAqC;EAChF;;AA1FJf,0BAAA,GAAA4gC,kBAAA;;;;;;;;;;;;;;;;;ACRA,MAAArzB,wBAAA,GAAAnO,mBAAA;AAEA,MAAAsc,wBAAA,GAAAtc,mBAAA;AACA,MAAAyc,uBAAA,GAAAzc,mBAAA;AAEA,MAAA0jB,sBAAA,GAAA1jB,mBAAA;AAGA,MAAamiC,wBAAyB,SAAQ7lB,wBAAA,CAAAQ,mBAAuE;EACjH;;;EAGOtH,GAAGA,CAAC4oB,OAAsB;IAC7B;IACA,IAAI,CAAChV,iBAAiB,EAAE;IAExB,MAAMwZ,aAAa,GAAwB,IAAInmB,uBAAA,CAAAkC,mBAAmB,CAAC,IAAI,CAACL,MAAM,EAAE;MAC5E6D,SAAS,EAAEhU,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY;MACxC3U,MAAM,EAAEwc,OAAO;MAAE;MACjBnc,YAAY,EAAE,KAAK,CAAC;KACvB,CAAC;IAEF;IACA,IAAI,CAACzD,QAAQ,CAAC,IAAIkF,sBAAA,CAAAsB,kBAAkB,CAAC,IAAI,CAAC1G,MAAM,EAAEskB,aAAa,CAAC,CAAC;EACrE;EAEA;;;;;EAKOttB,GAAGA,CAAC8sB,QAA4C;IACnD;IACA,IAAI,CAAChZ,iBAAiB,EAAE;IAExB;IACA,IAAI,CAAC5K,QAAQ,CAAC4jB,QAAQ,CAAC;EAC3B;;AA7BJxhC,gCAAA,GAAAuhC,wBAAA;;;;;;;;;;;;;;;;;ACRA,MAAApiC,MAAA,GAAAC,mBAAA;AACA,MAAA6iC,qBAAA,GAAA7iC,mBAAA;AACA,MAAAshC,wBAAA,GAAAthC,mBAAA;AACA,MAAAujB,oBAAA,GAAAvjB,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAAyjB,gBAAA,GAAAzjB,mBAAA;AACA,MAAA0jB,sBAAA,GAAA1jB,mBAAA;AAEA,MAAA8iC,sBAAA,GAAA9iC,mBAAA;AAEA;;;AAGA,MAAa22B,aAAc,SAAQpX,YAAA,CAAAG,SAAqF;EAKpH;;;EAGA,IAAWgS,aAAaA,CAAA;IACpB;IACA,IAAI,CAAC9R,WAAW,EAAE;IAElB;IACA,MAAMmjB,oBAAoB,GAA8C,IAAIphC,KAAK,EAAsC;IACvH,KAAK,MAAMqhC,gBAAgB,IAAI,IAAI,CAACC,cAAc,CAAC/iB,MAAM,EAAE,EAAE;MACzD6iB,oBAAoB,CAACC,gBAAgB,CAAC7iB,KAAK,CAAC,GAAG6iB,gBAAgB,CAACnhB,OAAO,CAACqhB,MAAM;IAClF;IAEA,OAAOH,oBAAoB;EAC/B;EAEA;;;EAGA,IAAW9Q,YAAYA,CAAA;IACnB;IACA,IAAI,CAACrS,WAAW,EAAE;IAElB;IACA,IAAI,CAAC,IAAI,CAACujB,oBAAoB,IAAI,CAAC,IAAI,CAACA,oBAAoB,CAACT,KAAK,EAAE;MAChE,OAAO,IAAI;IACf;IAEA,OAAO,IAAI,CAACS,oBAAoB,CAACD,MAAM;EAC3C;EAEA;;;EAGA,IAAW5gC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACu3B,KAAK,CAACv3B,MAAM;EAC5B;EAEA;;;EAGA,IAAWwvB,gBAAgBA,CAAA;IACvB,OAAO,IAAI,CAAC+H,KAAK,CAACuJ,gBAAgB;EACtC;EAEA;;;EAGA,IAAoB/iB,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;EAGA,IAAWgjB,cAAcA,CAAA;IACrB;IACA,IAAI,CAACzjB,WAAW,EAAE;IAElB,OAAO,IAAI,CAACujB,oBAAoB,EAAER,OAAO,GAAG,IAAI,CAACQ,oBAAoB,CAACD,MAAM,GAAG,IAAI;EACvF;EAEA;;;EAGA,IAAW7gC,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACw3B,KAAK,CAACx3B,KAAK;EAC3B;EAEA;;;;EAIAhC,YAAmBigB,OAAkB;IACjC,KAAK,CAACA,OAAO,CAAC;IAEd;IACA,IAAI,CAACuZ,KAAK,GAAG;MAAEx3B,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAE8gC,gBAAgB,EAAE;IAAC,CAAE;IAEzD;IACA,IAAI,CAACD,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACF,cAAc,GAAG,IAAIljC,MAAA,CAAA2a,UAAU,EAAoC;EAC5E;EAEA;;;;;;;;;EASOxE,MAAMA,CAAC1U,OAAe,EAAEC,MAAc,EAAE6hC,iBAAA,GAAmC,IAAI;IAClF;IACA,IAAI,CAACzJ,KAAK,CAACx3B,KAAK,GAAGZ,MAAM;IACzB,IAAI,CAACo4B,KAAK,CAACv3B,MAAM,GAAGd,OAAO;IAE3B;IACA,IAAI8hC,iBAAiB,KAAK,IAAI,EAAE;MAC5B,IAAIA,iBAAiB,KAAK,CAAC,IAAIA,iBAAiB,GAAG,CAAC,KAAK,CAAC,EAAE;QACxD,MAAM,IAAIvjC,MAAA,CAAAY,SAAS,CAAC,6CAA6C,EAAE,IAAI,CAAC;MAC5E;MAEA,IAAI,CAACk5B,KAAK,CAACuJ,gBAAgB,GAAGE,iBAAiB;IACnD;IAEA;IACA,IAAI,CAACC,WAAW,EAAE;IAElB;IAEA,OAAO,IAAI;EACf;EAEA;;;;;;;;EAQgB7zB,KAAKA,CAACiR,cAAmE;IACrF,OAAO,KAAK,CAACjR,KAAK,CAACiR,cAAc,CAAC;EACtC;EAEA;;;EAGmBC,cAAcA,CAAA;IAC7B;IACA,IAAI,CAACqC,UAAU,CAACjM,6BAA6B,CAACia,iBAAiB,CAAC;IAEhE;IACA,MAAM8R,oBAAoB,GAAoC,IAAIphC,KAAK,EAA4B;IACnG,KAAK,MAAMqhC,gBAAgB,IAAI,IAAI,CAACC,cAAc,CAAC/iB,MAAM,EAAE,EAAE;MACzD6iB,oBAAoB,CAACC,gBAAgB,CAAC7iB,KAAK,CAAC,GAAG6iB,gBAAgB;IACnE;IAEA;IACA,MAAMQ,iBAAiB,GAAwC,IAAI7hC,KAAK,EAAgC;IACxG,KAAK,MAAMqhC,gBAAgB,IAAID,oBAAoB,EAAE;MACjD;MACA,MAAMU,eAAe,GAAeT,gBAAgB,CAAClB,cAAc,KAAKR,wBAAA,CAAAS,gBAAgB,CAACC,IAAI,GAAG,OAAO,GAAG,SAAS;MAEnH;MACA,MAAM0B,oBAAoB,GAAiC;QACvDC,IAAI,EAAEX,gBAAgB,CAACnhB,OAAQ,CAACqhB,MAAM,CAAC7iB,MAAM;QAC7CujB,OAAO,EAAEH,eAAe;QACxBI,MAAM,EAAE,OAAO,CAAC;OACnB;MAED;MACA,IAAIb,gBAAgB,CAACnB,UAAU,KAAK,IAAI,EAAE;QACtC6B,oBAAoB,CAAC7B,UAAU,GAAGmB,gBAAgB,CAACnB,UAAU;QAC7D6B,oBAAoB,CAACG,MAAM,GAAG,OAAO;MACzC,CAAC,MAAM;QACHH,oBAAoB,CAACG,MAAM,GAAG,MAAM;MACxC;MAEA;MACA,IAAIb,gBAAgB,CAACnhB,OAAQ,CAACiiB,OAAO,EAAE;QACnCJ,oBAAoB,CAACK,aAAa,GAAGf,gBAAgB,CAACnhB,OAAQ,CAACiiB,OAAO,CAACzjB,MAAM;MACjF;MAEAmjB,iBAAiB,CAACzhC,IAAI,CAAC2hC,oBAA2D,CAAC;IACvF;IAEA;IACA,MAAMM,WAAW,GAA4B;MACzCC,gBAAgB,EAAET;KACrB;IAED;IACA,IAAI,IAAI,CAACL,oBAAoB,EAAE;MAC3B,MAAMe,oBAAoB,GAAuB,IAAI,CAACf,oBAAoB,CAACD,MAAM;MAEjF;MACAc,WAAW,CAACG,sBAAsB,GAAG;QACjCR,IAAI,EAAEO,oBAAoB,CAAC7jB;OAC9B;MAED;MACA,IAAI,IAAI,CAAC8iB,oBAAoB,CAACT,KAAK,EAAE;QACjC;QACA,IAAI,IAAI,CAACS,oBAAoB,CAACT,KAAK,CAACb,UAAU,KAAK,IAAI,EAAE;UACrDmC,WAAW,CAACG,sBAAsB,CAACC,eAAe,GAAG,IAAI,CAACjB,oBAAoB,CAACT,KAAK,CAACb,UAAU;UAC/FmC,WAAW,CAACG,sBAAsB,CAACE,WAAW,GAAG,OAAO;QAC5D,CAAC,MAAM;UACHL,WAAW,CAACG,sBAAsB,CAACE,WAAW,GAAG,MAAM;QAC3D;QAEA;QACAL,WAAW,CAACG,sBAAsB,CAACG,YAAY,GAAG,IAAI,CAACnB,oBAAoB,CAACT,KAAK,CAACZ,cAAc,KAAKR,wBAAA,CAAAS,gBAAgB,CAACC,IAAI,GAAG,OAAO,GAAG,SAAS;MACpJ;MAEA;MACA,IAAI,IAAI,CAACmB,oBAAoB,CAACR,OAAO,EAAE;QACnC;QACA,IAAI,IAAI,CAACQ,oBAAoB,CAACR,OAAO,CAACd,UAAU,KAAK,IAAI,EAAE;UACvDmC,WAAW,CAACG,sBAAsB,CAACI,iBAAiB,GAAG,IAAI,CAACpB,oBAAoB,CAACR,OAAO,CAACd,UAAU;UACnGmC,WAAW,CAACG,sBAAsB,CAACK,aAAa,GAAG,OAAO;QAC9D,CAAC,MAAM;UACHR,WAAW,CAACG,sBAAsB,CAACK,aAAa,GAAG,MAAM;QAC7D;QAEA;QACAR,WAAW,CAACG,sBAAsB,CAACM,cAAc,GAAG,IAAI,CAACtB,oBAAoB,CAACR,OAAO,CAACb,cAAc,KAAKR,wBAAA,CAAAS,gBAAgB,CAACC,IAAI,GAAG,OAAO,GAAG,SAAS;MACxJ;IACJ;IAEA,OAAOgC,WAAW;EACtB;EAEA;;;;;EAKmBphB,OAAOA,CAAC8hB,cAAqC;IAC5D;IACA,IAAIA,cAAc,CAACjC,YAAY,EAAE;MAC7B;MACA,IAAI,CAACiC,cAAc,CAACjC,YAAY,CAAC5gB,OAAO,EAAE;QACtC,MAAM,IAAI9hB,MAAA,CAAAY,SAAS,CAAC,gEAAgE,EAAE,IAAI,CAAC;MAC/F;MAEA;MACA,IAAI,CAACwiC,oBAAoB,GAAG;QACxBD,MAAM,EAAEwB,cAAc,CAACjC,YAAY,CAAC5gB;OACvC;MAED;MACA6iB,cAAc,CAACjC,YAAY,CAAC5gB,OAAO,CAACwC,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACigB,gBAAgB,CAAC;MAE9E;MACA,IAAI,CAACC,8BAA8B,CAACF,cAAc,CAACjC,YAAY,CAAC5gB,OAAO,CAAC;MAExE;MACA,MAAMgjB,iBAAiB,GAA4B,IAAI,CAACvmB,MAAM,CAACoD,eAAe,CAACC,YAAY,CAAC+iB,cAAc,CAACjC,YAAY,CAAC5gB,OAAO,CAACxQ,MAAM,CAACuQ,MAAM,CAAC;MAE9I;MACA,IAAI8iB,cAAc,CAACjC,YAAY,CAACC,KAAK,EAAE;QACnC;QACA,IAAI,CAACmC,iBAAiB,CAACC,OAAO,CAACpkB,GAAG,CAACmiB,qBAAA,CAAAkC,aAAa,CAACC,KAAK,CAAC,EAAE;UACrD,MAAM,IAAIjlC,MAAA,CAAAY,SAAS,CAAC,0EAA0E,EAAE,IAAI,CAAC;QACzG;QAEA,IAAI,CAACwiC,oBAAoB,CAACT,KAAK,GAAG;UAC9Bb,UAAU,EAAE6C,cAAc,CAACjC,YAAY,CAACC,KAAK,CAACb,UAAU;UACxDC,cAAc,EAAE4C,cAAc,CAACjC,YAAY,CAACC,KAAK,CAACZ;SACrD;MACL;MAEA;MACA,IAAI4C,cAAc,CAACjC,YAAY,CAACE,OAAO,EAAE;QACrC;QACA,IAAI,CAACkC,iBAAiB,CAACC,OAAO,CAACpkB,GAAG,CAACmiB,qBAAA,CAAAkC,aAAa,CAACE,OAAO,CAAC,EAAE;UACvD,MAAM,IAAIllC,MAAA,CAAAY,SAAS,CAAC,4EAA4E,EAAE,IAAI,CAAC;QAC3G;QAEA,IAAI,CAACwiC,oBAAoB,CAACR,OAAO,GAAG;UAChCd,UAAU,EAAE6C,cAAc,CAACjC,YAAY,CAACE,OAAO,CAACd,UAAU;UAC1DC,cAAc,EAAE4C,cAAc,CAACjC,YAAY,CAACE,OAAO,CAACb;SACvD;MACL;IACJ;IAEA;IACA,MAAMoD,oBAAoB,GAAmB,IAAIvjC,KAAK,EAAW;IACjE,KAAK,MAAMwjC,WAAW,IAAIT,cAAc,CAACxC,YAAY,CAAChiB,MAAM,EAAE,EAAE;MAC5D;MACA,IAAI,CAACilB,WAAW,CAACtjB,OAAO,EAAE;QACtB,MAAM,IAAI9hB,MAAA,CAAAY,SAAS,CAAC,qBAAqBwkC,WAAW,CAACpnB,IAAI,wCAAwC,EAAE,IAAI,CAAC;MAC5G;MAEA;MACA,IAAI,IAAI,CAACklB,cAAc,CAACviB,GAAG,CAACykB,WAAW,CAACpnB,IAAI,CAAC,EAAE;QAC3C,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,0BAA0BwkC,WAAW,CAACpnB,IAAI,6BAA6B,EAAE,IAAI,CAAC;MACtG;MAEA;MACA,IAAImnB,oBAAoB,CAACC,WAAW,CAAChlB,KAAK,CAAC,KAAK,IAAI,EAAE;QAClD,MAAM,IAAIpgB,MAAA,CAAAY,SAAS,CAAC,oCAAoCwkC,WAAW,CAAChlB,KAAK,6BAA6B,EAAE,IAAI,CAAC;MACjH;MAEA;MACA,IAAI,CAACykB,8BAA8B,CAACO,WAAW,CAACtjB,OAAO,CAAC;MAExD;MACAsjB,WAAW,CAACtjB,OAAO,CAACwC,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACigB,gBAAgB,CAAC;MAE9D;MACAO,oBAAoB,CAACC,WAAW,CAAChlB,KAAK,CAAC,GAAG,IAAI;MAE9C;MACA,IAAI,CAAC8iB,cAAc,CAACjwB,GAAG,CAACmyB,WAAW,CAACpnB,IAAI,EAAE;QACtCA,IAAI,EAAEonB,WAAW,CAACpnB,IAAI;QACtBoC,KAAK,EAAEglB,WAAW,CAAChlB,KAAK;QACxB0hB,UAAU,EAAEsD,WAAW,CAACtD,UAAU;QAClCC,cAAc,EAAEqD,WAAW,CAACrD,cAAc;QAC1CjgB,OAAO,EAAE;UACLqhB,MAAM,EAAEiC,WAAW,CAACtjB;;OAE3B,CAAC;IACN;IAEA;IACA,IAAIqjB,oBAAoB,CAAC3iC,MAAM,KAAK,IAAI,CAAC0gC,cAAc,CAAC3b,IAAI,EAAE;MAC1D,MAAM,IAAIvnB,MAAA,CAAAY,SAAS,CAAC,8CAA8C,EAAE,IAAI,CAAC;IAC7E;EACJ;EAEA;;;;;;;EAOmByiB,mBAAmBA,CAACP,WAA4D;IAC/F,OAAO,IAAIigB,sBAAA,CAAAtB,kBAAkB,CAAC3e,WAAW,CAAC;EAC9C;EAEA;;;;;;;;EAQmB6V,YAAYA,CAAC0M,OAAgC,EAAEpN,QAAqE;IACnI;IACA,IAAIA,QAAQ,CAACtX,GAAG,CAAC1J,6BAA6B,CAACia,iBAAiB,CAAC,EAAE;MAC/D,OAAO,KAAK;IAChB;IAEA;IAEA;IACA,IAAImU,OAAO,CAACjB,sBAAsB,EAAE;MAChCiB,OAAO,CAACjB,sBAAsB,CAACR,IAAI,GAAG,IAAI,CAACR,oBAAqB,CAACD,MAAM,CAAC7iB,MAAM;IAClF;IAEA;IACA,MAAM0iB,oBAAoB,GAAoC,IAAIphC,KAAK,EAA4B;IACnG,KAAK,MAAMqhC,gBAAgB,IAAI,IAAI,CAACC,cAAc,CAAC/iB,MAAM,EAAE,EAAE;MACzD6iB,oBAAoB,CAACC,gBAAgB,CAAC7iB,KAAK,CAAC,GAAG6iB,gBAAgB;IACnE;IAEA;IACA,KAAK,IAAIqC,qBAAqB,GAAW,CAAC,EAAEA,qBAAqB,GAAGtC,oBAAoB,CAACxgC,MAAM,EAAE8iC,qBAAqB,EAAE,EAAE;MACtH;MACA,MAAMC,kBAAkB,GAAqFF,OAAO,CAACnB,gBAAiB,CAACoB,qBAAqB,CAAC;MAC7J,IAAIC,kBAAkB,KAAK,IAAI,EAAE;QAC7B;MACJ;MAEA;MACA,MAAMtC,gBAAgB,GAAGD,oBAAoB,CAACsC,qBAAqB,CAAC;MAEpE;MACAC,kBAAkB,CAAC3B,IAAI,GAAGX,gBAAgB,CAACnhB,OAAO,CAACqhB,MAAM,CAAC7iB,MAAM;MAEhE;MACA,IAAIilB,kBAAkB,CAACvB,aAAa,IAAIf,gBAAgB,CAACnhB,OAAO,CAACiiB,OAAO,EAAE;QACtEwB,kBAAkB,CAACvB,aAAa,GAAGf,gBAAgB,CAACnhB,OAAO,CAACiiB,OAAO,CAACzjB,MAAM;MAC9E;IACJ;IAEA,OAAO,IAAI;EACf;EAEA;;;EAGQkjB,WAAWA,CAAA;IACf;IACA,KAAK,MAAM4B,WAAW,IAAI,IAAI,CAAClC,cAAc,CAAC/iB,MAAM,EAAE,EAAE;MACpD;MACA,IAAI,IAAI,CAAC2Z,KAAK,CAACuJ,gBAAgB,KAAK,CAAC,EAAE;QACnC;QACA,IAAI+B,WAAW,CAACtjB,OAAO,CAACiiB,OAAO,EAAE;UAC7B;UACAqB,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,CAAClM,WAAW,EAAE;UAExC;UACAmO,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,GAAGiC,WAAW,CAACtjB,OAAO,CAACiiB,OAAO;UAExD;UACA,IAAI,CAAC7gB,UAAU,CAACjM,6BAA6B,CAACia,iBAAiB,CAAC;QACpE;MACJ,CAAC,MAAM;QACH;QACA,IAAIkU,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,YAAYzf,gBAAA,CAAAwB,aAAa,EAAE;UACrD;UACAkgB,WAAW,CAACtjB,OAAO,CAACiiB,OAAO,GAAGqB,WAAW,CAACtjB,OAAO,CAACqhB,MAAM;UAExD;UACAiC,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,GAAG,IAAIxf,sBAAA,CAAAsB,kBAAkB,CAAC,IAAI,CAAC1G,MAAM,EAAE6mB,WAAW,CAACtjB,OAAO,CAACiiB,OAAO,CAACzyB,MAAM,CAAC;UACpG8zB,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,CAAC7e,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACigB,gBAAgB,CAAC;UAErE;UACA,IAAI,CAAC1hB,UAAU,CAACjM,6BAA6B,CAACia,iBAAiB,CAAC;QACpE;MACJ;MAEA;MACA,IAAIkU,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,YAAYxf,sBAAA,CAAAsB,kBAAkB,EAAE;QAC1DmgB,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,CAACpR,gBAAgB,GAAG,IAAI,CAAC+H,KAAK,CAACuJ,gBAAgB;MAC7E;IACJ;IAEA;IACA,IAAI,IAAI,CAACD,oBAAoB,EAAE;MAC3B,IAAI,CAACA,oBAAoB,CAACD,MAAM,CAACpR,gBAAgB,GAAG,IAAI,CAAC+H,KAAK,CAACuJ,gBAAgB;IACnF;IAEA;IACA,KAAK,MAAM+B,WAAW,IAAI,IAAI,CAAClC,cAAc,CAAC/iB,MAAM,EAAE,EAAE;MACpDilB,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,CAAC5gC,MAAM,GAAG,IAAI,CAACu3B,KAAK,CAACv3B,MAAM;MACrD6iC,WAAW,CAACtjB,OAAO,CAACqhB,MAAM,CAAC7gC,KAAK,GAAG,IAAI,CAACw3B,KAAK,CAACx3B,KAAK;MAEnD,IAAI8iC,WAAW,CAACtjB,OAAO,CAACiiB,OAAO,EAAE;QAC7BqB,WAAW,CAACtjB,OAAO,CAACiiB,OAAO,CAACxhC,MAAM,GAAG,IAAI,CAACu3B,KAAK,CAACv3B,MAAM;QACtD6iC,WAAW,CAACtjB,OAAO,CAACiiB,OAAO,CAACzhC,KAAK,GAAG,IAAI,CAACw3B,KAAK,CAACx3B,KAAK;MACxD;IACJ;IAEA;IACA,IAAI,IAAI,CAAC8gC,oBAAoB,EAAE;MAC3B,IAAI,CAACA,oBAAoB,CAACD,MAAM,CAAC5gC,MAAM,GAAG,IAAI,CAACu3B,KAAK,CAACv3B,MAAM;MAC3D,IAAI,CAAC6gC,oBAAoB,CAACD,MAAM,CAAC7gC,KAAK,GAAG,IAAI,CAACw3B,KAAK,CAACx3B,KAAK;IAC7D;EACJ;EAEA;;;;;EAKQuiC,8BAA8BA,CAACxC,QAA4C;IAC/E;IACA,IAAIA,QAAQ,YAAY1e,sBAAA,CAAAsB,kBAAkB,EAAE;MACxC;MACAod,QAAQ,CAACrrB,uBAAuB,CAAC,MAAK;QAClC,IAAI,CAACkM,UAAU,CAACjM,6BAA6B,CAACuuB,WAAW,CAAC;MAC9D,CAAC,EAAE,CAAC7hB,sBAAA,CAAA8hB,kCAAkC,CAACD,WAAW,CAAC,CAAC;MAEpD;MACAnD,QAAQ,CAACrrB,uBAAuB,CAAEhN,KAAyC,IAAI;QAC3E,QAAQA,KAAK;UACT,KAAK2Z,sBAAA,CAAA8hB,kCAAkC,CAACvuB,MAAM;YAAE;cAC5C,IAAI,CAACgM,UAAU,CAACjM,6BAA6B,CAACC,MAAM,CAAC;cACrD;YACJ;UACA,KAAKyM,sBAAA,CAAA8hB,kCAAkC,CAACtU,iBAAiB;YAAE;cACvD,IAAI,CAACjO,UAAU,CAACjM,6BAA6B,CAACka,iBAAiB,CAAC;cAChE;YACJ;UACA,KAAKxN,sBAAA,CAAA8hB,kCAAkC,CAACC,YAAY;YAAE;cAClD,IAAI,CAACxiB,UAAU,CAACjM,6BAA6B,CAACga,mBAAmB,CAAC;cAClE;YACJ;QACJ;MAEJ,CAAC,EAAE,CACCtN,sBAAA,CAAA8hB,kCAAkC,CAACvuB,MAAM,EACzCyM,sBAAA,CAAA8hB,kCAAkC,CAACtU,iBAAiB,EACpDxN,sBAAA,CAAA8hB,kCAAkC,CAACC,YAAY,CAClD,CAAC;MAEF;IACJ;IAEA;IACA,IAAIrD,QAAQ,YAAY3e,gBAAA,CAAAwB,aAAa,EAAE;MACnC;MACAmd,QAAQ,CAACrrB,uBAAuB,CAAC,MAAK;QAClC,IAAI,CAACkM,UAAU,CAACjM,6BAA6B,CAACuuB,WAAW,CAAC;MAC9D,CAAC,EAAE,CAAC9hB,gBAAA,CAAAiiB,6BAA6B,CAACH,WAAW,CAAC,CAAC;MAE/C;MACAnD,QAAQ,CAACrrB,uBAAuB,CAAEhN,KAAoC,IAAI;QACtE,QAAQA,KAAK;UACT,KAAK0Z,gBAAA,CAAAiiB,6BAA6B,CAACzuB,MAAM;YAAE;cACvC,IAAI,CAACgM,UAAU,CAACjM,6BAA6B,CAACC,MAAM,CAAC;cACrD;YACJ;UACA,KAAKwM,gBAAA,CAAAiiB,6BAA6B,CAACD,YAAY;YAAE;cAC7C,IAAI,CAACxiB,UAAU,CAACjM,6BAA6B,CAACga,mBAAmB,CAAC;cAClE;YACJ;QACJ;MAEJ,CAAC,EAAE,CACCvN,gBAAA,CAAAiiB,6BAA6B,CAACzuB,MAAM,EACpCwM,gBAAA,CAAAiiB,6BAA6B,CAACD,YAAY,CAC7C,CAAC;MAEF;IACJ;EACJ;;AA7fJ7kC,qBAAA,GAAA+1B,aAAA;AA+hBA,IAAY3f,6BAMX;AAND,WAAYA,6BAA6B;EACrCA,6BAAA,qBAAiB;EACjBA,6BAAA,2CAAuC;EACvCA,6BAAA,wCAAoC;EACpCA,6BAAA,+BAA2B;EAC3BA,6BAAA,2CAAuC;AAC3C,CAAC,EANWA,6BAA6B,KAAApW,qCAAA,GAA7BoW,6BAA6B;;;;;;;;;;;;;;;;;AChjBzC,MAAAjX,MAAA,GAAAC,mBAAA;AACA,MAAA2lC,uBAAA,GAAA3lC,mBAAA;AACA,MAAA+N,oBAAA,GAAA/N,mBAAA;AACA,MAAAgO,yBAAA,GAAAhO,mBAAA;AACA,MAAA4lC,2BAAA,GAAA5lC,mBAAA;AACA,MAAA6lC,yBAAA,GAAA7lC,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAGA,MAAA8N,gBAAA,GAAA9N,mBAAA;AAEA,MAAa8lC,sBAAuB,SAAQvmB,YAAA,CAAAG,SAAoE;EAW5G;;;EAGA,IAAWqmB,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACC,aAAa;EAC7B;EAAE,IAAID,YAAYA,CAAC/kC,MAAuB;IACtC,IAAI,CAACglC,aAAa,GAAGhlC,MAAM;IAE3B;IACA,IAAI,CAACiiB,UAAU,CAACgjB,sCAAsC,CAACC,MAAM,CAAC;EAClE;EAEA;;;EAGA,IAAWjX,MAAMA,CAAA;IACb,OAAO,IAAI,CAAC4N,aAAa;EAC7B;EAEA;;;EAGA,IAAoBxc,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;EAGA,IAAWnN,iBAAiBA,CAAA;IACxB,OAAO,IAAI,CAACizB,kBAAkB;EAClC;EAAE,IAAIjzB,iBAAiBA,CAAClS,MAAyB;IAC7C,IAAI,CAACmlC,kBAAkB,GAAGnlC,MAAM;IAEhC;IACA,IAAI,CAACiiB,UAAU,CAACgjB,sCAAsC,CAACC,MAAM,CAAC;EAClE;EAEA;;;EAGA,IAAWE,kBAAkBA,CAAA;IACzB,OAAO,IAAI,CAACC,mBAAmB;EACnC;EAAE,IAAID,kBAAkBA,CAACplC,MAA0B;IAC/C,IAAI,CAACqlC,mBAAmB,GAAGrlC,MAAM;IAEjC;IACA,IAAI,CAACiiB,UAAU,CAACgjB,sCAAsC,CAACC,MAAM,CAAC;EAClE;EAEA;;;EAGA,IAAWI,iBAAiBA,CAAA;IACxB,OAAO,IAAI,CAACC,kBAAkB;EAClC;EAAE,IAAID,iBAAiBA,CAACtlC,MAAyB;IAC7C,IAAI,CAACulC,kBAAkB,GAAGvlC,MAAM;IAEhC;IACA,IAAI,CAACiiB,UAAU,CAACgjB,sCAAsC,CAACC,MAAM,CAAC;EAClE;EAEA;;;EAGA,IAAWnxB,aAAaA,CAAA;IACpB,OAAO,IAAI,CAAC2b,cAAc;EAC9B;EAEA;;;EAGA,IAAWG,UAAUA,CAAA;IACjB,OAAO,IAAI,CAAC2V,kBAAkB;EAClC;EAAE,IAAI3V,UAAUA,CAAC7vB,MAAe;IAC5B,IAAI,CAACwlC,kBAAkB,GAAGxlC,MAAM;IAEhC;IACA,IAAI,CAACiiB,UAAU,CAACgjB,sCAAsC,CAACC,MAAM,CAAC;EAClE;EAEA;;;;;;;EAOA7lC,YAAmBigB,OAAkB,EAAEmmB,mBAAuC,EAAEx3B,cAA6B;IACzG,KAAK,CAACqR,OAAO,CAAC;IAEd;IACA,IAAI,CAACuc,aAAa,GAAG4J,mBAAmB;IACxC,IAAI,CAAC/V,cAAc,GAAGzhB,cAAc,CAAC,CAAC;IAEtC;IACA,IAAI,CAAC8tB,UAAU,GAAG,IAAIh9B,MAAA,CAAA2a,UAAU,EAAwC;IAExE;IACA,IAAI,CAACmiB,aAAa,CAACrtB,MAAM,CAACuH,uBAAuB,CAAC,MAAK;MACnD,IAAI,CAACkM,UAAU,CAACgjB,sCAAsC,CAACrP,MAAM,CAAC;IAClE,CAAC,CAAC;IACF,IAAI,CAACiG,aAAa,CAAC9pB,eAAe,CAACgE,uBAAuB,CAAC,MAAK;MAC5D,IAAI,CAACkM,UAAU,CAACgjB,sCAAsC,CAACrP,MAAM,CAAC;IAClE,CAAC,CAAC;IACF,IAAI,CAACiG,aAAa,CAACrtB,MAAM,CAAC6B,MAAM,CAAC0F,uBAAuB,CAAC,MAAK;MAC1D,IAAI,CAACkM,UAAU,CAACgjB,sCAAsC,CAACrP,MAAM,CAAC;IAClE,CAAC,CAAC;IAEF;IACA,IAAI,CAAClG,cAAc,CAAC3Z,uBAAuB,CAAC,MAAK;MAC7C,IAAI,CAACkM,UAAU,CAACgjB,sCAAsC,CAACtP,aAAa,CAAC;IACzE,CAAC,EAAE,CACC7oB,gBAAA,CAAAkJ,6BAA6B,CAACga,mBAAmB,EACjDljB,gBAAA,CAAAkJ,6BAA6B,CAACC,MAAM,EACpCnJ,gBAAA,CAAAkJ,6BAA6B,CAACka,iBAAiB,CAClD,CAAC;IAEF;IACA,IAAI,CAAC8U,aAAa,GAAGL,uBAAA,CAAAe,eAAe,CAACC,IAAI;IACzC,IAAI,CAACH,kBAAkB,GAAG,IAAI,CAAC,CAAC;IAEhC;IACA,IAAI,CAACD,kBAAkB,GAAGV,yBAAA,CAAAe,iBAAiB,CAACC,YAAY;IACxD,IAAI,CAACV,kBAAkB,GAAGn4B,yBAAA,CAAAmF,iBAAiB,CAAC2zB,IAAI;IAChD,IAAI,CAACT,mBAAmB,GAAGT,2BAAA,CAAAmB,kBAAkB,CAACC,SAAS;EAC3D;EAEA;;;;;;;;EAQO3zB,YAAYA,CAAC4pB,cAAsB,EAAEj8B,MAAc;IACtD,MAAMk8B,eAAe,GAAkC,IAAI,CAACL,aAAa,CAACrtB,MAAM,CAACI,SAAS,CAACqtB,cAAc,CAAC;IAE1G;IACA,KAAK,MAAME,MAAM,IAAID,eAAe,EAAE;MAClC;MACA,IAAI,CAAC,IAAI,CAACH,UAAU,CAACrc,GAAG,CAACyc,MAAM,CAAC,EAAE;QAC9B,IAAI,CAACJ,UAAU,CAAC/pB,GAAG,CAACmqB,MAAM,EAAE,EAAE,CAAC;MACnC;MAEA;MACA,IAAI,CAACJ,UAAU,CAACzoB,GAAG,CAAC6oB,MAAM,CAAE,CAACF,cAAc,CAAC,GAAGj8B,MAAM;IACzD;IAEA;IACA,IAAI,CAACiiB,UAAU,CAACgjB,sCAAsC,CAAC7I,SAAS,CAAC;IAEjE,OAAO,IAAI;EACf;EAEA;;;EAGmBxc,cAAcA,CAAA;IAC7B;IACA,MAAMoO,eAAe,GAAsB,IAAI,CAAC6N,aAAa,CAACrtB,MAAM,CAAC6B,MAAM,CAACgP,MAAM;IAElF;IACA,MAAMgd,mBAAmB,GAAgC;MACrDhsB,MAAM,EAAE2d,eAAe;MACvBiY,MAAM,EAAE;QACJhY,MAAM,EAAE,IAAI,CAAC4N,aAAa,CAACrtB,MAAM,CAAC6Q,MAAM;QACxCkd,UAAU,EAAE,IAAI,CAACV,aAAa,CAAC9sB,gBAAgB;QAC/Cm3B,OAAO,EAAE,IAAI,CAACrK,aAAa,CAAC9pB,eAAe,CAACsN,MAAM;QAClDmd,SAAS,EAAE,IAAI,CAACT,UAAU,CAACzoB,GAAG,CAACvG,oBAAA,CAAA8B,YAAY,CAACC,MAAM,CAAC,IAAI;OAC1D;MACDq3B,SAAS,EAAE,IAAI,CAACC,iBAAiB;KACpC;IAED;IACA,IAAI,IAAI,CAACnY,MAAM,CAACve,kBAAkB,EAAE;MAChC;MACA,MAAM22B,mBAAmB,GAA+B,IAAI1lC,KAAK,EAAuB;MACxF,KAAK,MAAM2lC,aAAa,IAAI,IAAI,CAAC5W,cAAc,CAACgB,aAAa,EAAE;QAC3D2V,mBAAmB,CAACtlC,IAAI,CAAC;UACrB6f,MAAM,EAAE0lB,aAAa,CAACj2B,MAAM,CAACuQ;UAC7B;UACA;SACH,CAAC;MACN;MAEAyb,mBAAmB,CAACkK,QAAQ,GAAG;QAC3BtY,MAAM,EAAE,IAAI,CAAC4N,aAAa,CAACrtB,MAAM,CAAC6Q,MAAM;QACxCkd,UAAU,EAAE,IAAI,CAACtO,MAAM,CAACve,kBAAkB;QAC1C82B,OAAO,EAAEH,mBAAmB;QAC5B7J,SAAS,EAAE,IAAI,CAACT,UAAU,CAACzoB,GAAG,CAACvG,oBAAA,CAAA8B,YAAY,CAACyB,QAAQ,CAAC,IAAI;OAC5D;IACL;IAEA;IACA,IAAI,IAAI,CAACof,cAAc,CAACuB,YAAY,EAAE;MAClCoL,mBAAmB,CAACoF,YAAY,GAAG;QAC/BgF,iBAAiB,EAAE,IAAI,CAAC5W,UAAU;QAClCkV,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BnkB,MAAM,EAAE,IAAI,CAAC8O,cAAc,CAACuB,YAAY,CAAC5gB,MAAM,CAACuQ;OACnD;IACL;IAEA;IAEA;IACA,IAAI,IAAI,CAAC8O,cAAc,CAACoB,gBAAgB,GAAG,CAAC,EAAE;MAC1CuL,mBAAmB,CAACqK,WAAW,GAAG;QAC9BC,KAAK,EAAE,IAAI,CAACjX,cAAc,CAACoB;OAC9B;IACL;IAEA;IACA,OAAO,IAAI,CAACxT,MAAM,CAACkE,GAAG,CAAColB,oBAAoB,CAACvK,mBAAmB,CAAC,CAAC,CAAC;EACtE;EAEA;;;EAGQ+J,iBAAiBA,CAAA;IACrB;IACA,IAAIS,iBAAiB,GAA+BC,SAAS;IAE7D,QAAQ,IAAI,CAACxB,iBAAiB;MAC1B,KAAKT,yBAAA,CAAAe,iBAAiB,CAACmB,SAAS;MAChC,KAAKlC,yBAAA,CAAAe,iBAAiB,CAACoB,aAAa;QAAE;UAClCH,iBAAiB,GAAG,QAAQ;UAC5B;QACJ;IACJ;IAEA;IACA,MAAMI,eAAe,GAAsB;MACvCC,QAAQ,EAAE,IAAI,CAAC5B,iBAAiB;MAChC6B,SAAS,EAAE,IAAI,CAAC/B,kBAAkB;MAClCgC,QAAQ,EAAE,IAAI,CAACl1B,iBAAiB;MAChCm1B,cAAc,EAAE;KACnB;IAED;IACA,IAAIR,iBAAiB,EAAE;MACnBI,eAAe,CAACK,gBAAgB,GAAGT,iBAAiB;IACxD;IAEA,OAAOI,eAAe;EAC1B;;AAjQJrnC,8BAAA,GAAAklC,sBAAA;AAoQA,IAAYG,sCAKX;AALD,WAAYA,sCAAsC;EAC9CA,sCAAA,2BAAuB;EACvBA,sCAAA,yCAAqC;EACrCA,sCAAA,2BAAuB;EACvBA,sCAAA,iCAA6B;AACjC,CAAC,EALWA,sCAAsC,KAAArlC,8CAAA,GAAtCqlC,sCAAsC;;;;;;;;;;;;;;;;;AChRlD,MAAA3pB,wBAAA,GAAAtc,mBAAA;AAGA,MAAauoC,4BAA6B,SAAQjsB,wBAAA,CAAAQ,mBAAkE;EAChH;;;EAGOwK,IAAIA,CAAC1gB,EAAU,EAAEC,EAAA,GAAa,CAAC,EAAEC,EAAA,GAAa,CAAC;IAClD;IACA,IAAI,CAACsiB,iBAAiB,EAAE;IAExB;IACA,IAAI,CAAC5K,QAAQ,CAAC5X,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC7B;;AAVJlG,oCAAA,GAAA2nC,4BAAA;;;;;;;;;;;;;;;;;ACHA,MAAAjsB,wBAAA,GAAAtc,mBAAA;AAKA,MAAawoC,6BAA8B,SAAQlsB,wBAAA,CAAAQ,mBAAmE;EAClH;;;EAGOnM,eAAeA,CAAC4P,KAAa,EAAEkhB,cAAsB,EAAEgH,WAAkC,EAAEC,eAA0C;IACxI;IACA,IAAI,CAACtf,iBAAiB,EAAE;IAExB,MAAMke,aAAa,GAAkD;MACjEvpB,IAAI,EAAEwC,KAAK;MACXwd,QAAQ,EAAE0D,cAAc;MACxB7f,MAAM,EAAE6mB,WAAW;MACnBzK,UAAU,EAAE0K;KACf;IAED;IACA,IAAI,CAAClqB,QAAQ,CAAC8oB,aAAa,CAAC;IAE5B,OAAO,IAAI;EACf;;AAnBJ1mC,qCAAA,GAAA4nC,6BAAA;;;;;;;;;;;;;;;;;ACHA,MAAAzf,kBAAA,GAAA/oB,mBAAA;AACA,MAAA2oC,yBAAA,GAAA3oC,mBAAA;AAGA,MAAA4oC,kCAAA,GAAA5oC,mBAAA;AACA,MAAA6oC,mCAAA,GAAA7oC,mBAAA;AAEA,MAAa8oC,WAAY,SAAQ/f,kBAAA,CAAAE,cAAwC;EACrE;;;;;;EAMO8f,iBAAiBA,CAACxoB,KAAa;IAClC;IACA,IAAI,CAAC6I,iBAAiB,EAAE;IAExB;IACA,MAAM4f,WAAW,GAAqC;MAClDjrB,IAAI,EAAEwC,KAAK;MACX0oB,kBAAkB,EAAE;KACvB;IAED;IACA,IAAI,CAAC3f,SAAS,CAAC4f,kBAAkB,CAACnnC,IAAI,CAACinC,WAAW,CAAC;IAEnD;IACA,OAAO,IAAIJ,kCAAA,CAAAL,4BAA4B,CAAC,IAAI,CAAC3gB,eAAe,EAAE,CAAChhB,EAAU,EAAEC,EAAU,EAAEC,EAAU,KAAI;MACjGkiC,WAAW,CAACC,kBAAkB,GAAG;QAC7BnoC,CAAC,EAAE8F,EAAE;QACL3F,CAAC,EAAE4F,EAAE;QACL1F,CAAC,EAAE2F;OACN;IACL,CAAC,CAAC;EACN;EAEA;;;;;EAKO4J,kBAAkBA,CAAC6P,KAAa;IACnC;IACA,IAAI,CAAC6I,iBAAiB,EAAE;IAExB;IACA,MAAM4f,WAAW,GAAsC;MACnDjrB,IAAI,EAAEwC,KAAK;MACXxL,aAAa,EAAE,IAAIpT,KAAK;KAC3B;IAED;IACA,IAAI,CAAC2nB,SAAS,CAAC6f,mBAAmB,CAACpnC,IAAI,CAACinC,WAAW,CAAC;IAEpD;IACA,OAAO,IAAIH,mCAAA,CAAAL,6BAA6B,CAAC,IAAI,CAAC5gB,eAAe,EAAGgK,aAAyD,IAAI;MACzHoX,WAAW,CAACj0B,aAAa,CAAChT,IAAI,CAAC6vB,aAAa,CAAC;IACjD,CAAC,CAAC;EACN;EAEA;;;;;;;;EAQOhhB,KAAKA,CAACsW,MAAc,EAAEkiB,MAAuB;IAChD;IACA,IAAI,CAAC9f,SAAS,CAAC+f,aAAa,CAACtnC,IAAI,CAAC;MAC9Boe,KAAK,EAAE+G,MAAM;MACbtW,KAAK,EAAEw4B;KACV,CAAC;IAEF,OAAOA,MAAM;EACjB;EAEA;;;;;;;;EAQOx5B,SAASA,CAAC2Q,KAAa,EAAE,GAAG+oB,WAAgC;IAC/D;IACA,IAAI,CAAClgB,iBAAiB,EAAE;IAExB;IACA,IAAI,CAACE,SAAS,CAAC1Z,SAAS,CAAC7N,IAAI,CAAC;MAAEgc,IAAI,EAAEwC,KAAK;MAAE6K,KAAK,EAAEke;IAAW,CAAE,CAAC;IAElE,OAAO,IAAI;EACf;EAEA;;;;;EAKOv5B,gBAAgBA,CAACwQ,KAAa,EAAEI,cAA4D;IAC/F;IACA,IAAI,CAACyI,iBAAiB,EAAE;IAExB;IACA,MAAMmgB,sBAAsB,GAA0B,IAAIZ,yBAAA,CAAAjK,qBAAqB,CAAC,IAAI,CAACpgB,MAAM,CAAC,CACvF5O,KAAK,CAACiR,cAAc,CAAC;IAE1B;IACA,MAAMqoB,WAAW,GAAoC;MACjDjrB,IAAI,EAAEwC,KAAK;MACX3Q,SAAS,EAAE25B;KACd;IAED;IACA,IAAI,CAACjgB,SAAS,CAACkgB,iBAAiB,CAACznC,IAAI,CAACinC,WAAW,CAAC;IAElD,OAAOO,sBAAsB;EACjC;EAEA;;;;;EAKmBhgB,eAAeA,CAACC,cAAwC;IACvE;IACAA,cAAc,CAAC0f,kBAAkB,GAAG,IAAIvnC,KAAK,EAAoC;IACjF6nB,cAAc,CAAC2f,mBAAmB,GAAG,IAAIxnC,KAAK,EAAqC;IACnF6nB,cAAc,CAACggB,iBAAiB,GAAG,IAAI7nC,KAAK,EAAmC;IAE/E;IACA6nB,cAAc,CAAC5Z,SAAS,GAAG,IAAIjO,KAAK,EAGhC;IAEJ;IACA6nB,cAAc,CAAC6f,aAAa,GAAG,IAAI1nC,KAAK,EAGpC;EACR;;AAzIJf,mBAAA,GAAAkoC,WAAA;;;;;;;;;;;;;;;;;ACPA,MAAAvpB,YAAA,GAAAvf,mBAAA;AACA,MAAAypC,kBAAA,GAAAzpC,mBAAA;AAGA,MAAa0pC,mBAAoB,SAAQnqB,YAAA,CAAAG,SAAoD;EAKzF;;;EAGA,IAAW6d,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACoM,WAAW;EAC3B;EAEA;;;EAGA,IAAWt4B,MAAMA,CAAA;IACb,OAAO,IAAI,CAACu4B,OAAO,CAACv4B,MAAM;EAC9B;EAEA;;;EAGA,IAAW7B,MAAMA,CAAA;IACb,OAAO,IAAI,CAACo6B,OAAO;EACvB;EAEA;;;EAGA,IAAWC,cAAcA,CAAA;IACrB,OAAO,IAAI,CAAChQ,KAAK,CAAC,CAAC,CAAC;EACxB;EAEA;;;EAGA,IAAWiQ,cAAcA,CAAA;IACrB,OAAO,IAAI,CAACjQ,KAAK,CAAC,CAAC,CAAC;EACxB;EAEA;;;EAGA,IAAWkQ,cAAcA,CAAA;IACrB,OAAO,IAAI,CAAClQ,KAAK,CAAC,CAAC,CAAC;EACxB;EAEA;;;;;;;;EAQAx5B,YAAmBigB,OAAkB,EAAEwc,OAAe,EAAEkN,eAAuB,EAAE/nC,KAAgC;IAC7G,KAAK,CAACqe,OAAO,CAAC;IAEd,IAAI,CAACqpB,WAAW,GAAGK,eAAe;IAClC,IAAI,CAACJ,OAAO,GAAG9M,OAAO;IACtB,IAAI,CAACjD,KAAK,GAAG53B,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAElC;IACA66B,OAAO,CAAC/lB,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACgnB,mCAAmC,CAACrT,MAAM,CAAC;IAC/D,CAAC,CAAC;EACN;EAEA;;;;;EAKOzkB,MAAMA,CAAA;IACT,OAAO,IAAIs3B,kBAAA,CAAA7M,eAAe,CAAC,IAAI,CAACte,MAAM,EAAE,IAAI,CAAC;EACjD;;AA3EJ1d,2BAAA,GAAA8oC,mBAAA;AA8EA,IAAYO,mCAEX;AAFD,WAAYA,mCAAmC;EAC3CA,mCAAA,2BAAuB;AAC3B,CAAC,EAFWA,mCAAmC,KAAArpC,2CAAA,GAAnCqpC,mCAAmC;;;;;;;;;;;;;;;;;AClF/C,MAAA1qB,YAAA,GAAAvf,mBAAA;AAGA,MAAAkqC,0BAAA,GAAAlqC,mBAAA;AAGA,MAAamqC,kBAAmB,SAAQ5qB,YAAA,CAAAG,SAAmD;EAMvF;;;EAGA,IAAWhP,kBAAkBA,CAAA;IACzB,OAAO,IAAI,CAAC05B,mBAAmB;EACnC;EAEA;;;EAGA,IAAW/4B,MAAMA,CAAA;IACb,OAAO,IAAI,CAACu4B,OAAO,CAACv4B,MAAM;EAC9B;EAEA;;;EAGA,IAAW7B,MAAMA,CAAA;IACb,OAAO,IAAI,CAACo6B,OAAO;EACvB;EAEA;;;EAGA,IAAW75B,gBAAgBA,CAAA;IACvB,OAAO,IAAI,CAACs6B,iBAAiB;EACjC;EAEA;;;EAGA,IAAWt3B,eAAeA,CAAA;IACtB,OAAO,IAAI,CAACu3B,gBAAgB;EAChC;EAEA;;;;;;;;EAQAjqC,YAAmBigB,OAAkB,EAAEwc,OAAe,EAAEyN,qBAA6B,EAAEC,gBAAuC,EAAEC,uBAAgC;IAC5J,KAAK,CAACnqB,OAAO,CAAC;IAEd,IAAI,CAAC+pB,iBAAiB,GAAGE,qBAAqB;IAC9C,IAAI,CAACD,gBAAgB,GAAGE,gBAAgB;IACxC,IAAI,CAACJ,mBAAmB,GAAGK,uBAAuB,IAAI,IAAI;IAC1D,IAAI,CAACb,OAAO,GAAG9M,OAAO;IAEtB;IACAA,OAAO,CAAC/lB,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACynB,kCAAkC,CAAC9T,MAAM,CAAC;IAC9D,CAAC,CAAC;IAEF;IACA4T,gBAAgB,CAACzzB,uBAAuB,CAAC,MAAK;MAC1C,IAAI,CAACkM,UAAU,CAACynB,kCAAkC,CAAC3L,eAAe,CAAC;IACvE,CAAC,CAAC;EACN;EAEA;;;;;;;EAOO5sB,MAAMA,CAAClD,cAA6B;IACvC,OAAO,IAAIi7B,0BAAA,CAAApE,sBAAsB,CAAC,IAAI,CAACxnB,MAAM,EAAE,IAAI,EAAErP,cAAc,CAAC;EACxE;;AA7EJrO,0BAAA,GAAAupC,kBAAA;AAgFA,IAAYO,kCAGX;AAHD,WAAYA,kCAAkC;EAC1CA,kCAAA,2BAAuB;EACvBA,kCAAA,6CAAyC;AAC7C,CAAC,EAHWA,kCAAkC,KAAA9pC,0CAAA,GAAlC8pC,kCAAkC;;;;;;;;;;;;;;;;;ACxF9C,MAAA3qC,MAAA,GAAAC,mBAAA;AAGA,MAAA2qC,iBAAA,GAAA3qC,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAMA,MAAA4qC,cAAA,GAAA5qC,mBAAA;AACA,MAAA6qC,uBAAA,GAAA7qC,mBAAA;AACA,MAAA8qC,sBAAA,GAAA9qC,mBAAA;AAEA,MAAa42B,MAAO,SAAQrX,YAAA,CAAAG,SAA+D;EAMvF;;;EAGA,IAAWrO,MAAMA,CAAA;IACb;IACA,IAAI,CAACuO,WAAW,EAAE;IAElB,OAAO,IAAI,CAACmrB,eAAgB;EAChC;EAEA;;;EAGA,IAAoB1qB,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;;;;EAMAhgB,YAAmBigB,OAAkB,EAAEnB,OAAe;IAClD,KAAK,CAACmB,OAAO,CAAC;IAEd;IACA,IAAI,CAAC0qB,OAAO,GAAG7rB,OAAO;IAEtB;IACA,IAAI,CAAC4d,UAAU,GAAG,IAAIh9B,MAAA,CAAA2a,UAAU,EAA6B;IAC7D,IAAI,CAACqwB,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACE,YAAY,GAAG;MAChB3N,OAAO,EAAE,IAAIv9B,MAAA,CAAA2a,UAAU,EAAyC;MAChEusB,MAAM,EAAE,IAAIlnC,MAAA,CAAA2a,UAAU,EAAwC;MAC9D6sB,QAAQ,EAAE,IAAIxnC,MAAA,CAAA2a,UAAU;KAC3B;EACL;EAEA;;;;;;;EAOOwwB,mBAAmBA,CAACC,UAAkB;IACzC;IACA,IAAI,CAACvrB,WAAW,EAAE;IAElB,MAAMopB,WAAW,GAA8C,IAAI,CAACiC,YAAY,CAAC3N,OAAO,CAAChpB,GAAG,CAAC62B,UAAU,CAAC;IACxG,IAAI,CAACnC,WAAW,EAAE;MACd,MAAM,IAAIjpC,MAAA,CAAAY,SAAS,CAAC,wBAAwBwqC,UAAU,oBAAoB,EAAE,IAAI,CAAC;IACrF;IAEA;IACA,IAAI,CAACnC,WAAW,CAACoC,MAAM,EAAE;MACrB,OAAO,IAAIP,uBAAA,CAAAnB,mBAAmB,CAAC,IAAI,CAACprB,MAAM,EAAE,IAAI,EAAE6sB,UAAU,CAAC;IACjE;IAEA;IACA,OAAO,IAAIN,uBAAA,CAAAnB,mBAAmB,CAAC,IAAI,CAACprB,MAAM,EAAE,IAAI,EAAE6sB,UAAU,EAAE,CAACnC,WAAW,CAACC,kBAAkB,CAACnoC,CAAC,IAAI,CAAC,EAAEkoC,WAAW,CAACC,kBAAkB,CAAChoC,CAAC,IAAI,CAAC,EAAE+nC,WAAW,CAACC,kBAAkB,CAAC9nC,CAAC,IAAI,CAAC,CAAC,CAAC;EACxL;EAEA;;;;;;;;EAQO6Q,kBAAkBA,CAACq5B,gBAAwB,EAAEC,kBAA2B;IAC3E;IACA,IAAI,CAAC1rB,WAAW,EAAE;IAElB,MAAM2rB,iBAAiB,GAA6C,IAAI,CAACN,YAAY,CAAChE,MAAM,CAAC3yB,GAAG,CAAC+2B,gBAAgB,CAAC;IAClH,IAAI,CAACE,iBAAiB,EAAE;MACpB,MAAM,IAAIxrC,MAAA,CAAAY,SAAS,CAAC,uBAAuB0qC,gBAAgB,oBAAoB,EAAE,IAAI,CAAC;IAC1F;IAEA;IACA,IAAI,CAACC,kBAAkB,EAAE;MACrB,OAAO,IAAIR,sBAAA,CAAAX,kBAAkB,CAAC,IAAI,CAAC7rB,MAAM,EAAE,IAAI,EAAE+sB,gBAAgB,EAAEE,iBAAiB,CAAC37B,SAAS,CAAC;IACnG;IAEA;IACA,MAAM47B,mBAAmB,GAA+C,IAAI,CAACP,YAAY,CAAC1D,QAAQ,CAACjzB,GAAG,CAACg3B,kBAAkB,CAAC;IAC1H,IAAI,CAACE,mBAAmB,EAAE;MACtB,MAAM,IAAIzrC,MAAA,CAAAY,SAAS,CAAC,yBAAyB2qC,kBAAkB,oBAAoB,EAAE,IAAI,CAAC;IAC9F;IAEA,OAAO,IAAIR,sBAAA,CAAAX,kBAAkB,CAAC,IAAI,CAAC7rB,MAAM,EAAE,IAAI,EAAE+sB,gBAAgB,EAAEE,iBAAiB,CAAC37B,SAAS,EAAE07B,kBAAkB,CAAC;EACvH;EAEA;;;;;EAKO17B,SAASA,CAACqtB,cAAsB;IACnC;IACA,IAAI,CAACrd,WAAW,EAAE;IAElB;IACA,MAAM6rB,cAAc,GAAkC,IAAI,CAAC1O,UAAU,CAACzoB,GAAG,CAAC2oB,cAAc,CAAC;IACzF,IAAI,CAACwO,cAAc,EAAE;MACjB,MAAM,IAAI1rC,MAAA,CAAAY,SAAS,CAAC,yBAAyBs8B,cAAc,gBAAgB,EAAE,IAAI,CAAC;IACtF;IAEA,OAAO,IAAIla,GAAG,CAAC0oB,cAAc,CAAC;EAClC;EAEA;;;;;;;;EAQgB/7B,KAAKA,CAACiR,cAA4D;IAC9E,OAAO,KAAK,CAACjR,KAAK,CAACiR,cAAc,CAAC;EACtC;EAEA;;;EAGmBC,cAAcA,CAAA;IAC7B;IACA,MAAMoO,eAAe,GAAG,IAAI,CAAC+b,eAAgB,CAAC1qB,MAAM;IAEpD;IACA,MAAMqrB,iBAAiB,GAA0C,IAAI/pC,KAAK,EAAkC;IAC5G,KAAK,MAAMgqC,UAAU,IAAI,CAAC,GAAG,IAAI,CAACV,YAAY,CAAChE,MAAM,CAACnnB,IAAI,EAAE,EAAE,GAAG,IAAI,CAACmrB,YAAY,CAAC1D,QAAQ,CAACznB,IAAI,EAAE,EAAE,GAAG,IAAI,CAACmrB,YAAY,CAAC3N,OAAO,CAACxd,IAAI,EAAE,CAAC,EAAE;MACtI4rB,iBAAiB,CAAC3pC,IAAI,CAAC;QACnBw7B,UAAU,EAAEoO,UAAU;QACtBt6B,MAAM,EAAE2d;OACX,CAAC;IACN;IAEA;IACA,OAAO,IAAI,CAAC1Q,MAAM,CAACkE,GAAG,CAACopB,kBAAkB,CAAC;MACtCC,IAAI,EAAE,IAAI,CAACb,OAAO;MAClBc,gBAAgB,EAAEJ;MAClB;KACH,CAAC;EACN;EAEA;;;;;EAKmB9oB,OAAOA,CAACC,WAAqC;IAC5D;IACA,KAAK,MAAMwZ,UAAU,IAAIxZ,WAAW,CAACjT,SAAS,EAAE;MAC5C;MACA,IAAI,IAAI,CAACmtB,UAAU,CAACrc,GAAG,CAAC2b,UAAU,CAACte,IAAI,CAAC,EAAE;QACtC,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,wBAAwB07B,UAAU,CAACte,IAAI,mBAAmB,EAAE,IAAI,CAAC;MACzF;MAEA;MACA,IAAI,CAACgf,UAAU,CAAC/pB,GAAG,CAACqpB,UAAU,CAACte,IAAI,EAAE,IAAIgF,GAAG,CAAesZ,UAAU,CAACjR,KAAK,CAAC,CAAC;IACjF;IAEA;IACA,KAAK,MAAM2gB,cAAc,IAAIlpB,WAAW,CAACsmB,mBAAmB,EAAE;MAC1D;MACA,IAAI,IAAI,CAAC8B,YAAY,CAAC1D,QAAQ,CAAC7mB,GAAG,CAACqrB,cAAc,CAAChuB,IAAI,CAAC,EAAE;QACrD,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,mBAAmBorC,cAAc,CAAChuB,IAAI,6BAA6B,EAAE,IAAI,CAAC;MAClG;MAEA;MACA,MAAMiuB,sBAAsB,GAAgB,IAAIjpB,GAAG,EAAU;MAC7D,MAAMjO,cAAc,GAAoD,IAAI/U,MAAA,CAAA2a,UAAU,EAAe;MACrG,KAAK,MAAM4sB,aAAa,IAAIyE,cAAc,CAACh3B,aAAa,EAAE;QACtD;QACA,IAAID,cAAc,CAAC4L,GAAG,CAAC4mB,aAAa,CAACvpB,IAAI,CAAC,EAAE;UACxC,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,mBAAmBorC,cAAc,CAAChuB,IAAI,gDAAgDupB,aAAa,CAACvpB,IAAI,IAAI,EAAE,IAAI,CAAC;QAC3I;QAEA;QACA,IAAIiuB,sBAAsB,CAACtrB,GAAG,CAAC4mB,aAAa,CAACvJ,QAAQ,CAAC,EAAE;UACpD,MAAM,IAAIh+B,MAAA,CAAAY,SAAS,CAAC,mBAAmBorC,cAAc,CAAChuB,IAAI,0DAA0DupB,aAAa,CAACvJ,QAAQ,IAAI,EAAE,IAAI,CAAC;QACzJ;QAEA;QACAiO,sBAAsB,CAACvpC,GAAG,CAAC6kC,aAAa,CAACvJ,QAAQ,CAAC;QAElD;QACAjpB,cAAc,CAAC9B,GAAG,CAACs0B,aAAa,CAACvpB,IAAI,EAAE;UACnCA,IAAI,EAAEupB,aAAa,CAACvpB,IAAI;UACxBggB,QAAQ,EAAEuJ,aAAa,CAACvJ,QAAQ;UAChCnc,MAAM,EAAE0lB,aAAa,CAAC1lB,MAAM;UAC5Boc,UAAU,EAAEsJ,aAAa,CAACtJ;SAC7B,CAAC;MACN;MAEA;MACA,IAAI,CAACiN,YAAY,CAAC1D,QAAQ,CAACv0B,GAAG,CAAC+4B,cAAc,CAAChuB,IAAI,EAAE;QAChDhJ,aAAa,EAAED;OAClB,CAAC;IACN;IAEA;IACA,KAAK,MAAMm3B,YAAY,IAAIppB,WAAW,CAAC2mB,iBAAiB,EAAE;MACtD;MACA,IAAI,IAAI,CAACyB,YAAY,CAAChE,MAAM,CAACvmB,GAAG,CAACurB,YAAY,CAACluB,IAAI,CAAC,EAAE;QACjD,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,iBAAiBsrC,YAAY,CAACluB,IAAI,6BAA6B,EAAE,IAAI,CAAC;MAC9F;MAEA;MACA,IAAI,CAACktB,YAAY,CAAChE,MAAM,CAACj0B,GAAG,CAACi5B,YAAY,CAACluB,IAAI,EAAE;QAC5CnO,SAAS,EAAEq8B,YAAY,CAACr8B;OAC3B,CAAC;IACN;IAEA;IACA,KAAK,MAAMs8B,aAAa,IAAIrpB,WAAW,CAACqmB,kBAAkB,EAAE;MACxD;MACA,IAAI,IAAI,CAAC+B,YAAY,CAAC3N,OAAO,CAAC5c,GAAG,CAACwrB,aAAa,CAACnuB,IAAI,CAAC,EAAE;QACnD,MAAM,IAAIhe,MAAA,CAAAY,SAAS,CAAC,iBAAiBurC,aAAa,CAACnuB,IAAI,6BAA6B,EAAE,IAAI,CAAC;MAC/F;MAEA;MACA,IAAI,CAACktB,YAAY,CAAC3N,OAAO,CAACtqB,GAAG,CAACk5B,aAAa,CAACnuB,IAAI,EAAE;QAC9CqtB,MAAM,EAAEc,aAAa,CAACjD,kBAAkB,KAAK,IAAI;QACjDA,kBAAkB,EAAE;UAChBnoC,CAAC,EAAEorC,aAAa,CAACjD,kBAAkB,EAAEnoC,CAAC,IAAI,IAAI;UAC9CG,CAAC,EAAEirC,aAAa,CAACjD,kBAAkB,EAAEhoC,CAAC,IAAI,IAAI;UAC9CE,CAAC,EAAE+qC,aAAa,CAACjD,kBAAkB,EAAE9nC,CAAC,IAAI;;OAEjD,CAAC;IACN;IAEA;IACA,MAAMgrC,sBAAsB,GAAwC,IAAIpsC,MAAA,CAAA2a,UAAU,EAA2B;IAC7G,KAAK,MAAMkL,MAAM,IAAI/C,WAAW,CAACwmB,aAAa,EAAE;MAC5C;MACA8C,sBAAsB,CAACn5B,GAAG,CAAC4S,MAAM,CAACzF,KAAK,EAAEyF,MAAM,CAAChV,KAAK,CAAC;IAC1D;IACA,IAAI,CAACm6B,eAAe,GAAG,IAAIJ,iBAAA,CAAAxlB,cAAc,CAAC,IAAI,CAAC7G,MAAM,EAAE6tB,sBAAsB,CAAC;IAE9E;IACA,IAAI,CAACpB,eAAe,CAACh0B,uBAAuB,CAAC,MAAK;MAC9C,IAAI,CAACkM,UAAU,CAACmpB,sBAAsB,CAACjnB,cAAc,CAAC;IAC1D,CAAC,CAAC;EACN;EAEA;;;;;;;EAOmB/B,mBAAmBA,CAACP,WAA+D;IAClG,OAAO,IAAI+nB,cAAA,CAAA9B,WAAW,CAACjmB,WAAW,CAAC;EACvC;;AAzQJjiB,cAAA,GAAAg2B,MAAA;AAySA,IAAYwV,sBAEX;AAFD,WAAYA,sBAAsB;EAC9BA,sBAAA,2CAAuC;AAC3C,CAAC,EAFWA,sBAAsB,KAAAxrC,8BAAA,GAAtBwrC,sBAAsB;;;;;;;;;;;;;;;;;ACxTlC,MAAA7oB,oBAAA,GAAAvjB,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAIA,MAAsBykB,WAAoD,SAAQlF,YAAA,CAAAG,SAA4C;EAI1H;;;EAGA,IAAWrO,MAAMA,CAAA;IACb,OAAO,IAAI,CAACg7B,aAAa;EAC7B;EAEA;;;EAGA,IAAoBhsB,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA,IAAc+K,KAAKA,CAAA;IACf,OAAO,IAAI,CAACkhB,aAAa;EAC7B;EAEA;;;;;;EAMAjsC,YAAmBigB,OAAkB,EAAEvD,OAA4B;IAC/D,KAAK,CAACuD,OAAO,CAAC;IAEd;IACA,IAAI,CAAC+rB,aAAa,GAAGtvB,OAAO;IAC5B,IAAI,CAACuvB,aAAa,GAAG/oB,oBAAA,CAAAmB,YAAY,CAACvD,IAAI;EAC1C;EAEA;;;;;;EAMOkD,WAAWA,CAACoG,MAAoB;IACnC;IACA,IAAI,CAAC,IAAI,CAAC6hB,aAAa,GAAG7hB,MAAM,MAAM,CAAC,EAAE;MACrC,IAAI,CAAC6hB,aAAa,IAAI7hB,MAAM;MAC5B,IAAI,CAAC8hB,aAAa,EAAE;IACxB;IAEA,OAAO,IAAI;EACf;;AAlDJ3rC,mBAAA,GAAA6jB,WAAA;;;;;;;;;;;;;;;;;ACHA,MAAAhI,uBAAA,GAAAzc,mBAAA;AACA,MAAAwjB,cAAA,GAAAxjB,mBAAA;AAEA,MAAailB,aAAc,SAAQzB,cAAA,CAAAiB,WAA0C;EAIzE;;;EAGA,IAAW9P,MAAMA,CAAA;IACb,OAAO,IAAI,CAAC63B,OAAO;EACvB;EAEA;;;EAGA,IAAWlqC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACkqC,OAAO,CAAClqC,MAAM;EAC9B;EAAE,IAAIA,MAAMA,CAACtB,MAAc;IACvB,IAAI,CAACwrC,OAAO,CAAClqC,MAAM,GAAGtB,MAAM;IAE5B;IACA,IAAI,CAACiiB,UAAU,CAACyiB,6BAA6B,CAACzuB,MAAM,CAAC;EACzD;EAEA;;;EAGA,IAAW5U,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACmqC,OAAO,CAACnqC,KAAK;EAC7B;EAAE,IAAIA,KAAKA,CAACrB,MAAc;IACtB,IAAI,CAACwrC,OAAO,CAACnqC,KAAK,GAAGrB,MAAM;IAE3B;IACA,IAAI,CAACiiB,UAAU,CAACyiB,6BAA6B,CAACzuB,MAAM,CAAC;EACzD;EAEA;;;;;;EAMA5W,YAAmBigB,OAAkB,EAAEvD,OAA4B,EAAE/D,OAA0B;IAC3F,KAAK,CAACsH,OAAO,EAAEvD,OAAO,CAAC;IAEvB;IACA,IAAI,CAACyvB,OAAO,GAAGxzB,OAAO;IACtB,IAAI,CAACyzB,QAAQ,GAAG,IAAI;IAEpB;IACA,IAAI,CAACnqC,MAAM,GAAG,CAAC;IACf,IAAI,CAACD,KAAK,GAAG,CAAC;IAEd;IACA0a,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACyiB,6BAA6B,CAACD,YAAY,CAAC;IAC/D,CAAC,EAAE,CAAChpB,uBAAA,CAAAkgB,mCAAmC,CAAC+P,MAAM,CAAC,CAAC;IAEhD;IACA;IACA,IAAI,CAACpuB,MAAM,CAAC8X,sBAAsB,CAAC,MAAK;MACpC,IAAI,CAACnT,UAAU,CAACyiB,6BAA6B,CAACH,WAAW,CAAC;IAC9D,CAAC,CAAC;EACN;EAEA;;;;EAImBlY,aAAaA,CAACsf,cAA8B,EAAE3U,QAAqE;IAClI;IACA,MAAM4U,eAAe,GAAY5U,QAAQ,CAAChB,WAAW,IAAIgB,QAAQ,CAACtX,GAAG,CAACglB,6BAA6B,CAACD,YAAY,CAAC,IAAIzN,QAAQ,CAACtX,GAAG,CAACglB,6BAA6B,CAACmH,aAAa,CAAC;IAE9K;IACA,IAAID,eAAe,EAAE;MACjB;MACA,IAAI,CAACH,QAAS,CAACK,WAAW,EAAE;MAC5B,IAAI,CAACL,QAAQ,GAAG,IAAI;IACxB;IAEA;EACJ;EAEA;;;EAGmB7rB,cAAcA,CAAA;IAC7B;IACA,IAAI,CAACqC,UAAU,CAACyiB,6BAA6B,CAACH,WAAW,CAAC;IAE1D;IACA,MAAM5F,OAAO,GAAqB,IAAI,CAACtuB,MAAM,CAACuQ,MAA0B;IAExE;IACA,IAAI,CAAC,IAAI,CAAC6qB,QAAQ,EAAE;MAChB;MACA,IAAI,CAACxpB,UAAU,CAACyiB,6BAA6B,CAACqH,cAAc,CAAC;MAE7D;MACA,IAAI,CAACN,QAAQ,GAA0B,IAAI,CAAC93B,MAAM,CAAC8G,UAAU,CAAC,QAAQ,CAAC;MACvE,IAAI,CAACgxB,QAAQ,CAACO,SAAS,CAAC;QACpB1uB,MAAM,EAAE,IAAI,CAACA,MAAM,CAACkE,GAAG;QACvBZ,MAAM,EAAE+d,OAAO;QACfvU,KAAK,EAAE,IAAI,CAACA,KAAK;QACjB6hB,SAAS,EAAE;OACd,CAAC;IACN;IAEA;IACA,MAAMruB,QAAQ,GAAe,IAAI,CAAC6tB,QAAQ,CAACS,iBAAiB,EAAE;IAE9D;IACA,OAAOtuB,QAAQ,CAACuuB,UAAU,CAAC;MACvBvrB,MAAM,EAAE+d,OAAO;MACfxd,SAAS,EAAE;KACd,CAAC;EACN;EAEA;;;EAGmBoqB,aAAaA,CAAA;IAC5B,IAAI,CAACtpB,UAAU,CAACyiB,6BAA6B,CAACmH,aAAa,CAAC;EAChE;EAEA;;;;;;;;EAQmBnU,YAAYA,CAACN,QAAwB,EAAEJ,QAAqE;IAC3H;IACA,OAAOA,QAAQ,CAACtX,GAAG,CAACglB,6BAA6B,CAACzuB,MAAM,CAAC,IACrD,CAAC+gB,QAAQ,CAACtX,GAAG,CAACglB,6BAA6B,CAACH,WAAW,CAAC,IACxD,CAACvN,QAAQ,CAACtX,GAAG,CAACglB,6BAA6B,CAACmH,aAAa,CAAC,IAC1D,CAAC7U,QAAQ,CAACtX,GAAG,CAACglB,6BAA6B,CAACD,YAAY,CAAC,IACzD,CAACzN,QAAQ,CAAChB,WAAW;EAC7B;;AA3IJp2B,qBAAA,GAAAqkB,aAAA;AA+IA,IAAYygB,6BAMX;AAND,WAAYA,6BAA6B;EACrCA,6BAAA,qCAAiC;EACjCA,6BAAA,+BAA2B;EAC3BA,6BAAA,qBAAiB;EACjBA,6BAAA,iCAA6B;EAC7BA,6BAAA,iCAA6B;AACjC,CAAC,EANWA,6BAA6B,KAAA9kC,qCAAA,GAA7B8kC,6BAA6B;;;;;;;;;;;;;;;;;ACrJzC,MAAA3lC,MAAA,GAAAC,mBAAA;AACA,MAAAmO,wBAAA,GAAAnO,mBAAA;AAEA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAAwjB,cAAA,GAAAxjB,mBAAA;AAGA,MAAaglB,kBAAmB,SAAQxB,cAAA,CAAAiB,WAA+C;EAOnF;;;EAGA,IAAWie,KAAKA,CAAA;IACZ,OAAO,IAAI,CAAC0K,MAAM;EACtB;EAAE,IAAI1K,KAAKA,CAAC1hC,MAAc;IACtB,IAAI,CAACosC,MAAM,GAAGpsC,MAAM;IAEpB;IACA,IAAI,CAACiiB,UAAU,CAACuiB,kCAAkC,CAACvuB,MAAM,EAAEuuB,kCAAkC,CAAC6H,cAAc,CAAC;EACjH;EAEA;;;EAGA,IAAW/qC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACgrC,OAAO;EACvB;EAAE,IAAIhrC,MAAMA,CAACtB,MAAc;IACvB,IAAI,CAACssC,OAAO,GAAGtsC,MAAM;IAErB;IACA,IAAI,CAACiiB,UAAU,CAACuiB,kCAAkC,CAACvuB,MAAM,EAAEuuB,kCAAkC,CAAC6H,cAAc,CAAC;EACjH;EAEA;;;EAGA,IAAWvb,gBAAgBA,CAAA;IACvB,OAAO,IAAI,CAACyb,iBAAiB;EACjC;EAAE,IAAIzb,gBAAgBA,CAAC9wB,MAAc;IACjC,IAAI,CAACusC,iBAAiB,GAAGvsC,MAAM;IAE/B;IACA,IAAI,CAACiiB,UAAU,CAACuiB,kCAAkC,CAACtU,iBAAiB,EAAEsU,kCAAkC,CAAC6H,cAAc,CAAC;EAC5H;EAEA;;;EAGA,IAAWhrC,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACmrC,MAAM;EACtB;EAAE,IAAInrC,KAAKA,CAACrB,MAAc;IACtB,IAAI,CAACwsC,MAAM,GAAGxsC,MAAM;IAEpB;IACA,IAAI,CAACiiB,UAAU,CAACuiB,kCAAkC,CAACvuB,MAAM,EAAEuuB,kCAAkC,CAAC6H,cAAc,CAAC;EACjH;EAEA;;;;;EAKAhtC,YAAmBigB,OAAkB,EAAEvD,OAA4B;IAC/D,KAAK,CAACuD,OAAO,EAAEvD,OAAO,CAAC;IAEvB,IAAI,CAAC0wB,QAAQ,GAAG,IAAI;IAEpB;IACA,IAAI,CAACL,MAAM,GAAG,CAAC;IACf,IAAI,CAACE,OAAO,GAAG,CAAC;IAChB,IAAI,CAACE,MAAM,GAAG,CAAC;IACf,IAAI,CAACD,iBAAiB,GAAG,CAAC;IAE1B;IACAxwB,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACuiB,kCAAkC,CAAC6H,cAAc,CAAC;IACtE,CAAC,EAAE,CAAC5wB,uBAAA,CAAAkgB,mCAAmC,CAAC+Q,SAAS,EAAEjxB,uBAAA,CAAAkgB,mCAAmC,CAAC+P,MAAM,CAAC,CAAC;IAE/F;IACA3vB,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACuiB,kCAAkC,CAACC,YAAY,CAAC;IACpE,CAAC,EAAE,CAAChpB,uBAAA,CAAAkgB,mCAAmC,CAAC+P,MAAM,CAAC,CAAC;EACpD;EAEA;;;;;;EAMmBrf,aAAaA,CAACsf,cAA8B,EAAEgB,mBAAqF;IAClJ;IACA,IAAIA,mBAAmB,CAAC3W,WAAW,EAAE;MACjC,IAAI,CAACyW,QAAQ,EAAErgB,OAAO,EAAE;MACxB,IAAI,CAACqgB,QAAQ,GAAG,IAAI;IACxB;EACJ;EAEA;;;EAGmB7sB,cAAcA,CAAA;IAC7B;IACA,IAAI,CAACqC,UAAU,CAACuiB,kCAAkC,CAAC6H,cAAc,EAAE7H,kCAAkC,CAACD,WAAW,CAAC;IAElH;IAEA;IACA,IAAI,IAAI,CAACl0B,MAAM,CAAC8Q,SAAS,KAAKhU,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAE;MACzD,MAAM,IAAIx2B,MAAA,CAAAY,SAAS,CAAC,wCAAwC,EAAE,IAAI,CAAC;IACvE;IAEA;IACA,IAAI,CAAC8sC,QAAQ,EAAErgB,OAAO,EAAE;IACxB,IAAI,CAACqgB,QAAQ,GAAG,IAAI;IAEpB;IACA,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACnvB,MAAM,CAACkE,GAAG,CAACorB,aAAa,CAAC;MAC1ClrB,KAAK,EAAE,sBAAsB;MAC7B4E,IAAI,EAAE,CAAC,IAAI,CAACjlB,KAAK,EAAE,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;MAAE;MACpCsf,MAAM,EAAE,IAAI,CAACvQ,MAAM,CAACuQ,MAA0B;MAC9CwJ,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBjJ,SAAS,EAAE,IAAI;MACf0P,WAAW,EAAE,IAAI,CAACC;KACrB,CAAC;IAEF;IACA,OAAO,IAAI,CAAC2b,QAAQ,CAACN,UAAU,CAAC;MAC5BvrB,MAAM,EAAE,IAAI,CAACvQ,MAAM,CAACuQ,MAA0B;MAC9CO,SAAS,EAAE;KACd,CAAC;EACN;EAEA;;;EAGmBoqB,aAAaA,CAAA;IAC5B,IAAI,CAACtpB,UAAU,CAACuiB,kCAAkC,CAACqH,aAAa,CAAC;EACrE;;AAxIJjsC,0BAAA,GAAAokB,kBAAA;AA2IA,IAAYwgB,kCAOX;AAPD,WAAYA,kCAAkC;EAC1CA,kCAAA,qCAAiC;EACjCA,kCAAA,+BAA2B;EAC3BA,kCAAA,qBAAiB;EACjBA,kCAAA,2CAAuC;EACvCA,kCAAA,iCAA6B;EAC7BA,kCAAA,iCAA6B;AACjC,CAAC,EAPWA,kCAAkC,KAAA5kC,0CAAA,GAAlC4kC,kCAAkC;;;;;;;;;;;;;;;;;;;AClJ9C,MAAAzlC,MAAA,GAAAC,mBAAA;AACA,MAAAmO,wBAAA,GAAAnO,mBAAA;AACA,MAAAujB,oBAAA,GAAAvjB,mBAAA;AAGA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAAwjB,cAAA,GAAAxjB,mBAAA;AACA,MAAA6tC,uBAAA,GAAA7tC,mBAAA;AAEA,MAAa6e,YAAa,SAAQ2E,cAAA,CAAAiB,WAAyC;EASvE;;;EAGA,IAAWie,KAAKA,CAAA;IACZ,OAAO,IAAI,CAAC0K,MAAM;EACtB;EAEA;;;EAGA,IAAWU,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACC,WAAW;EAC3B;EAAE,IAAID,UAAUA,CAACE,OAAgB;IAC7B,IAAI,CAACD,WAAW,GAAGC,OAAO;EAC9B;EAEA;;;EAGA,IAAW1rC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACgrC,OAAO;EACvB;EAEA;;;EAGA,IAAWW,MAAMA,CAAA;IACb,OAAO,IAAI,CAACC,UAAU;EAC1B;EAEA;;;EAGA,IAAW7rC,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACmrC,MAAM;EACtB;EAEA;;;;;EAKAntC,YAAmBigB,OAAkB,EAAEvD,OAA4B;IAC/D,KAAK,CAACuD,OAAO,EAAEvD,OAAO,CAAC;IAEvB,IAAI,CAACoxB,aAAa,GAAG,IAAIN,uBAAA,CAAAO,mBAAmB,CAAC9tB,OAAO,CAAC;IACrD,IAAI,CAACmtB,QAAQ,GAAG,IAAI;IAEpB;IACA,IAAI,CAACM,WAAW,GAAG,IAAI;IACvB,IAAI,CAACX,MAAM,GAAG,CAAC;IACf,IAAI,CAACE,OAAO,GAAG,CAAC;IAChB,IAAI,CAACE,MAAM,GAAG,CAAC;IACf,IAAI,CAACU,UAAU,GAAG,IAAIvsC,KAAK,EAAe;IAE1C;IACAob,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACorB,4BAA4B,CAAClrB,MAAM,CAAC;IACxD,CAAC,EAAE,CAAC1G,uBAAA,CAAAkgB,mCAAmC,CAAC+Q,SAAS,EAAEjxB,uBAAA,CAAAkgB,mCAAmC,CAAC+P,MAAM,CAAC,CAAC;IAE/F;IACA,IAAI,CAACroB,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAAC+H,eAAe,CAAC;EAClD;EAEA;;;;;;EAMa1N,IAAIA,CAAC,GAAGN,WAA0B;IAAA,IAAAC,KAAA;IAAA,OAAA3P,iBAAA;MAC3C,IAAIK,OAAO,GAAW,CAAC;MACvB,IAAIC,MAAM,GAAW,CAAC;MAEtB;MACA,MAAMi/B,qBAAqB,GAAgC7vB,WAAW,CAACkT,GAAG;QAAA,IAAA7iB,IAAA,GAAAC,iBAAA,CAAC,WAAOoQ,OAAO,EAAI;UACzF;UACA,MAAMovB,MAAM,GAAqB,IAAIC,KAAK,EAAE;UAC5CD,MAAM,CAACE,GAAG,GAAGtvB,OAAO;UACpB,MAAMovB,MAAM,CAACG,MAAM,EAAE;UAErB;UACA,IAAIt/B,OAAO,KAAK,CAAC,IAAIC,MAAM,KAAK,CAAC,EAAE;YAC/BA,MAAM,GAAGk/B,MAAM,CAACI,YAAY;YAC5Bv/B,OAAO,GAAGm/B,MAAM,CAACK,aAAa;UAClC;UAEA;UACA,IAAIx/B,OAAO,KAAKm/B,MAAM,CAACK,aAAa,IAAIv/B,MAAM,KAAKk/B,MAAM,CAACI,YAAY,EAAE;YACpE,MAAM,IAAI5uC,MAAA,CAAAY,SAAS,CAAC,gDAAgD4tC,MAAM,CAACI,YAAY,KAAKJ,MAAM,CAACK,aAAa,YAAYv/B,MAAM,KAAKD,OAAO,IAAI,EAAEsP,KAAI,CAAC;UAC7J;UAEA,OAAOmwB,iBAAiB,CAACN,MAAM,CAAC;QACpC,CAAC;QAAA,iBAAA76B,EAAA;UAAA,OAAA5E,IAAA,CAAAgF,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;MAEF;MACA2K,KAAI,CAACwvB,UAAU,SAASY,OAAO,CAACC,GAAG,CAACT,qBAAqB,CAAC;MAE1D;MACA5vB,KAAI,CAAC8uB,MAAM,GAAGn+B,MAAM;MACpBqP,KAAI,CAAC4uB,OAAO,GAAGl+B,OAAO;MACtBsP,KAAI,CAAC0uB,MAAM,GAAG3uB,WAAW,CAAClc,MAAM;MAEhC;MACA;MACA;MACA;MACA;MAEA;MACAmc,KAAI,CAACuE,UAAU,CAACorB,4BAA4B,CAACW,WAAW,CAAC;IAAC;EAC9D;EAEA;;;;EAImB3hB,aAAaA,CAACsf,cAA8B;IAC3D,IAAI,CAACc,QAAQ,EAAErgB,OAAO,EAAE;IACxB,IAAI,CAACqgB,QAAQ,GAAG,IAAI;EACxB;EAEA;;;EAGmB7sB,cAAcA,CAAC0X,eAAsC,EAAE2W,oBAAgF;IACtJ;IAEA;IACA,MAAMC,kBAAkB,GAA4F,CAAC,MAAK;MACtH,QAAQ,IAAI,CAAC79B,MAAM,CAAC8Q,SAAS;QACzB,KAAKhU,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY;UAAE;YAChC,OAAO;cACHC,gBAAgB,EAAE,IAAI;cACtBC,iBAAiB,EAAE,CAAC,IAAI,CAAC7B,MAAM,EAAE,CAAC,EAAE,CAAC;aACxC;UACL;QACA,KAAKr/B,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY;UAAE;YAChC,OAAO;cACH6Y,gBAAgB,EAAE,IAAI;cACtBC,iBAAiB,EAAE,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACF,OAAO,EAAE,CAAC;aACnD;UACL;QACA,KAAKn/B,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB;UAAE;YACrC,OAAO;cACHw9B,gBAAgB,EAAE,IAAI;cACtBC,iBAAiB,EAAE,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACF,OAAO,EAAE,IAAI,CAACF,MAAM;aAC7D;UACL;QACA,KAAKj/B,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI;UAAE;YACxB,OAAO;cACHF,gBAAgB,EAAE,IAAI;cACtBC,iBAAiB,EAAE,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACF,OAAO,EAAE,CAAC;aACnD;UACL;QACA,KAAKn/B,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS;UAAE;YAC7B,OAAO;cACHH,gBAAgB,EAAE,IAAI;cACtBC,iBAAiB,EAAE,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACF,OAAO,EAAEpqC,IAAI,CAAC81B,IAAI,CAAC,IAAI,CAACoU,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;aAChF;UACL;QACA,KAAKj/B,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc;UAAE;YAClC,OAAO;cACHJ,gBAAgB,EAAE,IAAI;cACtBC,iBAAiB,EAAE,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACF,OAAO,EAAE,IAAI,CAACF,MAAM;aAC7D;UACL;MACJ;IACJ,CAAC,EAAC,CAAE;IAEJ;IACA;IACA;IACA,IAAI,IAAI,CAACa,MAAM,CAAC1rC,MAAM,GAAG,CAAC,EAAE;MACxB,IAAI,CAAC8hB,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACigB,gBAAgB,CAAC;MAE/C;MACA,IAAI,IAAI,CAACoJ,WAAW,EAAE;QAClB,IAAI,CAAC1pB,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACC,cAAc,CAAC;QAC7C,IAAI,CAACN,WAAW,CAACd,oBAAA,CAAAmB,YAAY,CAACH,OAAO,CAAC;MAC1C;IACJ;IAEA;IACA,IAAIkrB,SAAS,GAAG,CAAC;IACjB,IAAI,IAAI,CAAC1B,WAAW,EAAE;MAClB,IAAImB,kBAAkB,CAACE,gBAAgB,KAAK,IAAI,EAAE;QAC9CK,SAAS,GAAG,CAAC,GAAGvsC,IAAI,CAAC8Y,KAAK,CAAC9Y,IAAI,CAACwsC,IAAI,CAACxsC,IAAI,CAAC4S,GAAG,CAAC,IAAI,CAAC03B,MAAM,EAAE,IAAI,CAACF,OAAO,EAAE,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC;MAC3F,CAAC,MAAM;QACHqC,SAAS,GAAG,CAAC,GAAGvsC,IAAI,CAAC8Y,KAAK,CAAC9Y,IAAI,CAACwsC,IAAI,CAACxsC,IAAI,CAAC4S,GAAG,CAAC,IAAI,CAAC03B,MAAM,EAAE,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC;MAC9E;IACJ;IAEA;IACA,MAAMqC,YAAY,GAAsB,IAAI,CAAClC,QAAQ;IAErD;IACA,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACnvB,MAAM,CAACkE,GAAG,CAACorB,aAAa,CAAC;MAC1ClrB,KAAK,EAAE,sBAAsB;MAC7B4E,IAAI,EAAE4nB,kBAAkB,CAACG,iBAAiB;MAC1CztB,MAAM,EAAE,IAAI,CAACvQ,MAAM,CAACuQ,MAA0B;MAC9CwJ,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBjJ,SAAS,EAAE+sB,kBAAkB,CAACE,gBAAgB;MAC9CQ,aAAa,EAAG,IAAI,CAAC9B,UAAU,GAAI2B,SAAS,GAAG;KAClD,CAAC;IAEF;IACA,IAAIE,YAAY,KAAK,IAAI,IAAI,CAACV,oBAAoB,CAACvuB,GAAG,CAAC2tB,4BAA4B,CAACW,WAAW,CAAC,EAAE;MAC9F;MACA,MAAMa,YAAY,GAAwB;QACtChuB,OAAO,EAAE,IAAI,CAAC4rB,QAAQ;QACtBqC,QAAQ,EAAE;OACb;MAED;MACA,MAAMC,OAAO,GAAwB;QACjCluB,OAAO,EAAE8tB,YAAY;QACrBG,QAAQ,EAAE;OACb;MAED;MACA,MAAME,iBAAiB,GAAsB;QACzC3tC,KAAK,EAAEa,IAAI,CAAC+sC,GAAG,CAACN,YAAY,CAACttC,KAAK,EAAE,IAAI,CAACorC,QAAQ,CAACprC,KAAK,CAAC;QACxDC,MAAM,EAAEY,IAAI,CAAC+sC,GAAG,CAACN,YAAY,CAACrtC,MAAM,EAAE,IAAI,CAACmrC,QAAQ,CAACnrC,MAAM,CAAC;QAC3D4tC,kBAAkB,EAAEhtC,IAAI,CAAC+sC,GAAG,CAACN,YAAY,CAACO,kBAAkB,EAAE,IAAI,CAACzC,QAAQ,CAACyC,kBAAkB;OACjG;MAED;MACA,MAAMzkB,eAAe,GAAsB,IAAI,CAACnN,MAAM,CAACkE,GAAG,CAACkJ,oBAAoB,EAAE;MAEjF;MACA,MAAMykB,aAAa,GAAWjtC,IAAI,CAAC+sC,GAAG,CAACN,YAAY,CAACC,aAAa,EAAE,IAAI,CAACnC,QAAQ,CAACmC,aAAa,CAAC;MAC/F,KAAK,IAAIQ,SAAS,GAAW,CAAC,EAAEA,SAAS,GAAGD,aAAa,EAAEC,SAAS,EAAE,EAAE;QACpE;QACA,MAAMC,YAAY,GAAsB;UACpChuC,KAAK,EAAEa,IAAI,CAAC8Y,KAAK,CAACg0B,iBAAiB,CAAC3tC,KAAK,GAAGa,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEitC,SAAS,CAAC,CAAC;UACnE9tC,MAAM,EAAEY,IAAI,CAAC8Y,KAAK,CAACg0B,iBAAiB,CAAC1tC,MAAO,GAAGY,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEitC,SAAS,CAAC,CAAC;UACtEF,kBAAkB,EAAE;SACvB;QAED;QACA,IAAI,IAAI,CAACzC,QAAQ,CAACtrB,SAAS,KAAK,IAAI,EAAE;UAClCkuB,YAAY,CAACH,kBAAkB,GAAGhtC,IAAI,CAAC8Y,KAAK,CAACg0B,iBAAiB,CAACE,kBAAmB,GAAGhtC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEitC,SAAS,CAAC,CAAC;QAChH,CAAC,MAAM;UACHC,YAAY,CAACH,kBAAkB,GAAGF,iBAAiB,CAACE,kBAAmB;QAC3E;QAEA;QACAzkB,eAAe,CAAC6kB,oBAAoB,CAACP,OAAO,EAAEF,YAAY,EAAEQ,YAAY,CAAC;MAC7E;MAEA;MACA,IAAI,CAAC/xB,MAAM,CAACkE,GAAG,CAACoJ,KAAK,CAACC,MAAM,CAAC,CAACJ,eAAe,CAACK,MAAM,EAAE,CAAC,CAAC;IAC5D;IAEA;IACA,IAAImjB,oBAAoB,CAACvuB,GAAG,CAAC2tB,4BAA4B,CAACW,WAAW,CAAC,EAAE;MACpE;MACA,KAAK,IAAIuB,WAAW,GAAW,CAAC,EAAEA,WAAW,GAAG,IAAI,CAACtC,MAAM,CAAC1rC,MAAM,EAAEguC,WAAW,EAAE,EAAE;QAC/E,MAAMC,OAAO,GAAgB,IAAI,CAACvC,MAAM,CAACsC,WAAW,CAAC;QAErD;QACA,IAAI,CAACjyB,MAAM,CAACkE,GAAG,CAACoJ,KAAK,CAAC6kB,0BAA0B,CAC5C;UAAEnxB,MAAM,EAAEkxB;QAAO,CAAE,EACnB;UAAE3uB,OAAO,EAAE,IAAI,CAAC4rB,QAAQ;UAAEiD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAEH,WAAW;QAAC,CAAE,EACvD,CAACC,OAAO,CAACnuC,KAAK,EAAEmuC,OAAO,CAACluC,MAAM,CAAC,CAClC;MACL;MAEA;MACA,IAAI,CAAC6rC,aAAa,CAACwC,YAAY,CAAC,IAAI,CAAClD,QAAQ,CAAC;IAClD;IAEA;IACA,OAAO,IAAI,CAACA,QAAQ,CAACN,UAAU,CAAC;MAC5BvrB,MAAM,EAAE,IAAI,CAACvQ,MAAM,CAACuQ,MAA0B;MAC9CO,SAAS,EAAE,IAAI,CAAC9Q,MAAM,CAAC8Q;KAC1B,CAAC;EACN;EAEA;;;EAGmBoqB,aAAaA,CAAA;IAC5B,IAAI,CAACtpB,UAAU,CAACorB,4BAA4B,CAACuC,KAAK,CAAC;EACvD;;AAtSJhwC,oBAAA,GAAAie,YAAA;AAySA,IAAYwvB,4BAIX;AAJD,WAAYA,4BAA4B;EACpCA,4BAAA,2BAAuB;EACvBA,4BAAA,qCAAiC;EACjCA,4BAAA,yBAAqB;AACzB,CAAC,EAJWA,4BAA4B,KAAAztC,oCAAA,GAA5BytC,4BAA4B;;;;;;;;;;;;;;;;;AClTxC,MAAAtuC,MAAA,GAAAC,mBAAA;AACA,MAAA6iC,qBAAA,GAAA7iC,mBAAA;AACA,MAAAmO,wBAAA,GAAAnO,mBAAA;AACA,MAAAoO,qBAAA,GAAApO,mBAAA;AACA,MAAA6wC,0BAAA,GAAA7wC,mBAAA;AACA,MAAAujB,oBAAA,GAAAvjB,mBAAA;AACA,MAAA2zB,kBAAA,GAAA3zB,mBAAA;AAGA,MAAak2B,yBAAyB;EAIlC;;;EAGA,IAAWM,qBAAqBA,CAAA;IAC5B,OAAOljB,MAAM,CAACiiB,SAAS,CAAC/S,GAAG,CAACsuB,wBAAwB,EAAmB;EAC3E;EAEA;EAEAzwC,YAAmBigB,OAAkB;IACjC,IAAI,CAACiX,OAAO,GAAGjX,OAAO;IAEtB;IACA,MAAMywB,kBAAkB,GAA6B,CAACF,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;IAC1F,IAAI,IAAI,CAAC1Z,OAAO,CAAC3B,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAAC8c,iBAAiB,CAAC,EAAE;MACpEH,kBAAkB,CAAChvC,IAAI,CAAC8uC,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,CAAC;IACpD;IAEA;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAIrxC,MAAA,CAAA2a,UAAU,EAAoD;IAE5F;IACA,IAAI,CAAC02B,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACw/B,OAAO,EAAE;MAC/CzvB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACw/B,OAAO;MAC7BC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACwgC,OAAO,EAAE;MAC/CzwB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACwgC,OAAO;MAC7Bf,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE,KAAK;QACvBE,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACygC,MAAM,EAAE;MAC9C1wB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACygC,MAAM;MAC5BhB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC2gC,MAAM,EAAE;MAC9C5wB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC2gC,MAAM;MAC5BlB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IAEF;IACA,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC6gC,OAAO,EAAE;MAC/C9wB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC6gC,OAAO;MAC7BpB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC8gC,OAAO,EAAE;MAC/C/wB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC8gC,OAAO;MAC7BrB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC+gC,QAAQ,EAAE;MAChDhxB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC+gC,QAAQ;MAC9BtB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACghC,QAAQ,EAAE;MAChDjxB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACghC,QAAQ;MAC9BvB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACkhC,QAAQ,EAAE;MAChDnxB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACkhC,QAAQ;MAC9BzB,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE,KAAK;QACvBE,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmhC,OAAO,EAAE;MAC/CpxB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACmhC,OAAO;MAC7B1B,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACohC,OAAO,EAAE;MAC/CrxB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACohC,OAAO;MAC7B3B,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IAEF;IACA,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACqhC,OAAO,EAAE;MAC/CtxB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACqhC,OAAO;MAC7B5B,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACyhC,OAAO,EAAE;MAC/C1xB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACyhC,OAAO;MAC7BhC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC0hC,QAAQ,EAAE;MAChD3xB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC0hC,QAAQ;MAC9BjC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC;QAC1BC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE2vB,kBAAkB;MACxBY,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC2hC,QAAQ,EAAE;MAChD5xB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC2hC,QAAQ;MAC9BlC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC4hC,QAAQ,EAAE;MAChD7xB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC4hC,QAAQ;MAC9BnC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC6hC,SAAS,EAAE;MACjD9xB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC6hC,SAAS;MAC/BpC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACC,UAAU,EAAE;MAClD8P,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACC,UAAU;MAChCw/B,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACgiC,cAAc,EAAE;MACtDjyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACgiC,cAAc;MACpCvC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACiiC,UAAU,EAAE;MAClDlyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACiiC,UAAU;MAChCxC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE,KAAK;QACvBE,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACkiC,SAAS,EAAE;MACjDnyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACkiC,SAAS;MAC/BzC,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmiC,SAAS,EAAE;MACjDpyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACmiC,SAAS;MAC/B1C,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACoiC,UAAU,EAAE;MAClDryB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACoiC,UAAU;MAChC3C,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE7yB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAAC8f,iBAAiB,CAAC;UACvEd,SAAS,EAAE,KAAK;UAChBC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACsiC,cAAc,EAAE;MACtDvyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACsiC,cAAc;MACpC7C,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IAEF;IACA,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACuiC,YAAY,EAAE;MACpDxyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACuiC,YAAY;MAClC9C,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE,KAAK;QACvBE,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACwiC,WAAW,EAAE;MACnDzyB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACwiC,WAAW;MACjC/C,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACyiC,YAAY,EAAE;MACpD1yB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACyiC,YAAY;MAClChD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC0iC,aAAa,EAAE;MACrD3yB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC0iC,aAAa;MACnCjD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAEvxB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAACogB,uBAAuB,CAAC,GAAG;UACpFzQ,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB,GAAG,KAAK;QACTqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IAEF;IACA,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC4iC,QAAQ,EAAE;MAChD7yB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC4iC,QAAQ;MAC9BnD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC6iC,QAAQ,EAAE;MAChD9yB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC6iC,QAAQ;MAC9BpD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC8iC,SAAS,EAAE;MACjD/yB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC8iC,SAAS;MAC/BrD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC;QAC/CrB,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE2vB,kBAAkB;MACxBY,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC+iC,UAAU,EAAE;MAClDhzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC+iC,UAAU;MAChCtD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACgjC,UAAU,EAAE;MAClDjzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACgjC,UAAU;MAChCvD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACijC,WAAW,EAAE;MACnDlzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACijC,WAAW;MACjCxD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,EAAEN,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,IAAI;UACnB+N,SAAS,EAAE,IAAI;UACfpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IAEF;IACA,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACkjC,UAAU,EAAE;MAClDnzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACkjC,UAAU;MAChCzD,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmjC,UAAU,EAAE;MAClDpzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACmjC,UAAU;MAChC1D,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MACvCd,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IACF,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACojC,WAAW,EAAE;MACnDrzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACojC,WAAW;MACjC3D,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;QACxFnC,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,EAAEphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;MAClMpuB,IAAI,EAAE2vB,kBAAkB;MACxBY,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;UACLe,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE;;;KAGtB,CAAC;IAEF;IACA,IAAI,CAACjC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACqjC,QAAQ,EAAE;MAChDtzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACqjC,QAAQ;MAC9B5D,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACE,OAAO,CAAC;QAC9BwM,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;MACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACzCZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACsjC,YAAY,EAAE;MACpDvzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACsjC,YAAY;MAClC7D,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACC,KAAK,CAAC;QAC5ByM,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;MACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,EAAE6L,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC4D,WAAW,EAAE;MACnDmM,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAAC4D,WAAW;MACjC67B,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACC,KAAK,CAAC;QAC5ByM,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;MACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,EAAE6L,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,KAAK;UAClBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACujC,mBAAmB,EAAE;MAC3DxzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACujC,mBAAmB;MACzC9D,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACC,KAAK,EAAEnC,qBAAA,CAAAkC,aAAa,CAACE,OAAO,CAAC;QACnDwM,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;MACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,EAAE6L,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,EAAEJ,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MACvGZ,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,KAAK;UAAE;UACpBC,gBAAgB,EAAE,KAAK,CAAC;SAC3B;QACDC,OAAO,EAAE;;KAEhB,CAAC;IACF,IAAI,CAAChB,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACwjC,YAAY,EAAE;MACpDzzB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACwjC,YAAY;MAClC/D,MAAM,EAAE;QACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACC,KAAK,CAAC;QAC5ByM,QAAQ,EAAE;OACb;MACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;MACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,EAAE6L,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;MACpEU,gBAAgB,EAAE,CAAC;MACnBvmB,KAAK,EAAE;QACHwmB,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;UACd9N,aAAa,EAAE,KAAK;UACpB+N,SAAS,EAAE,KAAK;UAChBpK,WAAW,EAAE;SAChB;QACDqK,IAAI,EAAE;UACFC,aAAa,EAAE,IAAI;UACnBC,kBAAkB,EAAE,IAAI;UACxBC,WAAW,EAAE,IAAI;UACjBC,gBAAgB,EAAE;SACrB;QACDC,OAAO,EAAE;;KAEhB,CAAC;IAEF;IACA,IAAI9xB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAACkhB,oBAAoB,CAAC,EAAE;MAClE,IAAI,CAAClE,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACyjC,oBAAoB,EAAE;QAC5D1zB,MAAM,EAAExT,qBAAA,CAAAyD,aAAa,CAACyjC,oBAAoB;QAC1ChE,MAAM,EAAE;UACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACC,KAAK,EAAEnC,qBAAA,CAAAkC,aAAa,CAACE,OAAO,CAAC;UACnDwM,QAAQ,EAAE;SACb;QACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;QACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,EAAE6L,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,EAAEJ,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;QACvGZ,gBAAgB,EAAE,CAAC;QACnBvmB,KAAK,EAAE;UACHwmB,cAAc,EAAE,IAAI;UACpBC,gBAAgB,EAAE;YACd9N,aAAa,EAAE,KAAK;YACpB+N,SAAS,EAAE,KAAK;YAChBpK,WAAW,EAAE;WAChB;UACDqK,IAAI,EAAE;YACFC,aAAa,EAAE,IAAI;YACnBC,kBAAkB,EAAE,IAAI;YACxBC,WAAW,EAAE,IAAI;YACjBC,gBAAgB,EAAE;WACrB;UACDC,OAAO,EAAE;;OAEhB,CAAC;IACN;IAEA;IACA,IAAI9xB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAACmhB,oBAAoB,CAAC,EAAE;MAClE,MAAMC,0BAA0B,GAAGA,CAACpX,OAAsB,EAAEqX,QAA8B,EAAEC,aAAqB,KAAI;QACjH,MAAM/V,OAAO,GAAsC;UAC/C/d,MAAM,EAAEwc,OAAO;UACfkT,MAAM,EAAE;YACJC,KAAK,EAAEkE,QAAQ;YACfhE,QAAQ,EAAEiE;WACb;UACDhE,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;UACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,EAAEJ,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,CAAC;UACpEQ,gBAAgB,EAAE,EAAE;UACpBvmB,KAAK,EAAE;YACHwmB,cAAc,EAAE,IAAI;YACpBC,gBAAgB,EAAE,KAAK;YACvBE,IAAI,EAAE;cACFC,aAAa,EAAE,IAAI;cACnBC,kBAAkB,EAAE,IAAI;cACxBC,WAAW,EAAE,IAAI;cACjBC,gBAAgB,EAAE;aACrB;YACDC,OAAO,EAAE;;SAEhB;QAED,IAAI9xB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAACuhB,4BAA4B,CAAC,EAAE;UAC1EhW,OAAO,CAAC+R,UAAU,CAAC3vC,IAAI,CAACoM,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc,CAAC;QAC5D;QAEA,OAAO7P,OAAO;MAClB,CAAC;MAED,IAAI,CAACyR,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC+jC,YAAY,EAAEJ,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAAC+jC,YAAY,EAAE,CAAC/S,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACrM,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACgkC,gBAAgB,EAAEL,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACgkC,gBAAgB,EAAE,CAAChT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7M,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACikC,YAAY,EAAEN,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACikC,YAAY,EAAE,CAACjT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACrM,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACkkC,gBAAgB,EAAEP,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACkkC,gBAAgB,EAAE,CAAClT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7M,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmkC,YAAY,EAAER,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACmkC,YAAY,EAAE,CAACnT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACrM,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACokC,gBAAgB,EAAET,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACokC,gBAAgB,EAAE,CAACpT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7M,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACqkC,SAAS,EAAEV,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACqkC,SAAS,EAAE,CAACrT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACjI,IAAI,CAACJ,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACskC,SAAS,EAAEX,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACskC,SAAS,EAAE,CAACtT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACjI,IAAI,CAACJ,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACukC,UAAU,EAAEZ,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACukC,UAAU,EAAE,CAACvT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACxJ,IAAI,CAAC1B,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACwkC,UAAU,EAAEb,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACwkC,UAAU,EAAE,CAACxT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACxJ,IAAI,CAAC1B,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACykC,aAAa,EAAEd,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAACykC,aAAa,EAAE,CAACzT,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MAClL,IAAI,CAACvC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC0kC,YAAY,EAAEf,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAAC0kC,YAAY,EAAE,CAAC1T,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MAChL,IAAI,CAACvC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC2kC,YAAY,EAAEhB,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAAC2kC,YAAY,EAAE,CAAC3T,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACrM,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC4kC,gBAAgB,EAAEjB,0BAA0B,CAACpnC,qBAAA,CAAAyD,aAAa,CAAC4kC,gBAAgB,EAAE,CAAC5T,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACjN;IAEA;IACA,IAAItzB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAACsiB,sBAAsB,CAAC,EAAE;MACpE,MAAMC,4BAA4B,GAAGA,CAACvY,OAAsB,EAAEqX,QAA8B,EAAEC,aAAqB,KAAI;QACnH,MAAM/V,OAAO,GAAsC;UAC/C/d,MAAM,EAAEwc,OAAO;UACfkT,MAAM,EAAE;YACJC,KAAK,EAAEkE,QAAQ;YACfhE,QAAQ,EAAEiE;WACb;UACDhE,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;UACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,EAAEJ,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,CAAC;UACpEQ,gBAAgB,EAAE,EAAE;UACpBvmB,KAAK,EAAE;YACHwmB,cAAc,EAAE,IAAI;YACpBC,gBAAgB,EAAE,KAAK;YACvBE,IAAI,EAAE;cACFC,aAAa,EAAE,IAAI;cACnBC,kBAAkB,EAAE,IAAI;cACxBC,WAAW,EAAE,IAAI;cACjBC,gBAAgB,EAAE;aACrB;YACDC,OAAO,EAAE;;SAEhB;QAED,OAAOzS,OAAO;MAClB,CAAC;MAED,IAAI,CAACyR,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC+kC,aAAa,EAAED,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAAC+kC,aAAa,EAAE,CAAC/T,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MACpL,IAAI,CAACvC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACglC,iBAAiB,EAAEF,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACglC,iBAAiB,EAAE,CAAChU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5L,IAAI,CAACvC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACilC,eAAe,EAAEH,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACilC,eAAe,EAAE,CAACjU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7M,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACklC,mBAAmB,EAAEJ,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACklC,mBAAmB,EAAE,CAAClU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACrN,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmlC,cAAc,EAAEL,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACmlC,cAAc,EAAE,CAACnU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3M,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAColC,kBAAkB,EAAEN,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAAColC,kBAAkB,EAAE,CAACpU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACnN,IAAI,CAACxC,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACqlC,WAAW,EAAEP,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACqlC,WAAW,EAAE,CAACrU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACvI,IAAI,CAACJ,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACslC,WAAW,EAAER,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACslC,WAAW,EAAE,CAACtU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACvI,IAAI,CAACJ,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACulC,YAAY,EAAET,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACulC,YAAY,EAAE,CAACvU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9J,IAAI,CAAC1B,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACwlC,YAAY,EAAEV,4BAA4B,CAACvoC,qBAAA,CAAAyD,aAAa,CAACwlC,YAAY,EAAE,CAACxU,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAClK;IAEA;IACA,IAAIxyB,OAAO,CAACsV,YAAY,CAACjB,UAAU,CAAChB,kBAAA,CAAAS,UAAU,CAACkjB,sBAAsB,CAAC,EAAE;MACpE,MAAMC,4BAA4B,GAAGA,CAACnZ,OAAsB,EAAEoZ,iBAAyB,KAAI;QACvF,MAAM7X,OAAO,GAAsC;UAC/C/d,MAAM,EAAEwc,OAAO;UACfkT,MAAM,EAAE;YACJC,KAAK,EAAE,CAAC1O,qBAAA,CAAAkC,aAAa,CAACyM,GAAG,EAAE3O,qBAAA,CAAAkC,aAAa,CAAC+N,KAAK,EAAEjQ,qBAAA,CAAAkC,aAAa,CAAC4O,IAAI,EAAE9Q,qBAAA,CAAAkC,aAAa,CAAC6O,KAAK,CAAC;YACxFnC,QAAQ,EAAE;WACb;UACDC,UAAU,EAAE,CAACvjC,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY,EAAEhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY,EAAEpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB,EAAEzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI,EAAEnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS,CAAC;UACjKnuB,IAAI,EAAE,CAACyvB,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,EAAEJ,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,CAAC;UACpEQ,gBAAgB,EAAE6F,iBAAiB;UACnCpsB,KAAK,EAAE;YACHwmB,cAAc,EAAE,IAAI;YACpBC,gBAAgB,EAAE,KAAK;YACvBE,IAAI,EAAE;cACFC,aAAa,EAAE,IAAI;cACnBC,kBAAkB,EAAE,IAAI;cACxBC,WAAW,EAAE,IAAI;cACjBC,gBAAgB,EAAE;aACrB;YACDC,OAAO,EAAE;;SAEhB;QAED,OAAOzS,OAAO;MAClB,CAAC;MAED,IAAI,CAACyR,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC4lC,YAAY,EAAEF,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC4lC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAACrG,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC6lC,gBAAgB,EAAEH,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC6lC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAACtG,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC8lC,YAAY,EAAEJ,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC8lC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAACvG,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC+lC,gBAAgB,EAAEL,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC+lC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAACxG,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACgmC,YAAY,EAAEN,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACgmC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAACzG,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACimC,gBAAgB,EAAEP,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACimC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAAC1G,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACkmC,YAAY,EAAER,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACkmC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAAC3G,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmmC,gBAAgB,EAAET,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACmmC,gBAAgB,EAAE,GAAG,CAAC,CAAC;MAC9H,IAAI,CAAC5G,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAComC,YAAY,EAAEV,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAComC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAAC7G,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACqmC,gBAAgB,EAAEX,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACqmC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAAC9G,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACsmC,YAAY,EAAEZ,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACsmC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAAC/G,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACumC,gBAAgB,EAAEb,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACumC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAAChH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACwmC,YAAY,EAAEd,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACwmC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAACjH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACymC,gBAAgB,EAAEf,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACymC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAAClH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC0mC,YAAY,EAAEhB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC0mC,YAAY,EAAE,EAAE,CAAC,CAAC;MACrH,IAAI,CAACnH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC2mC,gBAAgB,EAAEjB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC2mC,gBAAgB,EAAE,EAAE,CAAC,CAAC;MAC7H,IAAI,CAACpH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC4mC,aAAa,EAAElB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC4mC,aAAa,EAAE,EAAE,CAAC,CAAC;MACvH,IAAI,CAACrH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC6mC,iBAAiB,EAAEnB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC6mC,iBAAiB,EAAE,EAAE,CAAC,CAAC;MAC/H,IAAI,CAACtH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC8mC,aAAa,EAAEpB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC8mC,aAAa,EAAE,EAAE,CAAC,CAAC;MACvH,IAAI,CAACvH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAC+mC,iBAAiB,EAAErB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAC+mC,iBAAiB,EAAE,EAAE,CAAC,CAAC;MAC/H,IAAI,CAACxH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACgnC,aAAa,EAAEtB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACgnC,aAAa,EAAE,EAAE,CAAC,CAAC;MACvH,IAAI,CAACzH,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACinC,iBAAiB,EAAEvB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACinC,iBAAiB,EAAE,EAAE,CAAC,CAAC;MAC/H,IAAI,CAAC1H,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACknC,cAAc,EAAExB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACknC,cAAc,EAAE,GAAG,CAAC,CAAC;MAC1H,IAAI,CAAC3H,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACmnC,kBAAkB,EAAEzB,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACmnC,kBAAkB,EAAE,GAAG,CAAC,CAAC;MAClI,IAAI,CAAC5H,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAAConC,cAAc,EAAE1B,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAAConC,cAAc,EAAE,GAAG,CAAC,CAAC;MAC1H,IAAI,CAAC7H,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACqnC,kBAAkB,EAAE3B,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACqnC,kBAAkB,EAAE,GAAG,CAAC,CAAC;MAClI,IAAI,CAAC9H,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACsnC,cAAc,EAAE5B,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACsnC,cAAc,EAAE,GAAG,CAAC,CAAC;MAC1H,IAAI,CAAC/H,kBAAkB,CAACp+B,GAAG,CAAC5E,qBAAA,CAAAyD,aAAa,CAACunC,kBAAkB,EAAE7B,4BAA4B,CAACnpC,qBAAA,CAAAyD,aAAa,CAACunC,kBAAkB,EAAE,GAAG,CAAC,CAAC;IACtI;EAEJ;EAEA;;;;;;;EAOOz3B,YAAYA,CAACyc,OAAsB;IACtC,MAAMib,qBAAqB,GAAkD,IAAI,CAACjI,kBAAkB,CAAC98B,GAAG,CAAC8pB,OAAO,CAAC;IACjH,IAAI,CAACib,qBAAqB,EAAE;MACxB,MAAM,IAAIt5C,MAAA,CAAAY,SAAS,CAAC,WAAWy9B,OAAO,wBAAwB,EAAE,IAAI,CAAC;IACzE;IAEA;IACA,MAAMkb,cAAc,GAAsB,IAAIv2B,GAAG,EAAgB;IACjE,IAAIs2B,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,EAAE;MAClC;MACA,IAAIsH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACG,WAAW,IAAImH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACC,aAAa,EAAE;QAChGsH,cAAc,CAAC72C,GAAG,CAAC8gB,oBAAA,CAAAmB,YAAY,CAACuG,UAAU,CAAC;MAC/C;MACA;MACA,IAAIouB,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACI,gBAAgB,IAAIkH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACE,kBAAkB,EAAE;QAC1GqH,cAAc,CAAC72C,GAAG,CAAC8gB,oBAAA,CAAAmB,YAAY,CAAC+H,eAAe,CAAC;MACpD;IACJ;IACA,IAAI4sB,qBAAqB,CAACjuB,KAAK,CAACwmB,cAAc,EAAE;MAC5C0H,cAAc,CAAC72C,GAAG,CAAC8gB,oBAAA,CAAAmB,YAAY,CAACC,cAAc,CAAC;IACnD;IACA,IAAI00B,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,EAAE;MACrCkH,cAAc,CAAC72C,GAAG,CAAC8gB,oBAAA,CAAAmB,YAAY,CAACH,OAAO,CAAC;IAC5C;IACA,IAAI80B,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,EAAE;MAC9CyH,cAAc,CAAC72C,GAAG,CAAC8gB,oBAAA,CAAAmB,YAAY,CAACigB,gBAAgB,CAAC;IACrD;IAEA;IACA,MAAM4U,YAAY,GAAgD,CAAC,MAAK;MACpE,MAAMC,eAAe,GAA2B,IAAIz2B,GAAG,CAAoBs2B,qBAAqB,CAACj4B,IAAI,CAAC;MACtG,IAAIo4B,eAAe,CAAC94B,GAAG,CAACmwB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,CAAC,EAAE;QAC9C,OAAO,CAACqI,eAAe,EAAE3I,0BAAA,CAAAG,iBAAiB,CAACG,KAAK,CAAC;MACrD;MACA,IAAIqI,eAAe,CAAC94B,GAAG,CAACmwB,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC,EAAE;QACxD,OAAO,CAACiH,eAAe,EAAE3I,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe,CAAC;MAC/D;MACA,IAAIiH,eAAe,CAAC94B,GAAG,CAACmwB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC,EAAE;QACtD,OAAO,CAAC+G,eAAe,EAAE3I,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MAC7D;MACA,IAAI+G,eAAe,CAAC94B,GAAG,CAACmwB,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC,EAAE;QACtD,OAAO,CAAC+G,eAAe,EAAE3I,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa,CAAC;MAC7D;MACA,IAAI+G,eAAe,CAAC94B,GAAG,CAACmwB,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,CAAC,EAAE;QAC9C,OAAO,CAACwU,eAAe,EAAE3I,0BAAA,CAAAG,iBAAiB,CAAChM,KAAK,CAAC;MACrD;MAEA;MACA,OAAO,CAACwU,eAAe,EAAE3I,0BAAA,CAAAG,iBAAiB,CAACC,iBAAiB,CAAC;IACjE,CAAC,EAAC,CAAE;IAEJ,OAAO;MACHrvB,MAAM,EAAEy3B,qBAAqB,CAACz3B,MAAM;MACpC63B,aAAa,EAAEH,cAAc;MAC7B5H,UAAU,EAAE,IAAI3uB,GAAG,CAAmBs2B,qBAAqB,CAAC3H,UAAU,CAAC;MACvE5M,OAAO,EAAE,IAAI/hB,GAAG,CAAgBs2B,qBAAqB,CAAC/H,MAAM,CAACC,KAAK,CAAC;MACnExvB,WAAW,EAAE;QACTC,OAAO,EAAEu3B,YAAY,CAAC,CAAC,CAAC;QACxBxK,GAAG,EAAEwK,YAAY,CAAC,CAAC;OACtB;MACD1H,gBAAgB,EAAE;QACd9N,aAAa,EAAGsV,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,GAAIwH,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,CAAC9N,aAAa,GAAG,KAAK;QAClI2D,WAAW,EAAG2R,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,GAAIwH,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,CAACnK,WAAW,GAAG,KAAK;QAC9HoK,SAAS,EAAGuH,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,GAAIwH,qBAAqB,CAACjuB,KAAK,CAACymB,gBAAgB,CAACC,SAAS,GAAG;OACxH;MACDM,OAAO,EAAE;QACLe,QAAQ,EAAGkG,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,GAAIiH,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,CAACe,QAAQ,GAAG,KAAK;QACtGC,SAAS,EAAGiG,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,GAAIiH,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,CAACgB,SAAS,GAAG,KAAK;QACxGC,SAAS,EAAGgG,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,GAAIiH,qBAAqB,CAACjuB,KAAK,CAACgnB,OAAO,CAACiB,SAAS,GAAG;OACtG;MACDtB,IAAI,EAAE;QACFC,aAAa,EAAGqH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,GAAIsH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACC,aAAa,GAAG,KAAK;QAC1G0H,aAAa,EAAGL,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,GAAIsH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACE,kBAAkB,GAAG,KAAK;QAC/GC,WAAW,EAAGmH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,GAAIsH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACG,WAAW,GAAG,KAAK;QACtGyH,WAAW,EAAGN,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,GAAIsH,qBAAqB,CAACjuB,KAAK,CAAC2mB,IAAI,CAACI,gBAAgB,GAAG;;KAE7G;EACL;EAEA;;;EAGOyH,gBAAgBA,CAACC,YAA4D;IAChF;IACA,OAAO,EAAE;EACb;;AAl4CJj5C,iCAAA,GAAAs1B,yBAAA;;;;;;;;;;;;;;;;;ACTA,MAAAn2B,MAAA,GAAAC,mBAAA;AAEA,MAAA6wC,0BAAA,GAAA7wC,mBAAA;AACA,MAAAujB,oBAAA,GAAAvjB,mBAAA;AAIA,MAAaouC,mBAAmB;;IACJ,KAAA0L,4BAA4B,GAAG,CAAC;EAAC;EASzDz5C,YAAmBigB,OAAkB;IALpB,KAAAy5B,0BAA0B,GAAkD,IAAIh6C,MAAA,CAAA2a,UAAU,EAAqC;IAC/H,KAAAs/B,0BAA0B,GAAkD,IAAIj6C,MAAA,CAAA2a,UAAU,EAAqC;IAC/H,KAAAu/B,kBAAkB,GAAkD,IAAIl6C,MAAA,CAAA2a,UAAU,EAAqC;IACvH,KAAAw/B,kBAAkB,GAAkD,IAAIn6C,MAAA,CAAA2a,UAAU,EAAqC;IAGpI,IAAI,CAAC6c,OAAO,GAAGjX,OAAO;IAEtB,IAAI,CAAC25B,kBAAkB,GAAG,IAAIl6C,MAAA,CAAA2a,UAAU,EAAqC;IAC7E,IAAI,CAACq/B,0BAA0B,GAAG,IAAIh6C,MAAA,CAAA2a,UAAU,EAAqC;IACrF,IAAI,CAACw/B,kBAAkB,GAAG,IAAIn6C,MAAA,CAAA2a,UAAU,EAAqC;IAC7E,IAAI,CAACs/B,0BAA0B,GAAG,IAAIj6C,MAAA,CAAA2a,UAAU,EAAqC;EACzF;EAEA;;;;;;EAMOi2B,YAAYA,CAACvO,QAAoB;IACpC,MAAM+X,kBAAkB,GAA4B,IAAI,CAAC5iB,OAAO,CAAC7V,eAAe,CAACC,YAAY,CAACygB,QAAQ,CAACxgB,MAAuB,CAAC;IAE/H;IACA,IAAIu4B,kBAAkB,CAAC/H,OAAO,CAACgB,SAAS,IAAI+G,kBAAkB,CAACV,aAAa,CAAC/4B,GAAG,CAAC6C,oBAAA,CAAAmB,YAAY,CAACC,cAAc,CAAC,EAAE;MAC3G,QAAQyd,QAAQ,CAACjgB,SAAS;QACtB,KAAK,IAAI;UAAE;YACP,MAAM,CAAC;UACX;QACA,KAAK,IAAI;UAAE;YACP,IAAI,CAACi4B,mBAAmB,CAACD,kBAAkB,CAAC;YAC5C,IAAI,CAACE,yBAAyB,CAAC,IAAI,CAAC9iB,OAAO,CAAC/U,GAAG,EAAE4f,QAAQ,EAAE+X,kBAAkB,CAAC;YAC9E;UACJ;QACA,KAAK,IAAI;UAAE;YACP,MAAM,CAAC;UACX;MACJ;IAEJ,CAAC,MAAM;MACH;MACA,QAAQ/X,QAAQ,CAACjgB,SAAS;QACtB,KAAK,IAAI;UAAE;YACP,MAAM,CAAC;UACX;QACA,KAAK,IAAI;UAAE;YACP,MAAM,CAAC;UACX;QACA,KAAK,IAAI;UAAE;YACP,MAAM,CAAC;UACX;MACJ;IACJ;EACJ;EAEA;;;;;EAKQk4B,yBAAyBA,CAACC,UAAqB,EAAElY,QAAoB,EAAEhE,OAAgC;IAC3G;IACA,MAAMqR,SAAS,GAAG,CAAC,GAAGvsC,IAAI,CAAC8Y,KAAK,CAAC9Y,IAAI,CAACwsC,IAAI,CAACxsC,IAAI,CAAC4S,GAAG,CAACssB,QAAQ,CAAC//B,KAAK,EAAE+/B,QAAQ,CAAC9/B,MAAM,CAAC,CAAC,CAAC;IAEtF;IACA,MAAMgtB,SAAS,GAAuB,IAAI,CAAC2qB,kBAAkB,CAAC3lC,GAAG,CAAC8pB,OAAO,CAACxc,MAAM,CAAE;IAClF,MAAMyF,gBAAgB,GAAuB,IAAI,CAAC0yB,0BAA0B,CAACzlC,GAAG,CAAC8pB,OAAO,CAACxc,MAAM,CAAE;IAEjG;IACA,MAAM24B,eAAe,GAAsBD,UAAU,CAAC5uB,oBAAoB,EAAE;IAE5E,MAAM8uB,YAAY,GAA0BD,eAAe,CAAClrB,gBAAgB,EAAE;IAC9EmrB,YAAY,CAACzqB,WAAW,CAACT,SAAS,CAAC;IAEnC,KAAK,IAAI8gB,SAAS,GAAW,CAAC,EAAEA,SAAS,GAAGX,SAAS,EAAEW,SAAS,EAAE,EAAE;MAChE;MACAoK,YAAY,CAAC1qB,YAAY,CAAC,CAAC,EAAEwqB,UAAU,CAACp1B,eAAe,CAAC;QACpD7T,MAAM,EAAEgW,gBAAgB;QACxB1E,OAAO,EAAE,CACL;UACI5R,OAAO,EAAE,CAAC;UACVgU,QAAQ,EAAEqd,QAAQ,CAAC+K,UAAU,CAAC;YAC1BvrB,MAAM,EAAEwc,OAAO,CAACxc,MAA0B;YAC1CO,SAAS,EAAE,UAAU;YACrBs4B,YAAY,EAAErK,SAAS,GAAG,CAAC;YAC3BR,aAAa,EAAE;WAClB;SACJ,EACD;UACI7+B,OAAO,EAAE,CAAC;UACVgU,QAAQ,EAAEqd,QAAQ,CAAC+K,UAAU,CAAC;YAC1BvrB,MAAM,EAAEwc,OAAO,CAACxc,MAA0B;YAC1CO,SAAS,EAAE,UAAU;YACrBs4B,YAAY,EAAErK,SAAS;YACvBR,aAAa,EAAE;WAClB;SACJ;OAER,CAAC,CAAC;MAEH;MACA;MACA,MAAM8K,iBAAiB,GAAWx3C,IAAI,CAAC8Y,KAAK,CAAComB,QAAQ,CAAC//B,KAAK,GAAGa,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEitC,SAAS,CAAC,CAAC,IAAI,CAAC;MAC1F,MAAMuK,iBAAiB,GAAWz3C,IAAI,CAAC8Y,KAAK,CAAComB,QAAQ,CAAC9/B,MAAM,GAAGY,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEitC,SAAS,CAAC,CAAC,IAAI,CAAC;MAE3F;MACA,MAAMwK,mBAAmB,GAAG13C,IAAI,CAAC81B,IAAI,CAAE0hB,iBAAiB,GAAGtM,mBAAmB,CAAC0L,4BAA6B,CAAC;MAC7G,MAAMe,mBAAmB,GAAG33C,IAAI,CAAC81B,IAAI,CAAE2hB,iBAAiB,GAAGvM,mBAAmB,CAAC0L,4BAA6B,CAAC;MAE7GU,YAAY,CAACxqB,kBAAkB,CAAC4qB,mBAAmB,EAAEC,mBAAmB,EAAE,CAAC,CAAC;IAChF;IAEA;IACAL,YAAY,CAACvqB,GAAG,EAAE;IAElB;IACAqqB,UAAU,CAAC1uB,KAAK,CAACC,MAAM,CAAC,CAAC0uB,eAAe,CAACzuB,MAAM,EAAE,CAAC,CAAC;EACvD;EAEA;EACA;EAEQsuB,mBAAmBA,CAAChc,OAAgC;IACxD;IACA,IAAI,CAAC,IAAI,CAAC6b,kBAAkB,CAACv5B,GAAG,CAAC0d,OAAO,CAACxc,MAAM,CAAC,EAAE;MAC9C,MAAMk5B,eAAe,GAA0B,CAAC,MAAK;QACjD,QAAQ1c,OAAO,CAACrc,WAAW,CAACC,OAAO;UAC/B,KAAK6uB,0BAAA,CAAAG,iBAAiB,CAACG,KAAK;YAAE,OAAO,KAAK;UAC1C,KAAKN,0BAAA,CAAAG,iBAAiB,CAACuB,eAAe;YAAE,OAAO,KAAK;UACpD,KAAK1B,0BAAA,CAAAG,iBAAiB,CAACyB,aAAa;YAAE,OAAO,KAAK;UAClD;YAAS;cACL,MAAM,IAAI1yC,MAAA,CAAAY,SAAS,CAAC,wDAAwD,EAAE,IAAI,CAAC;YACvF;QACJ;MACJ,CAAC,EAAC,CAAE;MAEJ;MACA,MAAMo6C,OAAO,GAAoB,IAAI,CAACxjB,OAAO,CAAC/U,GAAG,CAACopB,kBAAkB,CAAC;QACjEC,IAAI,EAAE;uFACiEiP,eAAe;2FACX1c,OAAO,CAACxc,MAAM;;mDAEtDwsB,mBAAmB,CAAC0L,4BAA4B,KAAK1L,mBAAmB,CAAC0L,4BAA4B;;;;;;+CAMzGgB,eAAe;;;;;;;;;;;;OAYjD,CAAC;MAEF;MACA,MAAMzzB,gBAAgB,GAAG,IAAI,CAACkQ,OAAO,CAAC/U,GAAG,CAACC,qBAAqB,CAAC;QAC5DE,OAAO,EAAE,CACL;UACI5R,OAAO,EAAE,CAAC;UACViQ,UAAU,EAAEg6B,cAAc,CAACC,OAAO;UAClCp5B,OAAO,EAAE;YACLC,UAAU,EAAEsc,OAAO,CAACrc,WAAW,CAACC,OAAO;YACvCE,aAAa,EAAE;;SAEtB,EACD;UACInR,OAAO,EAAE,CAAC;UACViQ,UAAU,EAAEg6B,cAAc,CAACC,OAAO;UAClC34B,cAAc,EAAE;YACZC,MAAM,EAAE,YAAY;YACpBX,MAAM,EAAEwc,OAAO,CAACxc,MAA0B;YAC1CM,aAAa,EAAE;;SAEtB;OAER,CAAC;MAEF;MACA,MAAMoN,SAAS,GAAuB,IAAI,CAACiI,OAAO,CAAC/U,GAAG,CAACkb,qBAAqB,CAAC;QACzErsB,MAAM,EAAE,IAAI,CAACkmB,OAAO,CAAC/U,GAAG,CAAC+E,oBAAoB,CAAC;UAC1CH,gBAAgB,EAAE,CAACC,gBAAgB;SACtC,CAAC;QACFiW,OAAO,EAAE;UACLrO,MAAM,EAAE8rB,OAAO;UACfxd,UAAU,EAAE;;OAEnB,CAAC;MAEF;MACA,IAAI,CAAC0c,kBAAkB,CAACjnC,GAAG,CAACorB,OAAO,CAACxc,MAAM,EAAE0N,SAAS,CAAC;MACtD,IAAI,CAACyqB,0BAA0B,CAAC/mC,GAAG,CAACorB,OAAO,CAACxc,MAAM,EAAEyF,gBAAgB,CAAC;IACzE;EACJ;;AA7MJzmB,2BAAA,GAAAwtC,mBAAA;;;;;;;;;;;;;;;;;ACPA,MAAAruC,MAAA,GAAAC,mBAAA;AAEA,MAAAk7C,kBAAA,GAAAl7C,mBAAA;AACA,MAAAiO,mBAAA,GAAAjO,mBAAA;AACA,MAAAm7C,oBAAA,GAAAn7C,mBAAA;AAEA,MAAAuf,YAAA,GAAAvf,mBAAA;AAEA,MAAAwc,uBAAA,GAAAxc,mBAAA;AAEA,MAAaif,cAAe,SAAQM,YAAA,CAAAG,SAAqD;EAWrF;;;EAGA,IAAW07B,OAAOA,CAAA;IACd,OAAO,IAAI,CAACC,QAAQ;EACxB;EAAE,IAAID,OAAOA,CAACp6C,MAA8B;IACxC,IAAI,CAACq6C,QAAQ,GAAGr6C,MAAM;IAEtB;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAWC,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACC,YAAY;EAC5B;EAAE,IAAID,WAAWA,CAACx6C,MAAc;IAC5B,IAAI,CAACy6C,YAAY,GAAGz6C,MAAM;IAE1B;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAWG,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACC,YAAY;EAC5B;EAAE,IAAID,WAAWA,CAAC16C,MAAc;IAC5B,IAAI,CAAC26C,YAAY,GAAG36C,MAAM;IAE1B;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAWK,SAASA,CAAA;IAChB,OAAO,IAAI,CAACC,UAAU;EAC1B;EAAE,IAAID,SAASA,CAAC56C,MAAkB;IAC9B,IAAI,CAAC66C,UAAU,GAAG76C,MAAM;IAExB;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAWO,aAAaA,CAAA;IACpB,OAAO,IAAI,CAACC,cAAc;EAC9B;EAAE,IAAID,aAAaA,CAAC96C,MAAc;IAC9B,IAAI,CAAC+6C,cAAc,GAAG/6C,MAAM;IAE5B;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAWS,YAAYA,CAAA;IACnB,OAAO,IAAI,CAAC3P,aAAa;EAC7B;EAEA;;;EAGA,IAAW4P,SAASA,CAAA;IAChB,OAAO,IAAI,CAACC,UAAU;EAC1B;EAAE,IAAID,SAASA,CAACj7C,MAAkB;IAC9B,IAAI,CAACk7C,UAAU,GAAGl7C,MAAM;IAExB;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAWY,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACC,aAAa;EAC7B;EAAE,IAAID,YAAYA,CAACn7C,MAAkB;IACjC,IAAI,CAACo7C,aAAa,GAAGp7C,MAAM;IAE3B;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;EAGA,IAAoBl7B,MAAMA,CAAA;IACtB,OAAO,KAAK,CAACA,MAAM;EACvB;EAEA;;;EAGA,IAAWg8B,QAAQA,CAAA;IACf,OAAO,IAAI,CAACC,SAAS;EACzB;EAAE,IAAID,QAAQA,CAACr7C,MAAoB;IAC/B,IAAI,CAACs7C,SAAS,GAAGt7C,MAAM;IAEvB;IACA,IAAI,CAACiiB,UAAU,CAACq4B,8BAA8B,CAACC,aAAa,CAAC;EACjE;EAEA;;;;;EAKAl7C,YAAmBigB,OAAkB,EAAEvD,OAA4B;IAC/D,KAAK,CAACuD,OAAO,CAAC;IAEd,IAAI,CAAC+rB,aAAa,GAAGtvB,OAAO;IAE5B;IACA,IAAI,CAACs+B,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACiB,SAAS,GAAGnB,oBAAA,CAAAoB,YAAY,CAACC,WAAW;IACzC,IAAI,CAACX,UAAU,GAAGX,kBAAA,CAAAuB,UAAU,CAACC,MAAM;IACnC,IAAI,CAACR,UAAU,GAAGhB,kBAAA,CAAAuB,UAAU,CAACC,MAAM;IACnC,IAAI,CAACN,aAAa,GAAGlB,kBAAA,CAAAuB,UAAU,CAACC,MAAM;IACtC,IAAI,CAACf,YAAY,GAAG,CAAC;IACrB,IAAI,CAACF,YAAY,GAAG,EAAE;IACtB,IAAI,CAACM,cAAc,GAAG,EAAE;IAExB;IACAh/B,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACq4B,8BAA8B,CAACn4B,MAAM,CAAC;IAC1D,CAAC,EAAE,CAAC3G,uBAAA,CAAAggB,mCAAmC,CAAChrB,WAAW,CAAC,CAAC;EACzD;EAEA;;;EAGmBoP,cAAcA,CAAA;IAC7B;IACA,MAAM+7B,eAAe,GAAyB;MAC1Cj6B,KAAK,EAAE,iBAAiB;MACxBk6B,YAAY,EAAE,IAAI,CAACP,QAAQ;MAC3BQ,YAAY,EAAE,IAAI,CAACR,QAAQ;MAC3BS,YAAY,EAAE,IAAI,CAACT,QAAQ;MAC3BT,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBK,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBE,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BX,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BI,aAAa,EAAE,IAAI,CAACA;KACvB;IAED;IACA,IAAI,IAAI,CAACE,YAAY,CAACx6B,WAAW,KAAKvT,mBAAA,CAAAuD,WAAW,CAACurC,UAAU,EAAE;MAC1D,IAAI,CAAC,IAAI,CAAC3B,OAAO,EAAE;QACf,MAAM,IAAIr7C,MAAA,CAAAY,SAAS,CAAC,sDAAsD,EAAE,IAAI,CAAC;MACrF;MACAg8C,eAAe,CAACvB,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1C;IAEA,OAAO,IAAI,CAAC98B,MAAM,CAACkE,GAAG,CAAC3P,aAAa,CAAC8pC,eAAe,CAAC;EACzD;;AA9KJ/7C,sBAAA,GAAAqe,cAAA;AAiLA,IAAYq8B,8BAGX;AAHD,WAAYA,8BAA8B;EACtCA,8BAAA,2BAAuB;EACvBA,8BAAA,yCAAqC;AACzC,CAAC,EAHWA,8BAA8B,KAAA16C,sCAAA,GAA9B06C,8BAA8B;;;;;;;;;;;;;;;;;AC3L1C,MAAAntC,wBAAA,GAAAnO,mBAAA;AAEA,MAAAyc,uBAAA,GAAAzc,mBAAA;AACA,MAAAwjB,cAAA,GAAAxjB,mBAAA;AAEA,MAAaqf,YAAa,SAAQmE,cAAA,CAAAiB,WAAyC;EAIvE;;;EAGA,IAAWniB,MAAMA,CAAA;IACb,OAAO,IAAI,CAAC06C,MAAM,CAACC,WAAW;EAClC;EAEA;;;EAGA,IAAWC,IAAIA,CAAA;IACX,OAAO,IAAI,CAACF,MAAM,CAACE,IAAI;EAC3B;EAAE,IAAIA,IAAIA,CAACl8C,MAAe;IACtB,IAAI,CAACg8C,MAAM,CAACE,IAAI,GAAGl8C,MAAM;EAC7B;EAEA;;;EAGA,IAAWse,MAAMA,CAAA;IACb,OAAO,IAAI,CAAC09B,MAAM,CAACvO,GAAG;EAC1B;EAAE,IAAInvB,MAAMA,CAACte,MAAc;IACvB,IAAI,CAACg8C,MAAM,CAACvO,GAAG,GAAGztC,MAAM;EAC5B;EAEA;;;EAGA,IAAWm8C,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACH,MAAM;EACtB;EAEA;;;EAGA,IAAW36C,KAAKA,CAAA;IACZ,OAAO,IAAI,CAAC26C,MAAM,CAACI,UAAU;EACjC;EAEA;;;;;;EAMA/8C,YAAmBigB,OAAkB,EAAEvD,OAA4B;IAC/D,KAAK,CAACuD,OAAO,EAAEvD,OAAO,CAAC;IAEvB,IAAI,CAAC0wB,QAAQ,GAAG,IAAI;IAEpB;IACA,IAAI,CAACuP,MAAM,GAAG,IAAIK,gBAAgB,EAAE;IACpC,IAAI,CAACL,MAAM,CAACE,IAAI,GAAG,KAAK;IACxB,IAAI,CAACF,MAAM,CAACM,KAAK,GAAG,IAAI,CAAC,CAAC;IAE1B;IACAvgC,OAAO,CAAChG,uBAAuB,CAAC,MAAK;MACjC,IAAI,CAACkM,UAAU,CAACs6B,4BAA4B,CAACp6B,MAAM,CAAC;IACxD,CAAC,EAAE,CAAC1G,uBAAA,CAAAkgB,mCAAmC,CAAC+Q,SAAS,EAAEjxB,uBAAA,CAAAkgB,mCAAmC,CAAC+P,MAAM,CAAC,CAAC;IAE/F;IACA,IAAI,CAACpuB,MAAM,CAAC8X,sBAAsB,CAAC,MAAK;MACpC,IAAI,IAAI,CAACqX,QAAQ,EAAE;QACf;MAAA;IAER,CAAC,CAAC;EACN;EAEA;;;EAGO+P,KAAKA,CAAA;IACR,IAAI,CAACR,MAAM,CAACQ,KAAK,EAAE;EACvB;EAEA;;;EAGOC,IAAIA,CAAA;IACP,IAAI,CAACT,MAAM,CAACS,IAAI,EAAE;EACtB;EAEA;;;;EAImBpwB,aAAaA,CAACsf,cAA8B;IAC3D,IAAI,CAACc,QAAQ,EAAErgB,OAAO,EAAE;IACxB,IAAI,CAACqgB,QAAQ,GAAG,IAAI;EACxB;EAEA;;;EAGmB7sB,cAAcA,CAAA;IAC7B;IAEA;IACA,MAAM88B,aAAa,GAAwB,CAAC,MAAK;MAC7C,QAAQ,IAAI,CAACrsC,MAAM,CAAC8Q,SAAS;QACzB,KAAKhU,wBAAA,CAAAwD,gBAAgB,CAACw9B,YAAY;UAAE;YAChC,OAAO,IAAI;UACf;QACA,KAAKhhC,wBAAA,CAAAwD,gBAAgB,CAAC4kB,YAAY;UAAE;YAChC,OAAO,IAAI;UACf;QACA,KAAKpoB,wBAAA,CAAAwD,gBAAgB,CAACC,iBAAiB;UAAE;YACrC,OAAO,IAAI;UACf;QACA,KAAKzD,wBAAA,CAAAwD,gBAAgB,CAAC29B,IAAI;UAAE;YACxB,OAAO,IAAI;UACf;QACA,KAAKnhC,wBAAA,CAAAwD,gBAAgB,CAAC49B,SAAS;UAAE;YAC7B,OAAO,IAAI;UACf;QACA,KAAKphC,wBAAA,CAAAwD,gBAAgB,CAAC69B,cAAc;UAAE;YAClC,OAAO,IAAI;UACf;MACJ;IACJ,CAAC,EAAC,CAAE;IAEJ;IACA,IAAI,CAAC/B,QAAQ,GAAG,IAAI,CAACnvB,MAAM,CAACkE,GAAG,CAACorB,aAAa,CAAC;MAC1ClrB,KAAK,EAAE,sBAAsB;MAC7B4E,IAAI,EAAE,CAAC,IAAI,CAACjlB,KAAK,EAAE,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;MAClCsf,MAAM,EAAE,IAAI,CAACvQ,MAAM,CAACuQ,MAA0B;MAC9CwJ,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBjJ,SAAS,EAAEu7B;KACd,CAAC;IAEF;IACA,OAAO,IAAI,CAACjQ,QAAQ,CAACN,UAAU,CAAC;MAC5BvrB,MAAM,EAAE,IAAI,CAACvQ,MAAM,CAACuQ,MAA0B;MAC9CO,SAAS,EAAE,IAAI,CAAC9Q,MAAM,CAAC8Q;KAC1B,CAAC;EACN;EAEA;;;EAGmBoqB,aAAaA,CAAA;IAC5B,IAAI,CAACtpB,UAAU,CAACs6B,4BAA4B,CAAC3M,KAAK,CAAC;EACvD;;AAlJJhwC,oBAAA,GAAAye,YAAA;AAqJA,IAAYk+B,4BAGX;AAHD,WAAYA,4BAA4B;EACpCA,4BAAA,2BAAuB;EACvBA,4BAAA,yBAAqB;AACzB,CAAC,EAHWA,4BAA4B,KAAA38C,oCAAA,GAA5B28C,4BAA4B;;;;;;;;;;;;;;;;;AC1JxC,IAAYj5B,WAcX;AAdD,WAAYA,WAAW;EACnBA,WAAA,CAAAA,WAAA,sBAAQ;EACRA,WAAA,CAAAA,WAAA,YAAQ+G,cAAc,CAACsyB,KAAK;EAC5Br5B,WAAA,CAAAA,WAAA,aAAS+G,cAAc,CAACuyB,MAAM;EAC9Bt5B,WAAA,CAAAA,WAAA,cAAU+G,cAAc,CAACwyB,OAAO;EAChCv5B,WAAA,CAAAA,WAAA,cAAU+G,cAAc,CAACyyB,OAAO;EAChCx5B,WAAA,CAAAA,WAAA,eAAW+G,cAAc,CAAC0yB,QAAQ;EAClCz5B,WAAA,CAAAA,WAAA,iBAAa+G,cAAc,CAACwB,QAAQ;EACpCvI,WAAA,CAAAA,WAAA,sBAAkB+G,cAAc,CAACE,QAAQ;EAEzC;EACA;EACA;EACA;AACJ,CAAC,EAdWjH,WAAW,KAAA1jB,mBAAA,GAAX0jB,WAAW;;;;;;;;;;;;;;;;;ACAvB,IAAYoiB,eASX;AATD,WAAYA,eAAe;EACvBA,eAAA,mBAAe;EACfA,eAAA,iBAAa;EACbA,eAAA,mBAAe;EACfA,eAAA,4BAAwB;EACxBA,eAAA,uBAAmB;EACnBA,eAAA,0BAAsB;EACtBA,eAAA,kCAA8B;EAC9BA,eAAA,sBAAkB;AACtB,CAAC,EATWA,eAAe,KAAA9lC,uBAAA,GAAf8lC,eAAe;;;;;;;;;;;;;;;;;ACA3B,IAAY72B,YAKX;AALD,WAAYA,YAAY;EACpBA,YAAA,CAAAA,YAAA,sBAAQ;EACRA,YAAA,CAAAA,YAAA,eAAWmrC,cAAc,CAACgD,QAAQ;EAClCnuC,YAAA,CAAAA,YAAA,aAASmrC,cAAc,CAAC4C,MAAM;EAC9B/tC,YAAA,CAAAA,YAAA,cAAUmrC,cAAc,CAACC,OAAO;AACpC,CAAC,EALWprC,YAAY,KAAAjP,oBAAA,GAAZiP,YAAY;;;;;;;;;;;;;;;;;ACAxB,IAAY4sC,UAGX;AAHD,WAAYA,UAAU;EAClBA,UAAA,uBAAmB;EACnBA,UAAA,qBAAiB;AACrB,CAAC,EAHWA,UAAU,KAAA77C,kBAAA,GAAV67C,UAAU;;;;;;;;;;;;;;;;;ACAtB,IAAYtpC,iBAIX;AAJD,WAAYA,iBAAiB;EACzBA,iBAAA,iBAAa;EACbA,iBAAA,mBAAe;EACfA,iBAAA,iBAAa;AACjB,CAAC,EAJWA,iBAAiB,KAAAvS,yBAAA,GAAjBuS,iBAAiB;;;;;;;;;;;;;;;;;ACA7B,IAAY4zB,kBAGX;AAHD,WAAYA,kBAAkB;EAC1BA,kBAAA,2BAAuB;EACvBA,kBAAA,qBAAiB;AACrB,CAAC,EAHWA,kBAAkB,KAAAnmC,0BAAA,GAAlBmmC,kBAAkB;;;;;;;;;;;;;;;;;ACA9B,IAAYH,iBAMX;AAND,WAAYA,iBAAiB;EACzBA,iBAAA,4BAAwB;EACxBA,iBAAA,0BAAsB;EACtBA,iBAAA,4BAAwB;EACxBA,iBAAA,kCAA8B;EAC9BA,iBAAA,oCAAgC;AACpC,CAAC,EANWA,iBAAiB,KAAAhmC,yBAAA,GAAjBgmC,iBAAiB;;;;;;;;;;;;;;;;;ACA7B,IAAYp1B,WAIX;AAJD,WAAYA,WAAW;EACnBA,WAAA,wBAAoB;EACpBA,WAAA,mCAA+B;EAC/BA,WAAA,6BAAyB;AAC7B,CAAC,EAJWA,WAAW,KAAA5Q,mBAAA,GAAX4Q,WAAW;;;;;;;;;;;;;;;;;ACAvB,IAAYN,kBAKX;AALD,WAAYA,kBAAkB;EAC1BA,kBAAA,CAAAA,kBAAA,sBAAQ;EACRA,kBAAA,CAAAA,kBAAA,sBAAQ;EACRA,kBAAA,CAAAA,kBAAA,wBAAS;EACTA,kBAAA,CAAAA,kBAAA,gCAAa;AACjB,CAAC,EALWA,kBAAkB,KAAAtQ,0BAAA,GAAlBsQ,kBAAkB;;;;;;;;;;;;;;;;;ACA9B,IAAY6zB,aAOX;AAPD,WAAYA,aAAa;EACrBA,aAAA,eAAW;EACXA,aAAA,mBAAe;EACfA,aAAA,iBAAa;EACbA,aAAA,mBAAe;EACfA,aAAA,uBAAmB;EACnBA,aAAA,mBAAe;AACnB,CAAC,EAPWA,aAAa,KAAAnkC,qBAAA,GAAbmkC,aAAa;;;;;;;;;;;;;;;;;ACAzB,IAAYpzB,gBAOX;AAPD,WAAYA,gBAAgB;EACxBA,gBAAA,uBAAmB;EACnBA,gBAAA,uBAAmB;EACnBA,gBAAA,kCAA8B;EAC9BA,gBAAA,iBAAa;EACbA,gBAAA,4BAAwB;EACxBA,gBAAA,yBAAqB;AACzB,CAAC,EAPWA,gBAAgB,KAAA/Q,wBAAA,GAAhB+Q,gBAAgB;;;;;;;;;;;;;;;;;ACA5B,IAAYE,aAwHX;AAxHD,WAAYA,aAAa;EACrB;EACAA,aAAA,uBAAmB;EACnBA,aAAA,uBAAmB;EACnBA,aAAA,qBAAiB;EACjBA,aAAA,qBAAiB;EAEjB;EACAA,aAAA,uBAAmB;EACnBA,aAAA,uBAAmB;EACnBA,aAAA,yBAAqB;EACrBA,aAAA,yBAAqB;EACrBA,aAAA,yBAAqB;EACrBA,aAAA,uBAAmB;EACnBA,aAAA,uBAAmB;EAEnB;EACAA,aAAA,uBAAmB;EACnBA,aAAA,uBAAmB;EACnBA,aAAA,yBAAqB;EACrBA,aAAA,yBAAqB;EACrBA,aAAA,yBAAqB;EACrBA,aAAA,2BAAuB;EACvBA,aAAA,6BAAyB;EACzBA,aAAA,sCAAkC;EAClCA,aAAA,6BAAyB;EACzBA,aAAA,2BAAuB;EACvBA,aAAA,2BAAuB;EACvBA,aAAA,6BAAyB;EACzBA,aAAA,sCAAkC;EAElC;EACAA,aAAA,iCAA6B;EAC7BA,aAAA,+BAA2B;EAC3BA,aAAA,iCAA6B;EAC7BA,aAAA,mCAA+B;EAE/B;EACAA,aAAA,yBAAqB;EACrBA,aAAA,yBAAqB;EACrBA,aAAA,2BAAuB;EACvBA,aAAA,6BAAyB;EACzBA,aAAA,6BAAyB;EACzBA,aAAA,+BAA2B;EAE3B;EACAA,aAAA,6BAAyB;EACzBA,aAAA,6BAAyB;EACzBA,aAAA,+BAA2B;EAE3B;EACAA,aAAA,yBAAqB;EACrBA,aAAA,iCAA6B;EAC7BA,aAAA,+BAA2B;EAC3BA,aAAA,+CAA2C;EAC3CA,aAAA,iCAA6B;EAE7B;EACAA,aAAA,iDAA6C;EAE7C;EACA;EACAA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,6BAAyB;EACzBA,aAAA,6BAAyB;EACzBA,aAAA,+BAA2B;EAC3BA,aAAA,+BAA2B;EAC3BA,aAAA,qCAAiC;EACjCA,aAAA,mCAA+B;EAC/BA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EAExC;EACA;EACAA,aAAA,oCAAgC;EAChCA,aAAA,6CAAyC;EACzCA,aAAA,wCAAoC;EACpCA,aAAA,iDAA6C;EAC7CA,aAAA,sCAAkC;EAClCA,aAAA,+CAA2C;EAC3CA,aAAA,gCAA4B;EAC5BA,aAAA,gCAA4B;EAC5BA,aAAA,kCAA8B;EAC9BA,aAAA,kCAA8B;EAE9B;EACA;EACAA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,mCAA+B;EAC/BA,aAAA,4CAAwC;EACxCA,aAAA,qCAAiC;EACjCA,aAAA,8CAA0C;EAC1CA,aAAA,qCAAiC;EACjCA,aAAA,8CAA0C;EAC1CA,aAAA,qCAAiC;EACjCA,aAAA,8CAA0C;EAC1CA,aAAA,uCAAmC;EACnCA,aAAA,gDAA4C;EAC5CA,aAAA,uCAAmC;EACnCA,aAAA,gDAA4C;EAC5CA,aAAA,uCAAmC;EACnCA,aAAA,gDAA4C;AAChD,CAAC,EAxHWA,aAAa,KAAAjR,qBAAA,GAAbiR,aAAa;;;;;;;;;;;;;;;;;ACAzB,IAAYkwB,gBAGX;AAHD,WAAYA,gBAAgB;EACxBA,gBAAA,iBAAa;EACbA,gBAAA,mBAAe;AACnB,CAAC,EAHWA,gBAAgB,KAAAnhC,wBAAA,GAAhBmhC,gBAAgB;;;;;;;;;;;;;;;;;ACA5B,IAAYiP,iBAMX;AAND,WAAYA,iBAAiB;EACzBA,iBAAA,mBAAe;EACfA,iBAAA,0BAAsB;EACtBA,iBAAA,4BAAwB;EACxBA,iBAAA,4CAAwC;EACxCA,iBAAA,mBAAe;AACnB,CAAC,EANWA,iBAAiB,KAAApwC,yBAAA,GAAjBowC,iBAAiB;;;;;;;;;;;;;;;;;ACA7B,IAAYtsB,YAOX;AAPD,WAAYA,YAAY;EACpBA,YAAA,CAAAA,YAAA,sBAAQ;EACRA,YAAA,CAAAA,YAAA,iBAAau5B,eAAe,CAACpxB,QAAQ;EACrCnI,YAAA,CAAAA,YAAA,sBAAkBu5B,eAAe,CAAC1yB,QAAQ;EAC1C7G,YAAA,CAAAA,YAAA,qBAAiBu5B,eAAe,CAACC,eAAe;EAChDx5B,YAAA,CAAAA,YAAA,cAAUu5B,eAAe,CAACE,eAAe;EACzCz5B,YAAA,CAAAA,YAAA,uBAAmBu5B,eAAe,CAACG,iBAAiB;AACxD,CAAC,EAPW15B,YAAY,KAAA9jB,oBAAA,GAAZ8jB,YAAY;;;;;;;;;;;;;;;;;ACAxB,IAAYtU,uBAIX;AAJD,WAAYA,uBAAuB;EAC/BA,uBAAA,0BAAsB;EACtBA,uBAAA,wBAAoB;EACpBA,uBAAA,8BAA0B;AAC9B,CAAC,EAJWA,uBAAuB,KAAAxP,+BAAA,GAAvBwP,uBAAuB;;;;;;;;;;;;;;;;;ACAnC,IAAYmsC,YAIX;AAJD,WAAYA,YAAY;EACpBA,YAAA,iCAA6B;EAC7BA,YAAA,qBAAiB;EACjBA,YAAA,kCAA8B;AAClC,CAAC,EAJWA,YAAY,KAAA37C,oBAAA,GAAZ27C,YAAY;;;;;;;;;;;ACAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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YAAY,YAAY,YAAY,aAAa,YAAY,eAAe,aAAa,aAAa,cAAc,cAAc,aAAa,eAAe,cAAc,aAAa,aAAa,cAAc,eAAe,eAAe,eAAe,eAAe,eAAe,eAAe,cAAc,eAAe,aAAa,cAAc,cAAc,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,eAAe,cAAc,aAAa,YAAY,eAAe,eAAe,eAAe,cAAc,eAAe,aAAa,cAAc,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,cAAc,cAAc,eAAe,eAAe,cAAc,eAAe,aAAa,cAAc,cAAc,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,eAAe,cAAc,aAAa,YAAY,eAAe,eAAe,eAAe,cAAc,eAAe,aAAa,eAAe,eAAe,eAAe,eAAe,cAAc,aAAa,eAAe,cAAc,aAAa,aAAa,YAAY,WAAW,WAAW,cAAc,cAAc,eAAe,eAAe,aAAa,aAAa,cAAc,aAAa,aAAa,eAAe,aAAa,YAAY,YAAY,YAAY,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,eAAe,eAAe,eAAe,eAAe,eAAe,aAAa,aAAa,cAAc,aAAa,cAAc,cAAc,gBAAgB,aAAa,YAAY,cAAc,aAAa,cAAc,eAAe,WAAW,WAAW,WAAW,gBAAgB,WAAW,YAAY,cAAc,YAAY,gBAAgB,YAAY,YAAY,YAAY,cAAc,cAAc,aAAa,cAAc,cAAc,gBAAgB,aAAa,YAAY,cAAc,aAAa,cAAc,eAAe,WAAW,WAAW,WAAW,gBAAgB,WAAW,YAAY,eAAe,cAAc,YAAY,gBAAgB,YAAY,YAAY,YAAY,cAAc,iBAAiB,cAAc,YAAY,aAAa,eAAe,cAAc,cAAc,cAAc,cAAc,eAAe,cAAc,aAAa,cAAc,gBAAgB,aAAa,aAAa,aAAa,aAAa,aAAa,cAAc,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,aAAa,cAAc,cAAc,cAAc,aAAa,cAAc,WAAW,aAAa,YAAY,cAAc,eAAe,cAAc,aAAa,cAAc,YAAY,YAAY,WAAW,YAAY,YAAY,YAAY,eAAe,YAAY,aAAa,cAAc,WAAW,cAAc,WAAW,WAAW,YAAY,YAAY,aAAa,aAAa,aAAa,cAAc,eAAe,aAAa,aAAa,cAAc,cAAc,eAAe,eAAe,aAAa,aAAa,YAAY,eAAe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A;AACA;AACA;AACA,0BAA0B,8DAAQ,CAAC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI,8CAAG;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,EAAE,qEAAyB;AAC3B,EAAE,0DAAW;AACb;AACA;AACA;AACA;AACA,iEAAkB;AAClB;AACA;AACA,CAAC;AACD,8CAA8C,0DAAa;AAC3D;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,IAAI,8CAAG;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,qDAAqD;AACpE;AACA;AACA;AACA,MAAM,8CAAG;AACT;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,IAAI,8CAAG;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf,GAAG;AACH;AACA,IAAI,iEAAW;AACf;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,+DAAS;AACb,GAAG;AACH;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,8CAAG;AACP;AACA,GAAG;AACH;AACA,aAAa,QAAQ;AACrB;AACA;AACA,IAAI,8CAAG;AACP;AACA,GAAG;AACH;AACA,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA;AACA,IAAI,8CAAG;AACP;AACA,2BAA2B,0DAAa;AACxC;AACA;AACA,4CAA4C,+DAAS;AACrD,KAAK;AACL,IAAI,iEAAW;AACf,oBAAoB,8BAA8B;AAClD,MAAM,8CAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAS;AACb,GAAG;AACH;AACA,aAAa,SAAS;AACtB;AACA;AACA,IAAI,8CAAG;AACP;AACA,4BAA4B,0DAAa;AACzC;AACA;AACA,4CAA4C,+DAAS;AACrD,KAAK;AACL,IAAI,iEAAW;AACf,oBAAoB,4BAA4B;AAChD,MAAM,8CAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA,aAAa,OAAO;AACpB;AACA;AACA,IAAI,8CAAG;AACP,GAAG;AACH;AACA,IAAI,8CAAG;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI,iEAAW;AACf;AACA;AACA,gBAAgB,qEAAe;AAC/B,sDAAM;;;;;;;;;;AC/TN,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,mFAAmF,WAAW;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA,mBAAmB,QAAQ;AAC3B;AACA,mBAAmB,QAAQ;AAC3B;AACA,kBAAkB,OAAO;AACzB;AACA,oBAAoB,SAAS;AAC7B;;AAEA,oBAAoB,SAAS;AAC7B;;AAEA,oBAAoB,SAAS;AAC7B;AACA,6BAA6B,kBAAkB;AAC/C;AACA,uBAAuB,YAAY;AACnC;;AAEA,sBAAsB,WAAW;AACjC;AACA,yBAAyB,cAAc;AACvC;;AAEA,mBAAmB,QAAQ;AAC3B;;AAEA,oBAAoB,SAAS;AAC7B;AACA,qBAAqB,UAAU;AAC/B,CAAC;;AAED;;AAEA,cAAc,sCAAsC;;AAEpD,0EAA0E,WAAW;AACrF,6EAA6E,WAAW;AACxF,wFAAwF,WAAW;AACnG;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,sDAAsD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mGAAmG,eAAe;AAClH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gFAAgF,iBAAiB;AACjG;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA,kDAAkD,gCAAmB;;AAErE;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,WAAW,mFAAmF,WAAW;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA,eAAe,gCAAmB;AAClC;;AAEA,cAAc,6DAA6D;AAC3E,cAAc,yDAAyD;AACvE,cAAc,gCAAgC;;AAE9C,cAAc,2BAA2B;;AAEzC;AACA,aAAa,QAAQ;AACrB,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC,cAAc,2BAA2B;AACzC;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,yDAAyD;AACvE,cAAc,qBAAqB;AACnC,cAAc,eAAe;AAC7B;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,aAAa,4CAA4C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,mBAAmB;AACrC,aAAa,QAAQ;AACrB;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA,kDAAkD,gCAAmB;;AAErE;AACA;AACA;AACA;;;;AAIA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC,eAAe,gCAAmB;AAClC;AACA,0BAA0B,gCAAmB;;AAE7C,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAmB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,gBAAgB,gCAAmB,wBAAwB,gCAAmB;AAC9E,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,gCAAmB,2BAA2B;AACzD,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,kEAAkE,iBAAiB;AACnF;AACA,2DAA2D,aAAa;AACxE;AACA,WAAW;AACX;AACA;AACA,IAAI,0BAAmB;AACvB;AACA;AACA;AACA;AACA;AACA,gCAAmB,GAAG,0BAAmB;AACzC,qBAAqB,gCAAmB,GAAG,0BAAmB;AAC9D,+CAA+C;AAC/C,sBAAsB;AACtB,uFAAuF,gCAAmB;;AAE1G,CAAC;AACD;AACA,aAAa,0BAAmB,iCAAiC,0BAAmB;AACpF,GAAG,0BAAmB,8EAA8E,aAAa;AACjH,UAAU;AACV;;;;;;;;;;;;;;;;;;;;;;;ACvtBA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;AAC1e,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA;;AAE2C;AACJ;AAC2E;AACpD;AAC4E;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAkB;;AAElB;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY,oEAAoE,oBAAoB;AAC/G,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B,cAAc,kCAAkC;AAChD;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA,aAAa,sCAAsC;AACnD;AACA,aAAa,mCAAmC;AAChD;AACA,aAAa,mCAAmC;AAChD;AACA,aAAa,0CAA0C;AACvD;AACA,aAAa,+BAA+B;AAC5C;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uCAAuC,2DAAW;AAClD;AACA,sCAAsC,UAAU;AAChD,iBAAiB,mBAAmB;AACpC;AACA,oCAAoC,UAAU;AAC9C,iBAAiB,mBAAmB;AACpC;AACA;AACA,iCAAiC,8DAAc;AAC/C;AACA;AACA,gCAAgC,2DAAW;AAC3C;AACA,qCAAqC,kEAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA,iBAAiB,UAAU;AAC3B,iBAAiB,mBAAmB;AACpC;AACA;AACA,2BAA2B,gBAAgB;AAC3C,OAAO;AACP;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB,gFAAgF,GAAG;AAClH,aAAa,eAAe;AAC5B,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yDAAS,WAAW,yDAAS;AACzE,+DAA+D,eAAe;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAY;AAC5C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,mBAAmB,0DAAQ,CAAC,qDAAM;AAClC;AACA,oCAAoC,4DAAY;AAChD;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,OAAO;AACP,KAAK;AACL;AACA,uBAAuB,qEAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,eAAe,mBAAmB;AAClC,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6EAAkB;AACrC,WAAW;AACX,SAAS;AACT;AACA;AACA,IAAI,+EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,qFAA0B;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;AC1QA,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;AACvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;AAC1e,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,+BAA+B,uCAAuC;AACtE,qCAAqC,+DAA+D,sCAAsC,0BAA0B,+CAA+C,yCAAyC,uEAAuE;AACnU;AACA,aAAa,QAAQ;AACrB,eAAe,mBAAmB,gBAAgB,4BAA4B;AAC9E;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,oCAAoC;AACnD,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,4DAA4D;AAC3E;;AAEA;AACA;AACA;AACA;AACA,gFAAgF,mCAAmC;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;;;AC/D5B;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uBAAuB;AAClC,aAAa;AACb;;AAEA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7CqC;;AAErC;AACA,aAAa,QAAQ;AACrB,cAAc,qBAAqB;AACnC,cAAc,kBAAkB,gFAAgF,GAAG;AACnH,cAAc,qBAAqB;AACnC;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,iCAAiC;AAC/C,cAAc,YAAY;AAC1B;;AAEA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA,uBAAuB,mDAAa;AACpC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,oBAAoB;;;;;;;;;;;;;;;;;;;;;ACnGnC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxEA;;AAE2D;AACtB;;AAErC;AACA;AACA;AACA;AACA,OAAO,6BAA6B,0BAA0B,6BAA6B,2BAA2B,6BAA6B,WAAW,6BAA6B,GAAG,mEAAe;AAC7M;;AAEA;AACA;;AAEA;AACA;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,aAAa,wDAAwD;AACrE,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8CAAG;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,MAAM;;;;;;;;;;;;;;;ACjErB;AACA,aAAa,4IAA4I;AACzJ,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,WAAW,QAAQ,+BAA+B;AAClD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,eAAe;;;;;;;;;;;;;;;ACxH9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAe,sBAAsB;;;;;;;;;;;;;;;;;;;ACvBW;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uEAAuE;AAClF,aAAa;AACb;AACA;AACA,EAAE,sFAA6B;AAC/B;AACA,GAAG;AACH;AACA;AACA,UAAU,yEAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjCiE;;AAEjE;AACA,WAAW,QAAQ;AACnB,eAAe;AACf;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,sEAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;;;;;ACnCyB;AACjB;;AAE/B,cAAc,4BAA4B;AAC1C,cAAc,2BAA2B;;AAEzC;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,IAAI,wCAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wCAAG;AACP,IAAI,kEAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;;AC9DxB;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;;ACftB,sDAAsD,gBAAgB,6CAA6C,oDAAoD,IAAI,IAAI,IAAI,IAAI;;AAEvL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;ACjBxB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAU;AACd,YAAY,kBAAkB;AAC9B;AACA;AACA,oBAAoB,QAAQ,sBAAsB,uBAAgB;AAClE;AACA,WAAW,mBAAO,CAAC,oDAAO;AAC1B;AACA,EAAE,UAAU;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,mBAAO,CAAC,8EAAoB;;AAEhC;AACA;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,kBAAkB,mBAAO,CAAC,4DAAW;AACrC;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE,KAAK,EAEN;;;;;;;;;;;AC1ED,mBAAmB,mBAAO,CAAC,mDAAQ;AACnC;;;;;;;;;;;ACDA;AACA;AACA;AACA;;AAEA;AACA,WAAW,qBAAqB;AAChC,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA,EAAE;AACF,WAAW,mBAAO,CAAC,oDAAO;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChDA,cAAc,8BAA8B;;AAE5C,WAAW,UAAU;AACrB;;AAEA;;AAEA;AACA,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,wBAAwB;AACnC,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;;AAEpB,6BAA6B;;AAE7B,uBAAuB;;AAEvB;AACA,WAAW,UAAU;AACrB;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC9Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8BAA8B;AACvD,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kEAAkE;AAC1G;AACA;AACA,wCAAwC,kEAAkE;AAC1G;AACA;AACA;AACA;AACA;AACA,wCAAwC,gEAAgE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB,mBAAmB,mBAAmB;AACzD;;;;;;;;;;;AC9Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,eAAe,mBAAO,CAAC,4EAAQ;AAC/B,oBAAoB,mBAAO,CAAC,4FAAwB;AACpD;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,qBAAqB,GAAG,mCAAmC,GAAG,+BAA+B,KAAK,qBAAqB;AACvI;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;;AC9Ia;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,uDAAuD;AACvD;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,YAAY;AACZ;;;;;;;;;;;ACnLa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,wCAAwC;AACxC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;;;;;;;;;ACpKa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA,YAAY,aAAa,MAAM,wBAAwB;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;;ACjCa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,aAAa,GAAG,iBAAiB,GAAG,YAAY,GAAG,kBAAkB;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,uGAA6B;AACxD,8CAA6C,EAAE,qCAAqC,mCAAmC,EAAC;AACxH,aAAa,mBAAO,CAAC,2FAAuB;AAC5C,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;AACtG,kBAAkB,mBAAO,CAAC,2FAAuB;AACjD,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH,cAAc,mBAAO,CAAC,6FAAwB;AAC9C,yCAAwC,EAAE,qCAAqC,yBAAyB,EAAC;AACzG;AACA,kBAAkB,mBAAO,CAAC,iFAAkB;AAC5C,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,kBAAkB,mBAAO,CAAC,iFAAkB;AAC5C,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH;AACA,mBAAmB,mBAAO,CAAC,6FAAwB;AACnD,+CAA8C,EAAE,qCAAqC,oCAAoC,EAAC;AAC1H,6CAA4C,EAAE,qCAAqC,kCAAkC,EAAC;AACtH;;;;;;;;;;;AC9Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACrHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACpCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,eAAe,mBAAO,CAAC,4EAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;;;;AC5Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,eAAe,mBAAO,CAAC,4EAAsB;AAC7C,iCAAiC,mBAAO,CAAC,sHAAgC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;;;;;;;;;;ACrDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,eAAe,mBAAO,CAAC,4EAAsB;AAC7C,iCAAiC,mBAAO,CAAC,sHAAgC;AACzE,iCAAiC,mBAAO,CAAC,yHAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iEAAiE;AACpG,kCAAkC,iEAAiE;AACnG,iCAAiC,iEAAiE;AAClG,gCAAgC,iEAAiE;AACjG,0BAA0B,iEAAiE;AAC3F,2BAA2B,iEAAiE;AAC5F,2BAA2B,iEAAiE;AAC5F,4BAA4B,iEAAiE;AAC7F,4BAA4B,iEAAiE;AAC7F,2BAA2B,iEAAiE;AAC5F,0BAA0B,kEAAkE;AAC5F,iCAAiC,kEAAkE;AACnG,oCAAoC,kEAAkE;AACtG,mCAAmC,kEAAkE;AACrG,kCAAkC,kEAAkE;AACpG,oCAAoC,kEAAkE;AACtG,mCAAmC,+DAA+D;AAClG,mCAAmC,+DAA+D;AAClG,qCAAqC,kEAAkE;AACvG,oCAAoC,+DAA+D;AACnG,oCAAoC,+DAA+D;AACnG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2CAA2C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;;AC9Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,eAAe,mBAAO,CAAC,4EAAsB;AAC7C,+BAA+B,mBAAO,CAAC,sHAAgC;AACvE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;;ACnEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B,sCAAsC,mBAAO,CAAC,oIAAuC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;;;;;;;;;;ACba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,eAAe,mBAAO,CAAC,4EAAsB;AAC7C,6BAA6B,mBAAO,CAAC,gHAA6B;AAClE,6BAA6B,mBAAO,CAAC,gHAA6B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;;;;;AC5Ja;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,eAAe,mBAAO,CAAC,4EAAsB;AAC7C,8BAA8B,mBAAO,CAAC,gHAA6B;AACnE,4BAA4B,mBAAO,CAAC,4GAA2B;AAC/D,4BAA4B,mBAAO,CAAC,wGAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;;AC9Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC;AAChC,4BAA4B,mBAAO,CAAC,4GAA2B;AAC/D,4BAA4B,mBAAO,CAAC,4GAA2B;AAC/D,4BAA4B,mBAAO,CAAC,wGAAqB;AACzgCAAgC;AAChC;;;;;;;;;;;AC7Ga;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB;AACA;AACA;AACA;AACA,CAAC,sBAAsB,uBAAuB,uBAAuB;AACrE;;;;;;;;;;;ACRa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oBAAoB,qBAAqB,qBAAqB;AAC/D;;;;;;;;;;;AC3Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA,CAAC,kBAAkB,mBAAmB,mBAAmB;AACzD;;;;;;;;;;;ACRa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtqBAAqB,sBAAsB,sBAAsB;AAClE;;;;;;;;;;;ACvIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB,mBAAmB,mBAAmB;AACzD;;;;;;;;;;;ACfa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;;ACzCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;;AClCa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,mBAAmB,GAAG,sBAAsB,GAAG,wBAAwB,GAAG,wBAAwB,GAAG,uBAAuB,GAAG,0BAA0B,GAAG,oBAAoB,GAAG,wBAAwB,GAAG,8BAA8B,GAAG,2BAA2B;AAClS,6BAA6B,mBAAO,CAAC,mIAAsC;AAC3E,uDAAsD,EAAE,qCAAqC,sDAAsD,EAAC;AACpJ,iCAAiC,mBAAO,CAAC,mIAAsC;AAC/E,0DAAyD,EAAE,qCAAqC,6DAA6D,EAAC;AAC9J,0BAA0B,mBAAO,CAAC,qHAA+B;AACjE,oDAAmD,EAAE,qCAAqC,gDAAgD,EAAC;AAC3I,sBAAsB,mBAAO,CAAC,yFAAiB;AAC/C,gDAA+C,EAAE,qCAAqC,wCAAwC,EAAC;AAC/H,4BAA4B,mBAAO,CAAC,iIAAqC;AACzE,sDAAqD,EAAE,qCAAqC,oDAAoD,EAAC;AACjJ,0BAA0B,mBAAO,CAAC,+GAA4B;AAC9D,mDAAkD,EAAE,qCAAqC,+CAA+C,EAAC;AACzI,2BAA2B,mBAAO,CAAC,+GAA4B;AAC/D,oDAAmD,EAAE,qCAAqC,iDAAiD,EAAC;AAC5I,2BAA2B,mBAAO,CAAC,+GAA4B;AAC/D,oDAAmD,EAAE,qCAAqC,iDAAiD,EAAC;AAC5I,6BAA6B,mBAAO,CAAC,iHAA6B;AAClE,kDAAiD,EAAE,qCAAqC,iDAAiD,EAAC;AAC1I,0BAA0B,mBAAO,CAAC,2GAA0B;AAC5D,+CAA8C,EAAE,qCAAqC,2CAA2C,EAAC;AACjI,4BAA4B,mBAAO,CAAC,+GAA4B;AAChE,iDAAgD,EAAE,qCAAqC,+CAA+C,EAAC;AACvI;;;;;;;;;;;AC1Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,eAAe,mBAAO,CAAC,4EAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;UC/EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA,qBAAqB;UACrB,mDAAmD,uBAAuB;UAC1E;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;;;;WCAA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;;WAED;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA,2BAA2B;WAC3B,4BAA4B;WAC5B,2BAA2B;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA,iBAAiB,qCAAqC;WACtD;;WAEA,gDAAgD;WAChD;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,iBAAiB;WACrC;WACA;WACA;WACA,GAAG;WACH;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA,QAAQ;WACR;WACA,MAAM;WACN,KAAK;WACL,IAAI;WACJ,GAAG;WACH;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;;WAEA;WACA;;WAEA;;WAEA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;;WAEA;WACA;WACA,EAAE;;WAEF;WACA;;WAEA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,oBAAoB,oBAAoB;WACxC;WACA;WACA;WACA;WACA,EAAE;;WAEF;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA,IAAI;WACJ;;WAEA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ,GAAG;WACH;WACA;WACA;WACA;;;;;WCnYA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mBAAmB,2BAA2B;WAC9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,kBAAkB,cAAc;WAChC;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,cAAc,MAAM;WACpB;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA,cAAc,aAAa;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,iBAAiB,4BAA4B;WAC7C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kBAAkB,uCAAuC;WACzD;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,iCAAiC;WACpD;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,uCAAuC;WAC7D;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,sBAAsB;WAC5C;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA,WAAW;WACX,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA,YAAY;WACZ;WACA;WACA;WACA;WACA;WACA;WACA,UAAU;WACV;WACA;WACA;WACA;WACA;WACA;WACA,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,wCAAwC;WAC3D;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA;WACA,OAAO;WACP;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE,IAAI;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,EAAE;WACF;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,sCAAsC;WACtC;WACA;WACA,EAAE;WACF;;WAEA;;WAEA;;;;;UE9fA;UACA;UACA;UACA;UACA;UACA","sources":["webpack:///../../node_modules/ansi-html-community/index.js","webpack:///./page/source/camera/light/ambient-light.ts","webpack:///./page/source/camera/math/euler.ts","webpack:///./page/source/camera/math/matrix.ts","webpack:///./page/source/camera/math/quaternion.ts","webpack:///./page/source/camera/math/vector.ts","webpack:///./page/source/camera/transform.ts","webpack:///./page/source/camera/view_projection/projection/perspective-projection.ts","webpack:///./page/source/camera/view_projection/view-projection.ts","webpack:///./page/source/game_objects/cube/cube-mesh.ts","webpack:///./page/source/index.ts","webpack:///./page/source/util.ts","webpack:///./source/base/binding/bind-group-data-setup.ts","webpack:///./source/base/binding/bind-group-layout.ts","webpack:///./source/base/binding/bind-group.ts","webpack:///./source/base/binding/pipeline-layout.ts","webpack:///./source/base/binding/setup/bind-group-layout-array-memory-layout-setup.ts","webpack:///./source/base/binding/setup/bind-group-layout-memory-layout-setup.ts","webpack:///./source/base/binding/setup/bind-group-layout-setup.ts","webpack:///./source/base/buffer/gpu-buffer.ts","webpack:///./source/base/execution/gpu-execution.ts","webpack:///./source/base/execution/pass/compute-pass.ts","webpack:///./source/base/execution/pass/render-pass.ts","webpack:///./source/base/gpu/capabilities/gpu-capabilities.ts","webpack:///./source/base/gpu/capabilities/gpu-feature.enum.ts","webpack:///./source/base/gpu/capabilities/gpu-limit.enum.ts","webpack:///./source/base/gpu/gpu-device.ts","webpack:///./source/base/gpu/object/gpu-object-child-setup.ts","webpack:///./source/base/gpu/object/gpu-object-invalidation-reasons.ts","webpack:///./source/base/gpu/object/gpu-object-setup.ts","webpack:///./source/base/gpu/object/gpu-object.ts","webpack:///./source/base/memory_layout/base-memory-layout.ts","webpack:///./source/base/memory_layout/buffer/array-buffer-memory-layout.ts","webpack:///./source/base/memory_layout/buffer/base-buffer-memory-layout.ts","webpack:///./source/base/memory_layout/buffer/enum/primitive-buffer-format.enum.ts","webpack:///./source/base/memory_layout/buffer/enum/primitive-buffer-multiplier.enum.ts","webpack:///./source/base/memory_layout/buffer/primitive-buffer-memory-layout.ts","webpack:///./source/base/memory_layout/buffer/struct-buffer-memory-layout-property-setup.ts","webpack:///./source/base/memory_layout/buffer/struct-buffer-memory-layout-setup.ts","webpack:///./source/base/memory_layout/buffer/struct-buffer-memory-layout.ts","webpack:///./source/base/memory_layout/buffer/vertex-buffer-memory-layout.ts","webpack:///./source/base/memory_layout/texture/sampler-memory-layout.ts","webpack:///./source/base/memory_layout/texture/texture-memory-layout.ts","webpack:///./source/base/pipeline/compute-pipeline.ts","webpack:///./source/base/pipeline/parameter/vertex-parameter-buffer-layout-setup.ts","webpack:///./source/base/pipeline/parameter/vertex-parameter-layout-setup.ts","webpack:///./source/base/pipeline/parameter/vertex-parameter-layout.ts","webpack:///./source/base/pipeline/parameter/vertex-parameter.ts","webpack:///./source/base/pipeline/target/render-targets-setup.ts","webpack:///./source/base/pipeline/target/render-targets-texture-setup.ts","webpack:///./source/base/pipeline/target/render-targets.ts","webpack:///./source/base/pipeline/vertex-fragment-pipeline.ts","webpack:///./source/base/shader/setup/shader-compute-entry-point-setup.ts","webpack:///./source/base/shader/setup/shader-fragment-entry-point-setup.ts","webpack:///./source/base/shader/setup/shader-setup.ts","webpack:///./source/base/shader/shader-compute-module.ts","webpack:///./source/base/shader/shader-render-module.ts","webpack:///./source/base/shader/shader.ts","webpack:///./source/base/texture/base-texture.ts","webpack:///./source/base/texture/canvas-texture.ts","webpack:///./source/base/texture/frame-buffer-texture.ts","webpack:///./source/base/texture/image-texture.ts","webpack:///./source/base/texture/texture-format-capabilities.ts","webpack:///./source/base/texture/texture-mip-generator.ts","webpack:///./source/base/texture/texture-sampler.ts","webpack:///./source/base/texture/video-texture.ts","webpack:///./source/constant/buffer-usage.enum.ts","webpack:///./source/constant/compare-function.enum.ts","webpack:///./source/constant/compute-stage.enum.ts","webpack:///./source/constant/filter-mode.enum.ts","webpack:///./source/constant/primitive-cullmode.enum.ts","webpack:///./source/constant/primitive-front-face.enum.ts","webpack:///./source/constant/primitive-topology.enum.ts","webpack:///./source/constant/sampler-type.enum.ts","webpack:///./source/constant/storage-binding-type.enum.ts","webpack:///./source/constant/texture-aspect.enum.ts","webpack:///./source/constant/texture-dimension.enum.ts","webpack:///./source/constant/texture-format.enum.ts","webpack:///./source/constant/texture-operation.enum.ts","webpack:///./source/constant/texture-sample-type.enum.ts","webpack:///./source/constant/texture-usage.enum.ts","webpack:///./source/constant/vertex-parameter-step-mode.enum.ts","webpack:///./source/constant/wrapping-mode.enum.ts","webpack:///../../node_modules/events/events.js","webpack:///../../node_modules/html-entities/lib/index.js","webpack:///../../node_modules/html-entities/lib/named-references.js","webpack:///../../node_modules/html-entities/lib/numeric-unicode-map.js","webpack:///../../node_modules/html-entities/lib/surrogate-pairs.js","webpack:///./page/source/game_objects/cube/cube-shader.wgsl","webpack:///./page/source/game_objects/light/light-box-shader.wgsl","webpack:///../../node_modules/webpack-dev-server/client/clients/WebSocketClient.js","webpack:///../../node_modules/webpack-dev-server/client/index.js","webpack:///../../node_modules/webpack-dev-server/client/modules/logger/index.js","webpack:///../../node_modules/webpack-dev-server/client/overlay.js","webpack:///../../node_modules/webpack-dev-server/client/overlay/fsm.js","webpack:///../../node_modules/webpack-dev-server/client/overlay/runtime-error.js","webpack:///../../node_modules/webpack-dev-server/client/overlay/state-machine.js","webpack:///../../node_modules/webpack-dev-server/client/overlay/styles.js","webpack:///../../node_modules/webpack-dev-server/client/socket.js","webpack:///../../node_modules/webpack-dev-server/client/utils/createSocketURL.js","webpack:///../../node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js","webpack:///../../node_modules/webpack-dev-server/client/utils/log.js","webpack:///../../node_modules/webpack-dev-server/client/utils/parseURL.js","webpack:///../../node_modules/webpack-dev-server/client/utils/reloadApp.js","webpack:///../../node_modules/webpack-dev-server/client/utils/sendMessage.js","webpack:///../../node_modules/webpack-dev-server/client/utils/stripAnsi.js","webpack:///../../node_modules/webpack/hot/dev-server.js","webpack:///../../node_modules/webpack/hot/emitter.js","webpack:///../../node_modules/webpack/hot/log-apply-result.js","webpack:///../../node_modules/webpack/hot/log.js","webpack:///../kartoffelgames.core/library/source/algorithm/myers-diff.js","webpack:///../kartoffelgames.core/library/source/data_container/dictionary.js","webpack:///../kartoffelgames.core/library/source/data_container/list.js","webpack:///../kartoffelgames.core/library/source/data_container/stack.js","webpack:///../kartoffelgames.core/library/source/exception/exception.js","webpack:///../kartoffelgames.core/library/source/index.js","webpack:///../kartoffelgames.core/library/source/util/enum-util.js","webpack:///../kartoffelgames.core/library/source/util/type-util.js","webpack:///../kartoffelgames.web.game_input/library/source/configuration/device-configuration.js","webpack:///../kartoffelgames.web.game_input/library/source/configuration/gamepad-button-mapping.js","webpack:///../kartoffelgames.web.game_input/library/source/configuration/input-configuration.js","webpack:///../kartoffelgames.web.game_input/library/source/connector/gamepad-connector.js","webpack:///../kartoffelgames.web.game_input/library/source/connector/mouse-keyboard-connector.js","webpack:///../kartoffelgames.web.game_input/library/source/device/base-input-device.js","webpack:///../kartoffelgames.web.game_input/library/source/device/gamepad-input-device.js","webpack:///../kartoffelgames.web.game_input/library/source/device/mouse-keyboard-input-device.js","webpack:///../kartoffelgames.web.game_input/library/source/enum/button-value-type.enum.js","webpack:///../kartoffelgames.web.game_input/library/source/enum/gamepad-button.enum.js","webpack:///../kartoffelgames.web.game_input/library/source/enum/input-device.enum.js","webpack:///../kartoffelgames.web.game_input/library/source/enum/keyboard-button.enum.js","webpack:///../kartoffelgames.web.game_input/library/source/enum/mouse-button.enum.js","webpack:///../kartoffelgames.web.game_input/library/source/event/input-action-event.js","webpack:///../kartoffelgames.web.game_input/library/source/event/input-button-event.js","webpack:///../kartoffelgames.web.game_input/library/source/index.js","webpack:///../kartoffelgames.web.game_input/library/source/input-devices.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/get javascript update chunk filename","webpack:///webpack/runtime/get update manifest filename","webpack:///webpack/runtime/getFullHash","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/load script","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/hot module replacement","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["'use strict'\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.5', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n","import { Exception } from '@kartoffelgames/core';\r\nimport { Vector } from '../math/vector';\r\n\r\nexport class AmbientLight {\r\n    private readonly mColor: Vector;\r\n\r\n    /**\r\n     * Ambient light Vector4 data.\r\n     */\r\n    public get data(): Array<number> {\r\n        return this.mColor.data;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mColor = new Vector([1, 1, 1, 1]);\r\n    }\r\n\r\n    /**\r\n     * Set ambient light color.\r\n     * @param pRed - Red.\r\n     * @param pGreen - Green.\r\n     * @param pBlue - Blue.\r\n     */\r\n    public setColor(pRed: number, pGreen: number, pBlue: number): void {\r\n        if(pRed > 1 || pRed < 0 || pGreen > 1 || pGreen < 0 || pBlue > 1 || pBlue < 0){\r\n            throw new Exception(`Color values need to be in 0 to 1 range. (R:${pRed}, G:${pGreen}, B:${pBlue})`, this);\r\n        }\r\n\r\n        this.mColor.data[0] = pRed;\r\n        this.mColor.data[1] = pGreen;\r\n        this.mColor.data[2] = pBlue;\r\n    }\r\n}","export class Euler {\r\n    private mX: number;\r\n    private mY: number;\r\n    private mZ: number;\r\n\r\n    /**\r\n     * X axis degree.\r\n     */\r\n    public get x(): number {\r\n        return this.mX;\r\n    } set x(pValue: number) {\r\n        this.mX = pValue;\r\n    }\r\n\r\n    /**\r\n     * Y axis degree.\r\n     */\r\n    public get y(): number {\r\n        return this.mY;\r\n    } set y(pValue: number) {\r\n        this.mY = pValue;\r\n    }\r\n\r\n    /**\r\n     * Z axis degree.\r\n     */\r\n    public get z(): number {\r\n        return this.mZ;\r\n    } set z(pValue: number) {\r\n        this.mZ = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mX = 0;\r\n        this.mY = 0;\r\n        this.mZ = 0;\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { Vector } from './vector';\r\n\r\nexport class Matrix {\r\n    /**\r\n     * Create matrix from data array.\r\n     * Direction from reading columns than rows.\r\n     * @param pArray - Array data. \r\n     * @param pHeight \r\n     * @param pWidth \r\n     * @returns \r\n     */\r\n    public static fromArray(pArray: Array<number>, pHeight: number, pWidth: number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        for (let lRowIndex = 0; lRowIndex < pHeight; lRowIndex++) {\r\n            const lRowData: Array<number> = new Array<number>(pWidth);\r\n\r\n            for (let lColumnIndex = 0; lColumnIndex < pWidth; lColumnIndex++) {\r\n                lRowData[lColumnIndex] = pArray[(lColumnIndex * pHeight) + lRowIndex];\r\n            }\r\n\r\n            // Add row to data array.\r\n            lData.push(lRowData);\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Create identity matrix.\r\n     * @param pSize - Matix size: nxn\r\n     * @param pValue - Value of identity. \r\n     */\r\n    public static identity(pSize: number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n        for (let lRowIndex = 0; lRowIndex < pSize; lRowIndex++) {\r\n            // Create Array filled with zeros.\r\n            const lRowData: Array<number> = new Array<number>(pSize).fill(0);\r\n\r\n            // Set identity column to value.\r\n            lRowData[lRowIndex] = 1;\r\n\r\n            // Add row to data array.\r\n            lData.push(lRowData);\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    private readonly mData: Array<Array<number>>;\r\n\r\n    /**\r\n     * Get matix raw data.\r\n     */\r\n    public get data(): Array<Array<number>> {\r\n        return this.mData;\r\n    }\r\n\r\n    /**\r\n     * Data as number array.\r\n     */\r\n    public get dataArray(): Array<number> {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        // Read from columns to rows.\r\n        for (let lColumnIndex = 0; lColumnIndex < this.width; lColumnIndex++) {\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lData.push(this.mData[lRowIndex][lColumnIndex]);\r\n            }\r\n        }\r\n\r\n        return lData;\r\n    }\r\n\r\n    /**\r\n     * Get matrix height.\r\n     */\r\n    public get height(): number {\r\n        return this.mData.length;\r\n    }\r\n\r\n    /**\r\n     * Get matrix width.\r\n     */\r\n    public get width(): number {\r\n        return this.mData[0]?.length ?? 0;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pData - Matrix data.\r\n     */\r\n    public constructor(pData: Array<Array<number>>) {\r\n        this.mData = pData;\r\n    }\r\n\r\n    /**\r\n     * Add value to matrix.\r\n     * @param pAddData - Matrix or scalar value.\r\n     */\r\n    public add(pAddData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pAddData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.height !== pAddData.height && this.width !== pAddData.width) {\r\n                throw new Exception('Matrices need to be the same size for calculation.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] + pAddData.data[lRowIndex][lColumnIndex];\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Add scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] + pAddData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Adjoint matrix.\r\n     */\r\n    public adjoint(): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Allways use first row and iterate over columns.\r\n        for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n            const lMatrixRow: Array<number> = new Array<number>();\r\n            for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n                // Calculate determant of matrix with omitted column and row.\r\n                // Toggle sign on each new row or column.\r\n                let lDeterminant: number = this.omit(lRowIndex, lColumIndex).determinant();\r\n                lDeterminant *= Math.pow(-1, (lRowIndex + 1) + (lColumIndex + 1));\r\n\r\n\r\n                lMatrixRow.push(lDeterminant);\r\n            }\r\n\r\n            // Add row to matrix data.\r\n            lMatrixData.push(lMatrixRow);\r\n        }\r\n\r\n        // Calculate transpose from cofactor matrix to get adjoint. \r\n        const lCofactorMatrix = new Matrix(lMatrixData);\r\n        return lCofactorMatrix.transpose();\r\n    }\r\n\r\n    /**\r\n     * Calculate determant of matrix.\r\n     */\r\n    public determinant(): number {\r\n        // Super fast determinant calculation of a 1x1 matrix.\r\n        if (this.height === 1 && this.width === 1) {\r\n            return this.data[0][0];\r\n        }\r\n\r\n        let lDeterminant: number = 0;\r\n        for (let lIterationIndex = 0; lIterationIndex < this.width; lIterationIndex++) {\r\n            // Get number of row iteration to detect if any calculation musst be done.\r\n            let lSignedNumber: number = this.data[0][lIterationIndex];\r\n            lSignedNumber *= (lIterationIndex % 2) ? -1 : 1; // Toggle sign between iteration. Begin with plus.\r\n\r\n            // Check if any calculation needs to be done. Zero multiplicated is allways zero.\r\n            if (lSignedNumber !== 0) {\r\n                // Calculate determinant of new matrix. Allways use first row.\r\n                const lDeterminantMatrix: Matrix = this.omit(0, lIterationIndex);\r\n                lDeterminant += lSignedNumber * lDeterminantMatrix.determinant();\r\n            }\r\n        }\r\n\r\n        return lDeterminant;\r\n    }\r\n\r\n    /**\r\n     * Inverse matrix.\r\n     */\r\n    public inverse(): Matrix {\r\n        const lAdjoint: Matrix = this.adjoint();\r\n        const lDeterminant: number = this.determinant();\r\n\r\n        // Devide each adjoint matrix component by determinant.\r\n        for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lAdjoint.data[lRowIndex][lColumIndex] /= lDeterminant;\r\n            }\r\n        }\r\n\r\n        return lAdjoint;\r\n    }\r\n\r\n    /**\r\n     * Multiplicate matrix.\r\n     * @param pMultData - Matrix or scalar value.\r\n     */\r\n    public mult(pMultData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pMultData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.width !== pMultData.height) {\r\n                throw new Exception('Matrices A width and B height must match for multiplication.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(pMultData.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n\r\n                    // Multiplicate target row with source column components.\r\n                    // Iteration length is eighter target.height or source.width.\r\n                    let lProduct: number = 0;\r\n                    for (let lComponentIndex = 0; lComponentIndex < this.height; lComponentIndex++) {\r\n                        lProduct += this.mData[lRowIndex][lComponentIndex] * pMultData.data[lComponentIndex][lColumnIndex];\r\n                    }\r\n                    lRowData[lColumnIndex] = lProduct;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Multiplicate scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < this.width; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] * pMultData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Omit row and column from matrix.\r\n     * @param pOmitRow - Omitting row.\r\n     * @param pOmitColumn - Omiting column\r\n     */\r\n    public omit(pOmitRow: number, pOmitColumn: number): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Allways use first row and iterate over columns.\r\n        for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n            if (lRowIndex !== pOmitRow) {\r\n                const lMatrixRow: Array<number> = new Array<number>();\r\n                for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n                    // Skip column of\r\n                    if (lColumIndex !== pOmitColumn) {\r\n                        lMatrixRow.push(this.data[lRowIndex][lColumIndex]);\r\n                    }\r\n                }\r\n\r\n                // Add row to matrix data.\r\n                lMatrixData.push(lMatrixRow);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lMatrixData);\r\n    }\r\n\r\n    /**\r\n     * Substract value to matrix.\r\n     * @param pAddData - Matrix or scalar value.\r\n     */\r\n    public sub(pAddData: Matrix | number): Matrix {\r\n        const lData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        if (pAddData instanceof Matrix) {\r\n            // Restrict on same length.\r\n            if (this.height !== pAddData.height && this.width !== pAddData.width) {\r\n                throw new Exception('Matrices need to be the same size for calculation.', this);\r\n            }\r\n\r\n            // Iterate rows and extend data dynamicly by pushing new data rows.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                // Add each column of row.\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] - pAddData.data[lRowIndex][lColumnIndex];\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        } else {\r\n            // Add scalar to each matrix component.\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                const lRowData: Array<number> = new Array<number>(this.width);\r\n                for (let lColumnIndex = 0; lColumnIndex < lRowData.length; lColumnIndex++) {\r\n                    lRowData[lColumnIndex] = this.mData[lRowIndex][lColumnIndex] - pAddData;\r\n                }\r\n\r\n                lData.push(lRowData);\r\n            }\r\n        }\r\n\r\n        return new Matrix(lData);\r\n    }\r\n\r\n    /**\r\n     * Transpose matrix.\r\n     */\r\n    public transpose(): Matrix {\r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n        // Transpose by copying column into row.\r\n        for (let lColumIndex = 0; lColumIndex < this.width; lColumIndex++) {\r\n            const lMatrixRow: Array<number> = new Array<number>();\r\n            for (let lRowIndex = 0; lRowIndex < this.height; lRowIndex++) {\r\n                lMatrixRow.push(this.data[lRowIndex][lColumIndex]);\r\n            }\r\n\r\n            // Add row to matrix data.\r\n            lMatrixData.push(lMatrixRow);\r\n        }\r\n\r\n        return new Matrix(lMatrixData);\r\n    }\r\n\r\n    /**\r\n     * Multiplicate matrix with vector.\r\n     * @param pMultData - Vector.\r\n     * @returns \r\n     */\r\n    public vectorMult(pMultData: Vector): Vector {\r\n        // Restrict on same length.\r\n        if (this.width !== pMultData.data.length) {\r\n            throw new Exception('Matrices A width and B height must match for multiplication.', this);\r\n        }\r\n\r\n        // Convert vector to matrix by creating a \r\n        const lMatrixData: Array<Array<number>> = new Array<Array<number>>();\r\n        for (const lVectorComponent of pMultData.data) {\r\n            lMatrixData.push([lVectorComponent]);\r\n        }\r\n\r\n        // Multiplicate\r\n        const lMutiplicatedMatrix = this.mult(new Matrix(lMatrixData));\r\n\r\n        const lVectorData: Array<number> = new Array<number>();\r\n        for (let lRowIndex = 0; lRowIndex < lMutiplicatedMatrix.height; lRowIndex++) {\r\n            lVectorData.push(lMutiplicatedMatrix.data[lRowIndex][0]);\r\n        }\r\n\r\n        return new Vector(lVectorData);\r\n    }\r\n}","import { Euler } from './euler';\r\nimport { Matrix } from './matrix';\r\nimport { Vector } from './vector';\r\n\r\nexport class Quaternion {\r\n    /**\r\n     * Create new quaternion from degree rotation.\r\n     * Rotate order XYZ (Pitch, Yaw, Roll)\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public static fromRotation(pPitch: number, pYaw: number, pRoll: number): Quaternion {\r\n        // Conversion to radian.\r\n        const lPitchRadian: number = (pPitch % 360) * Math.PI / 180;\r\n        const lYawRadian: number = (pYaw % 360) * Math.PI / 180;\r\n        const lRollRadian: number = (pRoll % 360) * Math.PI / 180;\r\n\r\n        // Pre calculate.\r\n        const lCosPitch = Math.cos(lPitchRadian * 0.5);\r\n        const lSinPitch = Math.sin(lPitchRadian * 0.5);\r\n        const lCosYaw = Math.cos(lYawRadian * 0.5);\r\n        const lSinYaw = Math.sin(lYawRadian * 0.5);\r\n        const lCosRoll = Math.cos(lRollRadian * 0.5);\r\n        const lSinRoll = Math.sin(lRollRadian * 0.5);\r\n\r\n        // Create quaternion.\r\n        const lQuaternion = Quaternion.identity();\r\n        lQuaternion.w = lCosPitch * lCosYaw * lCosRoll + lSinPitch * lSinYaw * lSinRoll;\r\n        lQuaternion.x = lSinPitch * lCosYaw * lCosRoll - lCosPitch * lSinYaw * lSinRoll;\r\n        lQuaternion.y = lCosPitch * lSinYaw * lCosRoll + lSinPitch * lCosYaw * lSinRoll;\r\n        lQuaternion.z = lCosPitch * lCosYaw * lSinRoll - lSinPitch * lSinYaw * lCosRoll;\r\n\r\n        return lQuaternion;\r\n    }\r\n\r\n    /**\r\n     * Create identity quaternion.\r\n     */\r\n    public static identity(): Quaternion {\r\n        return new Quaternion(1, 0, 0, 0);\r\n    }\r\n\r\n    public mW: number;\r\n    public mX: number;\r\n    public mY: number;\r\n    public mZ: number;\r\n\r\n    /**\r\n     * Rotation forward vector.\r\n     */\r\n    public get vectorForward(): Vector {\r\n        // Products.\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lProductXz: number = 2 * this.mX * this.mZ;\r\n        const lProductYw: number = 2 * this.mY * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = lProductXz + lProductYw;\r\n        const lY: number = lProductYz - lProductXw;\r\n        const lZ: number = 1 - lSquareX - lSquareY;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Rotation vector right.\r\n     */\r\n    public get vectorRight(): Vector {\r\n        // Products.\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = 1 - lSquareY - lSquareZ;\r\n        const lY: number = lProductXy + lProductZw;\r\n        const lZ: number = lProductYz + lProductXw;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Rotation up vector.\r\n     */\r\n    public get vectorUp(): Vector {\r\n        // Products.\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        const lX: number = lProductXy - lProductZw;\r\n        const lY: number = 1 - lSquareX - lSquareZ;\r\n        const lZ: number = lProductYz + lProductXw;\r\n\r\n        return new Vector([lX, lY, lZ]);\r\n    }\r\n\r\n    /**\r\n     * Get w value.\r\n     */\r\n    public get w(): number {\r\n        return this.mW;\r\n    } set w(pValue: number) {\r\n        this.mW = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get x value.\r\n     */\r\n    public get x(): number {\r\n        return this.mX;\r\n    } set x(pValue: number) {\r\n        this.mX = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get y value.\r\n     */\r\n    public get y(): number {\r\n        return this.mY;\r\n    } set y(pValue: number) {\r\n        this.mY = pValue;\r\n    }\r\n\r\n    /**\r\n     * Get z value.\r\n     */\r\n    public get z(): number {\r\n        return this.mZ;\r\n    } set z(pValue: number) {\r\n        this.mZ = pValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pW - W.\r\n     * @param pX - X.\r\n     * @param pY - Y.\r\n     * @param pZ - Z.\r\n     */\r\n    public constructor(pW: number, pX: number, pY: number, pZ: number) {\r\n        this.mX = pX;\r\n        this.mY = pY;\r\n        this.mZ = pZ;\r\n        this.mW = pW;\r\n    }\r\n\r\n    /**\r\n     * Add angles to current euler rotation.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addEulerRotation(pPitch: number, pYaw: number, pRoll: number): Quaternion {\r\n        // Apply current rotation after setting new rotation to apply rotation as absolute euler rotation and not as relative quaternion.\r\n        return this.mult(Quaternion.fromRotation(pPitch, pYaw, pRoll));\r\n    }\r\n\r\n    /**\r\n     * Quaternion rotation as euler rotation\r\n     */\r\n    public asEuler(): Euler {\r\n        const lEuler: Euler = new Euler();\r\n\r\n        // Pitch (x-axis rotation)\r\n        const lSinPitchCosYaw = 2 * (this.mW * this.mX + this.mY * this.mZ);\r\n        const lCosPitchCosYaw = 1 - 2 * (this.mX * this.mX + this.mY * this.mY);\r\n        const lPitchRadian = Math.atan2(lSinPitchCosYaw, lCosPitchCosYaw);\r\n        const lPitchDegree = (lPitchRadian * 180 / Math.PI) % 360;\r\n        lEuler.x = (lPitchDegree < 0) ? lPitchDegree + 360 : lPitchDegree;\r\n\r\n        // Yaw (y-axis rotation)\r\n        const lSinYaw = Math.sqrt(1 + 2 * (this.mW * this.mY - this.mX * this.mZ));\r\n        const lCosYaw = Math.sqrt(1 - 2 * (this.mW * this.mY - this.mX * this.mZ));\r\n        const lYawRadian = 2 * Math.atan2(lSinYaw, lCosYaw) - Math.PI / 2;\r\n        const lYawDegree = (lYawRadian * 180 / Math.PI) % 360;\r\n        lEuler.y = (lYawDegree < 0) ? lYawDegree + 360 : lYawDegree;\r\n\r\n        // Roll (z-axis rotation)\r\n        const lSinRollCosYaw = 2 * (this.mW * this.mZ + this.mX * this.mY);\r\n        const lCosRollCosYaw = 1 - 2 * (this.mY * this.mY + this.mZ * this.mZ);\r\n        const lRollRadian = Math.atan2(lSinRollCosYaw, lCosRollCosYaw);\r\n        const lRollDegree = (lRollRadian * 180 / Math.PI) % 360;\r\n        lEuler.z = (lRollDegree < 0) ? lRollDegree + 360 : lRollDegree;\r\n\r\n        return lEuler;\r\n    }\r\n\r\n    /**\r\n     * Convert quaternion to a 4x4 rotation matrix.\r\n     */\r\n    public asMatrix(): Matrix {\r\n        /*\r\n            1 - 2*qy² - 2*qz²\t2*qx*qy - 2*qz*qw\t2*qx*qz + 2*qy*qw\r\n            2*qx*qy + 2*qz*qw\t1 - 2*qx² - 2*qz²\t2*qy*qz - 2*qx*qw\r\n            2*qx*qz - 2*qy*qw\t2*qy*qz + 2*qx*qw\t1 - 2*qx² - 2*qy²\r\n        */\r\n        // Sqares\r\n        const lSquareX: number = 2 * Math.pow(this.mX, 2);\r\n        const lSquareY: number = 2 * Math.pow(this.mY, 2);\r\n        const lSquareZ: number = 2 * Math.pow(this.mZ, 2);\r\n\r\n        // Products.\r\n        const lProductXy: number = 2 * this.mX * this.mY;\r\n        const lProductZw: number = 2 * this.mZ * this.mW;\r\n        const lProductXz: number = 2 * this.mX * this.mZ;\r\n        const lProductYw: number = 2 * this.mY * this.mW;\r\n        const lProductYz: number = 2 * this.mY * this.mZ;\r\n        const lProductXw: number = 2 * this.mX * this.mW;\r\n\r\n        // Fill matrix\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n        lMatrix.data[0][0] = 1 - lSquareY - lSquareZ;\r\n        lMatrix.data[0][1] = lProductXy - lProductZw;\r\n        lMatrix.data[0][2] = lProductXz + lProductYw;\r\n\r\n        lMatrix.data[1][0] = lProductXy + lProductZw;\r\n        lMatrix.data[1][1] = 1 - lSquareX - lSquareZ;\r\n        lMatrix.data[1][2] = lProductYz - lProductXw;\r\n\r\n        lMatrix.data[2][0] = lProductXz - lProductYw;\r\n        lMatrix.data[2][1] = lProductYz + lProductXw;\r\n        lMatrix.data[2][2] = 1 - lSquareX - lSquareY;\r\n\r\n        return lMatrix;\r\n    }\r\n\r\n    /**\r\n     * Multiplicate with quaternion.\r\n     * @param pQuaternion - Quaterion source.\r\n     */\r\n    public mult(pQuaternion: Quaternion): Quaternion {\r\n        const lW: number = this.mW * pQuaternion.w - this.mX * pQuaternion.x - this.mY * pQuaternion.y - this.mZ * pQuaternion.z;\r\n        const lX: number = this.mW * pQuaternion.x + this.mX * pQuaternion.w + this.mY * pQuaternion.z - this.mZ * pQuaternion.y;\r\n        const lY: number = this.mW * pQuaternion.y - this.mX * pQuaternion.z + this.mY * pQuaternion.w + this.mZ * pQuaternion.x;\r\n        const lZ: number = this.mW * pQuaternion.z + this.mX * pQuaternion.y - this.mY * pQuaternion.x + this.mZ * pQuaternion.w;\r\n\r\n        return new Quaternion(lW, lX, lY, lZ);\r\n    }\r\n\r\n    /**\r\n     * Normalize quaternion.\r\n     */\r\n    public normalize(): Quaternion {\r\n        // Calculate length.\r\n        const lLength = Math.hypot(Math.pow(this.mW, 2), Math.pow(this.mX, 2), Math.pow(this.mY, 2), Math.pow(this.mZ, 2));\r\n\r\n        // Create new quaternion by dividing each dimension by length.\r\n        return new Quaternion(this.mW / lLength, this.mX / lLength, this.mY / lLength, this.mZ / lLength);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core';\r\n\r\nexport class Vector {\r\n    private readonly mData: Array<number>;\r\n\r\n    /**\r\n     * Get vector data.\r\n     */\r\n    public get data(): Array<number> {\r\n        return this.mData;\r\n    }\r\n\r\n    /**\r\n     * W value quick access. \r\n     */\r\n    public get w(): number {\r\n        return this.mData[3];\r\n    }\r\n\r\n    /**\r\n     * X value quick access. \r\n     */\r\n    public get x(): number {\r\n        return this.mData[0];\r\n    }\r\n\r\n    /**\r\n     * Y value quick access. \r\n     */\r\n    public get y(): number {\r\n        return this.mData[1];\r\n    }\r\n\r\n    /**\r\n     * Z value quick access. \r\n     */\r\n    public get z(): number {\r\n        return this.mData[2];\r\n    }\r\n    \r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pData - Vector data.\r\n     */\r\n    public constructor(pData: Array<number>) {\r\n        this.mData = [...pData];\r\n    }\r\n\r\n    /**\r\n     * Add two vectors.\r\n     * @param pAddData - Vector or scalar.\r\n     */\r\n    public add(pAddData: Vector | number): Vector {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        if (pAddData instanceof Vector) {\r\n            // Restrict on same length.\r\n            if (this.mData.length !== pAddData.data.length) {\r\n                throw new Exception('Vectors need to be the same length for calculation.', this);\r\n            }\r\n\r\n            // Add values.\r\n            for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n                lData.push(this.mData[lIndex] + pAddData.data[lIndex]);\r\n            }\r\n        } else {\r\n            // Add scalar to each vector component.\r\n            for (const lItem of this.mData) {\r\n                lData.push(lItem + pAddData);\r\n            }\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n\r\n    /**\r\n     * Get length of vector.\r\n     */\r\n    public length(): number {\r\n        // Square root sum.\r\n        return Math.hypot(...this.mData);\r\n    }\r\n\r\n    /**\r\n     * Calulate cross product of two vector3.\r\n     * @param pVector - Vector3.\r\n     */\r\n    public multCross(pVector: Vector): Vector {\r\n        // Restrict on same length.\r\n        if (this.mData.length !== pVector.data.length && this.mData.length !== 3) {\r\n            throw new Exception('Vectors need to be the length of 3 for corss product calculation.', this);\r\n        }\r\n\r\n        /*\r\n         * cx = ay*bz − az*by\r\n         * cy = az*bx − ax*bz\r\n         * cz = ax*by − ay*bx\r\n         */\r\n        return new Vector([\r\n            this.mData[1] * pVector.data[2] - this.mData[2] * pVector.data[1],\r\n            this.mData[2] * pVector.data[0] - this.mData[0] * pVector.data[2],\r\n            this.mData[0] * pVector.data[1] - this.mData[1] * pVector.data[0]\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Multiply with dot procedure.\r\n     * @param pVector - Vector.\r\n     */\r\n    public multDot(pVector: Vector): number {\r\n        // Restrict on same length.\r\n        if (this.mData.length !== pVector.data.length) {\r\n            throw new Exception('Vectors need to be the same length for calculation.', this);\r\n        }\r\n\r\n        // Calculate dot product.\r\n        let lProduct: number = 0;\r\n        for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n            lProduct += this.mData[lIndex] * pVector.data[lIndex];\r\n        }\r\n\r\n        return lProduct;\r\n    }\r\n\r\n    /**\r\n     * Normalize vector.\r\n     */\r\n    public normalize(): Vector {\r\n        const lLength: number = this.length();\r\n\r\n        // Devide each vector component with it vector length.\r\n        const lData: Array<number> = new Array<number>();\r\n        for (const lItem of this.mData) {\r\n            lData.push(lItem / lLength);\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n\r\n    /**\r\n     * Substract two vectors.\r\n     * @param pSubData - Vector or scalar\r\n     */\r\n    public sub(pSubData: Vector | number): Vector {\r\n        const lData: Array<number> = new Array<number>();\r\n\r\n        if (pSubData instanceof Vector) {\r\n            // Restrict on same length.\r\n            if (this.mData.length !== pSubData.data.length) {\r\n                throw new Exception('Vectors need to be the same length for calculation.', this);\r\n            }\r\n\r\n            // Add values.\r\n            for (let lIndex: number = 0; lIndex < this.mData.length; lIndex++) {\r\n                lData.push(this.mData[lIndex] - pSubData.data[lIndex]);\r\n            }\r\n        } else {\r\n            // Substract scalar to each vector component.\r\n            for (const lItem of this.mData) {\r\n                lData.push(lItem - pSubData);\r\n            }\r\n        }\r\n\r\n        return new Vector(lData);\r\n    }\r\n}","import { Matrix } from './math/matrix';\r\nimport { Quaternion } from './math/quaternion';\r\nimport { Vector } from './math/vector';\r\n\r\nexport class Transform {\r\n    private readonly mPivot: Matrix;\r\n    private mRotation: Quaternion;\r\n    private readonly mScale: Matrix;\r\n    private readonly mTranslation: Matrix;\r\n\r\n    /**\r\n     * X pivot point.\r\n     */\r\n    public get pivotX(): number {\r\n        return this.mPivot.data[0][3];\r\n    } set pivotX(pValue: number) {\r\n        this.mPivot.data[0][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Y pivot point.\r\n     */\r\n    public get pivotY(): number {\r\n        return this.mPivot.data[1][3];\r\n    } set pivotY(pValue: number) {\r\n        this.mPivot.data[1][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Z pivot point.\r\n     */\r\n    public get pivotZ(): number {\r\n        return this.mPivot.data[2][3];\r\n    } set pivotZ(pValue: number) {\r\n        this.mPivot.data[2][3] = pValue;\r\n    }\r\n\r\n    /**\r\n     * Rotation on X angle.\r\n     * Pitch.\r\n     */\r\n    public get rotationPitch(): number {\r\n        return this.mRotation.asEuler().x;\r\n    }\r\n\r\n    /**\r\n     * Rotation on Z angle.\r\n     * Roll.\r\n     */\r\n    public get rotationRoll(): number {\r\n        return this.mRotation.asEuler().z;\r\n    }\r\n\r\n    /**\r\n     * Rotation on Y angle.\r\n     * Yaw.\r\n     */\r\n    public get rotationYaw(): number {\r\n        return this.mRotation.asEuler().y;\r\n    }\r\n\r\n    /**\r\n     * Depth scale.\r\n     */\r\n    public get scaleDepth(): number {\r\n        return this.mScale.data[2][2];\r\n    }\r\n\r\n    /**\r\n     * Height scale.\r\n     */\r\n    public get scaleHeight(): number {\r\n        return this.mScale.data[1][1];\r\n    }\r\n\r\n    /**\r\n     * Width scale.\r\n     */\r\n    public get scaleWidth(): number {\r\n        return this.mScale.data[0][0];\r\n    }\r\n\r\n    /**\r\n     * X translation.\r\n     */\r\n    public get translationX(): number {\r\n        return this.mTranslation.data[0][3];\r\n    }\r\n\r\n    /**\r\n     * Y translation.\r\n     */\r\n    public get translationY(): number {\r\n        return this.mTranslation.data[1][3];\r\n    }\r\n\r\n    /**\r\n     * Z translation.\r\n     */\r\n    public get translationZ(): number {\r\n        return this.mTranslation.data[2][3];\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mScale = Matrix.identity(4);\r\n        this.mTranslation = Matrix.identity(4);\r\n        this.mRotation = new Quaternion(1, 0, 0, 0);\r\n        this.mPivot = Matrix.identity(4);\r\n    }\r\n\r\n    /**\r\n     * Add angles to current euler rotation angles.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addEulerRotation(pPitch: number, pYaw: number, pRoll: number): void {\r\n        // Apply rotation to current rotation.\r\n        this.mRotation = this.mRotation.addEulerRotation(pPitch, pYaw, pRoll);\r\n    }\r\n\r\n    /**\r\n     * Add rotation to already rotated object.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public addRotation(pPitch: number, pYaw: number, pRoll: number): void {\r\n        // Apply rotation to current rotation.\r\n        this.mRotation = Quaternion.fromRotation(pPitch, pYaw, pRoll).mult(this.mRotation);\r\n    }\r\n\r\n    /**\r\n     * Add scale.\r\n     * @param pWidth - Width multiplier.\r\n     * @param pHeight - Height multiplier.\r\n     * @param pDepth - Depth multiplier.\r\n     */\r\n    public addScale(pWidth: number, pHeight: number, pDepth: number): void {\r\n        this.mScale.data[0][0] += pWidth;\r\n        this.mScale.data[1][1] += pHeight;\r\n        this.mScale.data[2][2] += pDepth;\r\n    }\r\n\r\n    /**\r\n     * Add translation.\r\n     * @param pX - Movement on worlds X axis.\r\n     * @param pY - Movement on worlds Y axis.\r\n     * @param pZ - Movement on worlds Z axis.\r\n     */\r\n    public addTranslation(pX: number, pY: number, pZ: number): void {\r\n        this.mTranslation.data[0][3] += pX;\r\n        this.mTranslation.data[1][3] += pY;\r\n        this.mTranslation.data[2][3] += pZ;\r\n    }\r\n\r\n    /**\r\n     * Get transformation matrix.\r\n     */\r\n    public getMatrix(pType: TransformMatrix): Matrix {\r\n        switch (pType) {\r\n            case TransformMatrix.Scale: {\r\n                return this.mScale;\r\n            }\r\n            case TransformMatrix.Translation: {\r\n                return this.mTranslation;\r\n            }\r\n            case TransformMatrix.Rotation: {\r\n                return this.mRotation.asMatrix();\r\n            }\r\n            case TransformMatrix.PivotRotation: {\r\n                const lRotationMatrix: Matrix = this.getMatrix(TransformMatrix.Rotation);\r\n\r\n                // Check if pivit point is used.\r\n                let lPivotRotation: Matrix;\r\n                if (this.pivotX !== 0 || this.pivotY !== 0 || this.pivotZ !== 0) {\r\n                    // Translate pivot => rotate => reverse pivate translation.\r\n                    lPivotRotation = this.mPivot.inverse().mult(lRotationMatrix).mult(this.mPivot);\r\n                } else {\r\n                    lPivotRotation = lRotationMatrix;\r\n                }\r\n\r\n                return lPivotRotation;\r\n            }\r\n            case TransformMatrix.Transformation: {\r\n                const lScale: Matrix = this.getMatrix(TransformMatrix.Scale);\r\n                const lTranslation: Matrix = this.getMatrix(TransformMatrix.Translation);\r\n                const lRotation: Matrix = this.getMatrix(TransformMatrix.PivotRotation);\r\n\r\n                // First scale, second rotate, third translate.\r\n                return lTranslation.mult(lRotation).mult(lScale);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset current rotation and set new rotation.\r\n     * @param pPitch - Pitch degree.\r\n     * @param pYaw - Yaw degree.\r\n     * @param pRoll - Roll degree.\r\n     */\r\n    public setRotation(pPitch: number | null, pYaw: number | null, pRoll: number | null): void {\r\n        const lPitch: number = pPitch ?? this.rotationPitch;\r\n        const lYaw: number = pYaw ?? this.rotationYaw;\r\n        const lRoll: number = pRoll ?? this.rotationRoll;\r\n\r\n        // Create new rotation.\r\n        this.mRotation = Quaternion.fromRotation(lPitch, lYaw, lRoll);\r\n    }\r\n\r\n    /**\r\n     * Set scale.\r\n     * @param pWidth - Width multiplier.\r\n     * @param pHeight - Height multiplier.\r\n     * @param pDepth - Depth multiplier.\r\n     */\r\n    public setScale(pWidth: number | null, pHeight: number | null, pDepth: number | null): void {\r\n        this.mScale.data[0][0] = pWidth ?? this.scaleWidth;\r\n        this.mScale.data[1][1] = pHeight ?? this.scaleHeight;\r\n        this.mScale.data[2][2] = pDepth ?? this.scaleDepth;\r\n    }\r\n\r\n    /**\r\n     * Set translation.\r\n     * @param pX - Movement on worlds X axis.\r\n     * @param pY - Movement on worlds Y axis.\r\n     * @param pZ - Movement on worlds Z axis.\r\n     */\r\n    public setTranslation(pX: number | null, pY: number | null, pZ: number | null): void {\r\n        this.mTranslation.data[0][3] = pX ?? this.translationX;\r\n        this.mTranslation.data[1][3] = pY ?? this.translationY;\r\n        this.mTranslation.data[2][3] = pZ ?? this.translationZ;\r\n    }\r\n\r\n    /**\r\n     * Translate into rotation direction.\r\n     * @param pForward - Forward movement.\r\n     * @param pRight - Right movement.\r\n     * @param pUp - Up movement.\r\n     */\r\n    public translateInDirection(pForward: number, pRight: number, pUp: number): void {\r\n        const lTranslationVector: Vector = new Vector([pRight, pUp, pForward, 1]);\r\n        const lDirectionVector: Vector = this.getMatrix(TransformMatrix.Rotation).vectorMult(lTranslationVector);\r\n\r\n        // Add direction.\r\n        this.addTranslation(lDirectionVector.x, lDirectionVector.y, lDirectionVector.z);\r\n    }\r\n}\r\n\r\nexport enum TransformMatrix {\r\n    Rotation = 1,\r\n    PivotRotation = 2,\r\n    Translation = 3,\r\n    Scale = 4,\r\n    Transformation = 5\r\n}","import { Matrix } from '../../math/matrix';\r\nimport { IProjection } from './i-projection.interface';\r\n\r\nexport class PerspectiveProjection implements IProjection {\r\n    private mAngleOfView: number;\r\n    private mAspectRatio: number;\r\n    private mCacheProjectionMatrix: Matrix | null;\r\n    private mFar: number;\r\n    private mNear: number;\r\n\r\n    /**\r\n     * Angle of view.\r\n     */\r\n    public get angleOfView(): number {\r\n        return this.mAngleOfView;\r\n    } set angleOfView(pValue: number) {\r\n        this.mAngleOfView = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Angle of view.\r\n     */\r\n    public get aspectRatio(): number {\r\n        return this.mAspectRatio;\r\n    } set aspectRatio(pValue: number) {\r\n        this.mAspectRatio = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Far plane.\r\n     */\r\n    public get far(): number {\r\n        return this.mFar;\r\n    } set far(pValue: number) {\r\n        this.mFar = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Near plane.\r\n     */\r\n    public get near(): number {\r\n        return this.mNear;\r\n    } set near(pValue: number) {\r\n        this.mNear = pValue;\r\n\r\n        // Reset cached matrix.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Projection matrix.\r\n     */\r\n    public get projectionMatrix(): Matrix {\r\n        if (this.mCacheProjectionMatrix === null) {\r\n            this.mCacheProjectionMatrix = this.createMatrix();\r\n        }\r\n\r\n        return this.mCacheProjectionMatrix;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mAngleOfView = 0;\r\n        this.mNear = 0;\r\n        this.mFar = 0;\r\n        this.mAspectRatio = 0;\r\n\r\n        // Cache.\r\n        this.mCacheProjectionMatrix = null;\r\n    }\r\n\r\n    /**\r\n     * Create projection matrix.\r\n     */\r\n    private createMatrix(): Matrix {\r\n        const lMatrix: Matrix = Matrix.identity(4);\r\n\r\n        // Reset identity.\r\n        lMatrix.data[0][0] = 0;\r\n        lMatrix.data[1][1] = 0;\r\n        lMatrix.data[2][2] = 0;\r\n        lMatrix.data[3][3] = 0;\r\n\r\n        // Calculate planes with centered camera on z-plane.\r\n        const lFar: number = this.mFar;\r\n        const lNear: number = this.mNear;\r\n\r\n        // Top bottom calculated by get height from vertical angle of view.\r\n        // Half angle is from y=>0 to top plane, as the angle descripes the distance between top and bottom plane.\r\n        // Tan(angleOfView / 2) = Top / Near => Near * Tan(angleOfView / 2) = Top\r\n        const lTop: number = this.mNear * Math.tan((this.angleOfView * Math.PI / 180) / 2);\r\n        const lBottom: number = -lTop;\r\n\r\n        // Left right calculated from aspect ratio.\r\n        const lRight: number = lTop * this.aspectRatio;\r\n        const lLeft: number = -lRight;\r\n\r\n        // We need to set VectorZ to VectorW to devide VectorX and VectorY by the VectorZ.\r\n        // So planes are smaller the further ways they are.\r\n        // And scale VectorX and VectorY with the near plane to start the projection not on Z=0 but on Z=Near.\r\n        // ┌ N  0  0   0  ┐   ┌ 1 ┐   ┌ 1 ┐\r\n        // | 0  N  0   0  |   | 2 |   | 2 |\r\n        // | 0  0  M1  M2 | x | 3 | = | 3 |\r\n        // └ 0  0  1   0  ┘   └ 1 ┘   └ 3 ┘\r\n\r\n        // Problem is: The VectorZ get also divided by VectorX and VectorW.\r\n        // To fix the problem set VectorZ to VectorZ² with only M1 and M2 available.\r\n        // As as M1 is the Scaling(M1 * Z) and M2 is Translating(M2 + Z) we get:\r\n        // M1*Z + M2 = Z² => Quadratic means two solutions. But we need one.\r\n        // So we constrains the equation to be only valid between Near and Far. So we set Z=Near or Z=Far.\r\n        // All other Z Values are calculated quadratic ranging from Near to Far.\r\n        // So we get:\r\n        // M1*Near + M2 = Near²  => M1 = Far + Near\r\n        // M1*Far  + M2 = Far²   => M2 = -(Far * Near)\r\n        // ┌ N  0      0         0     ┐\r\n        // | 0  N      0         0     |\r\n        // | 0  0    F + N   -(F * N)  |\r\n        // └ 0  0      1         0     ┘\r\n\r\n        // Multiplicate this perspectiv matrix with the orthigraphic to center the camera.\r\n        // ┌  2/(R-L)    0         0    -(R+L)/(R-L) ┐   ┌ N  0      0         0     ┐\r\n        // |     0     2/(T-B)     0    -(T+B)/(T-B) |   | 0  N      0         0     |\r\n        // |     0        0     1/(F-N)   -N/(F-N)   | x | 0  0    F + N   -(F * N)  |\r\n        // └     0        0        0          1      ┘   └ 0  0      1         0     ┘\r\n\r\n        // And we get.\r\n        // ┌  2N/(R-L)    0        -(R+L)/(R-L)           0      ┐\r\n        // |     0     2N/(T-B)    -(T+B)/(T-B)           0      |\r\n        // |     0        0          F/(F-N)       -(F*N)/(F-N) |\r\n        // └     0        0             1                0      ┘\r\n\r\n\r\n        // Set matrix data. Row 1:\r\n        lMatrix.data[0][0] = (2 * lNear) / (lRight - lLeft);\r\n        lMatrix.data[0][2] = -(lRight + lLeft) / (lRight - lLeft);\r\n\r\n        // Set matrix data. Row 2:\r\n        lMatrix.data[1][1] = (2 * lNear) / (lTop - lBottom);\r\n        lMatrix.data[1][2] = -(lTop + lBottom) / (lTop - lBottom);\r\n\r\n        // Set matrix data. Row 3:\r\n        lMatrix.data[2][2] = lFar / (lFar - lNear);\r\n        lMatrix.data[2][3] = -(lFar * lNear) / (lFar - lNear);\r\n\r\n        // Set matrix data. Row 4:\r\n        lMatrix.data[3][2] = 1;\r\n\r\n        return lMatrix;\r\n    }\r\n}","import { Matrix } from '../math/matrix';\r\nimport { Transform, TransformMatrix } from '../transform';\r\nimport { IProjection } from './projection/i-projection.interface';\r\n\r\nexport class ViewProjection {\r\n    private readonly mProjection: IProjection;\r\n    private readonly mTransformation: Transform;\r\n\r\n    /**\r\n     * Camera projection.\r\n     */\r\n    public get projection(): IProjection {\r\n        return this.mProjection;\r\n    }\r\n\r\n    /**\r\n     * Camera transformation.\r\n     */\r\n    public get transformation(): Transform {\r\n        return this.mTransformation;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor(pProjection: IProjection) {\r\n        this.mProjection = pProjection;\r\n        this.mTransformation = new Transform();\r\n    }\r\n\r\n    /**\r\n     * Get camera matrix. \r\n     * @param pType - Matrix type. \r\n     */\r\n    public getMatrix(pType: CameraMatrix): Matrix {\r\n        switch (pType) {\r\n            case CameraMatrix.Translation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.Translation);\r\n            }\r\n            case CameraMatrix.Rotation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.Rotation);\r\n            }\r\n            case CameraMatrix.PivotRotation: {\r\n                return this.mTransformation.getMatrix(TransformMatrix.PivotRotation);\r\n            }\r\n            case CameraMatrix.Projection: {\r\n                return this.mProjection.projectionMatrix;\r\n            }\r\n            case CameraMatrix.View: {\r\n                const lTranslation: Matrix = this.getMatrix(CameraMatrix.Translation);\r\n                const lRotation: Matrix = this.getMatrix(CameraMatrix.Rotation);\r\n                return lTranslation.mult(lRotation).inverse();\r\n            }\r\n            case CameraMatrix.ViewProjection: {\r\n                const lView: Matrix = this.getMatrix(CameraMatrix.View);\r\n                const lProjection: Matrix = this.getMatrix(CameraMatrix.Projection);\r\n                return lProjection.mult(lView);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport enum CameraMatrix {\r\n    Translation = 1,\r\n    Rotation = 2,\r\n    PivotRotation = 3,\r\n    Projection = 4,\r\n    View = 5,\r\n    ViewProjection = 6\r\n}","// Create attributes data.\r\nexport const CubeVertexPositionData: Array<number> = [ // 4x Position\r\n    // Back\r\n    -1.0, 1.0, 1.0, 1.0,\r\n    1.0, 1.0, 1.0, 1.0,\r\n    1.0, -1.0, 1.0, 1.0,\r\n    -1.0, -1.0, 1.0, 1.0,\r\n\r\n    // Front\r\n    -1.0, 1.0, -1.0, 1.0,\r\n    1.0, 1.0, -1.0, 1.0,\r\n    1.0, -1.0, -1.0, 1.0,\r\n    -1.0, -1.0, -1.0, 1.0\r\n];\r\n\r\nexport const CubeVertexUvData: Array<number> = [ // 4x Position\r\n    // Front 4,5,6\r\n    0.33333, 0.25,\r\n    0.66666, 0.25,\r\n    0.66666, 0.50,\r\n    // Front 4,6,7\r\n    0.33333, 0.25,\r\n    0.66666, 0.50,\r\n    0.33333, 0.50,\r\n\r\n    // Back 1,0,3\r\n    0.66666, 1,\r\n    0.33333, 1,\r\n    0.33333, 0.75,\r\n    // Back 1,3,2\r\n    0.66666, 1,\r\n    0.33333, 0.75,\r\n    0.66666, 0.75,\r\n\r\n    // Left 0,4,7\r\n    0, 0.25,\r\n    0.33333, 0.25,\r\n    0.33333, 0.50,\r\n    // Left 0,7,3\r\n    0, 0.25,\r\n    0.33333, 0.50,\r\n    0, 0.50,\r\n\r\n    // Right 5,1,2\r\n    0.66666, 0.25,\r\n    1, 0.25,\r\n    1, 0.50,\r\n    // Right 5,2,6\r\n    0.66666, 0.25,\r\n    1, 0.50,\r\n    0.66666, 0.50,\r\n\r\n    // Top 0,1,5\r\n    0.33333, 0,\r\n    0.66666, 0,\r\n    0.66666, 0.25,\r\n    // Top 0,5,4\r\n    0.33333, 0,\r\n    0.66666, 0.25,\r\n    0.33333, 0.25,\r\n\r\n    // Bottom 7,6,2\r\n    0.33333, 0.50,\r\n    0.66666, 0.50,\r\n    0.66666, 0.75,\r\n    // Bottom 7,2,3\r\n    0.33333, 0.50,\r\n    0.66666, 0.75,\r\n    0.33333, 0.75,\r\n];\r\n\r\nexport const CubeVertexNormalData: Array<number> = [ // 4x Position\r\n    // Front\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n    0, 0, -1, 0,\r\n\r\n    // Back 1,0,3\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 1, 0,\r\n\r\n    // Left 0,4,7\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n    -1, 0, 0, 0,\r\n\r\n    // Right 5,1,2\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n    1, 0, 0, 0,\r\n\r\n    // Top 0,1,5\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 1, 0, 0,\r\n\r\n    // Bottom 7,6,2\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n    0, -1, 0, 0,\r\n];\r\n\r\n// Create mesh.\r\nexport const CubeVertexIndices = [\r\n    // Front\r\n    4, 5, 6,\r\n    4, 6, 7,\r\n    // Back\r\n    1, 0, 3,\r\n    1, 3, 2,\r\n    // Left\r\n    0, 4, 7,\r\n    0, 7, 3,\r\n    // Right\r\n    5, 1, 2,\r\n    5, 2, 6,\r\n    // Top\r\n    0, 1, 5,\r\n    0, 5, 4,\r\n    // Bottom\r\n    7, 6, 2,\r\n    7, 2, 3\r\n];","import { BindGroup } from '../../source/base/binding/bind-group';\r\nimport { BindGroupLayout } from '../../source/base/binding/bind-group-layout';\r\nimport { GpuBuffer } from '../../source/base/buffer/gpu-buffer';\r\nimport { GpuExecution } from '../../source/base/execution/gpu-execution';\r\nimport { RenderPass } from '../../source/base/execution/pass/render-pass';\r\nimport { GpuDevice } from '../../source/base/gpu/gpu-device';\r\nimport { PrimitiveBufferFormat } from '../../source/base/memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../../source/base/memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { VertexParameter } from '../../source/base/pipeline/parameter/vertex-parameter';\r\nimport { RenderTargets, RenderTargetsInvalidationType } from '../../source/base/pipeline/target/render-targets';\r\nimport { VertexFragmentPipeline } from '../../source/base/pipeline/vertex-fragment-pipeline';\r\nimport { ShaderRenderModule } from '../../source/base/shader/shader-render-module';\r\nimport { CanvasTexture } from '../../source/base/texture/canvas-texture';\r\nimport { ComputeStage } from '../../source/constant/compute-stage.enum';\r\nimport { PrimitiveCullMode } from '../../source/constant/primitive-cullmode.enum';\r\nimport { SamplerType } from '../../source/constant/sampler-type.enum';\r\nimport { StorageBindingType } from '../../source/constant/storage-binding-type.enum';\r\nimport { TextureDimension } from '../../source/constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../source/constant/texture-format.enum';\r\nimport { VertexParameterStepMode } from '../../source/constant/vertex-parameter-step-mode.enum';\r\nimport { AmbientLight } from './camera/light/ambient-light';\r\nimport { Transform, TransformMatrix } from './camera/transform';\r\nimport { PerspectiveProjection } from './camera/view_projection/projection/perspective-projection';\r\nimport { CameraMatrix, ViewProjection } from './camera/view_projection/view-projection';\r\nimport { CubeVertexIndices, CubeVertexNormalData, CubeVertexPositionData, CubeVertexUvData } from './game_objects/cube/cube-mesh';\r\nimport cubeShader from './game_objects/cube/cube-shader.wgsl';\r\nimport lightBoxShader from './game_objects/light/light-box-shader.wgsl';\r\nimport { InitCameraControls, UpdateFpsDisplay } from './util';\r\n\r\nconst gAddCubeStep = async (pGpu: GpuDevice, pRenderTargets: RenderTargets, pRenderPass: RenderPass, pWorldGroup: BindGroup) => {\r\n    const lHeight: number = 50;\r\n    const lWidth: number = 50;\r\n    const lDepth: number = 50;\r\n\r\n    // Create shader.\r\n    const lWoodBoxShader = pGpu.shader(cubeShader).setup((pShaderSetup) => {\r\n        // Set parameter.\r\n        pShaderSetup.parameter('animationSeconds', ComputeStage.Vertex);\r\n\r\n        // Vertex entry.\r\n        pShaderSetup.vertexEntryPoint('vertex_main', (pVertexParameterSetup) => {\r\n            pVertexParameterSetup.buffer('position', PrimitiveBufferFormat.Float32, VertexParameterStepMode.Index)\r\n                .withParameter('position', 0, PrimitiveBufferMultiplier.Vector4);\r\n\r\n            pVertexParameterSetup.buffer('uv', PrimitiveBufferFormat.Float32, VertexParameterStepMode.Vertex)\r\n                .withParameter('uv', 1, PrimitiveBufferMultiplier.Vector2);\r\n\r\n            pVertexParameterSetup.buffer('normal', PrimitiveBufferFormat.Float32, VertexParameterStepMode.Vertex)\r\n                .withParameter('normal', 2, PrimitiveBufferMultiplier.Vector4);\r\n        });\r\n\r\n        // Fragment entry.\r\n        pShaderSetup.fragmentEntryPoint('fragment_main')\r\n            .addRenderTarget('main', 0, PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Vector4);\r\n\r\n        // Object bind group.\r\n        pShaderSetup.group(0, new BindGroupLayout(pGpu, 'object').setup((pBindGroupSetup) => {\r\n            pBindGroupSetup.binding(0, 'transformationMatrix', ComputeStage.Vertex)\r\n                .withPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Matrix44);\r\n\r\n            pBindGroupSetup.binding(1, 'instancePositions', ComputeStage.Vertex, StorageBindingType.Read)\r\n                .withArray().withPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Vector4);\r\n        }));\r\n\r\n        // World bind group.\r\n        pShaderSetup.group(1, pWorldGroup.layout);\r\n\r\n        // User bind group\r\n        pShaderSetup.group(2, new BindGroupLayout(pGpu, 'user').setup((pBindGroupSetup) => {\r\n            pBindGroupSetup.binding(0, 'cubeTextureSampler', ComputeStage.Fragment)\r\n                .withSampler(SamplerType.Filter);\r\n\r\n            pBindGroupSetup.binding(1, 'cubeTexture', ComputeStage.Fragment | ComputeStage.Vertex)\r\n                .withTexture(TextureDimension.TwoDimensionArray, TextureFormat.Rgba8unorm, false);\r\n        }));\r\n    });\r\n\r\n    // Create render module from shader.\r\n    const lWoodBoxRenderModule: ShaderRenderModule = lWoodBoxShader.createRenderModule('vertex_main', 'fragment_main');\r\n\r\n\r\n    // Transformation and position group. \r\n    const lWoodBoxTransformationGroup = lWoodBoxRenderModule.layout.getGroupLayout('object').create();\r\n\r\n    // Create transformation.\r\n    const lWoodBoxTransform: Transform = new Transform();\r\n    lWoodBoxTransform.setScale(1, 1, 1);\r\n    lWoodBoxTransformationGroup.data('transformationMatrix').createBuffer(new Float32Array(lWoodBoxTransform.getMatrix(TransformMatrix.Transformation).dataArray));\r\n\r\n    // Create instance positions.\r\n    const lCubeInstanceTransformationData: Array<number> = new Array<number>();\r\n    for (let lWidthIndex: number = 0; lWidthIndex < lWidth; lWidthIndex++) {\r\n        for (let lHeightIndex: number = 0; lHeightIndex < lHeight; lHeightIndex++) {\r\n            for (let lDepthIndex: number = 0; lDepthIndex < lDepth; lDepthIndex++) {\r\n                lCubeInstanceTransformationData.push(lWidthIndex * 3, lHeightIndex * 3, lDepthIndex * 3, 1);\r\n            }\r\n        }\r\n    }\r\n    lWoodBoxTransformationGroup.data('instancePositions').createBuffer(new Float32Array(lCubeInstanceTransformationData));\r\n\r\n    /*\r\n     * User defined group.\r\n     */\r\n    const lWoodBoxUserGroup = lWoodBoxRenderModule.layout.getGroupLayout('user').create();\r\n\r\n    // Setup cube texture.\r\n    lWoodBoxUserGroup.data('cubeTexture').createImage('/source/game_objects/cube/texture_one/cube-texture.png', '/source/game_objects/cube/texture_two/cube-texture.png', '/source/game_objects/cube/texture_three/cube-texture.png');\r\n\r\n    // Setup Sampler.\r\n    lWoodBoxUserGroup.data('cubeTextureSampler').createSampler();\r\n\r\n    // Generate render parameter from parameter layout.\r\n    const lMesh: VertexParameter = lWoodBoxRenderModule.vertexParameter.create(CubeVertexIndices);\r\n    lMesh.set('position', CubeVertexPositionData);\r\n    lMesh.set('uv', CubeVertexUvData);\r\n    lMesh.set('normal', CubeVertexNormalData);\r\n\r\n    // Create pipeline.\r\n    const lWoodBoxPipeline: VertexFragmentPipeline = lWoodBoxRenderModule.create(pRenderTargets);\r\n    lWoodBoxPipeline.primitiveCullMode = PrimitiveCullMode.Front;\r\n    lWoodBoxPipeline.setParameter('animationSeconds', 3);\r\n    (<any>window).animationSpeed = (pSeconds: number) => {\r\n        lWoodBoxPipeline.setParameter('animationSeconds', pSeconds);\r\n    };\r\n\r\n    pRenderPass.addStep(lWoodBoxPipeline, lMesh, [lWoodBoxTransformationGroup, pWorldGroup, lWoodBoxUserGroup], lWidth * lHeight * lDepth);\r\n};\r\n\r\nconst gAddLightBoxStep = (pGpu: GpuDevice, pRenderTargets: RenderTargets, pRenderPass: RenderPass, pWorldGroup: BindGroup): void => {\r\n    // Create shader.\r\n    const lLightBoxShader = pGpu.shader(lightBoxShader).setup((pShaderSetup) => {\r\n        // Vertex entry.\r\n        pShaderSetup.vertexEntryPoint('vertex_main', (pVertexParameterSetup) => {\r\n            pVertexParameterSetup.buffer('position', PrimitiveBufferFormat.Float32, VertexParameterStepMode.Index)\r\n                .withParameter('position', 0, PrimitiveBufferMultiplier.Vector4);\r\n\r\n            pVertexParameterSetup.buffer('uv', PrimitiveBufferFormat.Float32, VertexParameterStepMode.Vertex)\r\n                .withParameter('uv', 1, PrimitiveBufferMultiplier.Vector2);\r\n\r\n            pVertexParameterSetup.buffer('normal', PrimitiveBufferFormat.Float32, VertexParameterStepMode.Vertex)\r\n                .withParameter('normal', 2, PrimitiveBufferMultiplier.Vector4);\r\n        });\r\n\r\n        // Fragment entry.\r\n        pShaderSetup.fragmentEntryPoint('fragment_main')\r\n            .addRenderTarget('main', 0, PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Vector4);\r\n\r\n        // Object bind group.\r\n        pShaderSetup.group(0, new BindGroupLayout(pGpu, 'object').setup((pBindGroupSetup) => {\r\n            pBindGroupSetup.binding(0, 'transformationMatrix', ComputeStage.Vertex)\r\n                .withPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Matrix44);\r\n        }));\r\n\r\n        // World bind group.\r\n        pShaderSetup.group(1, pWorldGroup.layout);\r\n    });\r\n\r\n    // Create render module from shader.\r\n    const lLightBoxRenderModule = lLightBoxShader.createRenderModule('vertex_main', 'fragment_main');\r\n\r\n    // Transformation and position group. \r\n    const lLightBoxTransformationGroup = lLightBoxShader.layout.getGroupLayout('object').create();\r\n\r\n    // Create transformation.\r\n    const lLightBoxTransform: Transform = new Transform();\r\n    lLightBoxTransform.setScale(1, 1, 1);\r\n    lLightBoxTransformationGroup.data('transformationMatrix').createBuffer(new Float32Array(lLightBoxTransform.getMatrix(TransformMatrix.Transformation).dataArray));\r\n\r\n    const lLightBoxPipeline: VertexFragmentPipeline = lLightBoxRenderModule.create(pRenderTargets);\r\n    lLightBoxPipeline.primitiveCullMode = PrimitiveCullMode.Front;\r\n\r\n    // Generate render parameter from parameter layout.\r\n    const lMesh: VertexParameter = lLightBoxRenderModule.vertexParameter.create(CubeVertexIndices);\r\n    lMesh.set('position', CubeVertexPositionData);\r\n    lMesh.set('uv', CubeVertexUvData);\r\n    lMesh.set('normal', CubeVertexNormalData);\r\n\r\n    pRenderPass.addStep(lLightBoxPipeline, lMesh, [lLightBoxTransformationGroup, pWorldGroup], pWorldGroup.data('pointLights').get<GpuBuffer>().length / 12);\r\n};\r\n\r\n(async () => {\r\n    const lGpu: GpuDevice = await GpuDevice.request('high-performance');\r\n\r\n    // Create canvas.\r\n    const lCanvasTexture: CanvasTexture = lGpu.canvas(document.getElementById('canvas') as HTMLCanvasElement);\r\n\r\n    // Create and configure render targets.\r\n    const lRenderTargets: RenderTargets = lGpu.renderTargets().setup((pSetup) => {\r\n        // Add \"color\" target and init new texture.\r\n        pSetup.addColor('color', 0, true, { r: 0, g: 1, b: 0, a: 0 })\r\n            .use(lCanvasTexture);\r\n\r\n        // Add depth texture and init new texture.    \r\n        pSetup.addDepthStencil(true, 1)\r\n            .new(TextureFormat.Depth24plus);\r\n    });\r\n\r\n    // Resize canvas.\r\n    (() => {\r\n        const lCanvasWrapper: HTMLDivElement = document.querySelector('.canvas-wrapper') as HTMLDivElement;\r\n        new ResizeObserver(() => {\r\n            const lNewCanvasHeight: number = Math.max(0, lCanvasWrapper.clientHeight - 20);\r\n            const lNewCanvasWidth: number = Math.max(lCanvasWrapper.clientWidth - 20, 0);\r\n\r\n            // Resize displayed render targets.\r\n            lRenderTargets.resize(lNewCanvasHeight, lNewCanvasWidth, 4);\r\n        }).observe(lCanvasWrapper);\r\n    })();\r\n\r\n\r\n    const lWorldGroupLayout = new BindGroupLayout(lGpu, 'world').setup((pBindGroupSetup) => {\r\n        pBindGroupSetup.binding(0, 'viewProjectionMatrix', ComputeStage.Vertex)\r\n            .withPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Matrix44);\r\n\r\n        pBindGroupSetup.binding(1, 'timestamp', ComputeStage.Vertex)\r\n            .withPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Single);\r\n\r\n        pBindGroupSetup.binding(2, 'ambientLight', ComputeStage.Fragment)\r\n            .withStruct((pStruct) => {\r\n                pStruct.property('color').asPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Vector4);\r\n            });\r\n\r\n        pBindGroupSetup.binding(3, 'pointLights', ComputeStage.Fragment | ComputeStage.Vertex, StorageBindingType.Read)\r\n            .withArray().withStruct((pStruct) => {\r\n                pStruct.property('position').asPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Vector4);\r\n                pStruct.property('color').asPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Vector4);\r\n                pStruct.property('range').asPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Single);\r\n            });\r\n\r\n        pBindGroupSetup.binding(4, 'debugValue', ComputeStage.Fragment, StorageBindingType.ReadWrite)\r\n            .withPrimitive(PrimitiveBufferFormat.Float32, PrimitiveBufferMultiplier.Single);\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n     * Camera and world group. \r\n     */\r\n    const lWorldGroup: BindGroup = lWorldGroupLayout.create();\r\n\r\n    // Create camera perspective.\r\n    const lPerspectiveProjection: PerspectiveProjection = new PerspectiveProjection();\r\n    lPerspectiveProjection.aspectRatio = lRenderTargets.width / lRenderTargets.height;\r\n    lPerspectiveProjection.angleOfView = 72;\r\n    lPerspectiveProjection.near = 0.1;\r\n    lPerspectiveProjection.far = Number.MAX_SAFE_INTEGER;\r\n    lRenderTargets.addInvalidationListener(() => {\r\n        lPerspectiveProjection.aspectRatio = lRenderTargets.width / lRenderTargets.height;\r\n    }, [RenderTargetsInvalidationType.Resize]);\r\n\r\n    // Create camera.\r\n    const lCamera: ViewProjection = new ViewProjection(lPerspectiveProjection);\r\n    lCamera.transformation.setTranslation(0, 0, -4);\r\n    lWorldGroup.data('viewProjectionMatrix').createBuffer(new Float32Array(lCamera.getMatrix(CameraMatrix.ViewProjection).dataArray));\r\n\r\n    // Create ambient light.\r\n    const lAmbientLight: AmbientLight = new AmbientLight();\r\n    lAmbientLight.setColor(0.3, 0.3, 0.3);\r\n    lWorldGroup.data('ambientLight').createBuffer(new Float32Array(lAmbientLight.data));\r\n\r\n    // Create point lights.\r\n    lWorldGroup.data('pointLights').createBuffer(new Float32Array([\r\n        /* Position */1, 1, 1, 1, /* Color */1, 0, 0, 1,/* Range */ 200, 0, 0, 0,\r\n        /* Position */10, 10, 10, 1, /* Color */0, 0, 1, 1,/* Range */ 200, 0, 0, 0,\r\n        /* Position */-10, 10, 10, 1, /* Color */0, 1, 0, 1,/* Range */ 200, 0, 0, 0\r\n    ]));\r\n\r\n    // Create timestamp.\r\n    lWorldGroup.data('timestamp').createBuffer(new Float32Array(1));\r\n    const lTimestampBuffer: GpuBuffer<Float32Array> = lWorldGroup.data('timestamp').get();\r\n\r\n    // Create debug value.\r\n    lWorldGroup.data('debugValue').createBuffer(new Float32Array(1));\r\n    const lDebugBuffer: GpuBuffer<Uint32Array> = lWorldGroup.data('debugValue').get();\r\n    (<any>window).debugBuffer = () => {\r\n        lDebugBuffer.readRaw(0, 4).then((pResulto) => {\r\n            // eslint-disable-next-line no-console\r\n            console.log(pResulto);\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // Create instruction.\r\n    const lRenderPass: RenderPass = lGpu.renderPass(lRenderTargets);\r\n    await gAddCubeStep(lGpu, lRenderTargets, lRenderPass, lWorldGroup);\r\n    gAddLightBoxStep(lGpu, lRenderTargets, lRenderPass, lWorldGroup);\r\n\r\n\r\n    /**\r\n     * Controls\r\n     */\r\n    InitCameraControls(lCanvasTexture.canvas, lCamera, lWorldGroup.data('viewProjectionMatrix').get());\r\n\r\n    /*\r\n     * Execution \r\n     */\r\n    const lRenderExecutor: GpuExecution = lGpu.executor((pExecutor) => {\r\n        lRenderPass.execute(pExecutor);\r\n    });\r\n\r\n\r\n    const lFpsLabel = document.getElementById('fpsCounter')!;\r\n\r\n    // Actual execute.\r\n    let lLastTime: number = 0;\r\n    let lCurrentFps: number = 0;\r\n    const lRender = (pTime: number) => {\r\n        // Start new frame.\r\n        lGpu.startNewFrame();\r\n\r\n        // Update time stamp data.\r\n        lTimestampBuffer.write([pTime / 1000], []);\r\n\r\n        // Generate encoder and add render commands.\r\n        lRenderExecutor.execute();\r\n\r\n        // Generate fps and smooth fps numbers.\r\n        const lFps: number = 1000 / (pTime - lLastTime);\r\n        lCurrentFps = (1 - 0.05) * lCurrentFps + 0.05 * lFps;\r\n        lLastTime = pTime;\r\n\r\n        // Update fps display.\r\n        UpdateFpsDisplay(lFps, lRenderTargets.width);\r\n\r\n        // Update FPS counter.\r\n        lFpsLabel.textContent = lCurrentFps.toFixed(0);\r\n\r\n        // Refresh canvas\r\n        requestAnimationFrame(lRender);\r\n    };\r\n    requestAnimationFrame(lRender);\r\n})();","import { Dictionary } from '@kartoffelgames/core';\r\nimport { DeviceConfiguration, KeyboardButton, MouseButton, InputConfiguration, InputDevices, MouseKeyboardConnector, BaseInputDevice } from '@kartoffelgames/web.game-input';\r\nimport { GpuBuffer } from '../../source/base/buffer/gpu-buffer';\r\nimport { ViewProjection, CameraMatrix } from './camera/view_projection/view-projection';\r\n\r\nexport const InitCameraControls = (pCanvas: HTMLCanvasElement, pCamera: ViewProjection, pCameraBuffer: GpuBuffer<Float32Array>): void => {\r\n    // Register keyboard mouse movements.\r\n    const lDefaultConfiguaration: DeviceConfiguration = new DeviceConfiguration();\r\n    lDefaultConfiguaration.addAction('Forward', [KeyboardButton.KeyW]);\r\n    lDefaultConfiguaration.addAction('Back', [KeyboardButton.KeyS]);\r\n    lDefaultConfiguaration.addAction('Left', [KeyboardButton.KeyA]);\r\n    lDefaultConfiguaration.addAction('Right', [KeyboardButton.KeyD]);\r\n    lDefaultConfiguaration.addAction('Up', [KeyboardButton.ShiftLeft]);\r\n    lDefaultConfiguaration.addAction('Down', [KeyboardButton.ControlLeft]);\r\n    lDefaultConfiguaration.addAction('RotateLeft', [KeyboardButton.KeyQ]);\r\n    lDefaultConfiguaration.addAction('RotateRight', [KeyboardButton.KeyE]);\r\n    lDefaultConfiguaration.addAction('Yaw', [MouseButton.Xaxis]);\r\n    lDefaultConfiguaration.addAction('Pitch', [MouseButton.Yaxis]);\r\n    lDefaultConfiguaration.triggerTolerance = 0.2;\r\n    const lInputConfiguration: InputConfiguration = new InputConfiguration(lDefaultConfiguaration);\r\n    const lInputDevices: InputDevices = new InputDevices(lInputConfiguration);\r\n    lInputDevices.registerConnector(new MouseKeyboardConnector());\r\n\r\n    const lCurrentActionValue: Dictionary<string, number> = new Dictionary<string, number>();\r\n    const lKeyboard: BaseInputDevice = lInputDevices.devices[0];\r\n    lKeyboard.addEventListener('actionstatechange', (pEvent) => {\r\n        lCurrentActionValue.set(pEvent.action, pEvent.state);\r\n    });\r\n    window.setInterval(() => {\r\n        const lSpeed = 10;\r\n\r\n        // Z Axis\r\n        if (lCurrentActionValue.get('Forward')! > 0) {\r\n            pCamera.transformation.translateInDirection((lCurrentActionValue.get('Forward')! / 50) * lSpeed, 0, 0);\r\n        }\r\n        if (lCurrentActionValue.get('Back')! > 0) {\r\n            pCamera.transformation.translateInDirection(-(lCurrentActionValue.get('Back')! / 50) * lSpeed, 0, 0);\r\n        }\r\n\r\n        // X Axis\r\n        if (lCurrentActionValue.get('Right')! > 0) {\r\n            pCamera.transformation.translateInDirection(0, (lCurrentActionValue.get('Right')! / 50) * lSpeed, 0);\r\n        }\r\n        if (lCurrentActionValue.get('Left')! > 0) {\r\n            pCamera.transformation.translateInDirection(0, -(lCurrentActionValue.get('Left')! / 50) * lSpeed, 0);\r\n        }\r\n\r\n        // Y Axis\r\n        if (lCurrentActionValue.get('Up')! > 0) {\r\n            pCamera.transformation.translateInDirection(0, 0, (lCurrentActionValue.get('Up')! / 50) * lSpeed);\r\n        }\r\n        if (lCurrentActionValue.get('Down')! > 0) {\r\n            pCamera.transformation.translateInDirection(0, 0, -(lCurrentActionValue.get('Down')! / 50) * lSpeed);\r\n        }\r\n\r\n        // Rotation.\r\n        if (lCurrentActionValue.get('Yaw')! > 0 || lCurrentActionValue.get('Yaw')! < 0) {\r\n            pCamera.transformation.addEulerRotation(0, lCurrentActionValue.get('Yaw')!, 0);\r\n        }\r\n        if (lCurrentActionValue.get('Pitch')! > 0 || lCurrentActionValue.get('Pitch')! < 0) {\r\n            pCamera.transformation.addEulerRotation(lCurrentActionValue.get('Pitch')!, 0, 0);\r\n        }\r\n        if (lCurrentActionValue.get('RotateLeft')! > 0) {\r\n            pCamera.transformation.addEulerRotation(0, 0, lCurrentActionValue.get('RotateLeft')!);\r\n        }\r\n        if (lCurrentActionValue.get('RotateRight')! > 0) {\r\n            pCamera.transformation.addEulerRotation(0, 0, -lCurrentActionValue.get('RotateRight')!);\r\n        }\r\n\r\n        // Update transformation buffer.\r\n        pCameraBuffer.writeRaw(pCamera.getMatrix(CameraMatrix.ViewProjection).dataArray);\r\n    }, 8);\r\n    pCanvas.addEventListener('click', () => {\r\n        pCanvas.requestPointerLock();\r\n    });\r\n};\r\n\r\nexport const UpdateFpsDisplay = (() => {\r\n    let lMaxFps: number = 0;\r\n\r\n    return (pFps: number, pWidth: number): void => {\r\n        const lCanvas: HTMLCanvasElement = document.getElementById('fps-display') as HTMLCanvasElement;\r\n        const lCanvasContext: CanvasRenderingContext2D = lCanvas.getContext('2d', { willReadFrequently: true })!;\r\n\r\n        if(lCanvas.width > 2) {\r\n            return;\r\n        }\r\n\r\n        // Update canvas width.\r\n        if (pWidth !== lCanvas.width) {\r\n            lCanvas.width = pWidth;\r\n            lCanvas.height = 30;\r\n        }\r\n\r\n        // Get current fps image data except the first pixel column.\r\n        const lLastFpsData: ImageData = lCanvasContext.getImageData(1, 0, lCanvas.width - 1, lCanvas.height);\r\n\r\n        // Adjust to new fps scaling.\r\n        let lScaling: number = 1;\r\n        if (lMaxFps < pFps) {\r\n            lScaling = lMaxFps / pFps;\r\n            lMaxFps = pFps;\r\n        }\r\n\r\n        // now clear the right-most pixels:\r\n        if (lScaling === 1) {\r\n            lCanvasContext.clearRect(lCanvas.width - 1, 0, 1, lCanvas.height);\r\n        } else {\r\n            lCanvasContext.clearRect(0, 0, lCanvas.width, lCanvas.height);\r\n        }\r\n\r\n        // Put image data to left.\r\n        const lScalingSize: number = Math.floor(lCanvas.height * lScaling);\r\n        lCanvasContext.putImageData(lLastFpsData, 0, lCanvas.height - (lScalingSize), 0, 0, lCanvas.width - 1, lScalingSize);\r\n\r\n        // Calculate heigt of rect.\r\n        const lRectHeight: number = (pFps / lMaxFps) * lCanvas.height;\r\n\r\n        // Draw current fps.\r\n        lCanvasContext.fillStyle = '#87beee';\r\n        lCanvasContext.fillRect(lCanvas.width - 1, lCanvas.height - lRectHeight, 1, lRectHeight);\r\n    };\r\n})();","import { Exception, TypedArray } from '@kartoffelgames/core';\r\nimport { GpuBuffer } from '../buffer/gpu-buffer';\r\nimport { GpuObjectSetupReferences } from '../gpu/object/gpu-object';\r\nimport { GpuObjectChildSetup } from '../gpu/object/gpu-object-child-setup';\r\nimport { BaseBufferMemoryLayout } from '../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from '../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { SamplerMemoryLayout } from '../memory_layout/texture/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture/texture-memory-layout';\r\nimport { ImageTexture } from '../texture/image-texture';\r\nimport { TextureSampler } from '../texture/texture-sampler';\r\nimport { VideoTexture } from '../texture/video-texture';\r\nimport { BindData } from './bind-group';\r\nimport { BindLayout } from './bind-group-layout';\r\n\r\nexport class BindGroupDataSetup extends GpuObjectChildSetup<null, BindGroupDataCallback> {\r\n    private readonly mBindLayout: Readonly<BindLayout>;\r\n    private readonly mCurrentData: BindData | null;\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pLayout - Target layout.\r\n     * @param pCurrentData - Current set data.\r\n     * @param pSetupReference - Setup data references.\r\n     * @param pDataCallback - Bind data callback.\r\n     */\r\n    public constructor(pLayout: Readonly<BindLayout>, pCurrentData: BindData | null, pSetupReference: GpuObjectSetupReferences<null>, pDataCallback: BindGroupDataCallback) {\r\n        super(pSetupReference, pDataCallback);\r\n\r\n        // Set initial data.\r\n        this.mCurrentData = pCurrentData;\r\n        this.mBindLayout = pLayout;\r\n    }\r\n\r\n    /**\r\n     * Create na new buffer.\r\n     * \r\n     * @param pDataOrType - Type or initial data.\r\n     * @param pVariableSizeCount - Variable item count.\r\n     */\r\n    public createBuffer(pData: TypedArray): void;\r\n    public createBuffer(pType: PrimitiveBufferFormat, pVariableSizeCount?: number): void;\r\n    public createBuffer(pDataOrType: TypedArray | PrimitiveBufferFormat, pVariableSizeCount: number | null = null): void {\r\n        // Layout must be a buffer memory layout.\r\n        if (!(this.mBindLayout.layout instanceof BaseBufferMemoryLayout)) {\r\n            throw new Exception(`Bind data layout is not suitable for buffers.`, this);\r\n        }\r\n\r\n        // Read buffer type from parameter.\r\n        const lBufferFormat: PrimitiveBufferFormat = (() => {\r\n            // Parameter is type.\r\n            if (typeof pDataOrType === 'string') {\r\n                return pDataOrType;\r\n            }\r\n\r\n            // Get buffer type from typed array.\r\n            switch (true) {\r\n                case pDataOrType instanceof Float32Array: {\r\n                    return PrimitiveBufferFormat.Float32;\r\n                }\r\n                case pDataOrType instanceof Uint32Array: {\r\n                    return PrimitiveBufferFormat.Uint32;\r\n                }\r\n                case pDataOrType instanceof Int32Array: {\r\n                    return PrimitiveBufferFormat.Sint32;\r\n                }\r\n                default: {\r\n                    throw new Exception(`Buffer data is not suitable for binding buffer creation`, this);\r\n                }\r\n            }\r\n        })();\r\n\r\n        // Calculate variable item count from initial buffer data.  \r\n        const lVariableItemCount: number = pVariableSizeCount ?? (() => {\r\n            // No need to calculate was it is allways zero.\r\n            if (this.mBindLayout.layout.variableSize === 0) {\r\n                return 0;\r\n            }\r\n\r\n            // A variable size count can only be calculated for data.\r\n            if (typeof pDataOrType !== 'object') {\r\n                throw new Exception(`For bind group data buffer \"${this.mBindLayout.name}\" a variable item count must be set.`, this);\r\n            }\r\n\r\n            // Get initial buffer data byte length.\r\n            const lBufferByteLength: number = pDataOrType.length * pDataOrType.BYTES_PER_ELEMENT;\r\n\r\n            // calculate item count and check if initial data meets requirments.\r\n            const lItemCount: number = (lBufferByteLength - this.mBindLayout.layout.fixedSize) / this.mBindLayout.layout.variableSize;\r\n            if (lItemCount % 1 > 0) {\r\n                throw new Exception('Initial bind group data buffer data \"${this.mBindLayout.name}\" does not meet alignment or data size requirements.', this);\r\n            }\r\n\r\n            return lItemCount;\r\n        })();\r\n\r\n        // Create buffer.\r\n        const lBuffer: GpuBuffer<TypedArray> = new GpuBuffer(this.device, this.mBindLayout.layout, lBufferFormat, lVariableItemCount);\r\n\r\n        // Add initial data.\r\n        if (typeof pDataOrType === 'object') {\r\n            lBuffer.initialData(() => {\r\n                return pDataOrType;\r\n            });\r\n        }\r\n\r\n        // Send created data.\r\n        this.sendData(lBuffer);\r\n    }\r\n\r\n    /**\r\n     * Create new image texture with loaded images.\r\n     * \r\n     * @param pSourceList - Image source list.\r\n     * \r\n     * @returns promise that resolves when all images are loaded. \r\n     */\r\n    public async createImage(...pSourceList: Array<string>): Promise<void> {\r\n        // Layout must be a texture memory layout.\r\n        if (!(this.mBindLayout.layout instanceof TextureMemoryLayout)) {\r\n            throw new Exception(`Bind data layout is not suitable for image textures.`, this);\r\n        }\r\n\r\n        // Create image texture.\r\n        const lTexture: ImageTexture = new ImageTexture(this.device, this.mBindLayout.layout);\r\n\r\n        // Load images async.\r\n        const lImageLoading: Promise<void> = lTexture.load(...pSourceList);\r\n\r\n        // Send created texture to parent bind group.\r\n        this.sendData(lTexture);\r\n\r\n        return lImageLoading;\r\n    }\r\n\r\n    /**\r\n     * Create new sampler.\r\n     */\r\n    public createSampler(): void {\r\n        // Layout must be a sampler memory layout.\r\n        if (!(this.mBindLayout.layout instanceof SamplerMemoryLayout)) {\r\n            throw new Exception(`Bind data layout is not suitable for samplers.`, this);\r\n        }\r\n\r\n        // Send created data.\r\n        this.sendData(new TextureSampler(this.device, this.mBindLayout.layout));\r\n    }\r\n\r\n    /**\r\n     * Create new video texture.\r\n     * \r\n     * @param pSource - Video source.\r\n     */\r\n    public createVideo(pSource: string): void {\r\n        // Layout must be a sampler memory layout.\r\n        if (!(this.mBindLayout.layout instanceof TextureMemoryLayout)) {\r\n            throw new Exception(`Bind data layout is not suitable for samplers.`, this);\r\n        }\r\n\r\n        // Create video texture with initial source.\r\n        const lVideoTexture: VideoTexture = new VideoTexture(this.device, this.mBindLayout.layout);\r\n        lVideoTexture.source = pSource;\r\n\r\n        // Send created data.\r\n        this.sendData(lVideoTexture);\r\n    }\r\n\r\n    /**\r\n     * Get current binded data.\r\n     * \r\n     * @returns current set bind data.\r\n     * \r\n     * @throws {@link Exception}\r\n     * When no data was set.\r\n     */\r\n    public get<T extends BindData>(): T {\r\n        // Validate existance.\r\n        if (!this.mCurrentData) {\r\n            throw new Exception('No binding data was set.', this);\r\n        }\r\n\r\n        // Return current set data.\r\n        return this.mCurrentData as T;\r\n    }\r\n\r\n    /**\r\n     * Set already created bind data.\r\n     * \r\n     * @param pData - Created data.\r\n     */\r\n    public set(pData: BindData): void {\r\n        this.sendData(pData);\r\n    }\r\n}\r\n\r\ntype BindGroupDataCallback = (pData: BindData) => void;","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { StorageBindingType } from '../../constant/storage-binding-type.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject, GpuObjectSetupReferences } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { IGpuObjectSetup } from '../gpu/object/interface/i-gpu-object-setup';\r\nimport { BaseMemoryLayout } from '../memory_layout/base-memory-layout';\r\nimport { BaseBufferMemoryLayout } from '../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { SamplerMemoryLayout } from '../memory_layout/texture/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture/texture-memory-layout';\r\nimport { TextureFormatCapability } from '../texture/texture-format-capabilities';\r\nimport { BindGroup } from './bind-group';\r\nimport { BindGroupLayoutSetup, BindGroupLayoutSetupData } from './setup/bind-group-layout-setup';\r\n\r\n// TODO: Find a good way to create new binding groups.\r\n\r\n/**\r\n * Bind group layout. Fixed at creation. \r\n */\r\nexport class BindGroupLayout extends GpuObject<GPUBindGroupLayout, BindGroupLayoutInvalidationType, BindGroupLayoutSetup> implements IGpuObjectNative<GPUBindGroupLayout>, IGpuObjectSetup<BindGroupLayoutSetup> {\r\n    private readonly mBindings: Dictionary<string, BindLayout>;\r\n    private readonly mName: string;\r\n\r\n    /**\r\n     * Get binding names.\r\n     */\r\n    public get bindingNames(): Array<string> {\r\n        // Ensure setup.\r\n        this.ensureSetup();\r\n\r\n        return [...this.mBindings.keys()];\r\n    }\r\n\r\n    /**\r\n     * Get bindings of group in binding order.\r\n     */\r\n    public get bindings(): Array<Readonly<BindLayout>> {\r\n        // Ensure setup.\r\n        this.ensureSetup();\r\n\r\n        const lBindingList: Array<BindLayout> = new Array<BindLayout>();\r\n        for (const lBinding of this.mBindings.values()) {\r\n            lBindingList[lBinding.index] = lBinding;\r\n        }\r\n\r\n        return lBindingList;\r\n    }\r\n\r\n    /**\r\n     * Bind group name.\r\n     */\r\n    public get name(): string {\r\n        return this.mName;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUBindGroupLayout {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Gpu Device reference.\r\n     * @param pName - Name of binding group.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pName: string) {\r\n        super(pDevice);\r\n\r\n        // TODO: Enforce limits.\r\n        // maxBindingsPerBindGroup\r\n\r\n        // Set binding group name.\r\n        this.mName = pName;\r\n\r\n        // Init bindings.\r\n        this.mBindings = new Dictionary<string, BindLayout>();\r\n    }\r\n\r\n    /**\r\n     * Create new bind group from layout.\r\n     * \r\n     * @returns new bind group.\r\n     */\r\n    public create(): BindGroup {\r\n        // Ensure setup.\r\n        this.ensureSetup();\r\n\r\n        return new BindGroup(this.device, this);\r\n    }\r\n\r\n    /**\r\n     * Get full bind information.\r\n     * @param pName - Bind name.\r\n     */\r\n    public getBind(pName: string): Readonly<BindLayout> {\r\n        // Ensure setup.\r\n        this.ensureSetup();\r\n\r\n        if (!this.mBindings.has(pName)) {\r\n            throw new Exception(`Bind ${pName} does not exist.`, this);\r\n        }\r\n\r\n        return this.mBindings.get(pName)!;\r\n    }\r\n\r\n    /**\r\n     * Call setup.\r\n     * \r\n     * @param pSetupCallback - Setup callback.\r\n     *\r\n     * @returns — this. \r\n     */\r\n    public override setup(pSetupCallback?: ((pSetup: BindGroupLayoutSetup) => void) | undefined): this {\r\n        return super.setup(pSetupCallback);\r\n    }\r\n\r\n    /**\r\n     * Generate native bind data group layout object.\r\n     */\r\n    protected override generateNative(): GPUBindGroupLayout {\r\n        const lEntryList: Array<GPUBindGroupLayoutEntry> = new Array<GPUBindGroupLayoutEntry>();\r\n\r\n        // Generate layout entry for each binding.\r\n        for (const lEntry of this.bindings) {\r\n            // Generate default properties.\r\n            const lLayoutEntry: GPUBindGroupLayoutEntry = {\r\n                visibility: lEntry.visibility,\r\n                binding: lEntry.index\r\n            };\r\n\r\n            // Different binding for different\r\n            switch (true) {\r\n                // Buffer layouts.\r\n                case lEntry.layout instanceof BaseBufferMemoryLayout: {\r\n                    // Convert bind type info bufer binding type.\r\n                    const lBufferBindingType: GPUBufferBindingType = (() => {\r\n                        switch (lEntry.storageType) {\r\n                            case StorageBindingType.None: {\r\n                                return 'uniform';\r\n                            }\r\n                            case StorageBindingType.Read: {\r\n                                return 'read-only-storage';\r\n                            }\r\n                            default: {\r\n                                return 'storage';\r\n                            }\r\n                        }\r\n                    })();\r\n\r\n                    // Create buffer layout with all optional values.\r\n                    lLayoutEntry.buffer = {\r\n                        type: lBufferBindingType,\r\n                        minBindingSize: 0,\r\n                        hasDynamicOffset: false\r\n                    } satisfies Required<GPUBufferBindingLayout>;\r\n\r\n                    break;\r\n                }\r\n\r\n                // Sampler layouts.\r\n                case lEntry.layout instanceof SamplerMemoryLayout: {\r\n                    // Create sampler layout with all optional values.\r\n                    lLayoutEntry.sampler = {\r\n                        type: lEntry.layout.samplerType\r\n                    } satisfies Required<GPUSamplerBindingLayout>;\r\n\r\n                    break;\r\n                }\r\n\r\n                // Texture layouts.\r\n                case lEntry.layout instanceof TextureMemoryLayout: {\r\n                    // Uniform bind when without storage binding.\r\n                    if (lEntry.storageType === StorageBindingType.None) {\r\n                        // Read texture capabilities.\r\n                        const lTextureFormatCapabilities: TextureFormatCapability = this.device.formatValidator.capabilityOf(lEntry.layout.format);\r\n\r\n                        // Create image texture bind information.\r\n                        lLayoutEntry.texture = {\r\n                            sampleType: lTextureFormatCapabilities.sampleTypes.primary,\r\n                            multisampled: lEntry.layout.multisampled,\r\n                            viewDimension: lEntry.layout.dimension\r\n                        } satisfies Required<GPUTextureBindingLayout>;\r\n\r\n                        break;\r\n                    }\r\n\r\n                    // Storage textures need to be write only.\r\n                    let lStorageAccess: GPUStorageTextureAccess;\r\n                    switch (lEntry.storageType) {\r\n                        case StorageBindingType.ReadWrite: {\r\n                            lStorageAccess = 'read-write';\r\n                            break;\r\n                        }\r\n                        case StorageBindingType.Write: {\r\n                            lStorageAccess = 'write-only';\r\n                            break;\r\n                        }\r\n                        case StorageBindingType.Read: {\r\n                            lStorageAccess = 'read-only';\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // Create storage texture bind information.\r\n                    lLayoutEntry.storageTexture = {\r\n                        access: lStorageAccess!,\r\n                        format: lEntry.layout.format as GPUTextureFormat,\r\n                        viewDimension: lEntry.layout.dimension\r\n                    } satisfies Required<GPUStorageTextureBindingLayout>;\r\n                }\r\n            }\r\n\r\n            // Add binding entry to bindings.\r\n            lEntryList.push(lLayoutEntry);\r\n        }\r\n\r\n        // Create binding group layout.\r\n        return this.device.gpu.createBindGroupLayout({\r\n            label: `BindGroupLayout-${this.mName}`,\r\n            entries: lEntryList\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Setup bind group.\r\n     * \r\n     * @param pReferences - Setup data references. \r\n     */\r\n    protected override onSetup(pReferences: BindGroupLayoutSetupData): void {\r\n        // Validation set.\r\n        const lBindingIndices: Set<number> = new Set<number>();\r\n        const lBindingName: Set<string> = new Set<string>();\r\n\r\n        // Add each binding.\r\n        for (const lBinding of pReferences.bindings) {\r\n            // Validate layout.\r\n            if (!lBinding.layout) {\r\n                throw new Exception(`Bind group binding \"${lBinding.name}\" has no setup layout.`, this);\r\n            }\r\n\r\n            // Shallow copy binding.\r\n            this.mBindings.set(lBinding.name, {\r\n                name: lBinding.name,\r\n                index: lBinding.index,\r\n                layout: lBinding.layout,\r\n                visibility: lBinding.visibility,\r\n                storageType: lBinding.storageType\r\n            });\r\n\r\n            // Register change listener for layout changes.\r\n            lBinding.layout.addInvalidationListener(() => {\r\n                this.invalidate(BindGroupLayoutInvalidationType.Layout);\r\n            });\r\n\r\n            // Validate dublicate indices.\r\n            if (lBindingIndices.has(lBinding.index) || lBindingName.has(lBinding.name)) {\r\n                throw new Exception(`Binding \"${lBinding.name}\" with index \"${lBinding.index}\" added twice.`, this);\r\n            }\r\n\r\n            // Add binding index to already binded indices. \r\n            lBindingIndices.add(lBinding.index);\r\n            lBindingName.add(lBinding.name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create setup object. Return null to skip any setups.\r\n     * \r\n     * @param pReferences - Setup references.\r\n     * \r\n     * @returns setup.\r\n     */\r\n    protected override onSetupObjectCreate(pReferences: GpuObjectSetupReferences<never>): BindGroupLayoutSetup {\r\n        return new BindGroupLayoutSetup(pReferences);\r\n    }\r\n}\r\n\r\nexport type BindLayout = {\r\n    name: string,\r\n    index: number,\r\n    layout: BaseMemoryLayout;\r\n    visibility: ComputeStage;\r\n    storageType: StorageBindingType;\r\n};\r\n\r\nexport enum BindGroupLayoutInvalidationType {\r\n    Layout = 'LayoutChange',\r\n    Setting = 'BindingSettingChange'\r\n}","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core';\r\nimport { BufferUsage } from '../../constant/buffer-usage.enum';\r\nimport { StorageBindingType } from '../../constant/storage-binding-type.enum';\r\nimport { TextureUsage } from '../../constant/texture-usage.enum';\r\nimport { GpuBuffer } from '../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject, GpuObjectSetupReferences } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { BaseBufferMemoryLayout } from '../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { SamplerMemoryLayout } from '../memory_layout/texture/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture/texture-memory-layout';\r\nimport { BaseTexture } from '../texture/base-texture';\r\nimport { CanvasTexture } from '../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../texture/frame-buffer-texture';\r\nimport { ImageTexture } from '../texture/image-texture';\r\nimport { TextureSampler } from '../texture/texture-sampler';\r\nimport { BindGroupDataSetup } from './bind-group-data-setup';\r\nimport { BindGroupLayout, BindLayout } from './bind-group-layout';\r\n\r\nexport class BindGroup extends GpuObject<GPUBindGroup, BindGroupInvalidationType> implements IGpuObjectNative<GPUBindGroup> {\r\n    private readonly mBindData: Dictionary<string, BindData>;\r\n    private readonly mLayout: BindGroupLayout;\r\n\r\n    /**\r\n     * Layout of bind group.\r\n     */\r\n    public get layout(): BindGroupLayout {\r\n        return this.mLayout;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUBindGroup {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pBindGroupLayout: BindGroupLayout) {\r\n        super(pDevice);\r\n\r\n        this.mLayout = pBindGroupLayout;\r\n        this.mBindData = new Dictionary<string, BindData>();\r\n\r\n        // Register change listener for layout changes.\r\n        pBindGroupLayout.addInvalidationListener(() => {\r\n            this.invalidate(BindGroupInvalidationType.BindGroupRebuild);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Read binding data references.\r\n     * \r\n     * @param pBindName - Binding name.\r\n     * \r\n     * @returns Data setup object. \r\n     */\r\n    public data(pBindName: string): BindGroupDataSetup {\r\n        const lBindLayout: Readonly<BindLayout> = this.mLayout.getBind(pBindName);\r\n        const lData: BindData | null = this.mBindData.get(pBindName) ?? null;\r\n\r\n        // Construct setup data to data.\r\n        const lDataSetupReferences: GpuObjectSetupReferences<null> = {\r\n            device: this.device,\r\n            inSetup: true, // No need to defuse setup.\r\n            data: null\r\n        };\r\n\r\n        return new BindGroupDataSetup(lBindLayout, lData, lDataSetupReferences, (pData: BindData) => {\r\n            // Validate if layout fits bind data and dynamicly extend usage type of bind data.\r\n            switch (true) {\r\n                // Textures must use a buffer memory layout.\r\n                case pData instanceof GpuBuffer: {\r\n                    if (!(lBindLayout.layout instanceof BaseBufferMemoryLayout)) {\r\n                        throw new Exception(`Buffer added to bind data \"${pBindName}\" but binding does not expect a buffer.`, this);\r\n                    }\r\n\r\n                    // Extend buffer usage based on if it is a storage or not.\r\n                    if (lBindLayout.storageType !== StorageBindingType.None) {\r\n                        pData.extendUsage(BufferUsage.Storage);\r\n                    } else {\r\n                        pData.extendUsage(BufferUsage.Uniform);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                // Samplers must use a texture sampler memory layout.\r\n                case pData instanceof TextureSampler: {\r\n                    if (!(lBindLayout.layout instanceof SamplerMemoryLayout)) {\r\n                        throw new Exception(`Texture sampler added to bind data \"${pBindName}\" but binding does not expect a texture sampler.`, this);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                // Textures must use a texture memory layout.\r\n                case pData instanceof BaseTexture: {\r\n                    if (!(lBindLayout.layout instanceof TextureMemoryLayout)) {\r\n                        throw new Exception(`Texture added to bind data \"${pBindName}\" but binding does not expect a texture.`, this);\r\n                    }\r\n\r\n                    // Extend buffer usage based on if it is a storage or not.\r\n                    if (lBindLayout.storageType !== StorageBindingType.None) {\r\n                        pData.extendUsage(TextureUsage.Storage);\r\n                    } else {\r\n                        pData.extendUsage(TextureUsage.TextureBinding);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                default: {\r\n                    throw new Exception(`Unsupported resource added to bind data \"${pBindName}\".`, this);\r\n                }\r\n            }\r\n\r\n            // Set data.\r\n            this.mBindData.set(pBindName, pData);\r\n\r\n            // Trigger update data is invalid.\r\n            pData.addInvalidationListener(() => {\r\n                this.invalidate(BindGroupInvalidationType.BindGroupRebuild);\r\n            }); // TODO: Distinct and only update when necessary.\r\n\r\n            // Trigger update on data change. \r\n            this.invalidate(BindGroupInvalidationType.BindGroupRebuild);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu bind data group.\r\n     */\r\n    protected override generateNative(): GPUBindGroup {\r\n        // Invalidate group.\r\n        this.invalidate(BindGroupInvalidationType.BindGroupRebuild);\r\n\r\n        const lEntryList: Array<GPUBindGroupEntry> = new Array<GPUBindGroupEntry>();\r\n\r\n        for (const lBindname of this.layout.bindingNames) {\r\n            // Read bind data.\r\n            const lBindData: BindData | undefined = this.mBindData.get(lBindname);\r\n            if (!lBindData) {\r\n                throw new Exception(`Data for binding \"${lBindname}\" is not set.`, this);\r\n            }\r\n\r\n            // Read bind layout.\r\n            const lBindLayout: Readonly<BindLayout> = this.layout.getBind(lBindname);\r\n\r\n            // Set resource to group entry for each \r\n            const lGroupEntry: GPUBindGroupEntry = { binding: lBindLayout.index, resource: <any>null };\r\n\r\n            // Buffer bind.\r\n            if (lBindData instanceof GpuBuffer) {\r\n                lGroupEntry.resource = { buffer: lBindData.native };\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Sampler bind\r\n            if (lBindData instanceof TextureSampler) {\r\n                lGroupEntry.resource = lBindData.native;\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Frame buffer bind.\r\n            if (lBindData instanceof FrameBufferTexture) {\r\n                lGroupEntry.resource = lBindData.native;\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Image texture bind.\r\n            if (lBindData instanceof ImageTexture) {\r\n                lGroupEntry.resource = lBindData.native;\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            // Canvas texture bind.\r\n            if (lBindData instanceof CanvasTexture) {\r\n                lGroupEntry.resource = lBindData.native;\r\n\r\n                lEntryList.push(lGroupEntry);\r\n                continue;\r\n            }\r\n\r\n            throw new Exception(`Bind type for \"${lBindData}\" not supported`, this);\r\n        }\r\n\r\n        return this.device.gpu.createBindGroup({\r\n            label: 'Bind-Group',\r\n            layout: this.layout.native,\r\n            entries: lEntryList\r\n        });\r\n    }\r\n}\r\n\r\nexport type BindData = GpuBuffer<TypedArray> | TextureSampler | BaseTexture;\r\n\r\nexport enum BindGroupInvalidationType {\r\n    BindGroupRebuild = 'GroupRebuild',\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject, GpuObjectUpdateListener } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { BindGroupLayout, BindGroupLayoutInvalidationType, BindLayout } from './bind-group-layout';\r\n\r\nexport class PipelineLayout extends GpuObject<GPUPipelineLayout, PipelineLayoutInvalidationType> implements IGpuObjectNative<GPUPipelineLayout> {\r\n    private readonly mBindGroupInvalidationListener: WeakMap<BindGroupLayout, GpuObjectUpdateListener<BindGroupLayoutInvalidationType>>;\r\n    private readonly mBindGroupNames: Dictionary<string, number>;\r\n    private readonly mBindGroups: Dictionary<number, BindGroupLayout>;\r\n    private readonly mInitialBindGroups: Dictionary<number, BindGroupLayout>;\r\n\r\n    /**\r\n     * Bind group names.\r\n     */\r\n    public get groups(): Array<string> {\r\n        return [...this.mBindGroupNames.keys()];\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUPipelineLayout {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Gpu Device reference.\r\n     * @param pInitialGroups - Initial groups.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pInitialGroups: Dictionary<number, BindGroupLayout>) {\r\n        super(pDevice);\r\n\r\n        // Init storages.\r\n        this.mBindGroupNames = new Dictionary<string, number>();\r\n        this.mInitialBindGroups = new Dictionary<number, BindGroupLayout>();\r\n        this.mBindGroups = new Dictionary<number, BindGroupLayout>();\r\n        this.mBindGroupInvalidationListener = new WeakMap<BindGroupLayout, GpuObjectUpdateListener<BindGroupLayoutInvalidationType>>();\r\n\r\n        // TODO: Check gpu restriction.\r\n        //this.device.gpu.limits.maxBindGroups\r\n        // maxSampledTexturesPerShaderStage;\r\n        // maxSamplersPerShaderStage;\r\n        // maxStorageBuffersPerShaderStage;\r\n        // maxStorageTexturesPerShaderStage;\r\n        // maxUniformBuffersPerShaderStage;\r\n\r\n        // Set initial work groups.\r\n        for (const [lGroupIndex, lGroup] of pInitialGroups) {\r\n            // Restrict dublicate names.\r\n            if (this.mBindGroupNames.has(lGroup.name)) {\r\n                throw new Exception(`Can add group name \"${lGroup.name}\" only once.`, this);\r\n            }\r\n\r\n            // Restrict dublicate locations.\r\n            if (this.mInitialBindGroups.has(lGroupIndex)) {\r\n                throw new Exception(`Can add group location index \"${lGroupIndex}\" only once.`, this);\r\n            }\r\n\r\n            // Set name to index mapping.\r\n            this.mBindGroupNames.set(lGroup.name, lGroupIndex);\r\n\r\n            // Set bind groups to initial data and working bind group.\r\n            this.mInitialBindGroups.set(lGroupIndex, lGroup);\r\n            this.mBindGroups.set(lGroupIndex, lGroup);\r\n\r\n            // Add invalidationlistener.\r\n            const lListener: GpuObjectUpdateListener<BindGroupLayoutInvalidationType> = () => {\r\n                this.invalidate(PipelineLayoutInvalidationType.GroupChange);\r\n            };\r\n            lGroup.addInvalidationListener(lListener);\r\n            this.mBindGroupInvalidationListener.set(lGroup, lListener);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get bind group layout by name.\r\n     * \r\n     * @param pGroupName - Group name.\r\n     */\r\n    public getGroupLayout(pGroupName: string): BindGroupLayout {\r\n        const lGroupIndex: number | undefined = this.mBindGroupNames.get(pGroupName);\r\n\r\n        // Throw on unaccessable group.\r\n        if (typeof lGroupIndex === 'undefined') {\r\n            throw new Exception(`Bind group layout (${pGroupName}) does not exists.`, this);\r\n        }\r\n\r\n        // Bind group should allways exist.\r\n        return this.mBindGroups.get(lGroupIndex)!;\r\n    }\r\n\r\n    /**\r\n     * Get group binding index by name.\r\n     * \r\n     * @param pGroupName - Group name.\r\n     * \r\n     * @returns group binding index. \r\n     */\r\n    public groupIndex(pGroupName: string): number {\r\n        const lBindGroupIndex: number | undefined = this.mBindGroupNames.get(pGroupName);\r\n        if (typeof lBindGroupIndex === 'undefined') {\r\n            throw new Exception(`Pipeline does not contain a group with name \"${pGroupName}\".`, this);\r\n        }\r\n\r\n        return lBindGroupIndex;\r\n    }\r\n\r\n    /**\r\n     * Remove placeholder group.\r\n     * \r\n     * @param pName - Bind group name of replacement.\r\n     */\r\n    public removePlaceholderGroup(pName: string): void {\r\n        const lBindGroupIndex: number = this.groupIndex(pName);\r\n\r\n        // Clean old placeholder.\r\n        const lLastBindGroup: BindGroupLayout | undefined = this.mBindGroups.get(lBindGroupIndex);\r\n        if (lLastBindGroup) {\r\n            // Remove invalidation listener.\r\n            lLastBindGroup.removeInvalidationListener(this.mBindGroupInvalidationListener.get(lLastBindGroup)!);\r\n\r\n            // Remove old name.\r\n            this.mBindGroupNames.delete(lLastBindGroup.name);\r\n        }\r\n\r\n        // Remove replacement layout.\r\n        this.mBindGroups.delete(lBindGroupIndex);\r\n    }\r\n\r\n    /**\r\n     * Replace existing bind group.\r\n     * \r\n     * @param pGroupName - Layout name that should be replaced.\r\n     * @param pBindGroup - Replacement bind group.\r\n     */\r\n    public replaceGroup(pGroupName: string, pBindGroup: BindGroupLayout): void {\r\n        const lBindGroupIndex: number = this.groupIndex(pGroupName);\r\n\r\n        // Read original bind group.\r\n        const lInitialGroup: BindGroupLayout | undefined = this.mInitialBindGroups.get(lBindGroupIndex);\r\n        if (!lInitialGroup) {\r\n            throw new Exception(`Only initial bind group layouts can be replaced.`, this);\r\n        }\r\n\r\n        // Read binding lists.\r\n        const lInitialBindingList: Array<Readonly<BindLayout>> = pBindGroup.bindings;\r\n        const lReplacementBindingList: Array<Readonly<BindLayout>> = pBindGroup.bindings;\r\n\r\n        // Compare inital it with replacement to check compatibility.\r\n        if (lInitialBindingList.length !== lReplacementBindingList.length) {\r\n            throw new Exception(`Replacement group does not include all bindings.`, this);\r\n        }\r\n\r\n        // Compare all bindings.\r\n        for (let lBindingIndex: number = 0; lBindingIndex < lInitialBindingList.length; lBindingIndex++) {\r\n            const lInitialBinding: Readonly<BindLayout> | undefined = lInitialBindingList.at(lBindingIndex);\r\n            const lReplacementBinding: Readonly<BindLayout> | undefined = lReplacementBindingList.at(lBindingIndex);\r\n\r\n            // Continue on undefined or when bind layout is the same.\r\n            if (lInitialBinding === lReplacementBinding) {\r\n                continue;\r\n            }\r\n\r\n            // Can't set binding of something that is not there.\r\n            if (typeof lInitialBinding === 'undefined') {\r\n                throw new Exception(`Can't replace group binding with index \"${lBindingIndex}\". Layout binding does not exists in initial layout.`, this);\r\n            }\r\n\r\n            // Group must have the same bindings no binding can be missed.\r\n            if (typeof lReplacementBinding === 'undefined') {\r\n                throw new Exception(`Can't omit group binding with index \"${lBindingIndex}\".`, this);\r\n            }\r\n\r\n            // Same binding name.\r\n            if (lInitialBinding.name !== lReplacementBinding.name) {\r\n                throw new Exception(`Group binding replacement \"${lReplacementBinding.name}\" must be named \"${lInitialBinding.name}\"`, this);\r\n            }\r\n\r\n            // Must share the same access mode.\r\n            if (lReplacementBinding.storageType !== lReplacementBinding.storageType) {\r\n                throw new Exception(`Group binding replacement \"${lReplacementBinding.name}\" must have the same storage type.`, this);\r\n            }\r\n\r\n            // Must share the same visibility.\r\n            if ((lReplacementBinding.visibility & lInitialBinding.visibility) !== lReplacementBinding.visibility) {\r\n                throw new Exception(`Group binding replacement \"${lReplacementBinding.name}\" must at least cover the initial visibility.`, this);\r\n            }\r\n\r\n            // Must be same memory layout.\r\n            if (lReplacementBinding.constructor !== lInitialBinding.constructor) {\r\n                throw new Exception(`Group binding replacement \"${lReplacementBinding.name}\" must have the same memory layout as initial bind group layout.`, this);\r\n            }\r\n\r\n            // TODO: layout: BaseMemoryLayout; some type of equal.\r\n        }\r\n\r\n        // Remove last \r\n        const lLastBindGroup: BindGroupLayout | undefined = this.mBindGroups.get(lBindGroupIndex);\r\n        if (lLastBindGroup) {\r\n            // Remove invalidation listener.\r\n            lLastBindGroup.removeInvalidationListener(this.mBindGroupInvalidationListener.get(lLastBindGroup)!);\r\n        }\r\n\r\n        // Replace binding group and add invalidation listener.\r\n        const lListener: GpuObjectUpdateListener<BindGroupLayoutInvalidationType> = () => {\r\n            this.invalidate(PipelineLayoutInvalidationType.GroupChange);\r\n        };\r\n        pBindGroup.addInvalidationListener(lListener);\r\n        this.mBindGroupInvalidationListener.set(pBindGroup, lListener);\r\n\r\n        // Trigger updates.\r\n        this.invalidate(PipelineLayoutInvalidationType.GroupReplace);\r\n    }\r\n\r\n    /**\r\n     * Set a placeholder group that will not be used.\r\n     * \r\n     * @param pIndex - Group index.\r\n     * @param pLayout - [Optional] Bind group Layout.\r\n     */\r\n    public setPlaceholderGroup(pIndex: number, pLayout: BindGroupLayout): void {\r\n        // Initial group must be undefined.\r\n        if (this.mInitialBindGroups.has(pIndex)) {\r\n            throw new Exception(`Group binding placeholder can not replace a requiered bind group.`, this);\r\n        }\r\n\r\n        // Clean old placeholder.\r\n        const lLastBindGroup: BindGroupLayout | undefined = this.mBindGroups.get(pIndex);\r\n        if (lLastBindGroup) {\r\n            // Remove invalidation listener.\r\n            lLastBindGroup.removeInvalidationListener(this.mBindGroupInvalidationListener.get(lLastBindGroup)!);\r\n\r\n            // Remove old name.\r\n            this.mBindGroupNames.delete(lLastBindGroup.name);\r\n        }\r\n\r\n        // Add replacment layout and name.\r\n        this.mBindGroups.set(pIndex, pLayout);\r\n        this.mBindGroupNames.set(pLayout.name, pIndex);\r\n\r\n        // Register change listener for layout changes.\r\n        const lListener: GpuObjectUpdateListener<BindGroupLayoutInvalidationType> = () => {\r\n            this.invalidate(PipelineLayoutInvalidationType.GroupChange);\r\n        };\r\n        pLayout.addInvalidationListener(lListener);\r\n        this.mBindGroupInvalidationListener.set(pLayout, lListener);\r\n\r\n        // Trigger auto update.\r\n        this.invalidate(PipelineLayoutInvalidationType.GroupReplace);\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu pipeline data layout.\r\n     */\r\n    protected override generateNative(): GPUPipelineLayout {\r\n        // Generate pipeline layout from bind group layouts.\r\n        const lPipelineLayoutDescriptor = { bindGroupLayouts: new Array<GPUBindGroupLayout>() };\r\n        for (const [lGroupIndex, lBindGroupLayout] of this.mBindGroups) {\r\n            lPipelineLayoutDescriptor.bindGroupLayouts[lGroupIndex] = lBindGroupLayout.native;\r\n        }\r\n\r\n        // Validate continunity.\r\n        if (this.mBindGroups.size !== lPipelineLayoutDescriptor.bindGroupLayouts.length) {\r\n            throw new Exception(`Bind group gap detected. Group not set.`, this);\r\n        }\r\n\r\n        // Generate pipeline layout from descriptor.\r\n        return this.device.gpu.createPipelineLayout(lPipelineLayoutDescriptor);\r\n    }\r\n}\r\n\r\nexport enum PipelineLayoutInvalidationType {\r\n    GroupReplace = 'GroupReplace',\r\n    GroupChange = 'GroupChange',\r\n}","import { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { ArrayBufferMemoryLayout } from '../../memory_layout/buffer/array-buffer-memory-layout';\r\nimport { BaseBufferMemoryLayout } from '../../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from '../../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { PrimitiveBufferMemoryLayout } from '../../memory_layout/buffer/primitive-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from '../../memory_layout/buffer/struct-buffer-memory-layout';\r\nimport { StructBufferMemoryLayoutSetup } from '../../memory_layout/buffer/struct-buffer-memory-layout-setup';\r\nimport { BindGroupLayoutSetupData } from './bind-group-layout-setup';\r\n\r\nexport class BindGroupLayoutArrayMemoryLayoutSetup extends GpuObjectChildSetup<BindGroupLayoutSetupData, MemoryLayoutCallback> {\r\n    /**\r\n     * Inner type as array.\r\n     * \r\n     * @param pSize - Optional. Set size fixed.\r\n     *  \r\n     * @returns array setup. \r\n     */\r\n    public withArray(pSize: number = -1): BindGroupLayoutArrayMemoryLayoutSetup {\r\n        return new BindGroupLayoutArrayMemoryLayoutSetup(this.setupReferences, (pMemoryLayout: BaseBufferMemoryLayout) => {\r\n            const lLayout: ArrayBufferMemoryLayout = new ArrayBufferMemoryLayout(this.device, {\r\n                arraySize: pSize,\r\n                innerType: pMemoryLayout\r\n            });\r\n\r\n            this.sendData(lLayout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Inner type as primitive.\r\n     * \r\n     * @param pPrimitiveFormat - Primitive format.\r\n     * @param pPrimitiveMultiplier - Value multiplier.\r\n     */\r\n    public withPrimitive(pPrimitiveFormat: PrimitiveBufferFormat, pPrimitiveMultiplier: PrimitiveBufferMultiplier): void {\r\n        const lLayout: PrimitiveBufferMemoryLayout = new PrimitiveBufferMemoryLayout(this.device, {\r\n            primitiveFormat: pPrimitiveFormat,\r\n            primitiveMultiplier: pPrimitiveMultiplier,\r\n        });\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n\r\n    /**\r\n     * Inner type as struct\r\n     * \r\n     * @param pSetupCall - Struct setup call.\r\n     */\r\n    public withStruct(pSetupCall: (pSetup: StructBufferMemoryLayoutSetup) => void): void {\r\n        // Create and setup struct buffer memory layout.\r\n        const lLayout: StructBufferMemoryLayout = new StructBufferMemoryLayout(this.device);\r\n        lLayout.setup(pSetupCall);\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n}\r\n\r\ntype MemoryLayoutCallback = (pMemoryLayout: BaseBufferMemoryLayout) => void;","import { SamplerType } from '../../../constant/sampler-type.enum';\r\nimport { TextureDimension } from '../../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\nimport { GpuObjectSetupReferences } from '../../gpu/object/gpu-object';\r\nimport { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { BaseMemoryLayout } from '../../memory_layout/base-memory-layout';\r\nimport { ArrayBufferMemoryLayout } from '../../memory_layout/buffer/array-buffer-memory-layout';\r\nimport { BaseBufferMemoryLayout } from '../../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from '../../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { PrimitiveBufferMemoryLayout } from '../../memory_layout/buffer/primitive-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from '../../memory_layout/buffer/struct-buffer-memory-layout';\r\nimport { StructBufferMemoryLayoutSetup } from '../../memory_layout/buffer/struct-buffer-memory-layout-setup';\r\nimport { SamplerMemoryLayout } from '../../memory_layout/texture/sampler-memory-layout';\r\nimport { TextureMemoryLayout } from '../../memory_layout/texture/texture-memory-layout';\r\nimport { BindGroupLayoutArrayMemoryLayoutSetup } from './bind-group-layout-array-memory-layout-setup';\r\nimport { BindGroupLayoutSetupData } from './bind-group-layout-setup';\r\n\r\nexport class BindGroupLayoutMemoryLayoutSetup extends GpuObjectChildSetup<BindGroupLayoutSetupData, MemoryLayoutCallback> {\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pUsage - Buffer usage. \r\n     * @param pSetupReference - Setup references.\r\n     * @param pDataCallback - Data callback.\r\n     */\r\n    public constructor(pSetupReference: GpuObjectSetupReferences<BindGroupLayoutSetupData>, pDataCallback: MemoryLayoutCallback) {\r\n        super(pSetupReference, pDataCallback);\r\n    }\r\n\r\n    /**\r\n     * Buffer as array.\r\n     * \r\n     * @param pSize - Optional. Set size fixed.\r\n     *  \r\n     * @returns array setup. \r\n     */\r\n    public withArray(pSize: number = -1): BindGroupLayoutArrayMemoryLayoutSetup {\r\n        return new BindGroupLayoutArrayMemoryLayoutSetup(this.setupReferences, (pMemoryLayout: BaseBufferMemoryLayout) => {\r\n            const lLayout: ArrayBufferMemoryLayout = new ArrayBufferMemoryLayout(this.device, {\r\n                arraySize: pSize,\r\n                innerType: pMemoryLayout\r\n            });\r\n\r\n            this.sendData(lLayout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Memory layout as primitive.\r\n     * \r\n     * @param pPrimitiveFormat - Primitive format.\r\n     * @param pPrimitiveMultiplier - Value multiplier.\r\n     */\r\n    public withPrimitive(pPrimitiveFormat: PrimitiveBufferFormat, pPrimitiveMultiplier: PrimitiveBufferMultiplier): void {\r\n        const lLayout: PrimitiveBufferMemoryLayout = new PrimitiveBufferMemoryLayout(this.device, {\r\n            primitiveFormat: pPrimitiveFormat,\r\n            primitiveMultiplier: pPrimitiveMultiplier,\r\n        });\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n\r\n    /**\r\n     * Memory layout as sampler.\r\n     * \r\n     * @param pSamplerType - Sampler type.\r\n     */\r\n    public withSampler(pSamplerType: SamplerType): void {\r\n        const lLayout: SamplerMemoryLayout = new SamplerMemoryLayout(this.device, {\r\n            samplerType: pSamplerType\r\n        });\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n\r\n    /**\r\n     * Memory layout as struct\r\n     * \r\n     * @param pSetupCall - Struct setup call.\r\n     */\r\n    public withStruct(pSetupCall: (pSetup: StructBufferMemoryLayoutSetup) => void): void {\r\n        // Create and setup struct buffer memory layout.\r\n        const lLayout: StructBufferMemoryLayout = new StructBufferMemoryLayout(this.device);\r\n        lLayout.setup(pSetupCall);\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n\r\n    /**\r\n     * Memory layout as texture.\r\n     * \r\n     * @param pTextureDimension - Texture dimension.\r\n     * @param pTextureFormat - Texture format.\r\n     * @param pTextureBindType - Texture binding.\r\n     * @param pMultisampled  - Is texture multisampled. \r\n     */\r\n    public withTexture(pTextureDimension: TextureDimension, pTextureFormat: TextureFormat, pMultisampled: boolean): void {\r\n        const lLayout: TextureMemoryLayout = new TextureMemoryLayout(this.device, {\r\n            dimension: pTextureDimension,\r\n            format: pTextureFormat,\r\n            multisampled: pMultisampled\r\n        });\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n}\r\n\r\ntype MemoryLayoutCallback = (pMemoryLayout: BaseMemoryLayout) => void;","import { ComputeStage } from '../../../constant/compute-stage.enum';\r\nimport { StorageBindingType } from '../../../constant/storage-binding-type.enum';\r\nimport { GpuObjectSetup } from '../../gpu/object/gpu-object-setup';\r\nimport { BaseMemoryLayout } from '../../memory_layout/base-memory-layout';\r\nimport { BindGroupLayoutMemoryLayoutSetup } from './bind-group-layout-memory-layout-setup';\r\n\r\nexport class BindGroupLayoutSetup extends GpuObjectSetup<BindGroupLayoutSetupData> {\r\n    /**\r\n     * Add binding to group.\r\n     * \r\n     * @param pName - Binding name.\r\n     * @param pIndex - - Binding index.\r\n     * @param pUsage - Buffer usage.\r\n     * @param pVisibility - Visibility.\r\n     * @param pAccessMode - Access mode.\r\n     */\r\n    public binding(pIndex: number, pName: string, pVisibility: ComputeStage, pStorageBinding?: StorageBindingType): BindGroupLayoutMemoryLayoutSetup {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Create empty bind layout.\r\n        const lBind: BindLayoutSetupData = {\r\n            name: pName,\r\n            index: pIndex,\r\n            visibility: pVisibility,\r\n            layout: null,\r\n            storageType: pStorageBinding ?? StorageBindingType.None\r\n        };\r\n\r\n        // Set layout.\r\n        this.setupData.bindings.push(lBind);\r\n\r\n        // Create layout memory layout.\r\n        return new BindGroupLayoutMemoryLayoutSetup(this.setupReferences, (pMemoryLayout: BaseMemoryLayout) => {\r\n            lBind.layout = pMemoryLayout;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fill in default data before the setup starts.\r\n     * \r\n     * @param pDataReference - Setup data reference.\r\n     */\r\n    protected override fillDefaultData(pDataReference: BindGroupLayoutSetupData): void {\r\n        pDataReference.bindings = new Array<BindLayoutSetupData>();\r\n    }\r\n}\r\n\r\ntype BindLayoutSetupData = {\r\n    name: string;\r\n    index: number;\r\n    layout: BaseMemoryLayout | null;\r\n    visibility: ComputeStage;\r\n    storageType: StorageBindingType;\r\n};\r\n\r\nexport type BindGroupLayoutSetupData = {\r\n    bindings: Array<BindLayoutSetupData>;\r\n};","import { Exception, TypedArray } from '@kartoffelgames/core';\r\nimport { BufferUsage } from '../../constant/buffer-usage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { GpuObjectInvalidationReasons } from '../gpu/object/gpu-object-invalidation-reasons';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { BaseBufferMemoryLayout } from '../memory_layout/buffer/base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from '../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\n\r\n/**\r\n * GpuBuffer. Uses local and native gpu buffers.\r\n */\r\nexport class GpuBuffer<TType extends TypedArray = TypedArray> extends GpuObject<GPUBuffer, GpuBufferInvalidationType> implements IGpuObjectNative<GPUBuffer> {\r\n    private mBufferUsage: number;\r\n    private readonly mDataType: PrimitiveBufferFormat;\r\n    private mInitialDataCallback: (() => TType) | null;\r\n    private readonly mItemCount: number;\r\n    private readonly mLayout: BaseBufferMemoryLayout;\r\n    private mReadBuffer: GPUBuffer | null;\r\n    private readonly mWriteBuffer: GpuBufferWriteBuffer;\r\n\r\n    /**\r\n     * Data type of buffer.\r\n     */\r\n    public get dataType(): PrimitiveBufferFormat {\r\n        return this.mDataType;\r\n    }\r\n\r\n    /**\r\n     * Get buffer item count.\r\n     */\r\n    public get length(): number {\r\n        return this.mItemCount;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUBuffer {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Buffer size in bytes aligned to 4 bytes.\r\n     */\r\n    public get size(): number {\r\n        // Align data size by 4 byte.\r\n        return ((this.mItemCount * this.bytePerElement) + 3) & ~3;\r\n    }\r\n\r\n    /**\r\n     * Write buffer limitation.\r\n     * Limiting the amount of created staging buffer to perform reads.\r\n     */\r\n    public get writeBufferLimitation(): number {\r\n        return this.mWriteBuffer.limitation;\r\n    } set writeBufferLimitation(pLimit: number) {\r\n        this.mWriteBuffer.limitation = pLimit;\r\n    }\r\n\r\n    /**\r\n     * Byte per buffer element.\r\n     */\r\n    private get bytePerElement(): number {\r\n        // Read bytes per element\r\n        return (() => {\r\n            switch (this.mDataType) {\r\n                case PrimitiveBufferFormat.Float32:\r\n                case PrimitiveBufferFormat.Sint32:\r\n                case PrimitiveBufferFormat.Uint32:\r\n                    return 4;\r\n\r\n                default: // Float16\r\n                    throw new Exception(`Could not create a size for ${this.mDataType} type.`, this);\r\n            }\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - GPU.\r\n     * @param pLayout - Buffer layout.\r\n     * @param pInitialData  - Inital data. Can be empty. Or Buffer size. \r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: BaseBufferMemoryLayout, pDataType: PrimitiveBufferFormat, pVariableSizeCount: number | null = null) {\r\n        super(pDevice);\r\n        this.mLayout = pLayout;\r\n\r\n        // Set config.\r\n        this.mDataType = pDataType;\r\n\r\n        // At default buffer can not be read and not be written to.\r\n        this.mBufferUsage = BufferUsage.None;\r\n\r\n        // Read and write buffers.\r\n        this.mWriteBuffer = {\r\n            limitation: Number.MAX_SAFE_INTEGER,\r\n            ready: new Array<GPUBuffer>(),\r\n            buffer: new Set<GPUBuffer>()\r\n        };\r\n        this.mReadBuffer = null;\r\n\r\n        if (pLayout.variableSize !== 0 && pVariableSizeCount === null) {\r\n            throw new Exception('Variable size must be set for gpu buffers with variable memory layouts.', this);\r\n        }\r\n\r\n        // Layout size can be variable so we clamp variable size to 0. \r\n        const lByteSize: number = (pVariableSizeCount ?? 0) * pLayout.variableSize + pLayout.fixedSize;\r\n\r\n        // Set buffer initial data from buffer size or buffer data.\r\n        this.mItemCount = lByteSize / 4; // All data is 4byte/ 32bit. \r\n\r\n        // No intial data.\r\n        this.mInitialDataCallback = null;\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(GpuBufferInvalidationType.BufferRebuild);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Extend usage of buffer.\r\n     * Might trigger a buffer rebuild.\r\n     * \r\n     * @param pUsage - Buffer usage. \r\n     */\r\n    public extendUsage(pUsage: BufferUsage): this {\r\n        // Update only when not already set.\r\n        if ((this.mBufferUsage & pUsage) === 0) {\r\n            this.mBufferUsage |= pUsage;\r\n\r\n            this.invalidate(GpuBufferInvalidationType.BufferRebuild);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set new initial data before the buffer is created.\r\n     * \r\n     * @param pDataCallback - Data callback. \r\n     */\r\n    public initialData(pDataCallback: () => TType): this {\r\n        // Set new initial data, set on creation.\r\n        this.mInitialDataCallback = pDataCallback;\r\n\r\n        // Trigger update.\r\n        this.invalidate(GpuBufferInvalidationType.BufferRebuild);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Read buffer on layout location.\r\n     * @param pLayoutPath - Layout path. \r\n     */\r\n    public async read(pLayoutPath: Array<string>): Promise<TType> {\r\n        const lLocation = this.mLayout.locationOf(pLayoutPath);\r\n        return this.readRaw(lLocation.offset, lLocation.size);\r\n    }\r\n\r\n    /**\r\n     * Read data raw without layout.\r\n     * \r\n     * @param pOffset - Data read offset.\r\n     * @param pSize - Data read size.\r\n     */\r\n    public async readRaw(pOffset?: number | undefined, pSize?: number | undefined): Promise<TType> {\r\n        // Set buffer as writeable.\r\n        this.extendUsage(BufferUsage.CopySource);\r\n\r\n        const lOffset: number = pOffset ?? 0;\r\n        const lSize: number = pSize ?? this.size;\r\n\r\n        // Create a new buffer when it is not already created.\r\n        if (this.mReadBuffer === null) {\r\n            this.mReadBuffer = this.device.gpu.createBuffer({\r\n                label: `ReadWaveBuffer`,\r\n                size: this.size,\r\n                usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\r\n                mappedAtCreation: false,\r\n            });\r\n        }\r\n\r\n        // Copy buffer data from native into staging.\r\n        const lCommandDecoder: GPUCommandEncoder = this.device.gpu.createCommandEncoder();\r\n        lCommandDecoder.copyBufferToBuffer(this.native, lOffset, this.mReadBuffer, lOffset, lSize);\r\n        this.device.gpu.queue.submit([lCommandDecoder.finish()]);\r\n\r\n        // Get buffer and map data.\r\n        await this.mReadBuffer.mapAsync(GPUMapMode.READ, lOffset, lSize);\r\n\r\n        // Read result from mapped range and copy it with slice.\r\n        const lBufferReadResult: TType = this.createTypedArray(this.mReadBuffer.getMappedRange().slice(0)) as TType;\r\n\r\n        // Map read buffer again.\r\n        this.mReadBuffer.unmap();\r\n\r\n        // Get mapped data and force it into typed array.\r\n        return lBufferReadResult;\r\n    }\r\n\r\n    /**\r\n     * Write data on layout location.\r\n     * @param pData - Data.\r\n     * @param pLayoutPath - Layout path.\r\n     */\r\n    public async write(pData: ArrayLike<number>, pLayoutPath: Array<string>): Promise<void> {\r\n        const lLocation = this.mLayout.locationOf(pLayoutPath);\r\n\r\n        // Skip new promise creation by returning original promise.\r\n        return this.writeRaw(pData, lLocation.offset);\r\n    }\r\n\r\n    /**\r\n     * Write data raw without layout.\r\n     * \r\n     * @param pData - Data.\r\n     * @param pOffset - Data offset.\r\n     */\r\n    public async writeRaw(pData: ArrayLike<number>, pOffset?: number): Promise<void> {\r\n        // Set buffer as writeable.\r\n        this.extendUsage(BufferUsage.CopyDestination);\r\n\r\n        // Read native before reading staging buffers.\r\n        // On Native read, staging buffers can be destroyed.\r\n        const lNative: GPUBuffer = this.native;\r\n\r\n        // Try to read a mapped buffer from waving list.\r\n        let lStagingBuffer: GPUBuffer | null = null;\r\n        if (this.mWriteBuffer.ready.length === 0) {\r\n            // Create new buffer when limitation is not meet.\r\n            if (this.mWriteBuffer.buffer.size < this.mWriteBuffer.limitation) {\r\n                lStagingBuffer = this.device.gpu.createBuffer({\r\n                    label: `RingBuffer-WriteWaveBuffer-${this.mWriteBuffer.buffer.size}`,\r\n                    size: this.size,\r\n                    usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\r\n                    mappedAtCreation: true,\r\n                });\r\n\r\n                // Add new buffer to complete list.\r\n                this.mWriteBuffer.buffer.add(lStagingBuffer);\r\n            }\r\n        } else {\r\n            // Pop as long as staging buffer is not destroyed or could not be found.\r\n            lStagingBuffer = this.mWriteBuffer.ready.pop()!;\r\n        }\r\n\r\n        // Get byte length and offset of data to write.\r\n        const lDataByteLength: number = pData.length * this.bytePerElement;\r\n        const lOffset: number = pOffset ?? 0;\r\n\r\n        // When no staging buffer is available, use the slow native.\r\n        if (!lStagingBuffer) {\r\n            // Write data into mapped range.\r\n            this.device.gpu.queue.writeBuffer(lNative, lOffset, this.createTypedArray(pData), 0, lDataByteLength);\r\n\r\n            return;\r\n        }\r\n\r\n        // Execute write operations on waving buffer.\r\n        const lBufferArray: TypedArray = this.createTypedArray(lStagingBuffer.getMappedRange(lOffset, lDataByteLength));\r\n        lBufferArray.set(pData);\r\n\r\n        // Unmap for copying data.\r\n        lStagingBuffer.unmap();\r\n\r\n        // Copy buffer data from staging into wavig buffer.\r\n        const lCommandDecoder: GPUCommandEncoder = this.device.gpu.createCommandEncoder();\r\n        lCommandDecoder.copyBufferToBuffer(lStagingBuffer, lOffset, lNative, lOffset, lDataByteLength);\r\n        this.device.gpu.queue.submit([lCommandDecoder.finish()]);\r\n\r\n        // Shedule staging buffer remaping.\r\n        lStagingBuffer.mapAsync(GPUMapMode.WRITE).then(() => {\r\n            // Check for destroyed state, it is destroyed when not in write buffer list.\r\n            if (this.mWriteBuffer.buffer.has(lStagingBuffer)) {\r\n                this.mWriteBuffer.ready.push(lStagingBuffer);\r\n            }\r\n        }).catch(() => {\r\n            // Remove buffer when it could not be mapped.\r\n            this.mWriteBuffer.buffer.delete(lStagingBuffer);\r\n            lStagingBuffer.destroy();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy wave and ready buffer.\r\n     */\r\n    protected override destroyNative(pNativeObject: GPUBuffer, _pReason: GpuObjectInvalidationReasons<GpuBufferInvalidationType>): void {\r\n        pNativeObject.destroy();\r\n\r\n        // Only clear staging buffers when layout, and therfore the buffer size has changed.\r\n        //if (pReason.has(GpuBufferInvalidationType.Layout)) {\r\n        // Destroy all wave buffer and clear list.\r\n        for (const lWriteBuffer of this.mWriteBuffer.buffer) {\r\n            lWriteBuffer.destroy();\r\n        }\r\n        this.mWriteBuffer.buffer.clear();\r\n\r\n        // Clear ready buffer list.\r\n        while (this.mWriteBuffer.ready.length > 0) {\r\n            // No need to destroy. All buffers have already destroyed.\r\n            this.mWriteBuffer.ready.pop();\r\n        }\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * Generate buffer. Write local gpu object data as initial native buffer data.\r\n     */\r\n    protected override generateNative(): GPUBuffer {\r\n        // Read optional initial data.\r\n        const lInitalData: TType | undefined = this.mInitialDataCallback?.();\r\n\r\n        // Create gpu buffer mapped\r\n        const lBuffer: GPUBuffer = this.device.gpu.createBuffer({\r\n            label: 'Ring-Buffer-Static-Buffer',\r\n            size: this.size,\r\n            usage: this.mBufferUsage,\r\n            mappedAtCreation: !!lInitalData\r\n        });\r\n\r\n        // Write data. Is completly async.\r\n        if (lInitalData) {\r\n            // Write initial data.\r\n            const lMappedBuffer: TypedArray = this.createTypedArray(lBuffer.getMappedRange());\r\n\r\n            // Validate buffer and initial data length.\r\n            if (lMappedBuffer.length !== lInitalData.length) {\r\n                throw new Exception(`Initial buffer data (length: ${lInitalData.length}) does not fit into buffer (length: ${lMappedBuffer.length}). `, this);\r\n            }\r\n\r\n            // Set data to buffer.\r\n            lMappedBuffer.set(lInitalData);\r\n\r\n            // Unmap buffer.\r\n            lBuffer.unmap();\r\n        }\r\n\r\n        return lBuffer;\r\n    }\r\n\r\n    /**\r\n     * Create a typed array based on buffer data type.\r\n     * \r\n     * @param pArrayBuffer - Array buffer.\r\n     * \r\n     * @returns typed array. \r\n     */\r\n    private createTypedArray(pArrayBuffer: ArrayLike<number> | ArrayBufferLike): TypedArray {\r\n        // Read bytes per element\r\n        const lArrayBufferConstructor = (() => {\r\n            switch (this.mDataType) {\r\n                case PrimitiveBufferFormat.Float32:\r\n                    return Float32Array;\r\n                case PrimitiveBufferFormat.Sint32:\r\n                    return Int32Array;\r\n                case PrimitiveBufferFormat.Uint32:\r\n                    return Uint32Array;\r\n\r\n                default: // Float16\r\n                    throw new Exception(`Could not create a buffered array for ${this.mDataType} type.`, this);\r\n            }\r\n        })();\r\n\r\n        return new lArrayBufferConstructor(pArrayBuffer);\r\n    }\r\n}\r\n\r\ntype GpuBufferWriteBuffer = {\r\n    buffer: Set<GPUBuffer>;\r\n    ready: Array<GPUBuffer>;\r\n    limitation: number;\r\n};\r\n\r\nexport enum GpuBufferInvalidationType {\r\n    BufferRebuild = 'BufferRebuild',\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\n\r\nexport class GpuExecution extends GpuObject {\r\n    private mEncoder: GPUCommandEncoder | null;\r\n    private readonly mExecutionFunction: GpuExecutionFunction;\r\n\r\n    /**\r\n     * GPU command encoder.\r\n     */\r\n    public get encoder(): GPUCommandEncoder {\r\n        if (!this.mEncoder) {\r\n            throw new Exception('Execution is not started', this);\r\n        }\r\n\r\n        return this.mEncoder;\r\n    }\r\n\r\n    public constructor(pDevice: GpuDevice, pExecution: GpuExecutionFunction) {\r\n        super(pDevice);\r\n\r\n        this.mExecutionFunction = pExecution;\r\n        this.mEncoder = null;\r\n    }\r\n\r\n    public execute(): void {\r\n        this.mEncoder = this.device.gpu.createCommandEncoder({\r\n            label: 'Execution'\r\n        });\r\n\r\n        this.mExecutionFunction(this);\r\n\r\n        // TODO: Execution is async.\r\n        // Submit commands to queue and clear command encoder.\r\n        this.device.gpu.queue.submit([this.mEncoder.finish()]);\r\n        this.mEncoder = null;\r\n    }\r\n}\r\n\r\nexport type GpuExecutionFunction = (pExecutor: GpuExecution) => void;","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { BindGroup } from '../../binding/bind-group';\r\nimport { PipelineLayout } from '../../binding/pipeline-layout';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/object/gpu-object';\r\nimport { ComputePipeline } from '../../pipeline/compute-pipeline';\r\nimport { GpuExecution } from '../gpu-execution';\r\n\r\nexport class ComputePass extends GpuObject {\r\n    private readonly mInstructionList: Array<ComputeInstruction>;\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        this.mInstructionList = new Array<ComputeInstruction>();\r\n    }\r\n\r\n    /**\r\n     * Add instruction step.\r\n     * @param pPipeline - Pipeline.\r\n     * @param pBindData -  Pipeline bind data.\r\n     */\r\n    public addStep(pPipeline: ComputePipeline, pWorkGroupSizes: [number, number, number], pBindData: Array<BindGroup>): symbol {\r\n        const lStep: ComputeInstruction = {\r\n            id: Symbol('ComuteStep'),\r\n            pipeline: pPipeline,\r\n            bindData: new Array<BindGroup>(),\r\n            workGroupSizes: pWorkGroupSizes\r\n        };\r\n\r\n        // TODO: Enforce maxComputeInvocationsPerWorkgroup\r\n\r\n        // Write bind groups into searchable structure.\r\n        const lBindGroups: Dictionary<string, BindGroup> = new Dictionary<string, BindGroup>();\r\n        for (const lBindGroup of pBindData) {\r\n            // Only distinct bind group names.\r\n            if (lBindGroups.has(lBindGroup.layout.name)) {\r\n                throw new Exception(`Bind group \"${lBindGroup.layout.name}\" was added multiple times to render pass step.`, this);\r\n            }\r\n\r\n            // Add bind group by name.\r\n            lBindGroups.set(lBindGroup.layout.name, lBindGroup);\r\n        }\r\n\r\n        // Fill in data groups.\r\n        const lPipelineLayout: PipelineLayout = pPipeline.module.shader.layout;\r\n        for (const lGroupName of lPipelineLayout.groups) {\r\n            // Get and validate existance of set bind group.\r\n            const lBindDataGroup: BindGroup | undefined = lBindGroups.get(lGroupName);\r\n            if (!lBindDataGroup) {\r\n                throw new Exception(`Required bind group \"${lGroupName}\" not set.`, this);\r\n            }\r\n\r\n            // Validate same layout bind layout.\r\n            const lBindGroupLayout = lPipelineLayout.getGroupLayout(lGroupName);\r\n            if (lBindDataGroup.layout !== lBindGroupLayout) {\r\n                throw new Exception('Source bind group layout does not match target layout.', this);\r\n            }\r\n\r\n            lStep.bindData[lPipelineLayout.groupIndex(lGroupName)] = lBindDataGroup;\r\n        }\r\n\r\n        this.mInstructionList.push(lStep);\r\n\r\n        return lStep.id;\r\n    }\r\n\r\n    /**\r\n     * Execute steps in a row.\r\n     * @param pExecutor - Executor context.\r\n     */\r\n    public execute(pExecution: GpuExecution): void {\r\n        // Pass descriptor is set, when the pipeline ist set.\r\n        const lComputePassEncoder: GPUComputePassEncoder = pExecution.encoder.beginComputePass();\r\n\r\n        // Instruction cache.\r\n        let lPipeline: ComputePipeline | null = null;\r\n\r\n        // Buffer for current set bind groups.\r\n        const lBindGroupList: Array<BindGroup> = new Array<BindGroup>();\r\n        let lHighestBindGroupListIndex: number = -1;\r\n\r\n        // Execute instructions.\r\n        for (const lInstruction of this.mInstructionList) {\r\n            // Cache for bind group length of this instruction.\r\n            let lLocalHighestBindGroupListIndex: number = -1;\r\n\r\n            // Add bind groups.\r\n            const lPipelineLayout: PipelineLayout = lInstruction.pipeline.module.shader.layout;\r\n            for (const lBindGroupName of lPipelineLayout.groups) {\r\n                const lBindGroupIndex: number = lPipelineLayout.groupIndex(lBindGroupName);\r\n\r\n                const lNewBindGroup: BindGroup | undefined = lInstruction.bindData[lBindGroupIndex];\r\n                const lCurrentBindGroup: BindGroup | null = lBindGroupList[lBindGroupIndex];\r\n\r\n                // Extend group list length.\r\n                if (lBindGroupIndex > lLocalHighestBindGroupListIndex) {\r\n                    lLocalHighestBindGroupListIndex = lBindGroupIndex;\r\n                }\r\n\r\n                // Use cached bind group or use new.\r\n                if (lNewBindGroup !== lCurrentBindGroup) {\r\n                    // Set bind group buffer to cache current set bind groups.\r\n                    lBindGroupList[lBindGroupIndex] = lNewBindGroup;\r\n\r\n                    // Set bind group to gpu.\r\n                    lComputePassEncoder.setBindGroup(lBindGroupIndex, lNewBindGroup.native);\r\n                }\r\n            }\r\n\r\n            // Use cached pipeline or use new.\r\n            if (lInstruction.pipeline !== lPipeline) {\r\n                lPipeline = lInstruction.pipeline;\r\n\r\n                // Generate and set new pipeline.\r\n                lComputePassEncoder.setPipeline(lPipeline.native);\r\n\r\n                // Only clear bind buffer when a new pipeline is set.\r\n                // Same pipelines must have set the same bind group layouts.\r\n                if (lHighestBindGroupListIndex > lLocalHighestBindGroupListIndex) {\r\n                    for (let lBindGroupIndex: number = (lLocalHighestBindGroupListIndex + 1); lBindGroupIndex < (lHighestBindGroupListIndex + 1); lBindGroupIndex++) {\r\n                        lComputePassEncoder.setBindGroup(lBindGroupIndex, null);\r\n                    }\r\n                }\r\n\r\n                // Update global bind group list length.\r\n                lHighestBindGroupListIndex = lLocalHighestBindGroupListIndex;\r\n            }\r\n\r\n            // Start compute groups.\r\n            lComputePassEncoder.dispatchWorkgroups(...lInstruction.workGroupSizes);\r\n\r\n            // TODO: Indirect dispatch.\r\n        }\r\n\r\n        lComputePassEncoder.end();\r\n    }\r\n\r\n    /**\r\n     * Remove instruction from instruction list.\r\n     * \r\n     * @param pInstructionId - Instruction id.\r\n     * \r\n     * @returns true when instruction was removed, false when it was not found. \r\n     */\r\n    public removeStep(pInstructionId: symbol): boolean {\r\n        // Find instruction index.\r\n        const lInstructionIndex: number = this.mInstructionList.findIndex((pInstruction: ComputeInstruction) => {\r\n            return pInstruction.id === pInstructionId;\r\n        });\r\n\r\n        // Remove instruction by index.\r\n        if (lInstructionIndex !== -1) {\r\n            this.mInstructionList.splice(lInstructionIndex, 1);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\ntype ComputeInstruction = {\r\n    id: symbol;\r\n    pipeline: ComputePipeline;\r\n    bindData: Array<BindGroup>;\r\n    workGroupSizes: [number, number, number];\r\n};","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core';\r\nimport { BindGroup, BindGroupInvalidationType } from '../../binding/bind-group';\r\nimport { PipelineLayout } from '../../binding/pipeline-layout';\r\nimport { GpuBuffer } from '../../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/object/gpu-object';\r\nimport { VertexParameter } from '../../pipeline/parameter/vertex-parameter';\r\nimport { RenderTargets, RenderTargetsInvalidationType } from '../../pipeline/target/render-targets';\r\nimport { VertexFragmentPipeline } from '../../pipeline/vertex-fragment-pipeline';\r\nimport { GpuExecution } from '../gpu-execution';\r\n\r\nexport class RenderPass extends GpuObject {\r\n    private readonly mBundleConfig: RenderBundleConfig;\r\n    private readonly mInstructionList: Array<RenderInstruction>;\r\n    private readonly mRenderTargets: RenderTargets;\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pRenderTargets - Render targets.\r\n     * @param pStaticBundle - Bundle is static and does not update very often.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pRenderTargets: RenderTargets, pStaticBundle: boolean) {\r\n        super(pDevice);\r\n\r\n        this.mInstructionList = new Array<RenderInstruction>();\r\n        this.mRenderTargets = pRenderTargets;\r\n        this.mBundleConfig = {\r\n            enabled: pStaticBundle,\r\n            writeDepth: false,\r\n            writeStencil: false,\r\n            bundle: null\r\n        };\r\n\r\n        // Update bundle when render target has changed.\r\n        pRenderTargets.addInvalidationListener(() => {\r\n            this.mBundleConfig.bundle = null;\r\n        }, [\r\n            RenderTargetsInvalidationType.TextureFormatChange,\r\n            RenderTargetsInvalidationType.DescriptorRebuild,\r\n            RenderTargetsInvalidationType.Resize,\r\n            RenderTargetsInvalidationType.MultisampleChange\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Add instruction step.\r\n     * \r\n     * @param pPipeline - Pipeline.\r\n     * @param pParameter - Pipeline parameter.\r\n     * @param pBindData - Pipline bind data groups.\r\n     * @param pInstanceCount - Instance count.\r\n     */\r\n    public addStep(pPipeline: VertexFragmentPipeline, pParameter: VertexParameter, pBindData: Array<BindGroup>, pInstanceCount: number = 1): void {\r\n        // Validate same render targets.\r\n        if (this.mRenderTargets !== pPipeline.renderTargets) {\r\n            throw new Exception('Instruction render pass not valid for instruction set.', this);\r\n        }\r\n\r\n        const lStep: RenderInstruction = {\r\n            pipeline: pPipeline,\r\n            parameter: pParameter,\r\n            instanceCount: pInstanceCount,\r\n            bindData: new Array<BindGroup>()\r\n        };\r\n\r\n        // Write bind groups into searchable structure.\r\n        const lBindGroups: Dictionary<string, BindGroup> = new Dictionary<string, BindGroup>();\r\n        for (const lBindGroup of pBindData) {\r\n            // Only distinct bind group names.\r\n            if (lBindGroups.has(lBindGroup.layout.name)) {\r\n                throw new Exception(`Bind group \"${lBindGroup.layout.name}\" was added multiple times to render pass step.`, this);\r\n            }\r\n\r\n            // Add bind group by name.\r\n            lBindGroups.set(lBindGroup.layout.name, lBindGroup);\r\n        }\r\n\r\n        // Fill in data groups.\r\n        const lPipelineLayout: PipelineLayout = pPipeline.module.shader.layout;\r\n        for (const lGroupName of lPipelineLayout.groups) {\r\n            // Get and validate existance of set bind group.\r\n            const lBindDataGroup: BindGroup | undefined = lBindGroups.get(lGroupName);\r\n            if (!lBindDataGroup) {\r\n                throw new Exception(`Required bind group \"${lGroupName}\" not set.`, this);\r\n            }\r\n\r\n            // Validate same layout bind layout.\r\n            const lBindGroupLayout = lPipelineLayout.getGroupLayout(lGroupName);\r\n            if (lBindDataGroup.layout !== lBindGroupLayout) {\r\n                throw new Exception(`Source bind group layout for \"${lGroupName}\" does not match target layout.`, this);\r\n            }\r\n\r\n            lStep.bindData[lPipelineLayout.groupIndex(lGroupName)] = lBindDataGroup;\r\n        }\r\n\r\n        this.mInstructionList.push(lStep);\r\n\r\n        // Update bundle write depth config.\r\n        if (pPipeline.writeDepth) {\r\n            this.mBundleConfig.writeDepth = true;\r\n        }\r\n\r\n        // Clear bundle when adding new steps.\r\n        this.mBundleConfig.bundle = null;\r\n\r\n        // Clear bundle when anything has changes.\r\n        pPipeline.addInvalidationListener(() => {\r\n            this.mBundleConfig.bundle = null;\r\n        });\r\n        pParameter.addInvalidationListener(() => {\r\n            this.mBundleConfig.bundle = null;\r\n        });\r\n\r\n        // Clear bundle on any bindgroup change.\r\n        for (const lGroupName of lPipelineLayout.groups) {\r\n            lBindGroups.get(lGroupName)!.addInvalidationListener(() => {\r\n                this.mBundleConfig.bundle = null;\r\n            }, [BindGroupInvalidationType.BindGroupRebuild]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Execute steps in a row.\r\n     * \r\n     * @param pExecutor - Executor context.\r\n     */\r\n    public execute(pExecution: GpuExecution): void {\r\n        // Execute cached or execute direct based on static or variable bundles.\r\n        if (this.mBundleConfig.enabled) {\r\n            this.cachedExecute(pExecution);\r\n        } else {\r\n            this.directExecute(pExecution);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Execute render pass as cached bundle.\r\n     * \r\n     * @param pExecutor - Executor context.\r\n     */\r\n    private cachedExecute(pExecution: GpuExecution): void {\r\n        // Generate new bundle when not already cached or render target got changed.\r\n        if (!this.mBundleConfig.bundle) {\r\n            // Generate GPURenderBundleEncoderDescriptor from GPURenderPassDescriptor.\r\n            const lRenderBundleEncoderDescriptor: GPURenderBundleEncoderDescriptor = {\r\n                colorFormats: this.mRenderTargets.colorTextures.map<GPUTextureFormat>((pRenderTarget) => {\r\n                    return pRenderTarget.layout.format as GPUTextureFormat;\r\n                }),\r\n\r\n                // Render target multisample level.\r\n                sampleCount: this.mRenderTargets.multiSampleLevel,\r\n\r\n                // Enable depth or stencil write.\r\n                depthReadOnly: !this.mBundleConfig.writeDepth,\r\n                stencilReadOnly: !this.mBundleConfig.writeStencil\r\n            };\r\n\r\n            // Optional depth stencil.\r\n            if (this.mRenderTargets.depthTexture) {\r\n                lRenderBundleEncoderDescriptor.depthStencilFormat = this.mRenderTargets.depthTexture.layout.format as GPUTextureFormat;\r\n            }\r\n\r\n            // Create render bundle.\r\n            const lRenderBundleEncoder: GPURenderBundleEncoder = this.device.gpu.createRenderBundleEncoder(lRenderBundleEncoderDescriptor);\r\n\r\n            // Fill render queue.\r\n            this.setRenderQueue(lRenderBundleEncoder);\r\n\r\n            // Save render bundle.\r\n            this.mBundleConfig.bundle = {\r\n                bundle: lRenderBundleEncoder.finish(),\r\n                descriptor: this.mRenderTargets.native\r\n            };\r\n        }\r\n\r\n        // Pass descriptor is set, when the pipeline is set.\r\n        const lRenderPassEncoder: GPURenderPassEncoder = pExecution.encoder.beginRenderPass(this.mRenderTargets.native);\r\n\r\n        // Add cached render bundle.\r\n        lRenderPassEncoder.executeBundles([this.mBundleConfig.bundle?.bundle]);\r\n\r\n        // End render queue.\r\n        lRenderPassEncoder.end();\r\n    }\r\n\r\n    /**\r\n     * Execute steps in a row without caching.\r\n     * \r\n     * @param pExecutor - Executor context.\r\n     */\r\n    private directExecute(pExecution: GpuExecution): void {\r\n        // Pass descriptor is set, when the pipeline is set.\r\n        const lRenderPassEncoder: GPURenderPassEncoder = pExecution.encoder.beginRenderPass(this.mRenderTargets.native);\r\n\r\n        // Fill render queue.\r\n        this.setRenderQueue(lRenderPassEncoder);\r\n\r\n        // End render queue.\r\n        lRenderPassEncoder.end();\r\n    }\r\n\r\n    /**\r\n     * Fill encoder with each render step.\r\n     * \r\n     * @param pEncoder - Render encoder.\r\n     */\r\n    private setRenderQueue(pEncoder: GPURenderPassEncoder | GPURenderBundleEncoder): void {\r\n        // Instruction cache.\r\n        let lPipeline: VertexFragmentPipeline | null = null;\r\n\r\n        // Buffer for current set vertex buffer.\r\n        const lVertexBufferList: Dictionary<number, GpuBuffer<TypedArray>> = new Dictionary<number, GpuBuffer<TypedArray>>();\r\n        let lHighestVertexParameterListIndex: number = -1;\r\n\r\n        // Buffer for current set bind groups.\r\n        const lBindGroupList: Array<BindGroup> = new Array<BindGroup>();\r\n        let lHighestBindGroupListIndex: number = -1;\r\n\r\n        // Execute instructions.\r\n        for (const lInstruction of this.mInstructionList) {\r\n            // Cache for bind group length of this instruction.\r\n            let lLocalHighestBindGroupListIndex: number = -1;\r\n\r\n            // Add bind groups.\r\n            const lPipelineLayout: PipelineLayout = lInstruction.pipeline.module.shader.layout;\r\n            for (const lBindGroupName of lPipelineLayout.groups) {\r\n                const lBindGroupIndex: number = lPipelineLayout.groupIndex(lBindGroupName);\r\n\r\n                const lNewBindGroup: BindGroup | undefined = lInstruction.bindData[lBindGroupIndex];\r\n                const lCurrentBindGroup: BindGroup | null = lBindGroupList[lBindGroupIndex];\r\n\r\n                // Extend group list length.\r\n                if (lBindGroupIndex > lLocalHighestBindGroupListIndex) {\r\n                    lLocalHighestBindGroupListIndex = lBindGroupIndex;\r\n                }\r\n\r\n                // Use cached bind group or use new.\r\n                if (lNewBindGroup !== lCurrentBindGroup) {\r\n                    // Set bind group buffer to cache current set bind groups.\r\n                    lBindGroupList[lBindGroupIndex] = lNewBindGroup;\r\n\r\n                    // Set bind group to gpu.\r\n                    pEncoder.setBindGroup(lBindGroupIndex, lNewBindGroup.native);\r\n                }\r\n            }\r\n\r\n            // Cache for bind group length of this instruction.\r\n            let lLocalHighestVertexParameterListIndex: number = -1;\r\n\r\n            // Add vertex attribute buffer.\r\n            const lBufferNames: Array<string> = lInstruction.pipeline.module.vertexParameter.bufferNames;\r\n            for (let lBufferIndex: number = 0; lBufferIndex < lBufferNames.length; lBufferIndex++) {\r\n                // Read buffer information.\r\n                const lAttributeBufferName: string = lBufferNames[lBufferIndex];\r\n                const lNewAttributeBuffer: GpuBuffer<TypedArray> = lInstruction.parameter.get(lAttributeBufferName);\r\n\r\n                // Extend group list length.\r\n                if (lBufferIndex > lLocalHighestVertexParameterListIndex) {\r\n                    lLocalHighestVertexParameterListIndex = lBufferIndex;\r\n                }\r\n\r\n                // Use cached vertex buffer or use new.\r\n                if (lNewAttributeBuffer !== lVertexBufferList.get(lBufferIndex)) {\r\n                    lVertexBufferList.set(lBufferIndex, lNewAttributeBuffer);\r\n                    pEncoder.setVertexBuffer(lBufferIndex, lNewAttributeBuffer.native);\r\n                }\r\n            }\r\n\r\n            // Use cached pipeline or use new.\r\n            if (lInstruction.pipeline !== lPipeline) {\r\n                lPipeline = lInstruction.pipeline;\r\n\r\n                // Generate and set new pipeline.\r\n                pEncoder.setPipeline(lPipeline.native);\r\n\r\n                // Only clear bind buffer when a new pipeline is set.\r\n                // Same pipelines must have set the same bind group layouts.\r\n                if (lHighestBindGroupListIndex > lLocalHighestBindGroupListIndex) {\r\n                    for (let lBindGroupIndex: number = (lLocalHighestBindGroupListIndex + 1); lBindGroupIndex < (lHighestBindGroupListIndex + 1); lBindGroupIndex++) {\r\n                        pEncoder.setBindGroup(lBindGroupIndex, null);\r\n                    }\r\n                }\r\n\r\n                // Update global bind group list length.\r\n                lHighestBindGroupListIndex = lLocalHighestBindGroupListIndex;\r\n\r\n                // Only clear vertex buffer when a new pipeline is set.\r\n                // Same pipeline must have the same vertex parameter layout.\r\n                if (lHighestVertexParameterListIndex > lLocalHighestVertexParameterListIndex) {\r\n                    for (let lVertexParameterBufferIndex: number = (lLocalHighestVertexParameterListIndex + 1); lVertexParameterBufferIndex < (lHighestVertexParameterListIndex + 1); lVertexParameterBufferIndex++) {\r\n                        pEncoder.setVertexBuffer(lVertexParameterBufferIndex, null);\r\n                    }\r\n                }\r\n\r\n                // Update global bind group list length.\r\n                lHighestVertexParameterListIndex = lLocalHighestVertexParameterListIndex;\r\n            }\r\n\r\n            // Draw indexed when parameters are indexable.\r\n            if (lInstruction.parameter.layout.indexable) {\r\n                // Set indexbuffer.\r\n                pEncoder.setIndexBuffer(lInstruction.parameter.indexBuffer!.native, 'uint32'); // TODO: Dynamicly switch between 32 and 16 bit based on length.\r\n\r\n                // Create draw call.\r\n                pEncoder.drawIndexed(lInstruction.parameter.indexBuffer!.length, lInstruction.instanceCount);\r\n            } else {\r\n                // Create draw call.\r\n                pEncoder.draw(lInstruction.parameter.vertexCount, lInstruction.instanceCount);\r\n            }\r\n\r\n            // TODO: Indirect dispatch.\r\n        }\r\n    }\r\n}\r\n\r\ntype RenderInstruction = {\r\n    pipeline: VertexFragmentPipeline;\r\n    parameter: VertexParameter;\r\n    instanceCount: number;\r\n    bindData: Array<BindGroup>;\r\n};\r\n\r\ntype RenderBundleConfig = {\r\n    enabled: boolean;\r\n    writeStencil: boolean;\r\n    writeDepth: boolean;\r\n    bundle: {\r\n        bundle: GPURenderBundle;\r\n        descriptor: GPURenderPassDescriptor;\r\n    } | null;\r\n};","import { Dictionary, EnumUtil } from '@kartoffelgames/core';\r\nimport { GpuFeature } from './gpu-feature.enum';\r\nimport { GpuLimit } from './gpu-limit.enum';\r\n\r\n/**\r\n * Gpu limits and features.\r\n */\r\nexport class GpuCapabilities {\r\n    private readonly mFeatures: Set<GpuFeature>;\r\n    private readonly mLimits: Dictionary<GpuLimit, number>;\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Gpu adapter.\r\n     */\r\n    public constructor(pDevice: GPUDevice) {\r\n        // Convert all gpu features.\r\n        this.mFeatures = new Set<GpuFeature>();\r\n        for (const lFeature of pDevice.features) {\r\n            const lGpuFeature: GpuFeature | undefined = EnumUtil.cast<GpuFeature>(GpuFeature, lFeature);\r\n            if (lGpuFeature) {\r\n                this.mFeatures.add(lGpuFeature);\r\n            }\r\n        }\r\n\r\n        // Convert gpu limits.\r\n        this.mLimits = new Dictionary<GpuLimit, number>();\r\n        for (const lLimitName of EnumUtil.valuesOf<GpuLimit>(GpuLimit)) {\r\n            this.mLimits.set(lLimitName, pDevice.limits[lLimitName] ?? null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get limit value.\r\n     * \r\n     * @param pLimit - Limit name.\r\n     * \r\n     * @returns limitation value. \r\n     */\r\n    public getLimit(pLimit: GpuLimit): number {\r\n        return this.mLimits.get(pLimit)!;\r\n    }\r\n\r\n    /**\r\n     * Check if gpu has the specified feature.\r\n     * \r\n     * @param pFeature - Feature name.\r\n     * \r\n     * @returns true when gpu has the feature. \r\n     */\r\n    public hasFeature(pFeature: GpuFeature): boolean {\r\n        return this.mFeatures.has(pFeature);\r\n    }\r\n}\r\n","/**\r\n * Gpu feature names.\r\n */\r\nexport enum GpuFeature {\r\n    DepthClipControl = 'depth-clip-control',\r\n    Depth32floatStencil8 = 'depth32float-stencil8',\r\n    TextureCompressionBc = 'texture-compression-bc',\r\n    TextureCompressionBcSliced3d = 'texture-compression-bc-sliced-3d',\r\n    TextureCompressionEtc2 = 'texture-compression-etc2',\r\n    TextureCompressionAstc = 'texture-compression-astc',\r\n    TimestampQuery = 'timestamp-query',\r\n    IndirectFirstInstance = 'indirect-first-instance',\r\n    ShaderF16 = 'shader-f16',\r\n    Rg11b10ufloatRenderable = 'rg11b10ufloat-renderable',\r\n    Bgra8unormStorage = 'bgra8unorm-storage',\r\n    Float32Filterable = 'float32-filterable',\r\n    ClipDistances = 'clip-distances',\r\n    DualSourceBlendin = 'dual-source-blending'\r\n}","/**\r\n * Gpu limit names.\r\n */\r\nexport enum GpuLimit {\r\n    MaxTextureDimension1D = 'maxTextureDimension1D',\r\n    MaxTextureDimension2D = 'maxTextureDimension2D',\r\n    MaxTextureDimension3D = 'maxTextureDimension3D',\r\n    MaxTextureArrayLayers = 'maxTextureArrayLayers',\r\n    MaxBindGroups = 'maxBindGroups',\r\n    MaxBindGroupsPlusVertexBuffers = 'maxBindGroupsPlusVertexBuffers',\r\n    MaxBindingsPerBindGroup = 'maxBindingsPerBindGroup',\r\n    MaxDynamicUniformBuffersPerPipelineLayout = 'maxDynamicUniformBuffersPerPipelineLayout',\r\n    MaxDynamicStorageBuffersPerPipelineLayout = 'maxDynamicStorageBuffersPerPipelineLayout',\r\n    MaxSampledTexturesPerShaderStage = 'maxSampledTexturesPerShaderStage',\r\n    MaxSamplersPerShaderStage = 'maxSamplersPerShaderStage',\r\n    MaxStorageBuffersPerShaderStage = 'maxStorageBuffersPerShaderStage',\r\n    MaxStorageTexturesPerShaderStage = 'maxStorageTexturesPerShaderStage',\r\n    MaxUniformBuffersPerShaderStage = 'maxUniformBuffersPerShaderStage',\r\n    MaxUniformBufferBindingSize = 'maxUniformBufferBindingSize',\r\n    MaxStorageBufferBindingSize = 'maxStorageBufferBindingSize',\r\n    MinUniformBufferOffsetAlignment = 'minUniformBufferOffsetAlignment',\r\n    MinStorageBufferOffsetAlignment = 'minStorageBufferOffsetAlignment',\r\n    MaxVertexBuffers = 'maxVertexBuffers',\r\n    MaxBufferSize = 'maxBufferSize',\r\n    MaxVertexAttributes = 'maxVertexAttributes',\r\n    MaxVertexBufferArrayStride = 'maxVertexBufferArrayStride',\r\n    MaxInterStageShaderComponents = 'maxInterStageShaderComponents',\r\n    MaxInterStageShaderVariables = 'maxInterStageShaderVariables',\r\n    MaxColorAttachments = 'maxColorAttachments',\r\n    MaxColorAttachmentBytesPerSample = 'maxColorAttachmentBytesPerSample',\r\n    MaxComputeWorkgroupStorageSize = 'maxComputeWorkgroupStorageSize',\r\n    MaxComputeInvocationsPerWorkgroup = 'maxComputeInvocationsPerWorkgroup',\r\n    MaxComputeWorkgroupSizeX = 'maxComputeWorkgroupSizeX',\r\n    MaxComputeWorkgroupSizeY = 'maxComputeWorkgroupSizeY',\r\n    MaxComputeWorkgroupSizeZ = 'maxComputeWorkgroupSizeZ',\r\n    MaxComputeWorkgroupsPerDimension = 'maxComputeWorkgroupsPerDimension',\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { TextureDimension } from '../../constant/texture-dimension.enum';\r\nimport { GpuExecution, GpuExecutionFunction } from '../execution/gpu-execution';\r\nimport { ComputePass } from '../execution/pass/compute-pass';\r\nimport { RenderPass } from '../execution/pass/render-pass';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture/texture-memory-layout';\r\nimport { RenderTargets } from '../pipeline/target/render-targets';\r\nimport { Shader } from '../shader/shader';\r\nimport { CanvasTexture } from '../texture/canvas-texture';\r\nimport { TextureFormatCapabilities } from '../texture/texture-format-capabilities';\r\nimport { GpuCapabilities } from './capabilities/gpu-capabilities';\r\n\r\nexport class GpuDevice {\r\n    private static readonly mAdapters: Dictionary<GPUPowerPreference, GPUAdapter> = new Dictionary<GPUPowerPreference, GPUAdapter>();\r\n    private static readonly mDevices: Dictionary<GPUAdapter, GPUDevice> = new Dictionary<GPUAdapter, GPUDevice>();\r\n\r\n    /**\r\n     * Request new gpu device.\r\n     * @param pGenerator - Native object generator.\r\n     */\r\n    public static async request(pPerformance: GPUPowerPreference): Promise<GpuDevice> {\r\n        // TODO: Required and optional requirements. Load available features and limits from adapter and request in device.\r\n\r\n        // Try to load cached adapter. When not cached, request new one.\r\n        const lAdapter: GPUAdapter | null = GpuDevice.mAdapters.get(pPerformance) ?? await window.navigator.gpu.requestAdapter({ powerPreference: pPerformance });\r\n        if (!lAdapter) {\r\n            throw new Exception('Error requesting GPU adapter', GpuDevice);\r\n        }\r\n\r\n        GpuDevice.mAdapters.set(pPerformance, lAdapter);\r\n\r\n        // Try to load cached device. When not cached, request new one. // TODO: Required features.\r\n        const lDevice: GPUDevice | null = GpuDevice.mDevices.get(lAdapter) ?? await lAdapter.requestDevice();\r\n        if (!lDevice) {\r\n            throw new Exception('Error requesting GPU device', GpuDevice);\r\n        }\r\n\r\n        GpuDevice.mDevices.set(lAdapter, lDevice);\r\n\r\n        return new GpuDevice(lDevice);\r\n    }\r\n\r\n    private readonly mCapabilities: GpuCapabilities;\r\n    private readonly mFormatValidator: TextureFormatCapabilities;\r\n    private readonly mFrameChangeListener: Array<GpuDeviceFrameChangeListener>;\r\n    private mFrameCounter: number;\r\n    private readonly mGpuDevice: GPUDevice;\r\n\r\n\r\n    /**\r\n     * Gpu capabilities.\r\n     */\r\n    public get capabilities(): GpuCapabilities {\r\n        return this.mCapabilities;\r\n    }\r\n\r\n    /**\r\n     * Texture format validator.\r\n     */\r\n    public get formatValidator(): TextureFormatCapabilities {\r\n        return this.mFormatValidator;\r\n    }\r\n\r\n    /**\r\n     * Get frame count.\r\n     */\r\n    public get frameCount(): number {\r\n        return this.mFrameCounter;\r\n    }\r\n\r\n    /**\r\n     * Gpu device.\r\n     */\r\n    public get gpu(): GPUDevice {\r\n        return this.mGpuDevice;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pGenerator - Native GPU-Object Generator.\r\n     */\r\n    private constructor(pDevice: GPUDevice) {\r\n        this.mGpuDevice = pDevice;\r\n\r\n        // Setup capabilities.\r\n        this.mCapabilities = new GpuCapabilities(pDevice);\r\n\r\n        // Set default for frame counter.\r\n        this.mFrameCounter = 0;\r\n\r\n        // Init form validator.\r\n        this.mFormatValidator = new TextureFormatCapabilities(this);\r\n\r\n        // Frame change listener.\r\n        this.mFrameChangeListener = new Array<GpuDeviceFrameChangeListener>();\r\n    }\r\n\r\n    /**\r\n     * Add listener called on frame change.\r\n     * \r\n     * @param pListener - Listener.\r\n     */\r\n    public addFrameChangeListener(pListener: GpuDeviceFrameChangeListener): void {\r\n        this.mFrameChangeListener.push(pListener);\r\n    }\r\n\r\n    /**\r\n     * Create or use a html canvas to create a canvas texture.\r\n     * \r\n     * @param pCanvas - Created canvas element.\r\n     * \r\n     * @returns canvas texture. \r\n     */\r\n    public canvas(pCanvas?: HTMLCanvasElement): CanvasTexture {\r\n        // Create or use canvas.\r\n        const lCanvas: HTMLCanvasElement = pCanvas ?? document.createElement('canvas');\r\n\r\n        // Create basic canvas layout.\r\n        const lLayout: TextureMemoryLayout = new TextureMemoryLayout(this, {\r\n            dimension: TextureDimension.TwoDimension,\r\n            format: this.formatValidator.preferredCanvasFormat,\r\n            multisampled: false\r\n        });\r\n\r\n        return new CanvasTexture(this, lLayout, lCanvas);\r\n    }\r\n\r\n    /**\r\n     * Create new compute pass.\r\n     *\r\n     * @returns new compute pass. \r\n     */\r\n    public computePass(): ComputePass {\r\n        return new ComputePass(this);\r\n    }\r\n\r\n    /**\r\n     * Create pass executor.\r\n     * \r\n     * @param pOnExecute - On executor execute.\r\n     */\r\n    public executor(pOnExecute: GpuExecutionFunction): GpuExecution {\r\n        return new GpuExecution(this, pOnExecute);\r\n    }\r\n\r\n    /**\r\n     * Create new render pass.\r\n     * \r\n     * @param pRenderTargets - Render targets of pass.\r\n     * @param pStaticBundle - Bundle is static and does not update very often.\r\n     * \r\n     * @returns new render pass. \r\n     */\r\n    public renderPass(pRenderTargets: RenderTargets, pStaticBundle: boolean = true): RenderPass {\r\n        return new RenderPass(this, pRenderTargets, pStaticBundle);\r\n    }\r\n\r\n    /**\r\n     * Create render target object.\r\n     * \r\n     * @returns render target object. \r\n     */\r\n    public renderTargets(): RenderTargets {\r\n        return new RenderTargets(this);\r\n    }\r\n\r\n    /**\r\n     * Create shader.\r\n     * \r\n     * @param pSource - Shader source as wgsl.\r\n     */\r\n    public shader(pSource: string): Shader {\r\n        return new Shader(this, pSource);\r\n    }\r\n\r\n    /**\r\n     * Start new frame.\r\n     */\r\n    public startNewFrame(): void {\r\n        this.mFrameCounter++;\r\n\r\n        // Call all frame change listener.\r\n        for (const lListener of this.mFrameChangeListener) {\r\n            lListener();\r\n        }\r\n    }\r\n}\r\n\r\nexport type GpuDeviceFrameChangeListener = () => void;","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../gpu-device';\r\nimport { GpuObjectSetupReferences } from './gpu-object';\r\n\r\nexport abstract class GpuObjectChildSetup<TSetupReferenceData, TCallback extends GpuObjectChildSetupCallback> {\r\n    private readonly mSetupCallback: TCallback;\r\n    private readonly mSetupReference: GpuObjectSetupReferences<TSetupReferenceData>;\r\n    \r\n    /**\r\n     * Gpu device reference.\r\n     */\r\n    protected get device(): GpuDevice {\r\n        return this.mSetupReference.device;\r\n    }\r\n\r\n    /**\r\n     * Setup data.\r\n     */\r\n    protected get setupData(): Readonly<TSetupReferenceData> {\r\n        // References should be setup at this point.\r\n        return this.mSetupReference.data as TSetupReferenceData;\r\n    }\r\n\r\n    /**\r\n     * Setup references.\r\n     */\r\n    protected get setupReferences(): GpuObjectSetupReferences<TSetupReferenceData> {\r\n        return this.mSetupReference;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pSetupReference - Setup references.\r\n     */\r\n    public constructor(pSetupReference: GpuObjectSetupReferences<TSetupReferenceData>, pDataCallback: TCallback) {\r\n        this.mSetupReference = pSetupReference;\r\n        this.mSetupCallback = pDataCallback;\r\n    }\r\n\r\n    /**\r\n     * Ensure that current call is used inside a setup call.\r\n     */\r\n    protected ensureThatInSetup(): void {\r\n        // Lock setup to a setup call.\r\n        if (!this.mSetupReference.inSetup) {\r\n            throw new Exception('Can only setup in a setup call.', this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send data back to parent setup.\r\n     * \r\n     * @param pData - Setup complete data.\r\n     */\r\n    protected sendData(...pData: Parameters<TCallback>): void {\r\n        this.mSetupCallback(...pData);\r\n    }\r\n}\r\n\r\ntype GpuObjectChildSetupCallback = (...args: any) => void;","import { Exception } from '@kartoffelgames/core';\r\n\r\nexport class GpuObjectInvalidationReasons<TReasons extends string> {\r\n    private mDeconstruct: boolean;\r\n    private readonly mReasons: Set<TReasons>;\r\n\r\n    /**\r\n     * Life time was reached.\r\n     */\r\n    public get deconstruct(): boolean {\r\n        return this.mDeconstruct;\r\n    } set deconstruct(pDeconstruct: boolean) {\r\n        if (!pDeconstruct) {\r\n            throw new Exception(`Deconstruct reason can not be reverted. Sadly.`, this);\r\n        }\r\n\r\n        this.mDeconstruct = pDeconstruct;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    public constructor() {\r\n        this.mReasons = new Set<TReasons>();\r\n        this.mDeconstruct = false;\r\n    }\r\n\r\n    /**\r\n     * Add update reason.\r\n     * @param pReason - Update reason.\r\n     */\r\n    public add(pReason: TReasons): void {\r\n        this.mReasons.add(pReason);\r\n    }\r\n\r\n    /**\r\n     * If update reason has any existing reason.\r\n     */\r\n    public any(): boolean {\r\n        return this.mReasons.size > 0  || this.mDeconstruct;\r\n    }\r\n\r\n    /**\r\n     * Clear all reasons.\r\n     */\r\n    public clear(): void {\r\n        this.mReasons.clear();\r\n    }\r\n\r\n    /**\r\n     * Check for update reason.\r\n     * @param pReason - Update reason.\r\n     */\r\n    public has(pReason: TReasons): boolean {\r\n        return this.mReasons.has(pReason);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../gpu-device';\r\nimport { GpuObjectSetupReferences } from './gpu-object';\r\n\r\nexport abstract class GpuObjectSetup<TSetupData> {\r\n    private readonly mSetupReference: GpuObjectSetupReferences<TSetupData>;\r\n\r\n    /**\r\n     * Gpu device reference.\r\n     */\r\n    protected get device(): GpuDevice {\r\n        return this.mSetupReference.device;\r\n    }\r\n\r\n    /**\r\n     * Setup data.\r\n     */\r\n    protected get setupData(): TSetupData {\r\n        // References should be setup at this point.\r\n        return this.mSetupReference.data as TSetupData;\r\n    }\r\n\r\n    /**\r\n     * Setup references.\r\n     */\r\n    protected get setupReferences(): GpuObjectSetupReferences<TSetupData> {\r\n        return this.mSetupReference;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pSetupReference - Setup references.\r\n     */\r\n    public constructor(pSetupReference: GpuObjectSetupReferences<TSetupData>) {\r\n        this.mSetupReference = pSetupReference;\r\n\r\n        // Fill default data to setup references.\r\n        this.fillDefaultData(pSetupReference.data);\r\n    }\r\n\r\n    /**\r\n     * Ensure that current call is used inside a setup call.\r\n     */\r\n    protected ensureThatInSetup(): void {\r\n        // Lock setup to a setup call.\r\n        if (!this.mSetupReference.inSetup) {\r\n            throw new Exception('Can only setup in a setup call.', this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fill in default data before the setup starts.\r\n     * \r\n     * @param pDataReference - Setup data reference.\r\n     */\r\n    protected abstract fillDefaultData(pDataReference: Partial<TSetupData>): void;\r\n}","import { Dictionary, Exception, IDeconstructable, Writeable } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../gpu-device';\r\nimport { GpuObjectInvalidationReasons } from './gpu-object-invalidation-reasons';\r\nimport { GpuObjectSetup } from './gpu-object-setup';\r\n\r\n/**\r\n * Gpu object with a native internal object.\r\n */\r\nexport abstract class GpuObject<TNativeObject = null, TInvalidationType extends string = '', TSetupObject extends GpuObjectSetup<any> | null = null> implements IDeconstructable {\r\n    private mDeconstructed: boolean;\r\n    private readonly mDevice: GpuDevice;\r\n    private readonly mInvalidationReasons: GpuObjectInvalidationReasons<TInvalidationType>;\r\n    private mIsSetup: boolean;\r\n    private mNativeObject: TNativeObject | null;\r\n    private readonly mUpdateListenerList: Dictionary<GpuObjectUpdateListener<TInvalidationType>, Set<TInvalidationType> | null>;\r\n\r\n    /**\r\n     * Gpu Device.\r\n     */\r\n    protected get device(): GpuDevice {\r\n        return this.mDevice;\r\n    }\r\n\r\n    /**\r\n     * Object was setup.\r\n     */\r\n    protected get isSetup(): boolean {\r\n        return this.mIsSetup;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    protected get native(): TNativeObject {\r\n        return this.readNative();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu device.\r\n     * @param pNativeLifeTime - Lifetime of native object.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        // Save static settings.\r\n        this.mDevice = pDevice;\r\n        this.mIsSetup = false;\r\n\r\n        // Init default settings and config.\r\n        this.mDeconstructed = false;\r\n        this.mNativeObject = null;\r\n\r\n        // Init lists.\r\n        this.mUpdateListenerList = new Dictionary<GpuObjectUpdateListener<TInvalidationType>, Set<TInvalidationType> | null>();\r\n        this.mInvalidationReasons = new GpuObjectInvalidationReasons<TInvalidationType>();\r\n    }\r\n\r\n    /**\r\n     * Add invalidation listener.\r\n     * \r\n     * @param pListener - Listener.\r\n     * @param pAffected - Trigger listener only on those reasons.\r\n     * \r\n     * @returns this.\r\n     */\r\n    public addInvalidationListener(pListener: GpuObjectUpdateListener<TInvalidationType>, pAffected?: Array<TInvalidationType>): this {\r\n        this.mUpdateListenerList.set(pListener, pAffected ? new Set(pAffected) : null);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Deconstruct native object.\r\n     */\r\n    public deconstruct(): void {\r\n        this.mInvalidationReasons.deconstruct = true;\r\n\r\n        // Clear and destroy old native when any update reason exists.\r\n        if (this.mNativeObject !== null) {\r\n            this.destroyNative(this.mNativeObject, this.mInvalidationReasons);\r\n            this.mNativeObject = null;\r\n        }\r\n\r\n        this.mDeconstructed = true;\r\n    }\r\n\r\n    /**\r\n     * Invalidate native gpu object so it will be created again.\r\n     */\r\n    public invalidate(...pReasons: Array<TInvalidationType>): void {\r\n        // TODO: This must have a good performance. \r\n        // On length = exec in single mode, else use iterator. \r\n        // Pregroup listener with dictionary so iterator only needs to iterate needed. May worse remove listener behaviour.\r\n\r\n        // Invalidate for each reason.\r\n        for (const lReason of pReasons) {\r\n            // Add invalidation reason.\r\n            this.mInvalidationReasons.add(lReason);\r\n\r\n            // Call parent update listerner.\r\n            for (const [lInvalidationListener, lAffected] of this.mUpdateListenerList) {\r\n                // Call listener only when is has a affected reason.\r\n                if (!lAffected || lAffected.has(lReason)) {\r\n                    lInvalidationListener(lReason);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add invalidation listener.\r\n     * @param pListener - Listener.\r\n     */\r\n    public removeInvalidationListener(pListener: GpuObjectUpdateListener<TInvalidationType>): void {\r\n        this.mUpdateListenerList.delete(pListener);\r\n    }\r\n\r\n    /**\r\n     * Destroy native object.\r\n     * \r\n     * @param _pNative - Native object.\r\n     * @param _pReasons - Reason why it should be destroyed. \r\n     */\r\n    protected destroyNative(_pNative: TNativeObject, _pReasons: GpuObjectInvalidationReasons<TInvalidationType>): void {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Throws when the gpu object not setup.\r\n     */\r\n    protected ensureSetup(): void {\r\n        if (!this.mIsSetup) {\r\n            throw new Exception('Gpu object must be setup to access properties.', this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate new native object.\r\n     * Return null when no native can be generated.\r\n     * \r\n     * @param _pCurrentNative - Current native element.\r\n     * @param _pReasons - Reason why it should be newly generated. \r\n     */\r\n    protected generateNative(_pCurrentNative: TNativeObject | null, _pReasons: GpuObjectInvalidationReasons<TInvalidationType>): TNativeObject | null {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Setup with setup object.\r\n     * \r\n     * @param _pReferences - Used references.\r\n     */\r\n    protected onSetup(_pReferences: GpuObjectSetupData<TSetupObject>): void {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Create setup object.\r\n     * Return null to skip any setups.\r\n     * \r\n     * @param _pReferences - Unfilled setup references.\r\n     * \r\n     * @returns Setup object.\r\n     */\r\n    protected onSetupObjectCreate(_pReferences: GpuObjectSetupReferences<GpuObjectSetupData<TSetupObject>>): TSetupObject {\r\n        return null as TSetupObject;\r\n    }\r\n\r\n    /**\r\n     * Call setup.\r\n     * \r\n     * @param pSetupCallback - Setup callback. \r\n     * \r\n     * @returns this. \r\n     */\r\n    protected setup(pSetupCallback?: (pSetup: TSetupObject) => void): this {\r\n        // Dont call twice.\r\n        if (this.mIsSetup) {\r\n            throw new Exception(`Render targets setup can't be called twice.`, this);\r\n        }\r\n\r\n        // Create unfilled\r\n        const lSetupReferences: GpuObjectSetupReferences<GpuObjectSetupData<TSetupObject>> = {\r\n            inSetup: true,\r\n            device: this.mDevice,\r\n            data: {}\r\n        };\r\n\r\n        // Creates setup object.\r\n        const lSetupObject: TSetupObject | null = this.onSetupObjectCreate(lSetupReferences);\r\n        if (lSetupObject !== null) {\r\n            // Call optional user setup.\r\n            if (pSetupCallback) {\r\n                pSetupCallback(lSetupObject);\r\n            }\r\n\r\n            // Call gpu object setup. At this point all references should be filled.\r\n            this.onSetup(lSetupReferences.data as GpuObjectSetupData<TSetupObject>);\r\n        }\r\n\r\n        // Defuse setup references.\r\n        (<Writeable<GpuObjectSetupReferences<GpuObjectSetupData<TSetupObject>>>>lSetupReferences).inSetup = false;\r\n\r\n        // Set gpu object as setup.\r\n        this.mIsSetup = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Update native object.\r\n     * \r\n     * @param _pNative - Native object.\r\n     * @param _pReasons - Reason why it should be updated. \r\n     * \r\n     * @returns true when native element was updated, false when it should be created anew.\r\n     */\r\n    protected updateNative(_pNative: TNativeObject, _pReasons: GpuObjectInvalidationReasons<TInvalidationType>): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Read up to date native object.\r\n     * Invalidates, destroys and generates the native object.\r\n     * \r\n     * @returns native object.\r\n     */\r\n    private readNative(): TNativeObject {\r\n        // Restrict deconstructed access.\r\n        if (this.mDeconstructed) {\r\n            throw new Exception(`Native GPU object was deconstructed and can't be used again.`, this);\r\n        }\r\n\r\n        // Ensure the setup was called.\r\n        if (!this.isSetup) {\r\n            // Call empty update.\r\n            this.setup();\r\n        }\r\n\r\n        // When native is generated and is invalid, try to update it.\r\n        if (this.mNativeObject !== null && this.mInvalidationReasons.any()) {\r\n            // Try to update native.\r\n            const lUpdateSuccessfull: boolean = this.updateNative(this.mNativeObject, this.mInvalidationReasons);\r\n            if (lUpdateSuccessfull) {\r\n                this.mInvalidationReasons.clear();\r\n            }\r\n        }\r\n\r\n        // When no native is generated or update was not successfull.\r\n        if (this.mNativeObject === null || this.mInvalidationReasons.any()) {\r\n            // Save current native.\r\n            const lCurrentNative: TNativeObject | null = this.mNativeObject;\r\n\r\n            // Generate new native.\r\n            this.mNativeObject = this.generateNative(lCurrentNative, this.mInvalidationReasons);\r\n            if (this.mNativeObject === null) {\r\n                throw new Exception(`No gpu native object can be generated.`, this);\r\n            }\r\n\r\n            // Destroy old native when existing.\r\n            if (lCurrentNative !== null) {\r\n                this.destroyNative(lCurrentNative, this.mInvalidationReasons);\r\n            }\r\n\r\n            // Reset all update reasons.\r\n            this.mInvalidationReasons.clear();\r\n        }\r\n\r\n        return this.mNativeObject;\r\n    }\r\n}\r\n\r\ntype GpuObjectSetupData<TGpuObjectSetup> = TGpuObjectSetup extends GpuObjectSetup<infer T> ? T : never;\r\n\r\nexport interface GpuObjectSetupReferences<TSetupReferenceData> {\r\n    readonly device: GpuDevice;\r\n    readonly inSetup: boolean;\r\n    readonly data: Partial<TSetupReferenceData>;\r\n}\r\n\r\nexport type GpuObjectUpdateListener<TInvalidationReason extends string> = (pReason: TInvalidationReason) => void;\r\n\r\n// TODO: Custom invalidation mapping to destinct between creating everything new or replace a view in native objects.","import { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { GpuObjectSetup } from '../gpu/object/gpu-object-setup';\r\n\r\nexport abstract class BaseMemoryLayout<TInvalidationType extends string = any, TSetupObject extends GpuObjectSetup<any> | null = any> extends GpuObject<null, TInvalidationType, TSetupObject> {\r\n    /**\r\n     * Constuctor.\r\n     * @param pDevice - Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseBufferMemoryLayout, BufferLayoutLocation } from './base-buffer-memory-layout';\r\n\r\nexport class ArrayBufferMemoryLayout extends BaseBufferMemoryLayout {\r\n    private readonly mArraySize: number;\r\n    private readonly mInnerType: BaseBufferMemoryLayout;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        return this.innerType.alignment;\r\n    }\r\n\r\n    /**\r\n     * Array item count.\r\n     */\r\n    public get arraySize(): number {\r\n        return this.mArraySize;\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get fixedSize(): number {\r\n        if (this.arraySize < 1) {\r\n            return 0;\r\n        }\r\n\r\n        return this.arraySize * (Math.ceil(this.innerType.fixedSize / this.innerType.alignment) * this.innerType.alignment);\r\n    }\r\n\r\n    /**\r\n     * Array type.\r\n     */\r\n    public get innerType(): BaseBufferMemoryLayout {\r\n        return this.mInnerType;\r\n    }\r\n\r\n    /**\r\n     * Size of the variable part of layout in bytes.\r\n     */\r\n    public get variableSize(): number {\r\n        if (this.arraySize > 0) {\r\n            return 0;\r\n        }\r\n\r\n        return (Math.ceil(this.innerType.fixedSize / this.innerType.alignment) * this.innerType.alignment);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pParameter: ArrayBufferMemoryLayoutParameter) {\r\n        super(pDevice);\r\n\r\n        // Static properties.\r\n        this.mArraySize = pParameter.arraySize;\r\n        this.mInnerType = pParameter.innerType;\r\n\r\n        if (this.mInnerType.variableSize > 0) {\r\n            throw new Exception(`Array memory layout must be of fixed size.`, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public override locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        const lPathName: Array<string> = [...pPathName];\r\n\r\n        // Complete array.\r\n        const lItemIndexString: string | undefined = lPathName.shift();\r\n        if (!lItemIndexString) {\r\n            // Only valid for ststic arrays.\r\n            if (this.variableSize > 0) {\r\n                throw new Exception('No size can be calculated for dynamic array buffer locations.', this);\r\n            }\r\n\r\n            return { size: this.fixedSize, offset: 0 };\r\n        }\r\n\r\n        // Validate item index.\r\n        if (isNaN(<any>lItemIndexString)) {\r\n            throw new Exception('Array index must be a number.', this);\r\n        }\r\n\r\n        // Calculate size of single item.\r\n        const lArrayItemSize: number = Math.ceil(this.innerType.fixedSize / this.innerType.alignment) * this.innerType.alignment;\r\n        const lArrayItemOffset: number = parseInt(lItemIndexString) * lArrayItemSize;\r\n\r\n        // Single item.\r\n        if (lPathName.length === 0) {\r\n            return { size: lArrayItemSize, offset: lArrayItemOffset };\r\n        }\r\n\r\n        // Inner property.\r\n        const lInnerLocation = this.innerType.locationOf(lPathName);\r\n        return { size: lInnerLocation.size, offset: lArrayItemOffset + lInnerLocation.offset };\r\n    }\r\n}\r\n\r\nexport interface ArrayBufferMemoryLayoutParameter {\r\n    arraySize: number;\r\n    innerType: BaseBufferMemoryLayout;\r\n}","import { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObjectSetup } from '../../gpu/object/gpu-object-setup';\r\nimport { BaseMemoryLayout } from '../base-memory-layout';\r\n\r\nexport abstract class BaseBufferMemoryLayout<TInvalidationType extends string = any, TSetupObject extends GpuObjectSetup<any> | null = any> extends BaseMemoryLayout<TInvalidationType, TSetupObject> {\r\n    /**\r\n     * Type byte alignment.\r\n     */\r\n    public abstract readonly alignment: number;\r\n\r\n    /**\r\n     * Fixed buffer size in bytes.\r\n     */\r\n    public abstract readonly fixedSize: number;\r\n\r\n    /**\r\n     * Size of the variable part of layout in bytes.\r\n     */\r\n    public abstract readonly variableSize: number;\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public abstract locationOf(pPathName: Array<string>): BufferLayoutLocation;\r\n}\r\n\r\nexport type BufferLayoutLocation = {\r\n    offset: number;\r\n    size: number;\r\n};","export enum PrimitiveBufferFormat {\r\n    Float16 = 'float16',\r\n    Float32 = 'float32',\r\n    Uint32 = 'uint32',\r\n    Sint32 = 'sint32',\r\n}","export enum PrimitiveBufferMultiplier {\r\n    // Single\r\n    Single = 'x1',\r\n    \r\n    // Vector\r\n    Vector2 = 'v2',\r\n    Vector3 = 'v3',\r\n    Vector4 = 'v4',\r\n\r\n    // Matrix\r\n    Matrix22 = 'm22',\r\n    Matrix23 = 'm23',\r\n    Matrix24 = 'm24',\r\n    Matrix32 = 'm32',\r\n    Matrix33 = 'm33',\r\n    Matrix34 = 'm34',\r\n    Matrix42 = 'm42',\r\n    Matrix43 = 'm43',\r\n    Matrix44 = 'm44',\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseBufferMemoryLayout, BufferLayoutLocation } from './base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from './enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from './enum/primitive-buffer-multiplier.enum';\r\n\r\nexport class PrimitiveBufferMemoryLayout extends BaseBufferMemoryLayout {\r\n    private readonly mAlignment: number;\r\n    private readonly mSize: number;\r\n\r\n    /**\r\n     * Type byte alignment.\r\n     */\r\n    public override get alignment(): number {\r\n        return this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Fixed buffer size in bytes.\r\n     */\r\n    public get fixedSize(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Buffer size in bytes.\r\n     */\r\n    public get variableSize(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pParameter: LinearBufferMemoryLayoutParameter) {\r\n        super(pDevice);\r\n\r\n        // Set default size by format.\r\n        this.mSize = ((): number => {\r\n            switch (pParameter.primitiveFormat) {\r\n                case PrimitiveBufferFormat.Float16: return 2;\r\n                case PrimitiveBufferFormat.Float32: return 4;\r\n                case PrimitiveBufferFormat.Uint32: return 4;\r\n                case PrimitiveBufferFormat.Sint32: return 4;\r\n            }\r\n        })();\r\n\r\n        // Calculate alignment and size.\r\n        [this.mAlignment, this.mSize] = ((): [number, number] => {\r\n            switch (pParameter.primitiveMultiplier) {\r\n                case PrimitiveBufferMultiplier.Single: return [this.mSize, this.mSize];\r\n                case PrimitiveBufferMultiplier.Vector2: return [this.mSize * 2, this.mSize * 2];\r\n                case PrimitiveBufferMultiplier.Vector3: return [this.mSize * 4, this.mSize * 3];\r\n                case PrimitiveBufferMultiplier.Vector4: return [this.mSize * 4, this.mSize * 4];\r\n                case PrimitiveBufferMultiplier.Matrix22: return [this.mSize * 2, this.mSize * 2 * 2];\r\n                case PrimitiveBufferMultiplier.Matrix23: return [this.mSize * 4, this.mSize * 2 * 3];\r\n                case PrimitiveBufferMultiplier.Matrix24: return [this.mSize * 4, this.mSize * 2 * 4];\r\n                case PrimitiveBufferMultiplier.Matrix32: return [this.mSize * 2, this.mSize * 3 * 2];\r\n                case PrimitiveBufferMultiplier.Matrix33: return [this.mSize * 4, this.mSize * 3 * 3];\r\n                case PrimitiveBufferMultiplier.Matrix34: return [this.mSize * 4, this.mSize * 3 * 4];\r\n                case PrimitiveBufferMultiplier.Matrix42: return [this.mSize * 2, this.mSize * 4 * 2];\r\n                case PrimitiveBufferMultiplier.Matrix43: return [this.mSize * 4, this.mSize * 4 * 3];\r\n                case PrimitiveBufferMultiplier.Matrix44: return [this.mSize * 4, this.mSize * 4 * 4];\r\n            }\r\n        })();\r\n\r\n        // Override size of primitive.\r\n        if (pParameter.overrideSize) {\r\n            if (this.mSize > pParameter.overrideSize) {\r\n                throw new Exception('Overriden buffer byte size can not be lower than the actual byte size.', this);\r\n            }\r\n\r\n            this.mAlignment = pParameter.overrideSize;\r\n        }\r\n\r\n        // Override alignment of primitive.\r\n        if (pParameter.overrideAlignment) {\r\n            if (pParameter.overrideAlignment % this.mAlignment !== 0) {\r\n                throw new Exception('Overriden alignment must be dividable by its actual alignment value.', this);\r\n            }\r\n\r\n            this.mAlignment = pParameter.overrideAlignment;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        // Only validate name.\r\n        if (pPathName.length !== 0) {\r\n            throw new Exception(`Simple buffer layout has no properties.`, this);\r\n        }\r\n\r\n        return { size: this.fixedSize, offset: 0 };\r\n    }\r\n}\r\n\r\nexport interface LinearBufferMemoryLayoutParameter {\r\n    overrideAlignment?: number;\r\n    overrideSize?: number;\r\n    primitiveFormat: PrimitiveBufferFormat;\r\n    primitiveMultiplier: PrimitiveBufferMultiplier;\r\n}","import { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { ArrayBufferMemoryLayout } from './array-buffer-memory-layout';\r\nimport { BaseBufferMemoryLayout } from './base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from './enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from './enum/primitive-buffer-multiplier.enum';\r\nimport { PrimitiveBufferMemoryLayout } from './primitive-buffer-memory-layout';\r\nimport { StructBufferMemoryLayout } from './struct-buffer-memory-layout';\r\nimport { StructBufferMemoryLayoutSetup, StructBufferMemoryLayoutSetupData } from './struct-buffer-memory-layout-setup';\r\n\r\nexport class StructBufferMemoryLayoutPropertySetup extends GpuObjectChildSetup<StructBufferMemoryLayoutSetupData, MemoryLayoutCallback> {\r\n    /**\r\n     * Buffer as array.\r\n     * \r\n     * @param pSize - Optional. Set size fixed.\r\n     *  \r\n     * @returns array setup. \r\n     */\r\n    public asArray(pSize: number = -1): StructBufferMemoryLayoutPropertySetup {\r\n        return new StructBufferMemoryLayoutPropertySetup(this.setupReferences, (pMemoryLayout: BaseBufferMemoryLayout) => {\r\n            const lLayout: ArrayBufferMemoryLayout = new ArrayBufferMemoryLayout(this.device, {\r\n                arraySize: pSize,\r\n                innerType: pMemoryLayout\r\n            });\r\n\r\n            this.sendData(lLayout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Memory layout as primitive.\r\n     * \r\n     * @param pPrimitiveFormat - Primitive format.\r\n     * @param pPrimitiveMultiplier - Value multiplier.\r\n     */\r\n    public asPrimitive(pPrimitiveFormat: PrimitiveBufferFormat, pPrimitiveMultiplier: PrimitiveBufferMultiplier): void {\r\n        const lLayout: PrimitiveBufferMemoryLayout = new PrimitiveBufferMemoryLayout(this.device, {\r\n            primitiveFormat: pPrimitiveFormat,\r\n            primitiveMultiplier: pPrimitiveMultiplier,\r\n        });\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n\r\n    /**\r\n     * Memory layout as struct\r\n     * \r\n     * @param pSetupCall - Struct setup call.\r\n     */\r\n    public asStruct(pSetupCall: (pSetup: StructBufferMemoryLayoutSetup) => void): void {\r\n        // Create and setup struct buffer memory layout.\r\n        const lLayout: StructBufferMemoryLayout = new StructBufferMemoryLayout(this.device);\r\n        lLayout.setup(pSetupCall);\r\n\r\n        // Send created data.\r\n        this.sendData(lLayout);\r\n    }\r\n}\r\n\r\n\r\ntype MemoryLayoutCallback = (pMemoryLayout: BaseBufferMemoryLayout) => void;","import { GpuObjectSetup } from '../../gpu/object/gpu-object-setup';\r\nimport { BaseBufferMemoryLayout } from './base-buffer-memory-layout';\r\nimport { StructBufferMemoryLayoutPropertySetup } from './struct-buffer-memory-layout-property-setup';\r\n\r\nexport class StructBufferMemoryLayoutSetup extends GpuObjectSetup<StructBufferMemoryLayoutSetupData> {\r\n    /**\r\n     * Add propery.\r\n     * \r\n     * @param pName - Propery name.\r\n     * \r\n     * @returns property setup. \r\n     */\r\n    public property(pName: string): StructBufferMemoryLayoutPropertySetup {\r\n        // Create empty property.\r\n        const lProperty: StructBufferMemoryLayoutSetupPropertyData = {\r\n            name: pName,\r\n            orderIndex: this.setupData.properties.length,\r\n            layout: null\r\n        };\r\n\r\n        // Add empty property.\r\n        this.setupData.properties.push(lProperty);\r\n\r\n        // Create and return property setup.\r\n        return new StructBufferMemoryLayoutPropertySetup(this.setupReferences, (pMemoryLayout: BaseBufferMemoryLayout) => {\r\n            lProperty.layout = pMemoryLayout;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fill in default data before the setup starts.\r\n     *\r\n     * @param pDataReference - Setup data reference.\r\n     */\r\n    protected override fillDefaultData(pDataReference: StructBufferMemoryLayoutSetupData): void {\r\n        pDataReference.properties = new Array<{ orderIndex: number; name: string; layout: BaseBufferMemoryLayout; }>();\r\n    }\r\n}\r\n\r\ntype StructBufferMemoryLayoutSetupPropertyData = {\r\n    orderIndex: number;\r\n    name: string;\r\n    layout: BaseBufferMemoryLayout | null;\r\n};\r\n\r\nexport type StructBufferMemoryLayoutSetupData = {\r\n    properties: Array<StructBufferMemoryLayoutSetupPropertyData>;\r\n};","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObjectSetupReferences } from '../../gpu/object/gpu-object';\r\nimport { IGpuObjectSetup } from '../../gpu/object/interface/i-gpu-object-setup';\r\nimport { BaseBufferMemoryLayout, BufferLayoutLocation } from './base-buffer-memory-layout';\r\nimport { StructBufferMemoryLayoutSetup, StructBufferMemoryLayoutSetupData } from './struct-buffer-memory-layout-setup';\r\n\r\nexport class StructBufferMemoryLayout extends BaseBufferMemoryLayout<any, StructBufferMemoryLayoutSetup> implements IGpuObjectSetup<StructBufferMemoryLayoutSetup> {\r\n    private mAlignment: number;\r\n    private mFixedSize: number;\r\n    private mInnerProperties: Array<StructBufferMemoryLayoutProperty>;\r\n    private mVariableSize: number;\r\n\r\n    /**\r\n     * Alignment of type.\r\n     */\r\n    public get alignment(): number {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        return this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Type size in byte.\r\n     */\r\n    public get fixedSize(): number {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        return this.mFixedSize;\r\n    }\r\n\r\n    /**\r\n     * Ordered inner properties.\r\n     */\r\n    public get properties(): Array<BaseBufferMemoryLayout> {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        return this.mInnerProperties.map((pProperty) => pProperty.layout);\r\n    }\r\n\r\n    /**\r\n     * Size of variable part of struct.\r\n     */\r\n    public get variableSize(): number {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        return this.mVariableSize;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        // Calculated properties.\r\n        this.mAlignment = 0;\r\n        this.mFixedSize = 0;\r\n        this.mVariableSize = 0;\r\n\r\n        // Static properties.\r\n        this.mInnerProperties = new Array<StructBufferMemoryLayoutProperty>();\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public override locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        const lPathName: Array<string> = [...pPathName];\r\n\r\n        // Complete array.\r\n        const lPropertyName: string | undefined = lPathName.shift();\r\n        if (!lPropertyName) {\r\n            if (this.mVariableSize > 0) {\r\n                throw new Exception(`Can't read location of a memory layout with a variable size.`, this);\r\n            }\r\n\r\n            return { size: this.fixedSize, offset: 0 };\r\n        }\r\n\r\n        // Recalculate size.\r\n        let lPropertyOffset: number = 0;\r\n        let lFoundProperty: StructBufferMemoryLayoutProperty | null = null;\r\n        for (const lProperty of this.mInnerProperties) {\r\n            // Increase offset to needed alignment.\r\n            lPropertyOffset = Math.ceil(lPropertyOffset / lProperty.layout.alignment) * lProperty.layout.alignment;\r\n\r\n            // Inner property is found. Skip searching.\r\n            // Alignment just applied so it can be skipped later.\r\n            if (lProperty.name === lPropertyName) {\r\n                lFoundProperty = lProperty;\r\n                break;\r\n            }\r\n\r\n            // Increase offset for complete property. \r\n            // Only last property can have a variable size, so we can only save the fixed size.\r\n            lPropertyOffset += lProperty.layout.fixedSize;\r\n        }\r\n\r\n        // Validate property.\r\n        if (!lFoundProperty) {\r\n            throw new Exception(`Struct buffer layout property \"${lPropertyName}\" not found.`, this);\r\n        }\r\n\r\n        const lPropertyLocation = lFoundProperty.layout.locationOf(lPathName);\r\n        return {\r\n            size: lPropertyLocation.size,\r\n            offset: lPropertyOffset + lPropertyLocation.offset\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Call setup.\r\n     *\r\n     * @param pSetupCallback - Setup callback.\r\n     *\r\n     * @returns this.\r\n     */\r\n    public override setup(pSetupCallback?: ((pSetup: StructBufferMemoryLayoutSetup) => void)): this {\r\n        super.setup(pSetupCallback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Setup struct layout.\r\n     * \r\n     * @param pReferences - Setup data references.\r\n     */\r\n    protected override onSetup(pReferences: StructBufferMemoryLayoutSetupData): void {\r\n        // Add each property\r\n        for (const lProperty of pReferences.properties) {\r\n            if (!lProperty.layout) {\r\n                throw new Exception(`Struct propery layout was not set.`, this);\r\n            }\r\n\r\n            this.mInnerProperties.push({\r\n                orderIndex: lProperty.orderIndex,\r\n                name: lProperty.name,\r\n                layout: lProperty.layout\r\n            });\r\n        }\r\n\r\n        // Order properties.\r\n        this.mInnerProperties = this.mInnerProperties.sort((pA, pB) => {\r\n            return pA.orderIndex - pB.orderIndex;\r\n        });\r\n\r\n        // Calculate size.\r\n        let lRawDataSize: number = 0;\r\n        for (let lIndex: number = 0; lIndex < this.mInnerProperties.length; lIndex++) {\r\n            const lPropertyLayout = this.mInnerProperties[lIndex].layout;\r\n\r\n            if (lPropertyLayout.variableSize > 0 && lIndex !== (this.mInnerProperties.length - 1)) {\r\n                throw new Exception(`Only the last property of a struct memory layout can have a variable size.`, this);\r\n            }\r\n\r\n            // Increase offset to needed alignment.\r\n            lRawDataSize = Math.ceil(lRawDataSize / lPropertyLayout.alignment) * lPropertyLayout.alignment;\r\n\r\n            // Increase offset for type.\r\n            lRawDataSize += lPropertyLayout.fixedSize;\r\n\r\n            // Alignment is the highest alignment of all properties.\r\n            if (lPropertyLayout.alignment > this.mAlignment) {\r\n                this.mAlignment = lPropertyLayout.alignment;\r\n            }\r\n\r\n            // Set variable size. Can only be the last property.\r\n            if (lPropertyLayout.variableSize > 0) {\r\n                this.mVariableSize = lPropertyLayout.variableSize;\r\n            }\r\n        }\r\n\r\n        // Apply struct alignment to raw data size.\r\n        this.mFixedSize = Math.ceil(lRawDataSize / this.mAlignment) * this.mAlignment;\r\n    }\r\n\r\n    /**\r\n     * Create setup object.\r\n     * \r\n     * @param pReferences - Setup references.\r\n     * \r\n     * @returns setup object. \r\n     */\r\n    protected override onSetupObjectCreate(pReferences: GpuObjectSetupReferences<StructBufferMemoryLayoutSetupData>): StructBufferMemoryLayoutSetup {\r\n        return new StructBufferMemoryLayoutSetup(pReferences);\r\n    }\r\n}\r\n\r\ntype StructBufferMemoryLayoutProperty = {\r\n    orderIndex: number,\r\n    name: string,\r\n    layout: BaseBufferMemoryLayout;\r\n};","import { Exception } from '@kartoffelgames/core';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseBufferMemoryLayout, BufferLayoutLocation } from './base-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from './enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from './enum/primitive-buffer-multiplier.enum';\r\n\r\nexport class VertexBufferMemoryLayout extends BaseBufferMemoryLayout {\r\n    private readonly mFormat: PrimitiveBufferFormat;\r\n    private readonly mFormatByteCount: number;\r\n    private readonly mSize: number;\r\n    \r\n    /**\r\n     * Type byte alignment.\r\n     */\r\n    public override get alignment(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Fixed buffer size in bytes.\r\n     */\r\n    public get fixedSize(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Underlying format of all parameters.\r\n     */\r\n    public get format(): PrimitiveBufferFormat {\r\n        return this.mFormat;\r\n    }\r\n\r\n    /**\r\n     * Byte count of underlying format.\r\n     */\r\n    public get formatByteCount(): number {\r\n        return this.mFormatByteCount;\r\n    }\r\n\r\n    /**\r\n     * Buffer size in bytes.\r\n     */\r\n    public get variableSize(): number {\r\n        return this.mSize;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pParameter: VertexBufferMemoryLayoutParameter) {\r\n        super(pDevice);\r\n\r\n        // Set default size by format.\r\n        const lPrimitiveByteCount: number = ((): number => {\r\n            switch (pParameter.format) {\r\n                case PrimitiveBufferFormat.Float16: return 2;\r\n                case PrimitiveBufferFormat.Float32: return 4;\r\n                case PrimitiveBufferFormat.Uint32: return 4;\r\n                case PrimitiveBufferFormat.Sint32: return 4;\r\n            }\r\n        })();\r\n\r\n        // Set default size and init format values.\r\n        this.mSize = 0;\r\n        this.mFormat = pParameter.format;\r\n        this.mFormatByteCount = lPrimitiveByteCount;\r\n\r\n        // Calculate size of all parameter.\r\n        for (const lParameter of pParameter.parameter) {\r\n            // Calculate alignment and size.\r\n            const lParameterSize: number = ((): number => {\r\n                switch (lParameter.primitiveMultiplier) {\r\n                    case PrimitiveBufferMultiplier.Single: return lPrimitiveByteCount;\r\n                    case PrimitiveBufferMultiplier.Vector2: return lPrimitiveByteCount * 2;\r\n                    case PrimitiveBufferMultiplier.Vector3: return lPrimitiveByteCount * 3;\r\n                    case PrimitiveBufferMultiplier.Vector4: return lPrimitiveByteCount * 4;\r\n                    case PrimitiveBufferMultiplier.Matrix22: return lPrimitiveByteCount * 2 * 2;\r\n                    case PrimitiveBufferMultiplier.Matrix23: return lPrimitiveByteCount * 2 * 3;\r\n                    case PrimitiveBufferMultiplier.Matrix24: return lPrimitiveByteCount * 2 * 4;\r\n                    case PrimitiveBufferMultiplier.Matrix32: return lPrimitiveByteCount * 3 * 2;\r\n                    case PrimitiveBufferMultiplier.Matrix33: return lPrimitiveByteCount * 3 * 3;\r\n                    case PrimitiveBufferMultiplier.Matrix34: return lPrimitiveByteCount * 3 * 4;\r\n                    case PrimitiveBufferMultiplier.Matrix42: return lPrimitiveByteCount * 4 * 2;\r\n                    case PrimitiveBufferMultiplier.Matrix43: return lPrimitiveByteCount * 4 * 3;\r\n                    case PrimitiveBufferMultiplier.Matrix44: return lPrimitiveByteCount * 4 * 4;\r\n                }\r\n            })();\r\n\r\n            // Extend buffer size.\r\n            this.mSize = lParameterSize + lParameter.offset;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get location of path.\r\n     * @param pPathName - Path name. Divided by dots.\r\n     */\r\n    public locationOf(pPathName: Array<string>): BufferLayoutLocation {\r\n        // Only validate name.\r\n        if (pPathName.length !== 0) {\r\n            throw new Exception(`Simple buffer layout has no properties.`, this);\r\n        }\r\n\r\n        return { size: this.fixedSize, offset: 0 };\r\n    }\r\n}\r\n\r\nexport type VertexBufferMemoryLayoutParameterParameter = {\r\n    primitiveMultiplier: PrimitiveBufferMultiplier;\r\n    offset: number;\r\n};\r\n\r\nexport type VertexBufferMemoryLayoutParameter = {\r\n    format: PrimitiveBufferFormat;\r\n    parameter: Array<VertexBufferMemoryLayoutParameterParameter>;\r\n};","import { SamplerType } from '../../../constant/sampler-type.enum';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseMemoryLayout } from '../base-memory-layout';\r\n\r\nexport class SamplerMemoryLayout extends BaseMemoryLayout<SamplerMemoryLayoutInvalidationType> {\r\n    private mSamplerType: SamplerType;\r\n\r\n    /**\r\n     * Sampler type.\r\n     */\r\n    public get samplerType(): SamplerType {\r\n        return this.mSamplerType;\r\n    } set samplerType(pType: SamplerType) {\r\n        this.mSamplerType = pType;\r\n\r\n        this.invalidate(SamplerMemoryLayoutInvalidationType.SamplerType);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pParameter: SamplerMemoryLayoutParameter) {\r\n        super(pDevice);\r\n\r\n        this.mSamplerType = pParameter.samplerType;\r\n    }\r\n}\r\n\r\nexport interface SamplerMemoryLayoutParameter {\r\n    samplerType: SamplerType;\r\n}\r\n\r\nexport enum SamplerMemoryLayoutInvalidationType {\r\n    SamplerType = 'SamplerTypeChange'\r\n}","import { TextureDimension } from '../../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { BaseMemoryLayout } from '../base-memory-layout';\r\n\r\nexport class TextureMemoryLayout extends BaseMemoryLayout<TextureMemoryLayoutInvalidationType> {\r\n    private readonly mDimension: TextureDimension;\r\n    private readonly mFormat: TextureFormat;\r\n    private readonly mMultisampled: boolean;\r\n\r\n    /**\r\n     * Texture dimension.\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this.mDimension;\r\n    }\r\n\r\n    /**\r\n     * Texture format.\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this.mFormat;\r\n    } // TODO: Format-Change\r\n\r\n    /**\r\n     * Texture uses multisample.\r\n     */\r\n    public get multisampled(): boolean {\r\n        return this.mMultisampled;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pParameter - Parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pParameter: TextureMemoryLayoutParameter) {\r\n        super(pDevice);\r\n\r\n        this.mDimension = pParameter.dimension;\r\n        this.mFormat = pParameter.format;\r\n        this.mMultisampled = pParameter.multisampled;\r\n    }\r\n}\r\n\r\nexport interface TextureMemoryLayoutParameter {\r\n    dimension: TextureDimension;\r\n    format: TextureFormat;\r\n    multisampled: boolean;\r\n}\r\n\r\nexport enum TextureMemoryLayoutInvalidationType {\r\n    Format = 'FormatChange',\r\n    Dimension = 'DimensionChange'\r\n}","import { Dictionary } from '@kartoffelgames/core';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { ShaderComputeModule } from '../shader/shader-compute-module';\r\n\r\nexport class ComputePipeline extends GpuObject<GPUComputePipeline, ComputePipelineInvalidationType> implements IGpuObjectNative<GPUComputePipeline> {\r\n    private readonly mParameter: Dictionary<ComputeStage, Record<string, number>>;\r\n    private readonly mShaderModule: ShaderComputeModule;\r\n\r\n    /**\r\n     * Pipeline shader.\r\n     */\r\n    public get module(): ShaderComputeModule {\r\n        return this.mShaderModule;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUComputePipeline {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * Set default data.\r\n     * @param pDevice - Device.\r\n     * @param pShader - Pipeline shader.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pShader: ShaderComputeModule) {\r\n        super(pDevice);\r\n        this.mShaderModule = pShader;\r\n\r\n        // Pipeline constants.\r\n        this.mParameter = new Dictionary<ComputeStage, Record<string, number>>();\r\n\r\n        // Listen for shader changes.\r\n        this.mShaderModule.shader.addInvalidationListener(() => {\r\n            this.invalidate(ComputePipelineInvalidationType.Shader);\r\n        });\r\n        this.mShaderModule.shader.layout.addInvalidationListener(() => {\r\n            this.invalidate(ComputePipelineInvalidationType.Shader);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set optional parameter of pipeline.\r\n     * \r\n     * @param pParameterName - name of parameter.\r\n     * @param pValue - Value.\r\n     * \r\n     * @returns this. \r\n     */\r\n    public setParameter(pParameterName: string, pValue: number): this {\r\n        const lParameterUsage: Set<ComputeStage> | undefined = this.mShaderModule.shader.parameter(pParameterName);\r\n\r\n        // Set parameter for each assigned compute stage.\r\n        for (const lUsage of lParameterUsage) {\r\n            // Init parameters for computestage when not set.\r\n            if (!this.mParameter.has(lUsage)) {\r\n                this.mParameter.set(lUsage, {});\r\n            }\r\n\r\n            // Set value for compute stage.\r\n            this.mParameter.get(lUsage)![pParameterName] = pValue;\r\n        }\r\n\r\n        // Generate pipeline anew.\r\n        this.invalidate(ComputePipelineInvalidationType.Parameter);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu pipeline data layout.\r\n     */\r\n    protected override generateNative(): GPUComputePipeline {\r\n        // Construct basic GPURenderPipelineDescriptor.\r\n        const lPipelineDescriptor: GPUComputePipelineDescriptor = {\r\n            layout: this.mShaderModule.shader.layout.native,\r\n            compute: {\r\n                module: this.mShaderModule.shader.native,\r\n                entryPoint: this.mShaderModule.entryPoint,\r\n                constants: this.mParameter.get(ComputeStage.Compute) ?? {}\r\n            }\r\n        };\r\n\r\n        // Async is none GPU stalling. // TODO: Async create compute pipeline somehow.\r\n        return this.device.gpu.createComputePipeline(lPipelineDescriptor);\r\n    }\r\n}\r\n\r\nexport enum ComputePipelineInvalidationType {\r\n    Shader = 'ShaderChange',\r\n    Config = 'ConfigChange',\r\n    Parameter = 'ParameterChange'\r\n}","import { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { PrimitiveBufferMultiplier } from '../../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { VertexParameterLayoutSetupData } from './vertex-parameter-layout-setup';\r\n\r\nexport class VertexParameterBufferLayoutSetup extends GpuObjectChildSetup<VertexParameterLayoutSetupData, VertexParameterBufferLayoutCallback> {\r\n    /**\r\n     * Add new parameter to vertex layout.\r\n     * \r\n     * @param pName - Parameter name.\r\n     * @param pLocation - Parameter location.\r\n     * @param pFormat - Parameter data format.\r\n     * @param pMultiplier - Data multiplication.\r\n     * @param pAdditionalOffset - Additional offset. Offset 0 aligns right after the last parameter.\r\n     * @returns \r\n     */\r\n    public withParameter(pName: string, pLocation: number, pMultiplier: PrimitiveBufferMultiplier, pAdditionalOffset: number = 0): this {\r\n        // Send layout data.\r\n        this.sendData({\r\n            name: pName,\r\n            location: pLocation,\r\n            multiplier: pMultiplier,\r\n            offset: pAdditionalOffset\r\n        });\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\ntype VertexParameterBufferLayoutCallback = (pLayout: VertexParameterBufferLayoutData) => void;\r\n\r\nexport type VertexParameterBufferLayoutData = {\r\n    name: string;\r\n    location: number;\r\n    multiplier: PrimitiveBufferMultiplier;\r\n    offset: number;\r\n};","import { VertexParameterStepMode } from '../../../constant/vertex-parameter-step-mode.enum';\r\nimport { GpuObjectSetup } from '../../gpu/object/gpu-object-setup';\r\nimport { PrimitiveBufferFormat } from '../../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { VertexParameterBufferLayoutData, VertexParameterBufferLayoutSetup } from './vertex-parameter-buffer-layout-setup';\r\n\r\nexport class VertexParameterLayoutSetup extends GpuObjectSetup<VertexParameterLayoutSetupData> {\r\n    /**\r\n     * Add a new buffer layout to vertex parameter layout.\r\n     * \r\n     * @param pStepMode - Buffer step mode.\r\n     * \r\n     * @returns vertex buffer layout setup \r\n     */\r\n    public buffer(pBufferName: string, pFormat: PrimitiveBufferFormat, pStepMode: VertexParameterStepMode): VertexParameterBufferLayoutSetup {\r\n        // Create buffer.\r\n        const lBuffer: VertexParameterLayoutSetupBufferData = {\r\n            name: pBufferName,\r\n            stepMode: pStepMode,\r\n            format: pFormat,\r\n            parameter: new Array<VertexParameterBufferLayoutData>()\r\n        };\r\n\r\n        // Add buffer to result.\r\n        this.setupData.buffer.push(lBuffer);\r\n\r\n        // Create and return buffer setup.\r\n        return new VertexParameterBufferLayoutSetup(this.setupReferences, (pLayout: VertexParameterBufferLayoutData) => {\r\n            lBuffer.parameter.push(pLayout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fill in default data before the setup starts.\r\n     * \r\n     * @param pDataReference - Setup data.\r\n     */\r\n    protected override fillDefaultData(pDataReference: Partial<VertexParameterLayoutSetupData>): void {\r\n        pDataReference.buffer = new Array<VertexParameterLayoutSetupBufferData>();\r\n    }\r\n}\r\n\r\ntype VertexParameterLayoutSetupBufferData = {\r\n    name: string;\r\n    format: PrimitiveBufferFormat;\r\n    stepMode: VertexParameterStepMode;\r\n    parameter: Array<VertexParameterBufferLayoutData>;\r\n};\r\n\r\nexport type VertexParameterLayoutSetupData = {\r\n    buffer: Array<VertexParameterLayoutSetupBufferData>;\r\n};","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { VertexParameterStepMode } from '../../../constant/vertex-parameter-step-mode.enum';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject, GpuObjectSetupReferences } from '../../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../../gpu/object/interface/i-gpu-object-native';\r\nimport { IGpuObjectSetup } from '../../gpu/object/interface/i-gpu-object-setup';\r\nimport { PrimitiveBufferFormat } from '../../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { VertexBufferMemoryLayout, VertexBufferMemoryLayoutParameterParameter } from '../../memory_layout/buffer/vertex-buffer-memory-layout';\r\nimport { VertexParameter } from './vertex-parameter';\r\nimport { VertexParameterLayoutSetup, VertexParameterLayoutSetupData } from './vertex-parameter-layout-setup';\r\n\r\n/**\r\n * Vertex parameter layout.\r\n */\r\nexport class VertexParameterLayout extends GpuObject<Array<GPUVertexBufferLayout>, '', VertexParameterLayoutSetup> implements IGpuObjectNative<Array<GPUVertexBufferLayout>>, IGpuObjectSetup<VertexParameterLayoutSetup> {\r\n    private readonly mBuffer: Dictionary<string, VertexParameterLayoutBuffer>;\r\n    private mIndexable: boolean;\r\n    private readonly mParameter: Dictionary<string, VertexParameterLayoutBufferParameter>;\r\n\r\n    /**\r\n     * Get all parameter buffer names.\r\n     */\r\n    public get bufferNames(): Array<string> {\r\n        // Setup must be called.\r\n        this.ensureSetup();\r\n\r\n        return [...this.mBuffer.keys()];\r\n    }\r\n\r\n    /**\r\n     * If parameters are indexable.\r\n     * Meanins every parameter is eighter stepmode index or instance.\r\n     * When even one parameter has a stepmode of vertex, any index parameters must be converted. \r\n     */\r\n    public get indexable(): boolean {\r\n        // Setup must be called.\r\n        this.ensureSetup();\r\n\r\n        return this.mIndexable;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): Array<GPUVertexBufferLayout> {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Get all parameter names.\r\n     */\r\n    public get parameterNames(): Array<string> {\r\n        // Setup must be called.\r\n        this.ensureSetup();\r\n\r\n        return [...this.mParameter.keys()];\r\n    }\r\n\r\n    /**\r\n     * Construct.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pLayout - Simple layout of parameter.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        this.mIndexable = false;\r\n        this.mBuffer = new Dictionary<string, VertexParameterLayoutBuffer>();\r\n        this.mParameter = new Dictionary<string, VertexParameterLayoutBufferParameter>();\r\n    }\r\n\r\n    /**\r\n     * Create vertex parameters from layout.\r\n     * @param pIndexData - Index data.\r\n     */\r\n    public create(pIndexData: Array<number>): VertexParameter {\r\n        return new VertexParameter(this.device, this, pIndexData);\r\n    }\r\n\r\n    /**\r\n     * Get vertex parameter layout definition by name.\r\n     * \r\n     * @param pName - Parameter name.\r\n     */\r\n    public parameter(pName: string): Readonly<VertexParameterLayoutBufferParameter> {\r\n        const lLayout: VertexParameterLayoutBufferParameter | undefined = this.mParameter.get(pName);\r\n        if (!lLayout) {\r\n            throw new Exception(`Vertex parameter \"${pName}\" is not defined.`, this);\r\n        }\r\n\r\n        return lLayout;\r\n    }\r\n\r\n    /**\r\n     * Get vertex parameter layout definition by name.\r\n     * \r\n     * @param pBufferName - Parameter name.\r\n     */\r\n    public parameterBuffer(pBufferName: string): Readonly<VertexParameterLayoutBuffer> {\r\n        const lLayout: VertexParameterLayoutBuffer | undefined = this.mBuffer.get(pBufferName);\r\n        if (!lLayout) {\r\n            throw new Exception(`Vertex parameter buffer \"${pBufferName}\" is not defined.`, this);\r\n        }\r\n\r\n        return lLayout;\r\n    }\r\n\r\n    /**\r\n     * Call setup.\r\n     * \r\n     * @param pSetupCallback - Setup callback.\r\n     *\r\n     * @returns — this.\r\n     */\r\n    public override setup(pSetupCallback?: ((pSetup: VertexParameterLayoutSetup) => void)): this {\r\n        return super.setup(pSetupCallback);\r\n    }\r\n\r\n    /**\r\n     * Generate new native object.\r\n     */\r\n    protected override generateNative(): Array<GPUVertexBufferLayout> {\r\n        // Create vertex buffer layout for each parameter.\r\n        const lLayoutList: Array<GPUVertexBufferLayout> = new Array<GPUVertexBufferLayout>();\r\n        const lParameterIndicies: Array<true> = new Array<true>();\r\n        for (const lBuffer of this.mBuffer.values()) {\r\n            // Create parameter layouts.\r\n            const lVertexAttributes: Array<GPUVertexAttribute> = new Array<GPUVertexAttribute>();\r\n            let lCurrentByteLength: number = 0;\r\n            for (const lParameter of lBuffer.parameter) {\r\n                // No double locations.\r\n                if (lParameterIndicies[lParameter.location]) {\r\n                    throw new Exception(`Vertex parameter location \"${lParameter.location}\" can't be defined twice.`, this);\r\n                }\r\n\r\n                // Convert multiplier to value.\r\n                const lByteMultiplier = lParameter.multiplier.split('').reduce<number>((pPreviousNumber: number, pCurrentValue: string) => {\r\n                    const lCurrentNumber: number = parseInt(pCurrentValue);\r\n                    if (isNaN(lCurrentNumber)) {\r\n                        return pPreviousNumber;\r\n                    }\r\n\r\n                    return pPreviousNumber * lCurrentNumber;\r\n                }, 1);\r\n\r\n                // Convert multiplier to float32 format. // TODO: How to support other vertex formats.\r\n                let lFormat: GPUVertexFormat = `${lBuffer.format}x${lByteMultiplier}` as GPUVertexFormat;\r\n                if (lParameter.multiplier === PrimitiveBufferMultiplier.Single) {\r\n                    lFormat = lBuffer.format as GPUVertexFormat;\r\n                }\r\n\r\n                // Create buffer layout.\r\n                lVertexAttributes.push({\r\n                    format: lFormat,\r\n                    offset: lCurrentByteLength + lParameter.offset,\r\n                    shaderLocation: lParameter.location\r\n                });\r\n\r\n                // Increment current byte length.\r\n                lCurrentByteLength += 4 * lByteMultiplier + lParameter.offset; // 32Bit-Number * (single, vector or matrix number count) \r\n\r\n                // Save location index for checkind double\r\n                lParameterIndicies[lParameter.location] = true;\r\n            }\r\n\r\n            // Convert stepmode.\r\n            let lStepmode: GPUVertexStepMode = 'vertex';\r\n            if (lBuffer.stepMode === VertexParameterStepMode.Instance) {\r\n                lStepmode = 'instance';\r\n            }\r\n\r\n            lLayoutList.push({\r\n                stepMode: lStepmode,\r\n                arrayStride: lBuffer.layout.variableSize,\r\n                attributes: lVertexAttributes\r\n            });\r\n        }\r\n\r\n        // Validate continuity of parameter locations.\r\n        if (lParameterIndicies.length !== this.mParameter.size) {\r\n            throw new Exception(`Vertex parameter locations need to be in continious order.`, this);\r\n        }\r\n\r\n        return lLayoutList;\r\n    }\r\n\r\n    /**\r\n     * Setup with setup object.\r\n     * \r\n     * @param pReferences - Used references.\r\n     */\r\n    protected override onSetup(pReferences: VertexParameterLayoutSetupData): void {\r\n        let lCanBeIndexed: boolean = true;\r\n\r\n        // Create each buffer.\r\n        for (const lBufferSetupData of pReferences.buffer) {\r\n            // Add each parameter to parameter list.\r\n            const lParameterList: Array<VertexParameterLayoutBufferParameter> = new Array<VertexParameterLayoutBufferParameter>();\r\n            const lParameterlayoutList: Array<VertexBufferMemoryLayoutParameterParameter> = new Array<VertexBufferMemoryLayoutParameterParameter>();\r\n            for (const lParameterSetupData of lBufferSetupData.parameter) {\r\n                // Create parameter list for the vertex buffer memory layout.\r\n                lParameterlayoutList.push({\r\n                    primitiveMultiplier: lParameterSetupData.multiplier,\r\n                    offset: lParameterSetupData.offset\r\n                });\r\n\r\n                // Create vertex parameter.\r\n                const lParameterLayout: VertexParameterLayoutBufferParameter = {\r\n                    name: lParameterSetupData.name,\r\n                    location: lParameterSetupData.location,\r\n                    multiplier: lParameterSetupData.multiplier,\r\n                    offset: lParameterSetupData.offset,\r\n                    bufferName: lBufferSetupData.name\r\n                };\r\n\r\n                // Add to parameter list and mapping.\r\n                lParameterList.push(lParameterLayout);\r\n                this.mParameter.set(lParameterLayout.name, lParameterLayout);\r\n            }\r\n\r\n            // Create empty buffer.\r\n            const lBufferLayout: VertexParameterLayoutBuffer = {\r\n                name: lBufferSetupData.name,\r\n                stepMode: lBufferSetupData.stepMode,\r\n                format: lBufferSetupData.format,\r\n                parameter: lParameterList,\r\n                layout: new VertexBufferMemoryLayout(this.device, {\r\n                    format: lBufferSetupData.format,\r\n                    parameter: lParameterlayoutList\r\n                })\r\n            };\r\n\r\n            this.mBuffer.set(lBufferLayout.name, lBufferLayout);\r\n\r\n            // When one buffer is not indexable than no buffer is it.\r\n            if (lBufferLayout.stepMode === VertexParameterStepMode.Vertex) {\r\n                lCanBeIndexed = false;\r\n            }\r\n        }\r\n\r\n        this.mIndexable = lCanBeIndexed;\r\n    }\r\n\r\n    /**\r\n     * Create setup object. Return null to skip any setups.\r\n     * \r\n     * @param pReferences - Setup references.\r\n     * \r\n     * @returns created setup. \r\n     */\r\n    protected override onSetupObjectCreate(pReferences: GpuObjectSetupReferences<VertexParameterLayoutSetupData>): VertexParameterLayoutSetup {\r\n        return new VertexParameterLayoutSetup(pReferences);\r\n    }\r\n}\r\n\r\nexport type VertexParameterLayoutBuffer = {\r\n    name: string;\r\n    stepMode: VertexParameterStepMode;\r\n    format: PrimitiveBufferFormat;\r\n    layout: VertexBufferMemoryLayout;\r\n    parameter: Array<VertexParameterLayoutBufferParameter>;\r\n};\r\n\r\nexport type VertexParameterLayoutBufferParameter = {\r\n    name: string;\r\n    location: number;\r\n    multiplier: PrimitiveBufferMultiplier;\r\n    offset: number;\r\n    bufferName: string;\r\n};","import { Dictionary, Exception, TypedArray } from '@kartoffelgames/core';\r\nimport { BufferUsage } from '../../../constant/buffer-usage.enum';\r\nimport { VertexParameterStepMode } from '../../../constant/vertex-parameter-step-mode.enum';\r\nimport { GpuBuffer } from '../../buffer/gpu-buffer';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject } from '../../gpu/object/gpu-object';\r\nimport { ArrayBufferMemoryLayout } from '../../memory_layout/buffer/array-buffer-memory-layout';\r\nimport { PrimitiveBufferFormat } from '../../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { PrimitiveBufferMemoryLayout } from '../../memory_layout/buffer/primitive-buffer-memory-layout';\r\nimport { VertexParameterLayout, VertexParameterLayoutBuffer } from './vertex-parameter-layout';\r\n\r\nexport class VertexParameter extends GpuObject<null, VertexParameterInvalidationType> {\r\n    private readonly mData: Dictionary<string, GpuBuffer<TypedArray>>;\r\n    private readonly mIndexBuffer: GpuBuffer<Uint32Array> | null;\r\n    private readonly mIndices: Array<number>;\r\n    private readonly mLayout: VertexParameterLayout;\r\n\r\n    /**\r\n     * Get index buffer.\r\n     */\r\n    public get indexBuffer(): GpuBuffer<Uint32Array> | null {\r\n        return this.mIndexBuffer;\r\n    }\r\n\r\n    /**\r\n     * Get parameter layout.\r\n     */\r\n    public get layout(): VertexParameterLayout {\r\n        return this.mLayout;\r\n    }\r\n\r\n    /**\r\n     * Vertex count.\r\n     */\r\n    public get vertexCount(): number {\r\n        return this.mIndices.length;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device reference.\r\n     * @param pVertexParameterLayout - Parameter layout.\r\n     * @param pIndices - Index buffer data.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pVertexParameterLayout: VertexParameterLayout, pIndices: Array<number>) {\r\n        super(pDevice);\r\n\r\n        // Set vertex parameter layout.\r\n        this.mLayout = pVertexParameterLayout;\r\n        this.mData = new Dictionary<string, GpuBuffer<TypedArray>>();\r\n\r\n        // Invalidate on layout change.\r\n        this.mLayout.addInvalidationListener(() => {\r\n            this.invalidate(VertexParameterInvalidationType.Data);\r\n        });\r\n\r\n        // Create index layout.\r\n        const lIndexLayout: PrimitiveBufferMemoryLayout = new PrimitiveBufferMemoryLayout(this.device, {\r\n            primitiveFormat: PrimitiveBufferFormat.Uint32,\r\n            primitiveMultiplier: PrimitiveBufferMultiplier.Single,\r\n        });\r\n\r\n        // Create index buffer layout.\r\n        const lIndexBufferLayout: ArrayBufferMemoryLayout = new ArrayBufferMemoryLayout(this.device, {\r\n            arraySize: pIndices.length,\r\n            innerType: lIndexLayout\r\n        });\r\n\r\n        // Create index buffer.\r\n        this.mIndexBuffer = null;\r\n        if (this.mLayout.indexable) {\r\n            this.mIndexBuffer = new GpuBuffer<Uint32Array>(pDevice, lIndexBufferLayout, PrimitiveBufferFormat.Uint32).initialData(() => {\r\n                return new Uint32Array(pIndices);\r\n            }).extendUsage(BufferUsage.Index);\r\n        }\r\n\r\n        // Save index information.\r\n        this.mIndices = pIndices;\r\n    }\r\n\r\n    /**\r\n     * Get parameter buffer.\r\n     * @param pName - Parameter name.\r\n     */\r\n    public get(pName: string): GpuBuffer<TypedArray> {\r\n        // Validate.\r\n        if (!this.mData.has(pName)) {\r\n            throw new Exception(`Vertex parameter buffer for \"${pName}\" not set.`, this);\r\n        }\r\n\r\n        return this.mData.get(pName)!;\r\n    }\r\n\r\n    /**\r\n     * Set parameter data.\r\n     * @param pName - parameter buffer name.\r\n     * @param pData - Parameter data.\r\n     */\r\n    public set(pBufferName: string, pData: Array<number>): GpuBuffer<TypedArray> {\r\n        const lParameterLayout: VertexParameterLayoutBuffer = this.mLayout.parameterBuffer(pBufferName);\r\n\r\n        // When parameter is indexed but vertex parameter are not indexed, extend data. Based on index data.\r\n        let lData: Array<number> = pData;\r\n        if (!this.mLayout.indexable && lParameterLayout.stepMode === VertexParameterStepMode.Index) {\r\n            // Calculate how many items represent one parameter.\r\n            const lStepCount: number = lParameterLayout.layout.variableSize / lParameterLayout.layout.formatByteCount;\r\n\r\n            // Dublicate dependent on index information.\r\n            lData = new Array<number>();\r\n            for (const lIndex of this.mIndices) {\r\n                const lDataStart: number = lIndex * lStepCount;\r\n                const lDataEnd: number = lDataStart + lStepCount;\r\n\r\n                // Copy vertex parameter data.\r\n                lData.push(...pData.slice(lDataStart, lDataEnd));\r\n            }\r\n        }\r\n\r\n        // Calculate vertex parameter count.\r\n        const lVertexParameterItemCount: number = (lData.length * lParameterLayout.layout.formatByteCount) / (lParameterLayout.layout.variableSize);\r\n\r\n        // Load typed array from layout format.\r\n        const lParameterBuffer: GpuBuffer<TypedArray> = (() => {\r\n            switch (lParameterLayout.format) { // TODO. Support all 8 16 and 32 formats. \r\n                case PrimitiveBufferFormat.Float32: {\r\n                    return new GpuBuffer(this.device, lParameterLayout.layout, PrimitiveBufferFormat.Float32, lVertexParameterItemCount).initialData(() => {\r\n                        return new Float32Array(lData);\r\n                    });\r\n                }\r\n                case PrimitiveBufferFormat.Sint32: {\r\n                    return new GpuBuffer(this.device, lParameterLayout.layout, PrimitiveBufferFormat.Sint32, lVertexParameterItemCount).initialData(() => {\r\n                        return new Int32Array(lData);\r\n                    });\r\n                }\r\n                case PrimitiveBufferFormat.Uint32: {\r\n                    return new GpuBuffer(this.device, lParameterLayout.layout, PrimitiveBufferFormat.Uint32, lVertexParameterItemCount).initialData(() => {\r\n                        return new Uint32Array(lData);\r\n                    });\r\n                }\r\n                default: {\r\n                    throw new Exception(`Format \"${lParameterLayout.format}\" not supported for vertex buffer.`, this);\r\n                }\r\n            }\r\n        })();\r\n\r\n        // Extend buffer to be a vertex buffer.\r\n        lParameterBuffer.extendUsage(BufferUsage.Vertex);\r\n\r\n        // Save gpu buffer in correct index.\r\n        this.mData.set(pBufferName, lParameterBuffer);\r\n\r\n        // Invalidate on data set.\r\n        this.invalidate(VertexParameterInvalidationType.Data);\r\n\r\n        return lParameterBuffer;\r\n    }\r\n\r\n    // TODO: Add own buffer. Rename current set() to createBuffer or something.\r\n}\r\n\r\nexport enum VertexParameterInvalidationType {\r\n    Data = 'DataChange',\r\n    Layout = 'LayoutChange'\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { TextureOperation } from '../../../constant/texture-operation.enum';\r\nimport { GpuObjectSetupReferences } from '../../gpu/object/gpu-object';\r\nimport { GpuObjectSetup } from '../../gpu/object/gpu-object-setup';\r\nimport { CanvasTexture } from '../../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../../texture/frame-buffer-texture';\r\nimport { RenderTargetTextureSetup } from './render-targets-texture-setup';\r\n\r\nexport class RenderTargetsSetup extends GpuObjectSetup<RenderTargetSetupData> {\r\n    /**\r\n     * Constructor\r\n     * \r\n     * @param pSetupReference -Setup references.\r\n     */\r\n    public constructor(pSetupReference: GpuObjectSetupReferences<RenderTargetSetupData>) {\r\n        super(pSetupReference);\r\n    }\r\n\r\n    /**\r\n     * Add color target.\r\n     * \r\n     * @param pName - Color target name.\r\n     * @param pLocationIndex - Target location index. \r\n     * @param pKeepOnEnd - Keep information after render pass end.\r\n     * @param pClearValue - Clear value on render pass start. Omit to never clear.\r\n     */\r\n    public addColor(pName: string, pLocationIndex: number, pKeepOnEnd: boolean = true, pClearValue?: { r: number; g: number; b: number; a: number; }): RenderTargetTextureSetup {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Convert render attachment to a location mapping. \r\n        const lTarget: RenderTargetsColorTargetSetupData = {\r\n            name: pName,\r\n            index: pLocationIndex,\r\n            clearValue: pClearValue ?? null,\r\n            storeOperation: (pKeepOnEnd) ? TextureOperation.Keep : TextureOperation.Clear,\r\n            texture: null\r\n        };\r\n\r\n        // Add to color attachment list.\r\n        this.setupData.colorTargets.push(lTarget);\r\n\r\n        // Return texture setup. Set texture on texture resolve.\r\n        return new RenderTargetTextureSetup(this.setupReferences, (pTexture: FrameBufferTexture | CanvasTexture) => {\r\n            lTarget.texture = pTexture;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add depth and stencil target. Actual usage of depth and stencil is the used texture format.\r\n     * \r\n     * @param pDepthKeepOnEnd - Keep information after render pass end.\r\n     * @param pDepthClearValue - Clear value on render pass start. Omit to never clear.\r\n     * @param pStencilKeepOnEnd - Keep information after render pass end.\r\n     * @param pStencilClearValue - Clear value on render pass start. Omit to never clear.\r\n     */\r\n    public addDepthStencil(pDepthKeepOnEnd: boolean | null = null, pDepthClearValue: number | null = null, pStencilKeepOnEnd: boolean | null = null, pStencilClearValue: number | null = null): RenderTargetTextureSetup {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        this.setupData.depthStencil = {\r\n            texture: null\r\n        };\r\n\r\n        // Setup depth when values where set.\r\n        if (pDepthKeepOnEnd !== null || pDepthClearValue !== null) {\r\n            this.setupData.depthStencil.depth = {\r\n                clearValue: pDepthClearValue ?? null,\r\n                storeOperation: (pDepthKeepOnEnd) ? TextureOperation.Keep : TextureOperation.Clear,\r\n            };\r\n        }\r\n\r\n        // Setup stencil when values where set.\r\n        if (pStencilKeepOnEnd !== null || pStencilClearValue !== null) {\r\n            this.setupData.depthStencil.stencil = {\r\n                clearValue: pStencilClearValue ?? null,\r\n                storeOperation: (pStencilKeepOnEnd) ? TextureOperation.Keep : TextureOperation.Clear,\r\n            };\r\n        }\r\n\r\n        // Return texture setup. Set texture on texture resolve.\r\n        return new RenderTargetTextureSetup(this.setupReferences, (pTexture: FrameBufferTexture | CanvasTexture) => {\r\n            // Restrict used texture type to a frame buffer.\r\n            if (pTexture instanceof CanvasTexture) {\r\n                throw new Exception(`Can't use a canvas texture as depth or stencil texture.`, this);\r\n            }\r\n\r\n            this.setupData.depthStencil!.texture = pTexture;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fill in default data before the setup starts.\r\n     * \r\n     * @param pDataReference - Setup data reference.\r\n     */\r\n    protected override fillDefaultData(pDataReference: RenderTargetSetupData): void {\r\n        pDataReference.colorTargets = new Array<RenderTargetsColorTargetSetupData>();\r\n    }\r\n}\r\n\r\ntype RenderTargetsDepthStencilTextureSetupData = {\r\n    texture: FrameBufferTexture | null;\r\n    depth?: {\r\n        clearValue: number | null;\r\n        storeOperation: TextureOperation;\r\n    };\r\n    stencil?: {\r\n        clearValue: number | null;\r\n        storeOperation: TextureOperation;\r\n    };\r\n};\r\n\r\ntype RenderTargetsColorTargetSetupData = {\r\n    name: string;\r\n    index: number;\r\n    clearValue: { r: number; g: number; b: number; a: number; } | null;\r\n    storeOperation: TextureOperation;\r\n    texture: FrameBufferTexture | CanvasTexture | null;\r\n};\r\n\r\nexport interface RenderTargetSetupData {\r\n    colorTargets: Array<RenderTargetsColorTargetSetupData>;\r\n    depthStencil?: RenderTargetsDepthStencilTextureSetupData;\r\n}\r\n","import { TextureDimension } from '../../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../../constant/texture-format.enum';\r\nimport { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { TextureMemoryLayout } from '../../memory_layout/texture/texture-memory-layout';\r\nimport { CanvasTexture } from '../../texture/canvas-texture';\r\nimport { FrameBufferTexture } from '../../texture/frame-buffer-texture';\r\nimport { RenderTargetSetupData } from './render-targets-setup';\r\n\r\nexport class RenderTargetTextureSetup extends GpuObjectChildSetup<RenderTargetSetupData, RenderTargetTextureCallback> {\r\n    /**\r\n     * Create new color render target.\r\n     */\r\n    public new(pFormat: TextureFormat): void {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        const lMemoryLayout: TextureMemoryLayout = new TextureMemoryLayout(this.device, {\r\n            dimension: TextureDimension.TwoDimension,\r\n            format: pFormat, // TODO: Validate with format validator. // TODO: Add format preferences/restrictions to texture setup.\r\n            multisampled: false // Should be set in render target generation.\r\n        });\r\n\r\n        // Callback texture.\r\n        this.sendData(new FrameBufferTexture(this.device, lMemoryLayout));\r\n    }\r\n\r\n    /**\r\n     * Use a existing texture.\r\n     * \r\n     * @param pTexture - Existing texture.\r\n     */\r\n    public use(pTexture: FrameBufferTexture | CanvasTexture): void {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Callback texture.\r\n        this.sendData(pTexture);\r\n    }\r\n}\r\n\r\ntype RenderTargetTextureCallback = (pTexture: FrameBufferTexture | CanvasTexture) => void;","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { TextureAspect } from '../../../constant/texture-aspect.enum';\r\nimport { TextureOperation } from '../../../constant/texture-operation.enum';\r\nimport { TextureUsage } from '../../../constant/texture-usage.enum';\r\nimport { GpuDevice } from '../../gpu/gpu-device';\r\nimport { GpuObject, GpuObjectSetupReferences } from '../../gpu/object/gpu-object';\r\nimport { GpuObjectInvalidationReasons } from '../../gpu/object/gpu-object-invalidation-reasons';\r\nimport { IGpuObjectNative } from '../../gpu/object/interface/i-gpu-object-native';\r\nimport { IGpuObjectSetup } from '../../gpu/object/interface/i-gpu-object-setup';\r\nimport { CanvasTexture, CanvasTextureInvalidationType } from '../../texture/canvas-texture';\r\nimport { FrameBufferTexture, FrameBufferTextureInvalidationType } from '../../texture/frame-buffer-texture';\r\nimport { TextureFormatCapability } from '../../texture/texture-format-capabilities';\r\nimport { RenderTargetSetupData, RenderTargetsSetup } from './render-targets-setup';\r\n\r\n/**\r\n * Group of textures with the same size and multisample level.\r\n */\r\nexport class RenderTargets extends GpuObject<GPURenderPassDescriptor, RenderTargetsInvalidationType, RenderTargetsSetup> implements IGpuObjectSetup<RenderTargetsSetup>, IGpuObjectNative<GPURenderPassDescriptor> {\r\n    private readonly mColorTextures: Dictionary<string, RenderTargetsColorTarget>; // TODO: Maybe use a ordered array for that.\r\n    private mDepthStencilTexture: RenderTargetsDepthStencilTexture | null;\r\n    private readonly mSize: TextureSize;\r\n\r\n    /**\r\n     * Color attachment textures.\r\n     */\r\n    public get colorTextures(): Array<FrameBufferTexture | CanvasTexture> {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        // Create color attachment list in order.\r\n        const lColorAttachmentList: Array<FrameBufferTexture | CanvasTexture> = new Array<FrameBufferTexture | CanvasTexture>();\r\n        for (const lColorAttachment of this.mColorTextures.values()) {\r\n            lColorAttachmentList[lColorAttachment.index] = lColorAttachment.texture.target;\r\n        }\r\n\r\n        return lColorAttachmentList;\r\n    }\r\n\r\n    /**\r\n     * Depth attachment texture.\r\n     */\r\n    public get depthTexture(): FrameBufferTexture | null {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        // No depth texture setup.\r\n        if (!this.mDepthStencilTexture || !this.mDepthStencilTexture.depth) {\r\n            return null;\r\n        }\r\n\r\n        return this.mDepthStencilTexture.target;\r\n    }\r\n\r\n    /**\r\n     * Render target height.\r\n     */\r\n    public get height(): number {\r\n        return this.mSize.height;\r\n    }\r\n\r\n    /**\r\n     * Render target multisample level.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return this.mSize.multisampleLevel;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPURenderPassDescriptor {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Stencil attachment texture.\r\n     */\r\n    public get stencilTexture(): FrameBufferTexture | null {\r\n        // Ensure setup was called.\r\n        this.ensureSetup();\r\n\r\n        return this.mDepthStencilTexture?.stencil ? this.mDepthStencilTexture.target : null;\r\n    }\r\n\r\n    /**\r\n     * Render target height.\r\n     */\r\n    public get width(): number {\r\n        return this.mSize.width;\r\n    }\r\n\r\n    /**\r\n     * Constuctor.\r\n     * @param pDevice - Gpu device reference.\r\n     */\r\n    public constructor(pDevice: GpuDevice) {\r\n        super(pDevice);\r\n\r\n        // Set \"fixed\" \r\n        this.mSize = { width: 1, height: 1, multisampleLevel: 1 };\r\n\r\n        // Setup initial data.\r\n        this.mDepthStencilTexture = null;\r\n        this.mColorTextures = new Dictionary<string, RenderTargetsColorTarget>();\r\n    }\r\n\r\n    /**\r\n     * Resize all render targets.\r\n     * \r\n     * @param pWidth - New texture width.\r\n     * @param pHeight - New texture height.\r\n     * @param pMultisampleLevel - New texture multisample level.\r\n     *  \r\n     * @returns this. \r\n     */\r\n    public resize(pHeight: number, pWidth: number, pMultisampleLevel: number | null = null): this {\r\n        // Set 2D size dimensions\r\n        this.mSize.width = pWidth;\r\n        this.mSize.height = pHeight;\r\n\r\n        // Optional multisample level.\r\n        if (pMultisampleLevel !== null) {\r\n            if (pMultisampleLevel !== 1 && pMultisampleLevel % 4 !== 0) {\r\n                throw new Exception(`Only multisample level 1 or 4 is supported.`, this);\r\n            }\r\n\r\n            this.mSize.multisampleLevel = pMultisampleLevel;\r\n        }\r\n\r\n        // Apply resize for all textures.\r\n        this.applyResize();\r\n\r\n        // Invalidation triggers through each texture.\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Call setup.\r\n     * Exposes internal setup.\r\n     * \r\n     * @param pSetupCallback - Setup callback. \r\n     * \r\n     * @returns this. \r\n     */\r\n    public override setup(pSetupCallback?: ((pSetup: RenderTargetsSetup) => void) | undefined): this {\r\n        return super.setup(pSetupCallback);\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu bind data group.\r\n     */\r\n    protected override generateNative(): GPURenderPassDescriptor {\r\n        // Invalidate bc. descriptor is rebuilding.\r\n        this.invalidate(RenderTargetsInvalidationType.DescriptorRebuild);\r\n\r\n        // Create color attachment list in order.\r\n        const lColorAttachmentList: Array<RenderTargetsColorTarget> = new Array<RenderTargetsColorTarget>();\r\n        for (const lColorAttachment of this.mColorTextures.values()) {\r\n            lColorAttachmentList[lColorAttachment.index] = lColorAttachment;\r\n        }\r\n\r\n        // Create color attachments.\r\n        const lColorAttachments: Array<GPURenderPassColorAttachment> = new Array<GPURenderPassColorAttachment>();\r\n        for (const lColorAttachment of lColorAttachmentList) {\r\n            // Convert Texture operation to load operations.\r\n            const lStoreOperation: GPUStoreOp = lColorAttachment.storeOperation === TextureOperation.Keep ? 'store' : 'discard';\r\n\r\n            // Create basic color attachment.\r\n            const lPassColorAttachment: GPURenderPassColorAttachment = {\r\n                view: lColorAttachment.texture!.target.native,\r\n                storeOp: lStoreOperation,\r\n                loadOp: 'clear' // Placeholder\r\n            };\r\n\r\n            // Set clear value \r\n            if (lColorAttachment.clearValue !== null) {\r\n                lPassColorAttachment.clearValue = lColorAttachment.clearValue;\r\n                lPassColorAttachment.loadOp = 'clear';\r\n            } else {\r\n                lPassColorAttachment.loadOp = 'load';\r\n            }\r\n\r\n            // Resolve optional resolve attachment but only when texture uses multisample.\r\n            if (lColorAttachment.texture!.resolve) {\r\n                lPassColorAttachment.resolveTarget = lColorAttachment.texture!.resolve.native;\r\n            }\r\n\r\n            lColorAttachments.push(lPassColorAttachment satisfies GPURenderPassColorAttachment);\r\n        }\r\n\r\n        // Create descriptor with color attachments.\r\n        const lDescriptor: GPURenderPassDescriptor = {\r\n            colorAttachments: lColorAttachments\r\n        };\r\n\r\n        // Set optional depth attachment.\r\n        if (this.mDepthStencilTexture) {\r\n            const lDepthStencilTexture: FrameBufferTexture = this.mDepthStencilTexture.target;\r\n\r\n            // Add texture view for depth.\r\n            lDescriptor.depthStencilAttachment = {\r\n                view: lDepthStencilTexture.native,\r\n            };\r\n\r\n            // Add depth values when depth formats are used.\r\n            if (this.mDepthStencilTexture.depth) {\r\n                // Set clear value of depth texture.\r\n                if (this.mDepthStencilTexture.depth.clearValue !== null) {\r\n                    lDescriptor.depthStencilAttachment.depthClearValue = this.mDepthStencilTexture.depth.clearValue;\r\n                    lDescriptor.depthStencilAttachment.depthLoadOp = 'clear';\r\n                } else {\r\n                    lDescriptor.depthStencilAttachment.depthLoadOp = 'load';\r\n                }\r\n\r\n                // Convert Texture operation to load operations.\r\n                lDescriptor.depthStencilAttachment.depthStoreOp = this.mDepthStencilTexture.depth.storeOperation === TextureOperation.Keep ? 'store' : 'discard';\r\n            }\r\n\r\n            // Add stencil values when stencil formats are used.\r\n            if (this.mDepthStencilTexture.stencil) {\r\n                // Set clear value of stencil texture.\r\n                if (this.mDepthStencilTexture.stencil.clearValue !== null) {\r\n                    lDescriptor.depthStencilAttachment.stencilClearValue = this.mDepthStencilTexture.stencil.clearValue;\r\n                    lDescriptor.depthStencilAttachment.stencilLoadOp = 'clear';\r\n                } else {\r\n                    lDescriptor.depthStencilAttachment.stencilLoadOp = 'load';\r\n                }\r\n\r\n                // Convert Texture operation to load operations.\r\n                lDescriptor.depthStencilAttachment.stencilStoreOp = this.mDepthStencilTexture.stencil.storeOperation === TextureOperation.Keep ? 'store' : 'discard';\r\n            }\r\n        }\r\n\r\n        return lDescriptor;\r\n    }\r\n\r\n    /**\r\n     * Setup object based on setup data.\r\n     * \r\n     * @param pReferenceData - Referenced setup data.\r\n     */\r\n    protected override onSetup(pReferenceData: RenderTargetSetupData): void {\r\n        // Setup depth stencil targets.\r\n        if (pReferenceData.depthStencil) {\r\n            // Validate existance of depth stencil texture.\r\n            if (!pReferenceData.depthStencil.texture) {\r\n                throw new Exception(`Depth/ stencil attachment defined but no texture was assigned.`, this);\r\n            }\r\n\r\n            // Save setup texture.\r\n            this.mDepthStencilTexture = {\r\n                target: pReferenceData.depthStencil.texture\r\n            };\r\n\r\n            // Add render attachment texture usage to depth stencil texture.\r\n            pReferenceData.depthStencil.texture.extendUsage(TextureUsage.RenderAttachment);\r\n\r\n            // Passthrough depth stencil texture changes.\r\n            this.setTextureInvalidationListener(pReferenceData.depthStencil.texture);\r\n\r\n            // Read capability of used depth stencil texture format.\r\n            const lFormatCapability: TextureFormatCapability = this.device.formatValidator.capabilityOf(pReferenceData.depthStencil.texture.layout.format);\r\n\r\n            // Setup depth texture.\r\n            if (pReferenceData.depthStencil.depth) {\r\n                // Validate if depth texture\r\n                if (!lFormatCapability.aspects.has(TextureAspect.Depth)) {\r\n                    throw new Exception('Used texture for the depth texture attachment must have a depth aspect. ', this);\r\n                }\r\n\r\n                this.mDepthStencilTexture.depth = {\r\n                    clearValue: pReferenceData.depthStencil.depth.clearValue,\r\n                    storeOperation: pReferenceData.depthStencil.depth.storeOperation\r\n                };\r\n            }\r\n\r\n            // Setup stencil texture.\r\n            if (pReferenceData.depthStencil.stencil) {\r\n                // Validate if depth texture\r\n                if (!lFormatCapability.aspects.has(TextureAspect.Stencil)) {\r\n                    throw new Exception('Used texture for the stencil texture attachment must have a depth aspect. ', this);\r\n                }\r\n\r\n                this.mDepthStencilTexture.stencil = {\r\n                    clearValue: pReferenceData.depthStencil.stencil.clearValue,\r\n                    storeOperation: pReferenceData.depthStencil.stencil.storeOperation\r\n                };\r\n            }\r\n        }\r\n\r\n        // Setup color targets.\r\n        const lAttachmentLocations: Array<boolean> = new Array<boolean>();\r\n        for (const lAttachment of pReferenceData.colorTargets.values()) {\r\n            // Validate existance of color texture.\r\n            if (!lAttachment.texture) {\r\n                throw new Exception(`Color attachment \"${lAttachment.name}\" defined but no texture was assigned.`, this);\r\n            }\r\n\r\n            // No double names.\r\n            if (this.mColorTextures.has(lAttachment.name)) {\r\n                throw new Exception(`Color attachment name \"${lAttachment.name}\" can only be defined once.`, this);\r\n            }\r\n\r\n            // No double location indices.\r\n            if (lAttachmentLocations[lAttachment.index] === true) {\r\n                throw new Exception(`Color attachment location index \"${lAttachment.index}\" can only be defined once.`, this);\r\n            }\r\n\r\n            // Passthrough color texture changes. Any change.\r\n            this.setTextureInvalidationListener(lAttachment.texture);\r\n\r\n            // Add render attachment texture usage to color texture.\r\n            lAttachment.texture.extendUsage(TextureUsage.RenderAttachment);\r\n\r\n            // Buffer used location index.\r\n            lAttachmentLocations[lAttachment.index] = true;\r\n\r\n            // Convert setup into storage data.\r\n            this.mColorTextures.set(lAttachment.name, {\r\n                name: lAttachment.name,\r\n                index: lAttachment.index,\r\n                clearValue: lAttachment.clearValue,\r\n                storeOperation: lAttachment.storeOperation,\r\n                texture: {\r\n                    target: lAttachment.texture\r\n                }\r\n            });\r\n        }\r\n\r\n        // Validate attachment list.\r\n        if (lAttachmentLocations.length !== this.mColorTextures.size) {\r\n            throw new Exception(`Color attachment locations must be in order.`, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On setup object creation. Create setup object.\r\n     * \r\n     * @param pReferences - Setup references.\r\n     * \r\n     * @returns build setup object. \r\n     */\r\n    protected override onSetupObjectCreate(pReferences: GpuObjectSetupReferences<RenderTargetSetupData>): RenderTargetsSetup {\r\n        return new RenderTargetsSetup(pReferences);\r\n    }\r\n\r\n    /**\r\n     * Try to update views of pass descriptor.\r\n     * \r\n     * @param pNative - Native pass descriptor.\r\n     * @param pReasons - Update reason.\r\n     * \r\n     * @returns true when native was updated.\r\n     */\r\n    protected override updateNative(pNative: GPURenderPassDescriptor, pReasons: GpuObjectInvalidationReasons<RenderTargetsInvalidationType>): boolean {\r\n        // Native can not be updated on any config changes.\r\n        if (pReasons.has(RenderTargetsInvalidationType.DescriptorRebuild)) {\r\n            return false;\r\n        }\r\n\r\n        // TODO: Make it more performant.\r\n\r\n        // Update only views of descriptor. \r\n        if (pNative.depthStencilAttachment) {\r\n            pNative.depthStencilAttachment.view = this.mDepthStencilTexture!.target.native;\r\n        }\r\n\r\n        // Create color attachment list in order.\r\n        const lColorAttachmentList: Array<RenderTargetsColorTarget> = new Array<RenderTargetsColorTarget>();\r\n        for (const lColorAttachment of this.mColorTextures.values()) {\r\n            lColorAttachmentList[lColorAttachment.index] = lColorAttachment;\r\n        }\r\n\r\n        // Create color attachments.\r\n        for (let lColorAttachmentIndex: number = 0; lColorAttachmentIndex < lColorAttachmentList.length; lColorAttachmentIndex++) {\r\n            // Read current attachment.\r\n            const lCurrentAttachment: GPURenderPassColorAttachment | null = (<Array<GPURenderPassColorAttachment | null>>pNative.colorAttachments)[lColorAttachmentIndex];\r\n            if (lCurrentAttachment === null) {\r\n                continue;\r\n            }\r\n\r\n            // Read setup attachments.\r\n            const lColorAttachment = lColorAttachmentList[lColorAttachmentIndex];\r\n\r\n            // Update view.\r\n            lCurrentAttachment.view = lColorAttachment.texture.target.native;\r\n\r\n            // Update optional resolve target.\r\n            if (lCurrentAttachment.resolveTarget && lColorAttachment.texture.resolve) {\r\n                lCurrentAttachment.resolveTarget = lColorAttachment.texture.resolve.native;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Resize all textures.\r\n     */\r\n    private applyResize(): void {\r\n        // Update buffer texture multisample level.\r\n        for (const lAttachment of this.mColorTextures.values()) {\r\n            // Check for removed or added multisample level.\r\n            if (this.mSize.multisampleLevel === 1) {\r\n                // When the multisample state is removed, use all canvas resolve textures into the actual target and clear the placeholder target buffer.\r\n                if (lAttachment.texture.resolve) {\r\n                    // Destroy buffering textures.\r\n                    lAttachment.texture.target.deconstruct();\r\n\r\n                    // Use resolve as target.\r\n                    lAttachment.texture.target = lAttachment.texture.resolve;\r\n\r\n                    // Update descriptor on texture changes.\r\n                    this.invalidate(RenderTargetsInvalidationType.DescriptorRebuild);\r\n                }\r\n            } else {\r\n                // When the multisample state is added, use all canvas targets as a resolve texture used after rendering and create a new target buffer texture with multisampling. \r\n                if (lAttachment.texture.target instanceof CanvasTexture) {\r\n                    // Move target into resolve.\r\n                    lAttachment.texture.resolve = lAttachment.texture.target;\r\n\r\n                    // Create new texture from canvas texture.\r\n                    lAttachment.texture.target = new FrameBufferTexture(this.device, lAttachment.texture.resolve.layout);\r\n                    lAttachment.texture.target.extendUsage(TextureUsage.RenderAttachment);\r\n\r\n                    // Update descriptor on texture changes.\r\n                    this.invalidate(RenderTargetsInvalidationType.DescriptorRebuild);\r\n                }\r\n            }\r\n\r\n            // Add multisample level only to frame buffers as canvas does not support any mutisampling.\r\n            if (lAttachment.texture.target instanceof FrameBufferTexture) {\r\n                lAttachment.texture.target.multiSampleLevel = this.mSize.multisampleLevel;\r\n            }\r\n        }\r\n\r\n        // Update target texture multisample level.\r\n        if (this.mDepthStencilTexture) {\r\n            this.mDepthStencilTexture.target.multiSampleLevel = this.mSize.multisampleLevel;\r\n        }\r\n\r\n        // Update buffer texture sizes.\r\n        for (const lAttachment of this.mColorTextures.values()) {\r\n            lAttachment.texture.target.height = this.mSize.height;\r\n            lAttachment.texture.target.width = this.mSize.width;\r\n\r\n            if (lAttachment.texture.resolve) {\r\n                lAttachment.texture.resolve.height = this.mSize.height;\r\n                lAttachment.texture.resolve.width = this.mSize.width;\r\n            }\r\n        }\r\n\r\n        // Update target texture sizes.\r\n        if (this.mDepthStencilTexture) {\r\n            this.mDepthStencilTexture.target.height = this.mSize.height;\r\n            this.mDepthStencilTexture.target.width = this.mSize.width;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add all needed texture invalidation listener for passthrow and descriptor invalidation. \r\n     * \r\n     * @param pTexture - Texture. \r\n     */\r\n    private setTextureInvalidationListener(pTexture: FrameBufferTexture | CanvasTexture): void {\r\n        // Frame buffer texture invalidation listener.\r\n        if (pTexture instanceof FrameBufferTexture) {\r\n            // Rebuild descriptor only on view changes.\r\n            pTexture.addInvalidationListener(() => {\r\n                this.invalidate(RenderTargetsInvalidationType.ViewRebuild);\r\n            }, [FrameBufferTextureInvalidationType.ViewRebuild]);\r\n\r\n            // Passthough other invalidations.\r\n            pTexture.addInvalidationListener((pType: FrameBufferTextureInvalidationType) => {\r\n                switch (pType) {\r\n                    case FrameBufferTextureInvalidationType.Resize: {\r\n                        this.invalidate(RenderTargetsInvalidationType.Resize);\r\n                        break;\r\n                    }\r\n                    case FrameBufferTextureInvalidationType.MultisampleChange: {\r\n                        this.invalidate(RenderTargetsInvalidationType.MultisampleChange);\r\n                        break;\r\n                    }\r\n                    case FrameBufferTextureInvalidationType.FormatChange: {\r\n                        this.invalidate(RenderTargetsInvalidationType.TextureFormatChange);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }, [\r\n                FrameBufferTextureInvalidationType.Resize,\r\n                FrameBufferTextureInvalidationType.MultisampleChange,\r\n                FrameBufferTextureInvalidationType.FormatChange\r\n            ]);\r\n\r\n            return;\r\n        }\r\n\r\n        // Frame buffer texture invalidation listener.\r\n        if (pTexture instanceof CanvasTexture) {\r\n            // Rebuild descriptor only on view changes.\r\n            pTexture.addInvalidationListener(() => {\r\n                this.invalidate(RenderTargetsInvalidationType.ViewRebuild);\r\n            }, [CanvasTextureInvalidationType.ViewRebuild]);\r\n\r\n            // Passthough other invalidations.\r\n            pTexture.addInvalidationListener((pType: CanvasTextureInvalidationType) => {\r\n                switch (pType) {\r\n                    case CanvasTextureInvalidationType.Resize: {\r\n                        this.invalidate(RenderTargetsInvalidationType.Resize);\r\n                        break;\r\n                    }\r\n                    case CanvasTextureInvalidationType.FormatChange: {\r\n                        this.invalidate(RenderTargetsInvalidationType.TextureFormatChange);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }, [\r\n                CanvasTextureInvalidationType.Resize,\r\n                CanvasTextureInvalidationType.FormatChange\r\n            ]);\r\n\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\ntype TextureSize = {\r\n    width: number;\r\n    height: number;\r\n    multisampleLevel: number;\r\n};\r\n\r\nexport type RenderTargetsDepthStencilTexture = {\r\n    target: FrameBufferTexture;\r\n    depth?: {\r\n        clearValue: number | null;\r\n        storeOperation: TextureOperation;\r\n    };\r\n    stencil?: {\r\n        clearValue: number | null;\r\n        storeOperation: TextureOperation;\r\n    };\r\n};\r\n\r\ntype RenderTargetsColorTexture = {\r\n    resolve?: CanvasTexture;\r\n    target: FrameBufferTexture | CanvasTexture;\r\n};\r\n\r\nexport type RenderTargetsColorTarget = {\r\n    name: string;\r\n    index: number;\r\n    clearValue: { r: number; g: number; b: number; a: number; } | null;\r\n    storeOperation: TextureOperation;\r\n    texture: RenderTargetsColorTexture;\r\n};\r\n\r\nexport enum RenderTargetsInvalidationType {\r\n    Resize = 'Resize',\r\n    MultisampleChange = 'MultisampleChange',\r\n    TextureFormatChange = 'LayoutChange',\r\n    ViewRebuild = 'ViewRebuild',\r\n    DescriptorRebuild = 'DescriptorRebuild'\r\n}","import { Dictionary } from '@kartoffelgames/core';\r\nimport { CompareFunction } from '../../constant/compare-function.enum';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { PrimitiveCullMode } from '../../constant/primitive-cullmode.enum';\r\nimport { PrimitiveFrontFace } from '../../constant/primitive-front-face.enum';\r\nimport { PrimitiveTopology } from '../../constant/primitive-topology.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { ShaderRenderModule } from '../shader/shader-render-module';\r\nimport { RenderTargets, RenderTargetsInvalidationType } from './target/render-targets';\r\n\r\nexport class VertexFragmentPipeline extends GpuObject<GPURenderPipeline, VertexFragmentPipelineInvalidationType> implements IGpuObjectNative<GPURenderPipeline> {\r\n    private mDepthCompare: CompareFunction;\r\n    private mDepthWriteEnabled: boolean;\r\n    private readonly mParameter: Dictionary<ComputeStage, Record<string, number>>;\r\n    private mPrimitiveCullMode: PrimitiveCullMode;\r\n    private mPrimitiveFrontFace: PrimitiveFrontFace;\r\n    private mPrimitiveTopology: PrimitiveTopology;\r\n    private readonly mRenderTargets: RenderTargets;\r\n    private readonly mShaderModule: ShaderRenderModule;\r\n\r\n\r\n    /**\r\n     * Set depth compare function.\r\n     */\r\n    public get depthCompare(): CompareFunction {\r\n        return this.mDepthCompare;\r\n    } set depthCompare(pValue: CompareFunction) {\r\n        this.mDepthCompare = pValue;\r\n\r\n        // Invalidate pipeline on setting change.\r\n        this.invalidate(VertexFragmentPipelineInvalidationType.Config);\r\n    }\r\n\r\n    /**\r\n     * Pipeline shader.\r\n     */\r\n    public get module(): ShaderRenderModule {\r\n        return this.mShaderModule;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPURenderPipeline {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Defines which polygon orientation will be culled.\r\n     */\r\n    public get primitiveCullMode(): PrimitiveCullMode {\r\n        return this.mPrimitiveCullMode;\r\n    } set primitiveCullMode(pValue: PrimitiveCullMode) {\r\n        this.mPrimitiveCullMode = pValue;\r\n\r\n        // Invalidate pipeline on setting change.\r\n        this.invalidate(VertexFragmentPipelineInvalidationType.Config);\r\n    }\r\n\r\n    /**\r\n     * Defines which polygons are considered front-facing.\r\n     */\r\n    public get primitiveFrontFace(): PrimitiveFrontFace {\r\n        return this.mPrimitiveFrontFace;\r\n    } set primitiveFrontFace(pValue: PrimitiveFrontFace) {\r\n        this.mPrimitiveFrontFace = pValue;\r\n\r\n        // Invalidate pipeline on setting change.\r\n        this.invalidate(VertexFragmentPipelineInvalidationType.Config);\r\n    }\r\n\r\n    /**\r\n     * The type of primitive to be constructed from the vertex inputs.\r\n     */\r\n    public get primitiveTopology(): PrimitiveTopology {\r\n        return this.mPrimitiveTopology;\r\n    } set primitiveTopology(pValue: PrimitiveTopology) {\r\n        this.mPrimitiveTopology = pValue;\r\n\r\n        // Invalidate pipeline on setting change.\r\n        this.invalidate(VertexFragmentPipelineInvalidationType.Config);\r\n    }\r\n\r\n    /**\r\n     * Render targets.\r\n     */\r\n    public get renderTargets(): RenderTargets {\r\n        return this.mRenderTargets;\r\n    }\r\n\r\n    /**\r\n     * Set depth write enabled / disabled.\r\n     */\r\n    public get writeDepth(): boolean {\r\n        return this.mDepthWriteEnabled;\r\n    } set writeDepth(pValue: boolean) {\r\n        this.mDepthWriteEnabled = pValue;\r\n\r\n        // Invalidate pipeline on setting change.\r\n        this.invalidate(VertexFragmentPipelineInvalidationType.Config);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * Set default data.\r\n     * \r\n     * @param pDevice - Device.\r\n     * @param pShaderRenderModule - Pipeline shader.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pShaderRenderModule: ShaderRenderModule, pRenderTargets: RenderTargets) {\r\n        super(pDevice);\r\n\r\n        // Set config objects.\r\n        this.mShaderModule = pShaderRenderModule;\r\n        this.mRenderTargets = pRenderTargets; // TODO: Update pipeline on format change.\r\n\r\n        // Pipeline constants.\r\n        this.mParameter = new Dictionary<ComputeStage, Record<string, number>>();\r\n\r\n        // Listen for shader changes.\r\n        this.mShaderModule.shader.addInvalidationListener(() => {\r\n            this.invalidate(VertexFragmentPipelineInvalidationType.Shader);\r\n        });\r\n        this.mShaderModule.vertexParameter.addInvalidationListener(() => {\r\n            this.invalidate(VertexFragmentPipelineInvalidationType.Shader);\r\n        });\r\n        this.mShaderModule.shader.layout.addInvalidationListener(() => {\r\n            this.invalidate(VertexFragmentPipelineInvalidationType.Shader);\r\n        });\r\n\r\n        // Listen for render target changes.\r\n        this.mRenderTargets.addInvalidationListener(() => {\r\n            this.invalidate(VertexFragmentPipelineInvalidationType.RenderTargets);\r\n        }, [\r\n            RenderTargetsInvalidationType.TextureFormatChange,\r\n            RenderTargetsInvalidationType.Resize,\r\n            RenderTargetsInvalidationType.MultisampleChange\r\n        ]);\r\n\r\n        // Depth default settings.\r\n        this.mDepthCompare = CompareFunction.Less;\r\n        this.mDepthWriteEnabled = true; // TODO: Default based on render target. \r\n\r\n        // Primitive default settings.\r\n        this.mPrimitiveTopology = PrimitiveTopology.TriangleList;\r\n        this.mPrimitiveCullMode = PrimitiveCullMode.Back;\r\n        this.mPrimitiveFrontFace = PrimitiveFrontFace.ClockWise;\r\n    }\r\n\r\n    /**\r\n     * Set optional parameter of pipeline.\r\n     * \r\n     * @param pParameterName - name of parameter.\r\n     * @param pValue - Value.\r\n     * \r\n     * @returns this. \r\n     */\r\n    public setParameter(pParameterName: string, pValue: number): this {\r\n        const lParameterUsage: Set<ComputeStage> | undefined = this.mShaderModule.shader.parameter(pParameterName);\r\n\r\n        // Set parameter for each assigned compute stage.\r\n        for (const lUsage of lParameterUsage) {\r\n            // Init parameters for computestage when not set.\r\n            if (!this.mParameter.has(lUsage)) {\r\n                this.mParameter.set(lUsage, {});\r\n            }\r\n\r\n            // Set value for compute stage.\r\n            this.mParameter.get(lUsage)![pParameterName] = pValue;\r\n        }\r\n\r\n        // Generate pipeline anew.\r\n        this.invalidate(VertexFragmentPipelineInvalidationType.Parameter);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Generate native gpu pipeline data layout.\r\n     */\r\n    protected override generateNative(): GPURenderPipeline {\r\n        // Generate pipeline layout from bind group layouts.\r\n        const lPipelineLayout: GPUPipelineLayout = this.mShaderModule.shader.layout.native;\r\n\r\n        // Construct basic GPURenderPipelineDescriptor.\r\n        const lPipelineDescriptor: GPURenderPipelineDescriptor = {\r\n            layout: lPipelineLayout,\r\n            vertex: {\r\n                module: this.mShaderModule.shader.native,\r\n                entryPoint: this.mShaderModule.vertexEntryPoint,\r\n                buffers: this.mShaderModule.vertexParameter.native,\r\n                constants: this.mParameter.get(ComputeStage.Vertex) ?? {}\r\n            },\r\n            primitive: this.generatePrimitive()\r\n        };\r\n\r\n        // Optional fragment state.\r\n        if (this.module.fragmentEntryPoint) {\r\n            // Generate fragment targets only when fragment state is needed.\r\n            const lFragmentTargetList: Array<GPUColorTargetState> = new Array<GPUColorTargetState>();\r\n            for (const lRenderTarget of this.mRenderTargets.colorTextures) {\r\n                lFragmentTargetList.push({\r\n                    format: lRenderTarget.layout.format as GPUTextureFormat,\r\n                    // blend?: GPUBlendState;   // TODO: GPUBlendState\r\n                    // writeMask?: GPUColorWriteFlags; // TODO: GPUColorWriteFlags\r\n                });\r\n            }\r\n\r\n            lPipelineDescriptor.fragment = {\r\n                module: this.mShaderModule.shader.native,\r\n                entryPoint: this.module.fragmentEntryPoint,\r\n                targets: lFragmentTargetList,\r\n                constants: this.mParameter.get(ComputeStage.Fragment) ?? {}\r\n            };\r\n        }\r\n\r\n        // Setup optional depth attachment.\r\n        if (this.mRenderTargets.depthTexture) {\r\n            lPipelineDescriptor.depthStencil = {\r\n                depthWriteEnabled: this.writeDepth,\r\n                depthCompare: this.depthCompare,\r\n                format: this.mRenderTargets.depthTexture.layout.format as GPUTextureFormat,\r\n            };\r\n        }\r\n\r\n        // TODO: Stencil.\r\n\r\n        // Set multisample count.\r\n        if (this.mRenderTargets.multiSampleLevel > 1) {\r\n            lPipelineDescriptor.multisample = {\r\n                count: this.mRenderTargets.multiSampleLevel\r\n            };\r\n        }\r\n\r\n        // Async is none GPU stalling.\r\n        return this.device.gpu.createRenderPipeline(lPipelineDescriptor); // TODO: Async create render pipeline somehow.\r\n    }\r\n\r\n    /**\r\n     * Primitive settings.\r\n     */\r\n    private generatePrimitive(): GPUPrimitiveState {\r\n        // Convert topology to native. Set strip format for strip topology.\r\n        let lStripIndexFormat: GPUIndexFormat | undefined = undefined;\r\n\r\n        switch (this.primitiveTopology) {\r\n            case PrimitiveTopology.LineStrip:\r\n            case PrimitiveTopology.TriangleStrip: {\r\n                lStripIndexFormat = 'uint32';\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Create primitive state.\r\n        const lPrimitiveState: GPUPrimitiveState = {\r\n            topology: this.primitiveTopology,\r\n            frontFace: this.primitiveFrontFace,\r\n            cullMode: this.primitiveCullMode,\r\n            unclippedDepth: false\r\n        };\r\n\r\n        // Set optional strip format.\r\n        if (lStripIndexFormat) {\r\n            lPrimitiveState.stripIndexFormat = lStripIndexFormat;\r\n        }\r\n\r\n        return lPrimitiveState;\r\n    }\r\n}\r\n\r\nexport enum VertexFragmentPipelineInvalidationType {\r\n    Shader = 'ShaderChange',\r\n    RenderTargets = 'RenderTargetsChange',\r\n    Config = 'ConfigChange',\r\n    Parameter = 'ParameterChange'\r\n}","import { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { ShaderSetupReferenceData } from './shader-setup';\r\n\r\nexport class ShaderComputeEntryPointSetup extends GpuObjectChildSetup<ShaderSetupReferenceData, ComputeSizeCallback> {\r\n    /**\r\n     * Setup compute entry with a static size.\r\n     */\r\n    public size(pX: number, pY: number = 1, pZ: number = 1): void {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Callback size.\r\n        this.sendData(pX, pY, pZ);\r\n    }\r\n}\r\n\r\ntype ComputeSizeCallback = (pX: number, pY: number, pZ: number) => void;","import { GpuObjectChildSetup } from '../../gpu/object/gpu-object-child-setup';\r\nimport { PrimitiveBufferFormat } from '../../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { ShaderSetupReferenceData } from './shader-setup';\r\n\r\nexport class ShaderFragmentEntryPointSetup extends GpuObjectChildSetup<ShaderSetupReferenceData, RenderTargetCallback> {\r\n    /**\r\n     * Setup fragment render target.\r\n     */\r\n    public addRenderTarget(pName: string, pLocationIndex: number, pDataFormat: PrimitiveBufferFormat, pDataMultiplier: PrimitiveBufferMultiplier): this {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        const lRenderTarget: ShaderFragmentEntryPointRenderTargetSetupData = {\r\n            name: pName,\r\n            location: pLocationIndex,\r\n            format: pDataFormat,\r\n            multiplier: pDataMultiplier\r\n        };\r\n\r\n        // Callback size.\r\n        this.sendData(lRenderTarget);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport type ShaderFragmentEntryPointRenderTargetSetupData = {\r\n    name: string;\r\n    location: number;\r\n    format: PrimitiveBufferFormat;\r\n    multiplier: PrimitiveBufferMultiplier;\r\n};\r\n\r\ntype RenderTargetCallback = (pRenderTarget: ShaderFragmentEntryPointRenderTargetSetupData) => void;","import { ComputeStage } from '../../../constant/compute-stage.enum';\r\nimport { BindGroupLayout } from '../../binding/bind-group-layout';\r\nimport { GpuObjectSetup } from '../../gpu/object/gpu-object-setup';\r\nimport { VertexParameterLayout } from '../../pipeline/parameter/vertex-parameter-layout';\r\nimport { VertexParameterLayoutSetup } from '../../pipeline/parameter/vertex-parameter-layout-setup';\r\nimport { ShaderModuleEntryPointFragmentRenderTarget } from '../shader';\r\nimport { ShaderComputeEntryPointSetup } from './shader-compute-entry-point-setup';\r\nimport { ShaderFragmentEntryPointRenderTargetSetupData, ShaderFragmentEntryPointSetup } from './shader-fragment-entry-point-setup';\r\n\r\nexport class ShaderSetup extends GpuObjectSetup<ShaderSetupReferenceData> {\r\n    /**\r\n     * Setup compute entry point.\r\n     * When size is not called, the compute entry point will be setup with a dynamic size.\r\n     * \r\n     * @param pName - Compute entry name.\r\n     */\r\n    public computeEntryPoint(pName: string): ShaderComputeEntryPointSetup {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Create dynamic compute entry point.\r\n        const lEntryPoint: ShaderEntryPointComputeSetupData = {\r\n            name: pName,\r\n            workgroupDimension: null\r\n        };\r\n\r\n        // Append compute entry.\r\n        this.setupData.computeEntrypoints.push(lEntryPoint);\r\n\r\n        // Return compute entry setup object.\r\n        return new ShaderComputeEntryPointSetup(this.setupReferences, (pX: number, pY: number, pZ: number) => {\r\n            lEntryPoint.workgroupDimension = {\r\n                x: pX,\r\n                y: pY,\r\n                z: pZ\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Setup fragment entry point.\r\n     * \r\n     * @param pName - Fragment entry name.\r\n     */\r\n    public fragmentEntryPoint(pName: string): ShaderFragmentEntryPointSetup {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Create empty fragment entry point.\r\n        const lEntryPoint: ShaderEntryPointFragmentSetupData = {\r\n            name: pName,\r\n            renderTargets: new Array<ShaderFragmentEntryPointRenderTargetSetupData>()\r\n        };\r\n\r\n        // Append compute entry.\r\n        this.setupData.fragmentEntrypoints.push(lEntryPoint);\r\n\r\n        // Return fragment entry setup object.\r\n        return new ShaderFragmentEntryPointSetup(this.setupReferences, (pRenderTarget: ShaderModuleEntryPointFragmentRenderTarget) => {\r\n            lEntryPoint.renderTargets.push(pRenderTarget);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add group to layout.\r\n     * \r\n     * @param pIndex - Bind group index.\r\n     * @param pGroup - Group.\r\n     * \r\n     * @returns the same group.\r\n     */\r\n    public group(pIndex: number, pGroup: BindGroupLayout): BindGroupLayout {\r\n        // Register group.\r\n        this.setupData.bindingGroups.push({\r\n            index: pIndex,\r\n            group: pGroup\r\n        });\r\n\r\n        return pGroup;\r\n    }\r\n\r\n    /**\r\n     * Add static pipeline parameters definitions.\r\n     * \r\n     * @param pName- Parameter name.\r\n     * @param pFormat - Parameter format.\r\n     * \r\n     * @returns this. \r\n     */\r\n    public parameter(pName: string, ...pStageUsage: Array<ComputeStage>): this {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Add parameter.\r\n        this.setupData.parameter.push({ name: pName, usage: pStageUsage });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Setup vertex entry point.\r\n     * \r\n     * @param pName - Vertex entry name.\r\n     */\r\n    public vertexEntryPoint(pName: string, pSetupCallback: (pSetup: VertexParameterLayoutSetup) => void): VertexParameterLayout {\r\n        // Lock setup to a setup call.\r\n        this.ensureThatInSetup();\r\n\r\n        // Create and setup vertex parameter.\r\n        const lVertexParameterLayout: VertexParameterLayout = new VertexParameterLayout(this.device)\r\n            .setup(pSetupCallback);\r\n\r\n        // Create empty fragment entry point.\r\n        const lEntryPoint: ShaderEntryPointVertexSetupData = {\r\n            name: pName,\r\n            parameter: lVertexParameterLayout\r\n        };\r\n\r\n        // Append compute entry.\r\n        this.setupData.vertexEntrypoints.push(lEntryPoint);\r\n\r\n        return lVertexParameterLayout;\r\n    }\r\n\r\n    /**\r\n     * Fill in default data before the setup starts.\r\n     *\r\n     * @param pDataReference - Setup data reference.\r\n     */\r\n    protected override fillDefaultData(pDataReference: ShaderSetupReferenceData): void {\r\n        // Entry points.\r\n        pDataReference.computeEntrypoints = new Array<ShaderEntryPointComputeSetupData>();\r\n        pDataReference.fragmentEntrypoints = new Array<ShaderEntryPointFragmentSetupData>();\r\n        pDataReference.vertexEntrypoints = new Array<ShaderEntryPointVertexSetupData>();\r\n\r\n        // Parameter.\r\n        pDataReference.parameter = new Array<{\r\n            name: string;\r\n            usage: Array<ComputeStage>;\r\n        }>();\r\n\r\n        // Bind groups.\r\n        pDataReference.bindingGroups = new Array<{\r\n            index: number;\r\n            group: BindGroupLayout;\r\n        }>();\r\n    }\r\n}\r\n\r\ntype ShaderEntryPointComputeSetupData = {\r\n    name: string;\r\n    workgroupDimension: {\r\n        x: number;\r\n        y: number;\r\n        z: number;\r\n    } | null;\r\n};\r\n\r\ntype ShaderEntryPointVertexSetupData = {\r\n    name: string;\r\n    parameter: VertexParameterLayout;\r\n};\r\n\r\ntype ShaderEntryPointFragmentSetupData = {\r\n    name: string;\r\n    renderTargets: Array<ShaderFragmentEntryPointRenderTargetSetupData>;\r\n};\r\n\r\nexport type ShaderSetupReferenceData = {\r\n    // Entry points.\r\n    computeEntrypoints: Array<ShaderEntryPointComputeSetupData>;\r\n    fragmentEntrypoints: Array<ShaderEntryPointFragmentSetupData>;\r\n    vertexEntrypoints: Array<ShaderEntryPointVertexSetupData>;\r\n\r\n    // Parameter.\r\n    parameter: Array<{\r\n        name: string;\r\n        usage: Array<ComputeStage>;\r\n    }>;\r\n\r\n    // Bind groups.\r\n    bindingGroups: Array<{\r\n        index: number;\r\n        group: BindGroupLayout;\r\n    }>;\r\n};","import { PipelineLayout } from '../binding/pipeline-layout';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { ComputePipeline } from '../pipeline/compute-pipeline';\r\nimport { Shader } from './shader';\r\n\r\nexport class ShaderComputeModule extends GpuObject<null, ShaderComputeModuleInvalidationType> {\r\n    private readonly mEntryPoint: string;\r\n    private readonly mShader: Shader;\r\n    private readonly mSize: [number, number, number];\r\n\r\n    /**\r\n     * Compute entry point.\r\n     */\r\n    public get entryPoint(): string {\r\n        return this.mEntryPoint;\r\n    }\r\n\r\n    /**\r\n     * Shader pipeline layout.\r\n     */\r\n    public get layout(): PipelineLayout {\r\n        return this.mShader.layout;\r\n    }\r\n\r\n    /**\r\n     * Module shader.\r\n     */\r\n    public get shader(): Shader {\r\n        return this.mShader;\r\n    }\r\n\r\n    /**\r\n     * Workgroup size x.\r\n     */\r\n    public get workGroupSizeX(): number {\r\n        return this.mSize[0];\r\n    }\r\n\r\n    /**\r\n     * Workgroup size y.\r\n     */\r\n    public get workGroupSizeY(): number {\r\n        return this.mSize[1];\r\n    }\r\n\r\n    /**\r\n     * Workgroup size z.\r\n     */\r\n    public get workGroupSizeZ(): number {\r\n        return this.mSize[2];\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pShader - Shader.\r\n     * @param pEntryPointName - Compute entry point.\r\n     * @param pSize - Workgroup size.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pShader: Shader, pEntryPointName: string, pSize?: [number, number, number]) {\r\n        super(pDevice);\r\n\r\n        this.mEntryPoint = pEntryPointName;\r\n        this.mShader = pShader;\r\n        this.mSize = pSize ?? [-1, -1, -1];\r\n\r\n        // Update on shader update.\r\n        pShader.addInvalidationListener(() => {\r\n            this.invalidate(ShaderComputeModuleInvalidationType.Shader);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a new compute pipeline.\r\n     * \r\n     * @returns new compute pipeline. \r\n     */\r\n    public create(): ComputePipeline {\r\n        return new ComputePipeline(this.device, this);\r\n    }\r\n}\r\n\r\nexport enum ShaderComputeModuleInvalidationType {\r\n    Shader = 'ShaderChange',\r\n}","import { PipelineLayout } from '../binding/pipeline-layout';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { VertexParameterLayout } from '../pipeline/parameter/vertex-parameter-layout';\r\nimport { RenderTargets } from '../pipeline/target/render-targets';\r\nimport { VertexFragmentPipeline } from '../pipeline/vertex-fragment-pipeline';\r\nimport { Shader } from './shader';\r\n\r\nexport class ShaderRenderModule extends GpuObject<null, ShaderRenderModuleInvalidationType> {\r\n    private readonly mFragmentEntryPoint: string | null;\r\n    private readonly mShader: Shader;\r\n    private readonly mVertexEntryPoint: string;\r\n    private readonly mVertexParameter: VertexParameterLayout;\r\n\r\n    /**\r\n     * Fragment entry point.\r\n     */\r\n    public get fragmentEntryPoint(): string | null {\r\n        return this.mFragmentEntryPoint;\r\n    }\r\n\r\n    /**\r\n     * Shader pipeline layout.\r\n     */\r\n    public get layout(): PipelineLayout {\r\n        return this.mShader.layout;\r\n    }\r\n\r\n    /**\r\n     * Module shader.\r\n     */\r\n    public get shader(): Shader {\r\n        return this.mShader;\r\n    }\r\n\r\n    /**\r\n     * Compute entry point.\r\n     */\r\n    public get vertexEntryPoint(): string {\r\n        return this.mVertexEntryPoint;\r\n    }\r\n\r\n    /**\r\n     * Vertex parameter.\r\n     */\r\n    public get vertexParameter(): VertexParameterLayout {\r\n        return this.mVertexParameter;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pShader - Shader.\r\n     * @param pEntryPointName - Compute entry point.\r\n     * @param pSize - Workgroup size.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pShader: Shader, pVertexEntryPointName: string, pVertexParameter: VertexParameterLayout, pFragmentEntryPointName?: string) {\r\n        super(pDevice);\r\n\r\n        this.mVertexEntryPoint = pVertexEntryPointName;\r\n        this.mVertexParameter = pVertexParameter;\r\n        this.mFragmentEntryPoint = pFragmentEntryPointName ?? null;\r\n        this.mShader = pShader;\r\n\r\n        // Update on shader update.\r\n        pShader.addInvalidationListener(() => {\r\n            this.invalidate(ShaderRenderModuleInvalidationType.Shader);\r\n        });\r\n\r\n        // Update on vertex parameter.\r\n        pVertexParameter.addInvalidationListener(() => {\r\n            this.invalidate(ShaderRenderModuleInvalidationType.VertexParameter);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a new render pipeline for set render targets.\r\n     * \r\n     * @param pRenderTargets - Render targets of pipeline.\r\n     * \r\n     * @returns new render pipeline. \r\n     */\r\n    public create(pRenderTargets: RenderTargets): VertexFragmentPipeline {\r\n        return new VertexFragmentPipeline(this.device, this, pRenderTargets);\r\n    }\r\n}\r\n\r\nexport enum ShaderRenderModuleInvalidationType {\r\n    Shader = 'ShaderChange',\r\n    VertexParameter = 'VertexParameterChange',\r\n}","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { ComputeStage } from '../../constant/compute-stage.enum';\r\nimport { BindGroupLayout } from '../binding/bind-group-layout';\r\nimport { PipelineLayout } from '../binding/pipeline-layout';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject, GpuObjectSetupReferences } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { IGpuObjectSetup } from '../gpu/object/interface/i-gpu-object-setup';\r\nimport { PrimitiveBufferFormat } from '../memory_layout/buffer/enum/primitive-buffer-format.enum';\r\nimport { PrimitiveBufferMultiplier } from '../memory_layout/buffer/enum/primitive-buffer-multiplier.enum';\r\nimport { VertexParameterLayout } from '../pipeline/parameter/vertex-parameter-layout';\r\nimport { ShaderSetup, ShaderSetupReferenceData } from './setup/shader-setup';\r\nimport { ShaderComputeModule } from './shader-compute-module';\r\nimport { ShaderRenderModule } from './shader-render-module';\r\n\r\nexport class Shader extends GpuObject<GPUShaderModule, ShaderInvalidationType, ShaderSetup> implements IGpuObjectNative<GPUShaderModule>, IGpuObjectSetup<ShaderSetup> {\r\n    private readonly mEntryPoints: ShaderModuleEntryPoints;\r\n    private readonly mParameter: Dictionary<string, Set<ComputeStage>>;\r\n    private mPipelineLayout: PipelineLayout | null;\r\n    private readonly mSource: string;\r\n\r\n    /**\r\n     * Shader pipeline layout.\r\n     */\r\n    public get layout(): PipelineLayout {\r\n        // Ensure setup is called.\r\n        this.ensureSetup();\r\n\r\n        return this.mPipelineLayout!;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUShaderModule {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Gpu Device reference.\r\n     * @param pSource - Shader source as wgsl code.\r\n     * @param pLayout - Shader layout information.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pSource: string) {\r\n        super(pDevice);\r\n\r\n        // Create shader information for source.\r\n        this.mSource = pSource;\r\n\r\n        // Init default unset values.\r\n        this.mParameter = new Dictionary<string, Set<ComputeStage>>();\r\n        this.mPipelineLayout = null;\r\n        this.mEntryPoints = {\r\n            compute: new Dictionary<string, ShaderModuleEntryPointCompute>(),\r\n            vertex: new Dictionary<string, ShaderModuleEntryPointVertex>(),\r\n            fragment: new Dictionary<string, ShaderModuleEntryPointFragment>()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a compute module from shader entry point.\r\n     * \r\n     * @param pEntryName - Compute entry name.\r\n     * \r\n     * @returns shader compute module. \r\n     */\r\n    public createComputeModule(pEntryName: string): ShaderComputeModule {\r\n        // Ensure setup is called.\r\n        this.ensureSetup();\r\n\r\n        const lEntryPoint: ShaderModuleEntryPointCompute | undefined = this.mEntryPoints.compute.get(pEntryName);\r\n        if (!lEntryPoint) {\r\n            throw new Exception(`Compute entry point \"${pEntryName}\" does not exists.`, this);\r\n        }\r\n\r\n        // Return shader module without defined workgroup sizes.\r\n        if (!lEntryPoint.static) {\r\n            return new ShaderComputeModule(this.device, this, pEntryName);\r\n        }\r\n\r\n        // Define workgroup sizes.\r\n        return new ShaderComputeModule(this.device, this, pEntryName, [lEntryPoint.workgroupDimension.x ?? 1, lEntryPoint.workgroupDimension.y ?? 1, lEntryPoint.workgroupDimension.z ?? 1]);\r\n    }\r\n\r\n    /**\r\n     * Create a render module from a vertex and fragment entry point.\r\n     * \r\n     * @param pVertexEntryName - Vertex entry point.\r\n     * @param pFragmentEntryName - Optional fragment entry point.\r\n     * \r\n     * @returns shader render module. \r\n     */\r\n    public createRenderModule(pVertexEntryName: string, pFragmentEntryName?: string): ShaderRenderModule {\r\n        // Ensure setup is called.\r\n        this.ensureSetup();\r\n\r\n        const lVertexEntryPoint: ShaderModuleEntryPointVertex | undefined = this.mEntryPoints.vertex.get(pVertexEntryName);\r\n        if (!lVertexEntryPoint) {\r\n            throw new Exception(`Vertex entry point \"${pVertexEntryName}\" does not exists.`, this);\r\n        }\r\n\r\n        // Return shader module without fragment entry.\r\n        if (!pFragmentEntryName) {\r\n            return new ShaderRenderModule(this.device, this, pVertexEntryName, lVertexEntryPoint.parameter);\r\n        }\r\n\r\n        // Validate fragment entry point.\r\n        const lFragmentEntryPoint: ShaderModuleEntryPointFragment | undefined = this.mEntryPoints.fragment.get(pFragmentEntryName);\r\n        if (!lFragmentEntryPoint) {\r\n            throw new Exception(`Fragment entry point \"${pFragmentEntryName}\" does not exists.`, this);\r\n        }\r\n\r\n        return new ShaderRenderModule(this.device, this, pVertexEntryName, lVertexEntryPoint.parameter, pFragmentEntryName);\r\n    }\r\n\r\n    /**\r\n     * Get shader pipeline parameters.\r\n     * \r\n     * @param pParameterName - Parameter name.\r\n     */\r\n    public parameter(pParameterName: string): Set<ComputeStage> {\r\n        // Ensure setup is called.\r\n        this.ensureSetup();\r\n\r\n        // Try to read parameter type.\r\n        const lParameterType: Set<ComputeStage> | undefined = this.mParameter.get(pParameterName);\r\n        if (!lParameterType) {\r\n            throw new Exception(`Shader has parameter \"${pParameterName}\" not defined.`, this);\r\n        }\r\n\r\n        return new Set(lParameterType);\r\n    }\r\n\r\n    /**\r\n     * Setup render targets.\r\n     * Can only be called once and is the only way to create or add target textures.\r\n     * \r\n     * @param pSetup - Setup call.\r\n     * \r\n     * @returns this. \r\n     */\r\n    public override setup(pSetupCallback?: ((pSetup: ShaderSetup) => void) | undefined): this {\r\n        return super.setup(pSetupCallback);\r\n    }\r\n\r\n    /**\r\n     * Generate shader module.\r\n     */\r\n    protected override generateNative(): GPUShaderModule {\r\n        // Read pipeline for compilation hints.\r\n        const lPipelineLayout = this.mPipelineLayout!.native;\r\n\r\n        // Create compilationHints for every entry point\r\n        const lCompilationHints: Array<GPUShaderModuleCompilationHint> = new Array<GPUShaderModuleCompilationHint>();\r\n        for (const lEntryName of [...this.mEntryPoints.vertex.keys(), ...this.mEntryPoints.fragment.keys(), ...this.mEntryPoints.compute.keys()]) {\r\n            lCompilationHints.push({\r\n                entryPoint: lEntryName,\r\n                layout: lPipelineLayout\r\n            });\r\n        }\r\n\r\n        // Create shader module use hints to speed up compilation on safari.\r\n        return this.device.gpu.createShaderModule({\r\n            code: this.mSource,\r\n            compilationHints: lCompilationHints\r\n            // TODO: sourceMap: undefined\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Setup with setup object.\r\n     * \r\n     * @param pReferences - Used references.\r\n     */\r\n    protected override onSetup(pReferences: ShaderSetupReferenceData): void {\r\n        // Setup parameter.\r\n        for (const lParameter of pReferences.parameter) {\r\n            // Dont override parameters.\r\n            if (this.mParameter.has(lParameter.name)) {\r\n                throw new Exception(`Can't add parameter \"${lParameter.name}\" more than once.`, this);\r\n            }\r\n\r\n            // Add parameter.\r\n            this.mParameter.set(lParameter.name, new Set<ComputeStage>(lParameter.usage));\r\n        }\r\n\r\n        // Convert fragment entry point informations\r\n        for (const lFragmentEntry of pReferences.fragmentEntrypoints) {\r\n            // Restrict doublicate fragment entry names.\r\n            if (this.mEntryPoints.fragment.has(lFragmentEntry.name)) {\r\n                throw new Exception(`Fragment entry \"${lFragmentEntry.name}\" was setup more than once.`, this);\r\n            }\r\n\r\n            // Convert all render attachments to a location mapping.\r\n            const lRenderTargetLocations: Set<number> = new Set<number>();\r\n            const lRenderTargets: ShaderModuleEntryPointFragment['renderTargets'] = new Dictionary<string, any>();\r\n            for (const lRenderTarget of lFragmentEntry.renderTargets) {\r\n                // Restrict doublicate fragment entry render target names.\r\n                if (lRenderTargets.has(lRenderTarget.name)) {\r\n                    throw new Exception(`Fragment entry \"${lFragmentEntry.name}\" was has doublicate render attachment name \"${lRenderTarget.name}\".`, this);\r\n                }\r\n\r\n                // Restrict doublicate fragment entry render target locations.\r\n                if (lRenderTargetLocations.has(lRenderTarget.location)) {\r\n                    throw new Exception(`Fragment entry \"${lFragmentEntry.name}\" was has doublicate render attachment location index \"${lRenderTarget.location}\".`, this);\r\n                }\r\n\r\n                // Add location to location index buffer. Used for finding dublicates.\r\n                lRenderTargetLocations.add(lRenderTarget.location);\r\n\r\n                // Add target to list. \r\n                lRenderTargets.set(lRenderTarget.name, {\r\n                    name: lRenderTarget.name,\r\n                    location: lRenderTarget.location,\r\n                    format: lRenderTarget.format,\r\n                    multiplier: lRenderTarget.multiplier\r\n                });\r\n            }\r\n\r\n            // Set fragment entry point definition. \r\n            this.mEntryPoints.fragment.set(lFragmentEntry.name, {\r\n                renderTargets: lRenderTargets\r\n            });\r\n        }\r\n\r\n        // Convert vertex entry point informations\r\n        for (const lVertexEntry of pReferences.vertexEntrypoints) {\r\n            // Restrict doublicate vertex entry names.\r\n            if (this.mEntryPoints.vertex.has(lVertexEntry.name)) {\r\n                throw new Exception(`Vertex entry \"${lVertexEntry.name}\" was setup more than once.`, this);\r\n            }\r\n\r\n            // Set vertex entry point definition. \r\n            this.mEntryPoints.vertex.set(lVertexEntry.name, {\r\n                parameter: lVertexEntry.parameter\r\n            });\r\n        }\r\n\r\n        // Convert compute entry point informations\r\n        for (const lComputeEntry of pReferences.computeEntrypoints) {\r\n            // Restrict doublicate compute entry names.\r\n            if (this.mEntryPoints.compute.has(lComputeEntry.name)) {\r\n                throw new Exception(`Vertex entry \"${lComputeEntry.name}\" was setup more than once.`, this);\r\n            }\r\n\r\n            // Set vertex entry point definition. \r\n            this.mEntryPoints.compute.set(lComputeEntry.name, {\r\n                static: lComputeEntry.workgroupDimension !== null,\r\n                workgroupDimension: {\r\n                    x: lComputeEntry.workgroupDimension?.x ?? null,\r\n                    y: lComputeEntry.workgroupDimension?.y ?? null,\r\n                    z: lComputeEntry.workgroupDimension?.z ?? null\r\n                }\r\n            });\r\n        }\r\n\r\n        // Generate initial pipeline layout.\r\n        const lInitialPipelineLayout: Dictionary<number, BindGroupLayout> = new Dictionary<number, BindGroupLayout>();\r\n        for (const lGroup of pReferences.bindingGroups) {\r\n            // Set bind group layout with group index.\r\n            lInitialPipelineLayout.set(lGroup.index, lGroup.group);\r\n        }\r\n        this.mPipelineLayout = new PipelineLayout(this.device, lInitialPipelineLayout);\r\n\r\n        // Invalidate shader every time the pipeline layout changes.\r\n        this.mPipelineLayout.addInvalidationListener(() => {\r\n            this.invalidate(ShaderInvalidationType.PipelineLayout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create setup object. Return null to skip any setups.\r\n     * \r\n     *  @param pReferences - Unfilled setup references.\r\n     * \r\n     *  @returns Setup object.\r\n     */\r\n    protected override onSetupObjectCreate(pReferences: GpuObjectSetupReferences<ShaderSetupReferenceData>): ShaderSetup {\r\n        return new ShaderSetup(pReferences);\r\n    }\r\n}\r\n\r\nexport type ShaderModuleEntryPointCompute = {\r\n    static: boolean;\r\n    workgroupDimension: {\r\n        x: number | null;\r\n        y: number | null;\r\n        z: number | null;\r\n    };\r\n};\r\n\r\nexport type ShaderModuleEntryPointVertex = {\r\n    parameter: VertexParameterLayout;\r\n};\r\n\r\nexport type ShaderModuleEntryPointFragmentRenderTarget = {\r\n    name: string;\r\n    location: number;\r\n    format: PrimitiveBufferFormat;\r\n    multiplier: PrimitiveBufferMultiplier;\r\n};\r\nexport type ShaderModuleEntryPointFragment = {\r\n    renderTargets: Dictionary<string, ShaderModuleEntryPointFragmentRenderTarget>;\r\n};\r\n\r\ntype ShaderModuleEntryPoints = {\r\n    compute: Dictionary<string, ShaderModuleEntryPointCompute>,\r\n    vertex: Dictionary<string, ShaderModuleEntryPointVertex>,\r\n    fragment: Dictionary<string, ShaderModuleEntryPointFragment>,\r\n};\r\n\r\nexport enum ShaderInvalidationType {\r\n    PipelineLayout = 'PipelineLayoutChange',\r\n}","import { TextureUsage } from '../../constant/texture-usage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { TextureMemoryLayout } from '../memory_layout/texture/texture-memory-layout';\r\n\r\nexport abstract class BaseTexture<TInvalidationType extends string = any> extends GpuObject<GPUTextureView, TInvalidationType> implements IGpuObjectNative<GPUTextureView> {\r\n    private readonly mMemoryLayout: TextureMemoryLayout;\r\n    private mTextureUsage: TextureUsage;\r\n\r\n    /**\r\n     * Texture memory layout.\r\n     */\r\n    public get layout(): TextureMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUTextureView {\r\n        return super.native;\r\n    }\r\n\r\n    protected get usage(): TextureUsage {\r\n        return this.mTextureUsage;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture layout.\r\n     * @param pCanvas - Canvas of texture.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        // Set layout.\r\n        this.mMemoryLayout = pLayout;\r\n        this.mTextureUsage = TextureUsage.None;\r\n    }\r\n\r\n    /**\r\n     * Extend usage of texture.\r\n     * Might trigger a texture rebuild.\r\n     * \r\n     * @param pUsage - Texture usage. \r\n     */\r\n    public extendUsage(pUsage: TextureUsage): this {\r\n        // Update onyl when not already set.\r\n        if ((this.mTextureUsage & pUsage) === 0) {\r\n            this.mTextureUsage |= pUsage;\r\n            this.onUsageExtend();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Called when usage was changed.\r\n     */\r\n    protected abstract onUsageExtend(): void;\r\n}","import { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObjectInvalidationReasons } from '../gpu/object/gpu-object-invalidation-reasons';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { TextureMemoryLayout, TextureMemoryLayoutInvalidationType } from '../memory_layout/texture/texture-memory-layout';\r\nimport { BaseTexture } from './base-texture';\r\n\r\nexport class CanvasTexture extends BaseTexture<CanvasTextureInvalidationType> implements IGpuObjectNative<GPUTextureView> {\r\n    private readonly mCanvas: HTMLCanvasElement;\r\n    private mContext: GPUCanvasContext | null;\r\n\r\n    /**\r\n     * HTML canvas element.\r\n     */\r\n    public get canvas(): HTMLCanvasElement {\r\n        return this.mCanvas;\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mCanvas.height;\r\n    } set height(pValue: number) {\r\n        this.mCanvas.height = pValue;\r\n\r\n        // Invalidate size.\r\n        this.invalidate(CanvasTextureInvalidationType.Resize);\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mCanvas.width;\r\n    } set width(pValue: number) {\r\n        this.mCanvas.width = pValue;\r\n\r\n        // Invalidate size.\r\n        this.invalidate(CanvasTextureInvalidationType.Resize);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture layout.\r\n     * @param pCanvas - Canvas of texture.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout, pCanvas: HTMLCanvasElement) {\r\n        super(pDevice, pLayout);\r\n\r\n        // Set canvas reference.\r\n        this.mCanvas = pCanvas;\r\n        this.mContext = null;\r\n\r\n        // Set defaults.\r\n        this.height = 1;\r\n        this.width = 1;\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(CanvasTextureInvalidationType.FormatChange);\r\n        }, [TextureMemoryLayoutInvalidationType.Format]);\r\n\r\n        // TODO: Remove it on deconstruct.\r\n        // Rebuild view on every frame.\r\n        this.device.addFrameChangeListener(() => {\r\n            this.invalidate(CanvasTextureInvalidationType.ViewRebuild);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * @param _pNativeObject - Native canvas texture.\r\n     */\r\n    protected override destroyNative(_pNativeObject: GPUTextureView, pReasons: GpuObjectInvalidationReasons<CanvasTextureInvalidationType>): void {\r\n        // Context is only invalid on deconstruct or layout has changes.\r\n        const lContextInvalid: boolean = pReasons.deconstruct || pReasons.has(CanvasTextureInvalidationType.FormatChange) || pReasons.has(CanvasTextureInvalidationType.UsageExtended);\r\n\r\n        // Only destroy context when child data/layout has changes.\r\n        if (lContextInvalid) {\r\n            // Destory context.\r\n            this.mContext!.unconfigure();\r\n            this.mContext = null;\r\n        }\r\n\r\n        // Native view can not be destroyed.\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generateNative(): GPUTextureView {\r\n        // Invalidate for frame change.\r\n        this.invalidate(CanvasTextureInvalidationType.ViewRebuild);\r\n\r\n        // Read canvas format.\r\n        const lFormat: GPUTextureFormat = this.layout.format as GPUTextureFormat;\r\n\r\n        // Configure new context when not alread configured or destroyed.\r\n        if (!this.mContext) {\r\n            // Invalidate bc. context neeeded to rebuild.\r\n            this.invalidate(CanvasTextureInvalidationType.ContextRebuild);\r\n\r\n            // Create and configure canvas context.\r\n            this.mContext = <GPUCanvasContext><any>this.canvas.getContext('webgpu');\r\n            this.mContext.configure({\r\n                device: this.device.gpu,\r\n                format: lFormat,\r\n                usage: this.usage,\r\n                alphaMode: 'opaque'\r\n            });\r\n        }\r\n\r\n        // Read current texture of canvas. Needs to be retrieved for each frame.\r\n        const lTexture: GPUTexture = this.mContext.getCurrentTexture();\r\n\r\n        // force a two dimensional view.\r\n        return lTexture.createView({\r\n            format: lFormat,\r\n            dimension: '2d'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On usage extened. Triggers a texture rebuild.\r\n     */\r\n    protected override onUsageExtend(): void {\r\n        this.invalidate(CanvasTextureInvalidationType.UsageExtended);\r\n    }\r\n\r\n    /**\r\n     * Do nothing when view and context does not need to be updated.\r\n     * \r\n     * @param _pNative - Native \r\n     * @param pReasons - Invalidation reason.\r\n     * \r\n     * @returns true when nothing was done. \r\n     */\r\n    protected override updateNative(_pNative: GPUTextureView, pReasons: GpuObjectInvalidationReasons<CanvasTextureInvalidationType>): boolean {\r\n        // Literally only \"update\" on resize.\r\n        return pReasons.has(CanvasTextureInvalidationType.Resize) &&\r\n            !pReasons.has(CanvasTextureInvalidationType.ViewRebuild) &&\r\n            !pReasons.has(CanvasTextureInvalidationType.UsageExtended) &&\r\n            !pReasons.has(CanvasTextureInvalidationType.FormatChange) &&\r\n            !pReasons.deconstruct;\r\n    }\r\n\r\n}\r\n\r\nexport enum CanvasTextureInvalidationType {\r\n    ContextRebuild = 'ContextRebuild',\r\n    ViewRebuild = 'ViewRebuild',\r\n    Resize = 'Resize',\r\n    UsageExtended = 'UsageChange',\r\n    FormatChange = 'FormatChange'\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { TextureDimension } from '../../constant/texture-dimension.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { TextureMemoryLayout, TextureMemoryLayoutInvalidationType } from '../memory_layout/texture/texture-memory-layout';\r\nimport { BaseTexture } from './base-texture';\r\nimport { GpuObjectInvalidationReasons } from '../gpu/object/gpu-object-invalidation-reasons';\r\n\r\nexport class FrameBufferTexture extends BaseTexture<FrameBufferTextureInvalidationType> {\r\n    private mDepth: number;\r\n    private mHeight: number;\r\n    private mMultiSampleLevel: number;\r\n    private mTexture: GPUTexture | null;\r\n    private mWidth: number;\r\n\r\n    /**\r\n     * Texture depth.\r\n     */\r\n    public get depth(): number {\r\n        return this.mDepth;\r\n    } set depth(pValue: number) {\r\n        this.mDepth = pValue;\r\n\r\n        // Invalidate native.\r\n        this.invalidate(FrameBufferTextureInvalidationType.Resize, FrameBufferTextureInvalidationType.TextureRebuild);\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mHeight;\r\n    } set height(pValue: number) {\r\n        this.mHeight = pValue;\r\n\r\n        // Invalidate native.\r\n        this.invalidate(FrameBufferTextureInvalidationType.Resize, FrameBufferTextureInvalidationType.TextureRebuild);\r\n    }\r\n\r\n    /**\r\n     * Texture multi sample level. // TODO: Move into layout. Maybe. Or not. As a layout can only hold true or false.\r\n     */\r\n    public get multiSampleLevel(): number {\r\n        return this.mMultiSampleLevel;\r\n    } set multiSampleLevel(pValue: number) {\r\n        this.mMultiSampleLevel = pValue;\r\n\r\n        // Invalidate native.\r\n        this.invalidate(FrameBufferTextureInvalidationType.MultisampleChange, FrameBufferTextureInvalidationType.TextureRebuild);\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mWidth;\r\n    } set width(pValue: number) {\r\n        this.mWidth = pValue;\r\n\r\n        // Invalidate native.\r\n        this.invalidate(FrameBufferTextureInvalidationType.Resize, FrameBufferTextureInvalidationType.TextureRebuild);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture memory layout.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice, pLayout);\r\n\r\n        this.mTexture = null;\r\n\r\n        // Set defaults.\r\n        this.mDepth = 1;\r\n        this.mHeight = 1;\r\n        this.mWidth = 1;\r\n        this.mMultiSampleLevel = 1;\r\n\r\n        // Trigger Texture rebuild on dimension for format changes.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(FrameBufferTextureInvalidationType.TextureRebuild);\r\n        }, [TextureMemoryLayoutInvalidationType.Dimension, TextureMemoryLayoutInvalidationType.Format]);\r\n\r\n        // Trigger format change on formats.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(FrameBufferTextureInvalidationType.FormatChange);\r\n        }, [TextureMemoryLayoutInvalidationType.Format]);\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * \r\n     * @param _pNativeObject - Native canvas texture.\r\n     * @param pInvalidationReason - Invalidation reasons.\r\n     */\r\n    protected override destroyNative(_pNativeObject: GPUTextureView, pInvalidationReason: GpuObjectInvalidationReasons<FrameBufferTextureInvalidationType>): void {\r\n        // Desconstruct current texture only on deconstruction calls.\r\n        if (pInvalidationReason.deconstruct) {\r\n            this.mTexture?.destroy();\r\n            this.mTexture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generateNative(): GPUTextureView {\r\n        // Invalidate texture and view.\r\n        this.invalidate(FrameBufferTextureInvalidationType.TextureRebuild, FrameBufferTextureInvalidationType.ViewRebuild);\r\n\r\n        // TODO: Validate format based on layout. Maybe replace used format.\r\n\r\n        // Validate two dimensional texture.\r\n        if (this.layout.dimension !== TextureDimension.TwoDimension) {\r\n            throw new Exception('Frame buffers must be two dimensional.', this);\r\n        }\r\n\r\n        // Any change triggers a texture rebuild.\r\n        this.mTexture?.destroy();\r\n        this.mTexture = null;\r\n\r\n        // Create and configure canvas context.\r\n        this.mTexture = this.device.gpu.createTexture({\r\n            label: 'Frame-Buffer-Texture',\r\n            size: [this.width, this.height, 1], // Force 2d texture.\r\n            format: this.layout.format as GPUTextureFormat,\r\n            usage: this.usage,\r\n            dimension: '2d',\r\n            sampleCount: this.multiSampleLevel\r\n        });\r\n\r\n        // Force a 2d view.\r\n        return this.mTexture.createView({\r\n            format: this.layout.format as GPUTextureFormat,\r\n            dimension: '2d'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On usage extened. Triggers a texture rebuild.\r\n     */\r\n    protected override onUsageExtend(): void {\r\n        this.invalidate(FrameBufferTextureInvalidationType.UsageExtended);\r\n    }\r\n}\r\n\r\nexport enum FrameBufferTextureInvalidationType {\r\n    TextureRebuild = 'TextureRebuild',\r\n    ViewRebuild = 'ViewRebuild',\r\n    Resize = 'Resize',\r\n    MultisampleChange = 'MultisampleChange',\r\n    UsageExtended = 'UsageChange',\r\n    FormatChange = 'FormatChange'\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { TextureDimension } from '../../constant/texture-dimension.enum';\r\nimport { TextureUsage } from '../../constant/texture-usage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObjectInvalidationReasons } from '../gpu/object/gpu-object-invalidation-reasons';\r\nimport { TextureMemoryLayout, TextureMemoryLayoutInvalidationType } from '../memory_layout/texture/texture-memory-layout';\r\nimport { BaseTexture } from './base-texture';\r\nimport { TextureMipGenerator } from './texture-mip-generator';\r\n\r\nexport class ImageTexture extends BaseTexture<ImageTextureInvalidationType> {\r\n    private mDepth: number;\r\n    private mEnableMips: boolean;\r\n    private mHeight: number;\r\n    private mImageList: Array<ImageBitmap>;\r\n    private readonly mMipGenerator: TextureMipGenerator;\r\n    private mTexture: GPUTexture | null;\r\n    private mWidth: number;\r\n\r\n    /**\r\n     * Texture depth.\r\n     */\r\n    public get depth(): number {\r\n        return this.mDepth;\r\n    }\r\n\r\n    /**\r\n     * Enable mip maps.\r\n     */\r\n    public get enableMips(): boolean {\r\n        return this.mEnableMips;\r\n    } set enableMips(pEnable: boolean) {\r\n        this.mEnableMips = pEnable;\r\n    }\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mHeight;\r\n    }\r\n\r\n    /**\r\n     * Loaded html image list.\r\n     */\r\n    public get images(): Array<ImageBitmap> {\r\n        return this.mImageList;\r\n    }\r\n\r\n    /**\r\n     * Texture width.\r\n     */\r\n    public get width(): number {\r\n        return this.mWidth;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture memory layout.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice, pLayout);\r\n\r\n        this.mMipGenerator = new TextureMipGenerator(pDevice);\r\n        this.mTexture = null;\r\n\r\n        // Set defaults.\r\n        this.mEnableMips = true;\r\n        this.mDepth = 1;\r\n        this.mHeight = 1;\r\n        this.mWidth = 1;\r\n        this.mImageList = new Array<ImageBitmap>();\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(ImageTextureInvalidationType.Layout);\r\n        }, [TextureMemoryLayoutInvalidationType.Dimension, TextureMemoryLayoutInvalidationType.Format]);\r\n\r\n        // Allways a copy destination.\r\n        this.extendUsage(TextureUsage.CopyDestination);\r\n    }\r\n\r\n    /**\r\n     * Load image into texture.\r\n     * Images needs to have the same dimensions.\r\n     * \r\n     * @param pSorceList - Source for each depth layer.\r\n     */\r\n    public async load(...pSourceList: Array<string>): Promise<void> {\r\n        let lHeight: number = 0;\r\n        let lWidth: number = 0;\r\n\r\n        // Parallel load images.\r\n        const lImageLoadPromiseList: Array<Promise<ImageBitmap>> = pSourceList.map(async (pSource) => {\r\n            // Load image with html image element.\r\n            const lImage: HTMLImageElement = new Image();\r\n            lImage.src = pSource;\r\n            await lImage.decode();\r\n\r\n            // Init size.\r\n            if (lHeight === 0 || lWidth === 0) {\r\n                lWidth = lImage.naturalWidth;\r\n                lHeight = lImage.naturalHeight;\r\n            }\r\n\r\n            // Validate same image size for all layers.\r\n            if (lHeight !== lImage.naturalHeight || lWidth !== lImage.naturalWidth) {\r\n                throw new Exception(`Texture image layers are not the same size. (${lImage.naturalWidth}, ${lImage.naturalHeight}) needs (${lWidth}, ${lHeight}).`, this);\r\n            }\r\n\r\n            return createImageBitmap(lImage);\r\n        });\r\n\r\n        // Resolve all bitmaps.\r\n        this.mImageList = await Promise.all(lImageLoadPromiseList);\r\n\r\n        // Set new texture size.\r\n        this.mWidth = lWidth;\r\n        this.mHeight = lHeight;\r\n        this.mDepth = pSourceList.length;\r\n\r\n        // TODO: Enforce limits.\r\n        // maxTextureDimension1D\r\n        // maxTextureDimension2D\r\n        // maxTextureDimension3D\r\n        // maxTextureArrayLayers\r\n\r\n        // Trigger change.\r\n        this.invalidate(ImageTextureInvalidationType.ImageBinary);\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * @param _pNativeObject - Native canvas texture.\r\n     */\r\n    protected override destroyNative(_pNativeObject: GPUTextureView): void {\r\n        this.mTexture?.destroy();\r\n        this.mTexture = null;\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generateNative(_pCurrentNative: GPUTextureView | null, pInvalidationReasons: GpuObjectInvalidationReasons<ImageTextureInvalidationType>): GPUTextureView {\r\n        // TODO: Validate format based on layout. Maybe replace used format.\r\n\r\n        // Generate gpu dimension from memory layout dimension.\r\n        const lTextureDimensions: { textureDimension: GPUTextureDimension, clampedDimensions: [number, number, number]; } = (() => {\r\n            switch (this.layout.dimension) {\r\n                case TextureDimension.OneDimension: {\r\n                    return {\r\n                        textureDimension: '1d',\r\n                        clampedDimensions: [this.mWidth, 1, 1]\r\n                    };\r\n                }\r\n                case TextureDimension.TwoDimension: {\r\n                    return {\r\n                        textureDimension: '2d',\r\n                        clampedDimensions: [this.mWidth, this.mHeight, 1]\r\n                    };\r\n                }\r\n                case TextureDimension.TwoDimensionArray: {\r\n                    return {\r\n                        textureDimension: '2d',\r\n                        clampedDimensions: [this.mWidth, this.mHeight, this.mDepth]\r\n                    };\r\n                }\r\n                case TextureDimension.Cube: {\r\n                    return {\r\n                        textureDimension: '2d',\r\n                        clampedDimensions: [this.mWidth, this.mHeight, 6]\r\n                    };\r\n                }\r\n                case TextureDimension.CubeArray: {\r\n                    return {\r\n                        textureDimension: '2d',\r\n                        clampedDimensions: [this.mWidth, this.mHeight, Math.ceil(this.mDepth / 6) * 6]\r\n                    };\r\n                }\r\n                case TextureDimension.ThreeDimension: {\r\n                    return {\r\n                        textureDimension: '3d',\r\n                        clampedDimensions: [this.mWidth, this.mHeight, this.mDepth]\r\n                    };\r\n                }\r\n            }\r\n        })();\r\n\r\n        // To copy images, the texture needs to be a render attachment and copy destination.\r\n        // Extend usage before texture creation.\r\n        // TextureUsage.CopyDestination set in constructor.\r\n        if (this.images.length > 0) {\r\n            this.extendUsage(TextureUsage.RenderAttachment);\r\n\r\n            // Usages needed for mip generation.\r\n            if (this.mEnableMips) {\r\n                this.extendUsage(TextureUsage.TextureBinding);\r\n                this.extendUsage(TextureUsage.Storage);\r\n            }\r\n        }\r\n\r\n        // Calculate mip count on 3D images the depth affects mips.\r\n        let lMipCount = 1;\r\n        if (this.mEnableMips) {\r\n            if (lTextureDimensions.textureDimension === '3d') {\r\n                lMipCount = 1 + Math.floor(Math.log2(Math.max(this.mWidth, this.mHeight, this.mDepth)));\r\n            } else {\r\n                lMipCount = 1 + Math.floor(Math.log2(Math.max(this.mWidth, this.mHeight)));\r\n            }\r\n        }\r\n\r\n        // Save last used texture.\r\n        const lLastTexture: GPUTexture | null = this.mTexture;\r\n\r\n        // Create texture with set size, format and usage. Save it for destorying later.\r\n        this.mTexture = this.device.gpu.createTexture({\r\n            label: 'Frame-Buffer-Texture',\r\n            size: lTextureDimensions.clampedDimensions,\r\n            format: this.layout.format as GPUTextureFormat,\r\n            usage: this.usage,\r\n            dimension: lTextureDimensions.textureDimension,\r\n            mipLevelCount: (this.enableMips) ? lMipCount : 1\r\n        });\r\n\r\n        // Copy current native data into new texture.\r\n        if (lLastTexture !== null && !pInvalidationReasons.has(ImageTextureInvalidationType.ImageBinary)) {\r\n            // Create target copy texture.\r\n            const lDestination: GPUImageCopyTexture = {\r\n                texture: this.mTexture,\r\n                mipLevel: 0\r\n            };\r\n\r\n            // Create source copy texture.\r\n            const lSource: GPUImageCopyTexture = {\r\n                texture: lLastTexture,\r\n                mipLevel: 0\r\n            };\r\n\r\n            // Clamp copy sizes to lowest.\r\n            const lLevelOneCopySize: GPUExtent3DStrict = {\r\n                width: Math.min(lLastTexture.width, this.mTexture.width),\r\n                height: Math.min(lLastTexture.height, this.mTexture.height),\r\n                depthOrArrayLayers: Math.min(lLastTexture.depthOrArrayLayers, this.mTexture.depthOrArrayLayers)\r\n            };\r\n\r\n            // Create copy command encoder to store copy actions.\r\n            const lCommandDecoder: GPUCommandEncoder = this.device.gpu.createCommandEncoder();\r\n\r\n            // Copy each mipmap.\r\n            const lCopyMipCount: number = Math.min(lLastTexture.mipLevelCount, this.mTexture.mipLevelCount);\r\n            for (let lMipLevel: number = 0; lMipLevel < lCopyMipCount; lMipLevel++) {\r\n                // Calculate mip level copy sizes.\r\n                const lMipCopySize: GPUExtent3DStrict = {\r\n                    width: Math.floor(lLevelOneCopySize.width / Math.pow(2, lMipLevel)),\r\n                    height: Math.floor(lLevelOneCopySize.height! / Math.pow(2, lMipLevel)),\r\n                    depthOrArrayLayers: 0\r\n                };\r\n\r\n                // On 3D images the depth count to the mip.\r\n                if (this.mTexture.dimension === '3d') {\r\n                    lMipCopySize.depthOrArrayLayers = Math.floor(lLevelOneCopySize.depthOrArrayLayers! / Math.pow(2, lMipLevel));\r\n                } else {\r\n                    lMipCopySize.depthOrArrayLayers = lLevelOneCopySize.depthOrArrayLayers!;\r\n                }\r\n\r\n                // Add copy action to command queue.\r\n                lCommandDecoder.copyTextureToTexture(lSource, lDestination, lMipCopySize);\r\n            }\r\n\r\n            // Submit copy actions.\r\n            this.device.gpu.queue.submit([lCommandDecoder.finish()]);\r\n        }\r\n\r\n        // Only reload when binary data has changed.\r\n        if (pInvalidationReasons.has(ImageTextureInvalidationType.ImageBinary)) {\r\n            // Load images into texture.\r\n            for (let lImageIndex: number = 0; lImageIndex < this.images.length; lImageIndex++) {\r\n                const lBitmap: ImageBitmap = this.images[lImageIndex];\r\n\r\n                // Copy image into depth layer.\r\n                this.device.gpu.queue.copyExternalImageToTexture(\r\n                    { source: lBitmap },\r\n                    { texture: this.mTexture, origin: [0, 0, lImageIndex] },\r\n                    [lBitmap.width, lBitmap.height]\r\n                );\r\n            }\r\n\r\n            // Generate mips for texture.\r\n            this.mMipGenerator.generateMips(this.mTexture);\r\n        }\r\n\r\n        // View descriptor.\r\n        return this.mTexture.createView({\r\n            format: this.layout.format as GPUTextureFormat,\r\n            dimension: this.layout.dimension,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On usage extened. Triggers a texture rebuild.\r\n     */\r\n    protected override onUsageExtend(): void {\r\n        this.invalidate(ImageTextureInvalidationType.Usage);\r\n    }\r\n}\r\n\r\nexport enum ImageTextureInvalidationType {\r\n    Layout = 'LayoutChange',\r\n    ImageBinary = 'ImageBinaryChange',\r\n    Usage = 'UsageChange'\r\n}","import { DeepPartial, Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { TextureAspect } from '../../constant/texture-aspect.enum';\r\nimport { TextureDimension } from '../../constant/texture-dimension.enum';\r\nimport { TextureFormat } from '../../constant/texture-format.enum';\r\nimport { TextureSampleType } from '../../constant/texture-sample-type.enum';\r\nimport { TextureUsage } from '../../constant/texture-usage.enum';\r\nimport { GpuFeature } from '../gpu/capabilities/gpu-feature.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\n\r\nexport class TextureFormatCapabilities {\r\n    private readonly mDevice: GpuDevice;\r\n    private readonly mFormatCapabilitys: Dictionary<TextureFormat, TextureFormatCapabilityDefinition>;\r\n\r\n    /**\r\n     * Get prefered canvas format.\r\n     */\r\n    public get preferredCanvasFormat(): TextureFormat {\r\n        return window.navigator.gpu.getPreferredCanvasFormat() as TextureFormat;\r\n    }\r\n\r\n    // TODO: https://www.w3.org/TR/webgpu/#texture-format-caps\r\n\r\n    public constructor(pDevice: GpuDevice) {\r\n        this.mDevice = pDevice;\r\n\r\n        // Construct sample type for float32 texture types.\r\n        const lFloat32Filterable: Array<TextureSampleType> = [TextureSampleType.UnfilterableFloat];\r\n        if (this.mDevice.capabilities.hasFeature(GpuFeature.Float32Filterable)) {\r\n            lFloat32Filterable.push(TextureSampleType.Float);\r\n        }\r\n\r\n        // Setup any format with its capabilities.\r\n        this.mFormatCapabilitys = new Dictionary<TextureFormat, TextureFormatCapabilityDefinition>();\r\n\r\n        // 8-bit formats\r\n        this.mFormatCapabilitys.set(TextureFormat.R8unorm, {\r\n            format: TextureFormat.R8unorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false,\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R8snorm, {\r\n            format: TextureFormat.R8snorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: false,\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R8uint, {\r\n            format: TextureFormat.R8uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R8sint, {\r\n            format: TextureFormat.R8sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n\r\n        // 16-bit formats\r\n        this.mFormatCapabilitys.set(TextureFormat.R16uint, {\r\n            format: TextureFormat.R16uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R16sint, {\r\n            format: TextureFormat.R16sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R16float, {\r\n            format: TextureFormat.R16float,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg8unorm, {\r\n            format: TextureFormat.Rg8unorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg8snorm, {\r\n            format: TextureFormat.Rg8snorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: false,\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg8uint, {\r\n            format: TextureFormat.Rg8uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg8sint, {\r\n            format: TextureFormat.Rg8sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n\r\n        // 32-bit formats\r\n        this.mFormatCapabilitys.set(TextureFormat.R32uint, {\r\n            format: TextureFormat.R32uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: true\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R32sint, {\r\n            format: TextureFormat.R32sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: true\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.R32float, {\r\n            format: TextureFormat.R32float,\r\n            aspect: {\r\n                types: [TextureAspect.Red],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: lFloat32Filterable,\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: true\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg16uint, {\r\n            format: TextureFormat.Rg16uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg16sint, {\r\n            format: TextureFormat.Rg16sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg16float, {\r\n            format: TextureFormat.Rg16float,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba8unorm, {\r\n            format: TextureFormat.Rgba8unorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba8unormSrgb, {\r\n            format: TextureFormat.Rgba8unormSrgb,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba8snorm, {\r\n            format: TextureFormat.Rgba8snorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: false,\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba8uint, {\r\n            format: TextureFormat.Rgba8uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba8sint, {\r\n            format: TextureFormat.Rgba8sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Bgra8unorm, {\r\n            format: TextureFormat.Bgra8unorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: pDevice.capabilities.hasFeature(GpuFeature.Bgra8unormStorage),\r\n                    writeonly: false,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Bgra8unormSrgb, {\r\n            format: TextureFormat.Bgra8unormSrgb,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n\r\n        // Packed 32-bit formats\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgb9e5ufloat, {\r\n            format: TextureFormat.Rgb9e5ufloat,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 1,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: false,\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgb10a2uint, {\r\n            format: TextureFormat.Rgb10a2uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgb10a2unorm, {\r\n            format: TextureFormat.Rgb10a2unorm,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg11b10ufloat, {\r\n            format: TextureFormat.Rg11b10ufloat,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: pDevice.capabilities.hasFeature(GpuFeature.Rg11b10ufloatRenderable) ? {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                } : false,\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n\r\n        // 64-bit formats\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg32uint, {\r\n            format: TextureFormat.Rg32uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg32sint, {\r\n            format: TextureFormat.Rg32sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rg32float, {\r\n            format: TextureFormat.Rg32float,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: lFloat32Filterable,\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba16uint, {\r\n            format: TextureFormat.Rgba16uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba16sint, {\r\n            format: TextureFormat.Rgba16sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba16float, {\r\n            format: TextureFormat.Rgba16float,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.Float, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: true,\r\n                    blendable: true,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n\r\n        // 128-bit formats\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba32uint, {\r\n            format: TextureFormat.Rgba32uint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba32sint, {\r\n            format: TextureFormat.Rgba32sint,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: [TextureSampleType.SignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Rgba32float, {\r\n            format: TextureFormat.Rgba32float,\r\n            aspect: {\r\n                types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray, TextureDimension.ThreeDimension],\r\n            type: lFloat32Filterable,\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: false,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: {\r\n                    readonly: true,\r\n                    writeonly: true,\r\n                    readwrite: false\r\n                }\r\n            }\r\n        });\r\n\r\n        // Depth/stencil formats\r\n        this.mFormatCapabilitys.set(TextureFormat.Stencil8, {\r\n            format: TextureFormat.Stencil8,\r\n            aspect: {\r\n                types: [TextureAspect.Stencil],\r\n                byteCost: 1\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n            type: [TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Depth16unorm, {\r\n            format: TextureFormat.Depth16unorm,\r\n            aspect: {\r\n                types: [TextureAspect.Depth],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n            type: [TextureSampleType.Depth, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: true\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Depth24plus, {\r\n            format: TextureFormat.Depth24plus,\r\n            aspect: {\r\n                types: [TextureAspect.Depth],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n            type: [TextureSampleType.Depth, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: false,\r\n                    imageDestination: false\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Depth24plusStencil8, {\r\n            format: TextureFormat.Depth24plusStencil8,\r\n            aspect: {\r\n                types: [TextureAspect.Depth, TextureAspect.Stencil],\r\n                byteCost: 2\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n            type: [TextureSampleType.Depth, TextureSampleType.UnfilterableFloat, TextureSampleType.UnsignedInteger],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: false, // Stencil supports image copy but depth does not.\r\n                    imageDestination: false // Stencil supports image copy but depth does not.\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n        this.mFormatCapabilitys.set(TextureFormat.Depth32float, {\r\n            format: TextureFormat.Depth32float,\r\n            aspect: {\r\n                types: [TextureAspect.Depth],\r\n                byteCost: 4\r\n            },\r\n            dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n            type: [TextureSampleType.Depth, TextureSampleType.UnfilterableFloat],\r\n            compressionLevel: 0,\r\n            usage: {\r\n                textureBinding: true,\r\n                renderAttachment: {\r\n                    resolveTarget: false,\r\n                    blendable: false,\r\n                    multisample: true,\r\n                },\r\n                copy: {\r\n                    textureSource: true,\r\n                    textureDestination: true,\r\n                    imageSource: true,\r\n                    imageDestination: false\r\n                },\r\n                storage: false\r\n            }\r\n        });\r\n\r\n        // \"depth32float-stencil8\" feature\r\n        if (pDevice.capabilities.hasFeature(GpuFeature.Depth32floatStencil8)) {\r\n            this.mFormatCapabilitys.set(TextureFormat.Depth32floatStencil8, {\r\n                format: TextureFormat.Depth32floatStencil8,\r\n                aspect: {\r\n                    types: [TextureAspect.Depth, TextureAspect.Stencil],\r\n                    byteCost: 4\r\n                },\r\n                dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n                type: [TextureSampleType.Depth, TextureSampleType.UnfilterableFloat, TextureSampleType.UnsignedInteger],\r\n                compressionLevel: 0,\r\n                usage: {\r\n                    textureBinding: true,\r\n                    renderAttachment: {\r\n                        resolveTarget: false,\r\n                        blendable: false,\r\n                        multisample: true,\r\n                    },\r\n                    copy: {\r\n                        textureSource: true,\r\n                        textureDestination: true,\r\n                        imageSource: true,\r\n                        imageDestination: false\r\n                    },\r\n                    storage: false\r\n                }\r\n            });\r\n        }\r\n\r\n        // BC compressed formats\r\n        if (pDevice.capabilities.hasFeature(GpuFeature.TextureCompressionBc)) {\r\n            const lBcTextureFormatCapability = (pFormat: TextureFormat, pAspects: Array<TextureAspect>, pByteOfAspect: number) => {\r\n                const lFormat: TextureFormatCapabilityDefinition = {\r\n                    format: pFormat,\r\n                    aspect: {\r\n                        types: pAspects,\r\n                        byteCost: pByteOfAspect\r\n                    },\r\n                    dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n                    type: [TextureSampleType.UnfilterableFloat, TextureSampleType.Float],\r\n                    compressionLevel: 16,\r\n                    usage: {\r\n                        textureBinding: true,\r\n                        renderAttachment: false,\r\n                        copy: {\r\n                            textureSource: true,\r\n                            textureDestination: true,\r\n                            imageSource: true,\r\n                            imageDestination: true\r\n                        },\r\n                        storage: false\r\n                    }\r\n                };\r\n\r\n                if (pDevice.capabilities.hasFeature(GpuFeature.TextureCompressionBcSliced3d)) {\r\n                    lFormat.dimensions.push(TextureDimension.ThreeDimension);\r\n                }\r\n\r\n                return lFormat;\r\n            };\r\n\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc1RgbaUnorm, lBcTextureFormatCapability(TextureFormat.Bc1RgbaUnorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 2));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc1RgbaUnormSrgb, lBcTextureFormatCapability(TextureFormat.Bc1RgbaUnormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 2));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc2RgbaUnorm, lBcTextureFormatCapability(TextureFormat.Bc2RgbaUnorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc2RgbaUnormSrgb, lBcTextureFormatCapability(TextureFormat.Bc2RgbaUnormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc3RgbaUnorm, lBcTextureFormatCapability(TextureFormat.Bc3RgbaUnorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc3RgbaUnormSrgb, lBcTextureFormatCapability(TextureFormat.Bc3RgbaUnormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc4Runorm, lBcTextureFormatCapability(TextureFormat.Bc4Runorm, [TextureAspect.Red], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc4Rsnorm, lBcTextureFormatCapability(TextureFormat.Bc4Rsnorm, [TextureAspect.Red], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc5RgUnorm, lBcTextureFormatCapability(TextureFormat.Bc5RgUnorm, [TextureAspect.Red, TextureAspect.Green], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc5RgSnorm, lBcTextureFormatCapability(TextureFormat.Bc5RgSnorm, [TextureAspect.Red, TextureAspect.Green], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc6hRgbUfloat, lBcTextureFormatCapability(TextureFormat.Bc6hRgbUfloat, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc6hRgbFloat, lBcTextureFormatCapability(TextureFormat.Bc6hRgbFloat, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc7RgbaUnorm, lBcTextureFormatCapability(TextureFormat.Bc7RgbaUnorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Bc7RgbaUnormSrgb, lBcTextureFormatCapability(TextureFormat.Bc7RgbaUnormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n        }\r\n\r\n        // ETC2 compressed formats\r\n        if (pDevice.capabilities.hasFeature(GpuFeature.TextureCompressionEtc2)) {\r\n            const lEtc2TextureFormatCapability = (pFormat: TextureFormat, pAspects: Array<TextureAspect>, pByteOfAspect: number) => {\r\n                const lFormat: TextureFormatCapabilityDefinition = {\r\n                    format: pFormat,\r\n                    aspect: {\r\n                        types: pAspects,\r\n                        byteCost: pByteOfAspect\r\n                    },\r\n                    dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n                    type: [TextureSampleType.UnfilterableFloat, TextureSampleType.Float],\r\n                    compressionLevel: 16,\r\n                    usage: {\r\n                        textureBinding: true,\r\n                        renderAttachment: false,\r\n                        copy: {\r\n                            textureSource: true,\r\n                            textureDestination: true,\r\n                            imageSource: true,\r\n                            imageDestination: true\r\n                        },\r\n                        storage: false\r\n                    }\r\n                };\r\n\r\n                return lFormat;\r\n            };\r\n\r\n            this.mFormatCapabilitys.set(TextureFormat.Etc2Rgb8unorm, lEtc2TextureFormatCapability(TextureFormat.Etc2Rgb8unorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue], 2));\r\n            this.mFormatCapabilitys.set(TextureFormat.Etc2Rgb8unormSrgb, lEtc2TextureFormatCapability(TextureFormat.Etc2Rgb8unormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue], 2));\r\n            this.mFormatCapabilitys.set(TextureFormat.Etc2Rgb8a1unorm, lEtc2TextureFormatCapability(TextureFormat.Etc2Rgb8a1unorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 2));\r\n            this.mFormatCapabilitys.set(TextureFormat.Etc2Rgb8a1unormSrgb, lEtc2TextureFormatCapability(TextureFormat.Etc2Rgb8a1unormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 2));\r\n            this.mFormatCapabilitys.set(TextureFormat.Etc2Rgba8unorm, lEtc2TextureFormatCapability(TextureFormat.Etc2Rgba8unorm, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.Etc2Rgba8unormSrgb, lEtc2TextureFormatCapability(TextureFormat.Etc2Rgba8unormSrgb, [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha], 4));\r\n            this.mFormatCapabilitys.set(TextureFormat.EacR11unorm, lEtc2TextureFormatCapability(TextureFormat.EacR11unorm, [TextureAspect.Red], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.EacR11snorm, lEtc2TextureFormatCapability(TextureFormat.EacR11snorm, [TextureAspect.Red], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.EacRg11unorm, lEtc2TextureFormatCapability(TextureFormat.EacRg11unorm, [TextureAspect.Red, TextureAspect.Green], 8));\r\n            this.mFormatCapabilitys.set(TextureFormat.EacRg11snorm, lEtc2TextureFormatCapability(TextureFormat.EacRg11snorm, [TextureAspect.Red, TextureAspect.Green], 8));\r\n        }\r\n\r\n        // ASTC compressed formats\r\n        if (pDevice.capabilities.hasFeature(GpuFeature.TextureCompressionAstc)) {\r\n            const lAstcTextureFormatCapability = (pFormat: TextureFormat, pCompressionLevel: number) => {\r\n                const lFormat: TextureFormatCapabilityDefinition = {\r\n                    format: pFormat,\r\n                    aspect: {\r\n                        types: [TextureAspect.Red, TextureAspect.Green, TextureAspect.Blue, TextureAspect.Alpha],\r\n                        byteCost: 4\r\n                    },\r\n                    dimensions: [TextureDimension.OneDimension, TextureDimension.TwoDimension, TextureDimension.TwoDimensionArray, TextureDimension.Cube, TextureDimension.CubeArray],\r\n                    type: [TextureSampleType.UnfilterableFloat, TextureSampleType.Float],\r\n                    compressionLevel: pCompressionLevel,\r\n                    usage: {\r\n                        textureBinding: true,\r\n                        renderAttachment: false,\r\n                        copy: {\r\n                            textureSource: true,\r\n                            textureDestination: true,\r\n                            imageSource: true,\r\n                            imageDestination: true\r\n                        },\r\n                        storage: false\r\n                    }\r\n                };\r\n\r\n                return lFormat;\r\n            };\r\n\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc4x4unorm, lAstcTextureFormatCapability(TextureFormat.Astc4x4unorm, 16));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc4x4unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc4x4unormSrgb, 16));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc5x4unorm, lAstcTextureFormatCapability(TextureFormat.Astc5x4unorm, 20));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc5x4unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc5x4unormSrgb, 20));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc5x5unorm, lAstcTextureFormatCapability(TextureFormat.Astc5x5unorm, 25));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc5x5unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc5x5unormSrgb, 25));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc6x5unorm, lAstcTextureFormatCapability(TextureFormat.Astc6x5unorm, 30));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc6x5unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc6x5unormSrgb, 330));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc6x6unorm, lAstcTextureFormatCapability(TextureFormat.Astc6x6unorm, 36));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc6x6unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc6x6unormSrgb, 36));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc8x5unorm, lAstcTextureFormatCapability(TextureFormat.Astc8x5unorm, 40));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc8x5unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc8x5unormSrgb, 40));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc8x6unorm, lAstcTextureFormatCapability(TextureFormat.Astc8x6unorm, 48));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc8x6unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc8x6unormSrgb, 48));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc8x8unorm, lAstcTextureFormatCapability(TextureFormat.Astc8x8unorm, 64));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc8x8unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc8x8unormSrgb, 64));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x5unorm, lAstcTextureFormatCapability(TextureFormat.Astc10x5unorm, 50));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x5unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc10x5unormSrgb, 50));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x6unorm, lAstcTextureFormatCapability(TextureFormat.Astc10x6unorm, 60));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x6unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc10x6unormSrgb, 60));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x8unorm, lAstcTextureFormatCapability(TextureFormat.Astc10x8unorm, 80));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x8unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc10x8unormSrgb, 80));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x10unorm, lAstcTextureFormatCapability(TextureFormat.Astc10x10unorm, 100));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc10x10unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc10x10unormSrgb, 100));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc12x10unorm, lAstcTextureFormatCapability(TextureFormat.Astc12x10unorm, 120));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc12x10unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc12x10unormSrgb, 120));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc12x12unorm, lAstcTextureFormatCapability(TextureFormat.Astc12x12unorm, 144));\r\n            this.mFormatCapabilitys.set(TextureFormat.Astc12x12unormSrgb, lAstcTextureFormatCapability(TextureFormat.Astc12x12unormSrgb, 144));\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Get all texture format capabilities of format.\r\n     * \r\n     * @param pFormat - Format.\r\n     * \r\n     * @returns capabilities of format. \r\n     */\r\n    public capabilityOf(pFormat: TextureFormat): TextureFormatCapability {\r\n        const lCapabilityDefinition: TextureFormatCapabilityDefinition | undefined = this.mFormatCapabilitys.get(pFormat);\r\n        if (!lCapabilityDefinition) {\r\n            throw new Exception(`Format \"${pFormat}\" has no capabilities.`, this);\r\n        }\r\n\r\n        // Gather all texture usages.\r\n        const lTextureUsages: Set<TextureUsage> = new Set<TextureUsage>();\r\n        if (lCapabilityDefinition.usage.copy) {\r\n            // Can be copied.\r\n            if (lCapabilityDefinition.usage.copy.imageSource || lCapabilityDefinition.usage.copy.textureSource) {\r\n                lTextureUsages.add(TextureUsage.CopySource);\r\n            }\r\n            // Can be copied into.\r\n            if (lCapabilityDefinition.usage.copy.imageDestination || lCapabilityDefinition.usage.copy.textureDestination) {\r\n                lTextureUsages.add(TextureUsage.CopyDestination);\r\n            }\r\n        }\r\n        if (lCapabilityDefinition.usage.textureBinding) {\r\n            lTextureUsages.add(TextureUsage.TextureBinding);\r\n        }\r\n        if (lCapabilityDefinition.usage.storage) {\r\n            lTextureUsages.add(TextureUsage.Storage);\r\n        }\r\n        if (lCapabilityDefinition.usage.renderAttachment) {\r\n            lTextureUsages.add(TextureUsage.RenderAttachment);\r\n        }\r\n\r\n        // All sample types and primary filterable.\r\n        const lSampleTypes: [Set<TextureSampleType>, TextureSampleType] = (() => {\r\n            const lAllSampleTypes: Set<TextureSampleType> = new Set<TextureSampleType>(lCapabilityDefinition.type);\r\n            if (lAllSampleTypes.has(TextureSampleType.Float)) {\r\n                return [lAllSampleTypes, TextureSampleType.Float];\r\n            }\r\n            if (lAllSampleTypes.has(TextureSampleType.UnsignedInteger)) {\r\n                return [lAllSampleTypes, TextureSampleType.UnsignedInteger];\r\n            }\r\n            if (lAllSampleTypes.has(TextureSampleType.SignedInteger)) {\r\n                return [lAllSampleTypes, TextureSampleType.SignedInteger];\r\n            }\r\n            if (lAllSampleTypes.has(TextureSampleType.SignedInteger)) {\r\n                return [lAllSampleTypes, TextureSampleType.SignedInteger];\r\n            }\r\n            if (lAllSampleTypes.has(TextureSampleType.Depth)) {\r\n                return [lAllSampleTypes, TextureSampleType.Depth];\r\n            }\r\n\r\n            // Default\r\n            return [lAllSampleTypes, TextureSampleType.UnfilterableFloat];\r\n        })();\r\n\r\n        return {\r\n            format: lCapabilityDefinition.format,\r\n            textureUsages: lTextureUsages,\r\n            dimensions: new Set<TextureDimension>(lCapabilityDefinition.dimensions),\r\n            aspects: new Set<TextureAspect>(lCapabilityDefinition.aspect.types),\r\n            sampleTypes: {\r\n                primary: lSampleTypes[1],\r\n                all: lSampleTypes[0]\r\n            },\r\n            renderAttachment: {\r\n                resolveTarget: (lCapabilityDefinition.usage.renderAttachment) ? lCapabilityDefinition.usage.renderAttachment.resolveTarget : false,\r\n                multisample: (lCapabilityDefinition.usage.renderAttachment) ? lCapabilityDefinition.usage.renderAttachment.multisample : false,\r\n                blendable: (lCapabilityDefinition.usage.renderAttachment) ? lCapabilityDefinition.usage.renderAttachment.blendable : false,\r\n            },\r\n            storage: {\r\n                readonly: (lCapabilityDefinition.usage.storage) ? lCapabilityDefinition.usage.storage.readonly : false,\r\n                writeonly: (lCapabilityDefinition.usage.storage) ? lCapabilityDefinition.usage.storage.writeonly : false,\r\n                readwrite: (lCapabilityDefinition.usage.storage) ? lCapabilityDefinition.usage.storage.readwrite : false,\r\n            },\r\n            copy: {\r\n                textureSource: (lCapabilityDefinition.usage.copy) ? lCapabilityDefinition.usage.copy.textureSource : false,\r\n                textureTarget: (lCapabilityDefinition.usage.copy) ? lCapabilityDefinition.usage.copy.textureDestination : false,\r\n                imageSource: (lCapabilityDefinition.usage.copy) ? lCapabilityDefinition.usage.copy.imageSource : false,\r\n                imageTarget: (lCapabilityDefinition.usage.copy) ? lCapabilityDefinition.usage.copy.imageDestination : false,\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Find right format for used capability.\r\n     */\r\n    public formatSuggestion(_pCapability: DeepPartial<TextureFormatCapabilityDefinition>): Array<TextureFormat> {\r\n        // TODO: Find right suggestion for parameters.\r\n        return [];\r\n    }\r\n}\r\n\r\nexport type TextureFormatCapability = {\r\n    // Format.\r\n    format: TextureFormat;\r\n\r\n    // Usages.\r\n    textureUsages: Set<TextureUsage>;\r\n\r\n    // Usable dimensions. When multisample is used only 2d is allowed. \r\n    dimensions: Set<TextureDimension>;\r\n\r\n    // All aspects for format.\r\n    aspects: Set<TextureAspect>;\r\n\r\n    // Usable sample types.\r\n    sampleTypes: {\r\n        primary: TextureSampleType,\r\n        all: Set<TextureSampleType>;\r\n    },\r\n\r\n    // Usage as render attachment.\r\n    renderAttachment: {\r\n        resolveTarget: boolean;\r\n        multisample: boolean;\r\n        blendable: boolean;\r\n    };\r\n\r\n    // Usages as storage.\r\n    storage: {\r\n        readonly: boolean;\r\n        writeonly: boolean;\r\n        readwrite: boolean;\r\n    };\r\n\r\n    // Usages as copy target or destination.\r\n    copy: {\r\n        textureSource: boolean;\r\n        textureTarget: boolean;\r\n        imageSource: boolean;\r\n        imageTarget: boolean;\r\n    };\r\n};\r\n\r\ntype TextureFormatCapabilityDefinition = {\r\n    // Format.\r\n    format: TextureFormat;\r\n\r\n    // Compression level. Higher level means higher compression.\r\n    compressionLevel: number;\r\n\r\n    // Aspects of texture. Only really relevant for depth and stencil textures.\r\n    aspect: {\r\n        types: Array<TextureAspect>;\r\n        byteCost: number;\r\n    };\r\n\r\n    // Usable dimensions. When multisample is used only 2d is allowed. \r\n    dimensions: Array<TextureDimension>;\r\n\r\n    // Primitive type that can be used in shaders.\r\n    type: Array<TextureSampleType>;\r\n\r\n    // Usages\r\n    usage: {\r\n        // Texture can be bound.\r\n        textureBinding: boolean;\r\n\r\n        // Texture can be renderd into\r\n        renderAttachment: {\r\n            resolveTarget: boolean;\r\n            multisample: boolean;\r\n            blendable: boolean;\r\n        } | false;\r\n\r\n        // Can be used to copy textures.\r\n        copy: {\r\n            textureSource: boolean;\r\n            textureDestination: boolean;\r\n            imageSource: boolean;\r\n            imageDestination: boolean;\r\n        } | false;\r\n\r\n        // Can be used as a storage.\r\n        storage: {\r\n            readonly: boolean;\r\n            writeonly: boolean;\r\n            readwrite: boolean;\r\n        } | false;\r\n    };\r\n};","import { Dictionary, Exception } from '@kartoffelgames/core';\r\nimport { TextureFormat } from '../../constant/texture-format.enum';\r\nimport { TextureSampleType } from '../../constant/texture-sample-type.enum';\r\nimport { TextureUsage } from '../../constant/texture-usage.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { TextureFormatCapability } from './texture-format-capabilities';\r\n\r\nexport class TextureMipGenerator {\r\n    private static readonly WORKGROUP_SIZE_PER_DIMENSION = 8;\r\n\r\n    // TODO: Cache static for each device.\r\n    private readonly mDevice: GpuDevice;\r\n    private readonly mFormatBindGroupsLayouts2d: Dictionary<TextureFormat, GPUBindGroupLayout> = new Dictionary<TextureFormat, GPUBindGroupLayout>();\r\n    private readonly mFormatBindGroupsLayouts3d: Dictionary<TextureFormat, GPUBindGroupLayout> = new Dictionary<TextureFormat, GPUBindGroupLayout>();\r\n    private readonly mFormatPipelines2d: Dictionary<TextureFormat, GPUComputePipeline> = new Dictionary<TextureFormat, GPUComputePipeline>();\r\n    private readonly mFormatPipelines3d: Dictionary<TextureFormat, GPUComputePipeline> = new Dictionary<TextureFormat, GPUComputePipeline>();\r\n\r\n    public constructor(pDevice: GpuDevice) {\r\n        this.mDevice = pDevice;\r\n\r\n        this.mFormatPipelines2d = new Dictionary<TextureFormat, GPUComputePipeline>();\r\n        this.mFormatBindGroupsLayouts2d = new Dictionary<TextureFormat, GPUBindGroupLayout>();\r\n        this.mFormatPipelines3d = new Dictionary<TextureFormat, GPUComputePipeline>();\r\n        this.mFormatBindGroupsLayouts3d = new Dictionary<TextureFormat, GPUBindGroupLayout>();\r\n    }\r\n\r\n    /**\r\n     * Generate mips for textures.\r\n     * \r\n     * @param pDevice - Device reference.\r\n     * @param pTexture - Filled texture.sdsd\r\n     */\r\n    public generateMips(pTexture: GPUTexture): void {\r\n        const lTextureCapability: TextureFormatCapability = this.mDevice.formatValidator.capabilityOf(pTexture.format as TextureFormat);\r\n\r\n        // Use compute shader or fallback to cpu generation of mips.\r\n        if (lTextureCapability.storage.writeonly && lTextureCapability.textureUsages.has(TextureUsage.TextureBinding)) {\r\n            switch (pTexture.dimension) {\r\n                case '1d': {\r\n                    break; // TODO;\r\n                }\r\n                case '2d': {\r\n                    this.initComputeShader2d(lTextureCapability);\r\n                    this.generateMipsWithCompute2d(this.mDevice.gpu, pTexture, lTextureCapability);\r\n                    break;\r\n                }\r\n                case '3d': {\r\n                    break; // TODO;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            // TODO: Fallback CPU generation.\r\n            switch (pTexture.dimension) {\r\n                case '1d': {\r\n                    break; // TODO;\r\n                }\r\n                case '2d': {\r\n                    break; // TODO;\r\n                }\r\n                case '3d': {\r\n                    break; // TODO;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create mips for texture with compute shader.\r\n     * \r\n     * @param pTexture - Target texture.\r\n     */\r\n    private generateMipsWithCompute2d(pGpuDevice: GPUDevice, pTexture: GPUTexture, pFormat: TextureFormatCapability) {\r\n        // Calulate mip count.\r\n        const lMipCount = 1 + Math.floor(Math.log2(Math.max(pTexture.width, pTexture.height)));\r\n\r\n        // Read cached pipeline and layout.\r\n        const lPipeline: GPUComputePipeline = this.mFormatPipelines2d.get(pFormat.format)!;\r\n        const lBindGroupLayout: GPUBindGroupLayout = this.mFormatBindGroupsLayouts2d.get(pFormat.format)!;\r\n\r\n        // Create command encoder.\r\n        const lCommandEncoder: GPUCommandEncoder = pGpuDevice.createCommandEncoder();\r\n\r\n        const lComputePass: GPUComputePassEncoder = lCommandEncoder.beginComputePass();\r\n        lComputePass.setPipeline(lPipeline);\r\n\r\n        for (let lMipLevel: number = 1; lMipLevel < lMipCount; lMipLevel++) {\r\n            // Create and add bind group with needed texture resources.\r\n            lComputePass.setBindGroup(0, pGpuDevice.createBindGroup({\r\n                layout: lBindGroupLayout,\r\n                entries: [\r\n                    {\r\n                        binding: 0,\r\n                        resource: pTexture.createView({\r\n                            format: pFormat.format as GPUTextureFormat,\r\n                            dimension: '2d-array',\r\n                            baseMipLevel: lMipLevel - 1,\r\n                            mipLevelCount: 1\r\n                        })\r\n                    },\r\n                    {\r\n                        binding: 1,\r\n                        resource: pTexture.createView({\r\n                            format: pFormat.format as GPUTextureFormat,\r\n                            dimension: '2d-array',\r\n                            baseMipLevel: lMipLevel,\r\n                            mipLevelCount: 1\r\n                        })\r\n                    }\r\n                ]\r\n            }));\r\n\r\n            // Calculate needed single pixel invocations to cover complete mipmap level texture. \r\n            // Prevent dimension from becoming zero.\r\n            const lMipMapDimensionX: number = Math.floor(pTexture.width / Math.pow(2, lMipLevel)) || 1;\r\n            const lMipMapDimensionY: number = Math.floor(pTexture.height / Math.pow(2, lMipLevel)) || 1;\r\n\r\n            // Calculate needed compute workgroup invocations to cover complete mipmap level texture.\r\n            const lWorkgroupCountForX = Math.ceil((lMipMapDimensionX / TextureMipGenerator.WORKGROUP_SIZE_PER_DIMENSION));\r\n            const lWorkgroupCountForY = Math.ceil((lMipMapDimensionY / TextureMipGenerator.WORKGROUP_SIZE_PER_DIMENSION));\r\n\r\n            lComputePass.dispatchWorkgroups(lWorkgroupCountForX, lWorkgroupCountForY, 1);\r\n        }\r\n\r\n        // End computepass after all mips are generated.\r\n        lComputePass.end();\r\n\r\n        // Push all commands to gpu queue.\r\n        pGpuDevice.queue.submit([lCommandEncoder.finish()]);\r\n    }\r\n\r\n    // TODO: 3D\r\n    // lMipCount = 1 + Math.floor(Math.log2(Math.max(this.width, this.height, this.depth)));\r\n\r\n    private initComputeShader2d(pFormat: TextureFormatCapability) {\r\n        // Generate cache when missed.\r\n        if (!this.mFormatPipelines2d.has(pFormat.format)) {\r\n            const lSampleTypeName: 'f32' | 'u32' | 'i32' = (() => {\r\n                switch (pFormat.sampleTypes.primary) {\r\n                    case TextureSampleType.Float: return 'f32';\r\n                    case TextureSampleType.UnsignedInteger: return 'u32';\r\n                    case TextureSampleType.SignedInteger: return 'i32';\r\n                    default: {\r\n                        throw new Exception(`Can't generate mip for textures that cant be filtered.`, this);\r\n                    }\r\n                }\r\n            })();\r\n\r\n            // Shader code. Insert format.\r\n            const lShader: GPUShaderModule = this.mDevice.gpu.createShaderModule({\r\n                code: `\r\n                        @group(0) @binding(0) var previousMipLevel: texture_2d_array<${lSampleTypeName}>;\r\n                        @group(0) @binding(1) var nextMipLevel: texture_storage_2d_array<${pFormat.format}, write>;\r\n\r\n                        @compute @workgroup_size(${TextureMipGenerator.WORKGROUP_SIZE_PER_DIMENSION}, ${TextureMipGenerator.WORKGROUP_SIZE_PER_DIMENSION})\r\n                        fn computeMipMap(@builtin(global_invocation_id) id: vec3<u32>) {\r\n                            const lOffset: vec2<u32> = vec2<u32>(0u, 1u);\r\n\r\n                            let lTextureLayerCount: u32 = textureNumLayers(previousMipLevel);\r\n\r\n                            var lColor: vec4<${lSampleTypeName}>;\r\n                            for(var lArrayLayer = 0u; lArrayLayer < lTextureLayerCount; lArrayLayer++){\r\n                                lColor = (\r\n                                    textureLoad(previousMipLevel, 2u * id.xy + lOffset.xx, lArrayLayer, 0) +\r\n                                    textureLoad(previousMipLevel, 2u * id.xy + lOffset.xy, lArrayLayer, 0) +\r\n                                    textureLoad(previousMipLevel, 2u * id.xy + lOffset.yx, lArrayLayer, 0) +\r\n                                    textureLoad(previousMipLevel, 2u * id.xy + lOffset.yy, lArrayLayer, 0)\r\n                                ) * 0.25;\r\n                                textureStore(nextMipLevel, id.xy, lArrayLayer, lColor);\r\n                            }\r\n                        }\r\n                    `\r\n            });\r\n\r\n            // Generate bind group layout.\r\n            const lBindGroupLayout = this.mDevice.gpu.createBindGroupLayout({\r\n                entries: [\r\n                    {\r\n                        binding: 0,\r\n                        visibility: GPUShaderStage.COMPUTE,\r\n                        texture: {\r\n                            sampleType: pFormat.sampleTypes.primary,\r\n                            viewDimension: '2d-array'\r\n                        }\r\n                    },\r\n                    {\r\n                        binding: 1,\r\n                        visibility: GPUShaderStage.COMPUTE,\r\n                        storageTexture: {\r\n                            access: 'write-only',\r\n                            format: pFormat.format as GPUTextureFormat,\r\n                            viewDimension: '2d-array'\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n            // Create pipeline.\r\n            const lPipeline: GPUComputePipeline = this.mDevice.gpu.createComputePipeline({\r\n                layout: this.mDevice.gpu.createPipelineLayout({\r\n                    bindGroupLayouts: [lBindGroupLayout]\r\n                }),\r\n                compute: {\r\n                    module: lShader,\r\n                    entryPoint: 'computeMipMap'\r\n                }\r\n            });\r\n\r\n            // Safe pipeline and bind group layout.\r\n            this.mFormatPipelines2d.set(pFormat.format, lPipeline);\r\n            this.mFormatBindGroupsLayouts2d.set(pFormat.format, lBindGroupLayout);\r\n        }\r\n    }\r\n}","import { Exception } from '@kartoffelgames/core';\r\nimport { CompareFunction } from '../../constant/compare-function.enum';\r\nimport { FilterMode } from '../../constant/filter-mode.enum';\r\nimport { SamplerType } from '../../constant/sampler-type.enum';\r\nimport { WrappingMode } from '../../constant/wrapping-mode.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { GpuObject } from '../gpu/object/gpu-object';\r\nimport { IGpuObjectNative } from '../gpu/object/interface/i-gpu-object-native';\r\nimport { SamplerMemoryLayout, SamplerMemoryLayoutInvalidationType } from '../memory_layout/texture/sampler-memory-layout';\r\n\r\nexport class TextureSampler extends GpuObject<GPUSampler, TextureSamplerInvalidationType> implements IGpuObjectNative<GPUSampler> {\r\n    private mCompare: CompareFunction | null;\r\n    private mLodMaxClamp: number;\r\n    private mLodMinClamp: number;\r\n    private mMagFilter: FilterMode;\r\n    private mMaxAnisotropy: number;\r\n    private readonly mMemoryLayout: SamplerMemoryLayout;\r\n    private mMinFilter: FilterMode;\r\n    private mMipmapFilter: FilterMode;\r\n    private mWrapMode: WrappingMode;\r\n\r\n    /**\r\n     * When provided the sampler will be a comparison sampler with the specified compare function.\r\n     */\r\n    public get compare(): CompareFunction | null {\r\n        return this.mCompare;\r\n    } set compare(pValue: CompareFunction | null) {\r\n        this.mCompare = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Specifies the maximum levels of detail, respectively, used internally when sampling a texture.\r\n     */\r\n    public get lodMaxClamp(): number {\r\n        return this.mLodMaxClamp;\r\n    } set lodMaxClamp(pValue: number) {\r\n        this.mLodMaxClamp = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Specifies the minimum levels of detail, respectively, used internally when sampling a texture.\r\n     */\r\n    public get lodMinClamp(): number {\r\n        return this.mLodMinClamp;\r\n    } set lodMinClamp(pValue: number) {\r\n        this.mLodMinClamp = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * How the texture is sampled when a texel covers more than one pixel.\r\n     */\r\n    public get magFilter(): FilterMode {\r\n        return this.mMagFilter;\r\n    } set magFilter(pValue: FilterMode) {\r\n        this.mMagFilter = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Specifies the maximum anisotropy value clamp used by the sampler.\r\n     */\r\n    public get maxAnisotropy(): number {\r\n        return this.mMaxAnisotropy;\r\n    } set maxAnisotropy(pValue: number) {\r\n        this.mMaxAnisotropy = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Sampler memory layout.\r\n     */\r\n    public get memoryLayout(): SamplerMemoryLayout {\r\n        return this.mMemoryLayout;\r\n    }\r\n\r\n    /**\r\n     * How the texture is sampled when a texel covers less than one pixel.\r\n     */\r\n    public get minFilter(): FilterMode {\r\n        return this.mMinFilter;\r\n    } set minFilter(pValue: FilterMode) {\r\n        this.mMinFilter = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Specifies behavior for sampling between mipmap levels.\r\n     */\r\n    public get mipmapFilter(): FilterMode {\r\n        return this.mMipmapFilter;\r\n    } set mipmapFilter(pValue: FilterMode) {\r\n        this.mMipmapFilter = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Native gpu object.\r\n     */\r\n    public override get native(): GPUSampler {\r\n        return super.native;\r\n    }\r\n\r\n    /**\r\n     * Texture sampler edge wrap mode.\r\n     */\r\n    public get wrapMode(): WrappingMode {\r\n        return this.mWrapMode;\r\n    } set wrapMode(pValue: WrappingMode) {\r\n        this.mWrapMode = pValue;\r\n\r\n        // Invalidate native object.\r\n        this.invalidate(TextureSamplerInvalidationType.SamplerConfig);\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Sampler memory layout.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: SamplerMemoryLayout) {\r\n        super(pDevice);\r\n\r\n        this.mMemoryLayout = pLayout;\r\n\r\n        // Set defaults.\r\n        this.mCompare = null;\r\n        this.mWrapMode = WrappingMode.ClampToEdge;\r\n        this.mMagFilter = FilterMode.Linear;\r\n        this.mMinFilter = FilterMode.Linear;\r\n        this.mMipmapFilter = FilterMode.Linear;\r\n        this.mLodMinClamp = 0;\r\n        this.mLodMaxClamp = 32;\r\n        this.mMaxAnisotropy = 16;\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(TextureSamplerInvalidationType.Layout);\r\n        }, [SamplerMemoryLayoutInvalidationType.SamplerType]);\r\n    }\r\n\r\n    /**\r\n     * Generate native bind data group layout object.\r\n     */\r\n    protected override generateNative(): GPUSampler {\r\n        // Create sampler descriptor.\r\n        const lSamplerOptions: GPUSamplerDescriptor = {\r\n            label: 'Texture-Sampler',\r\n            addressModeU: this.wrapMode,\r\n            addressModeV: this.wrapMode,\r\n            addressModeW: this.wrapMode,\r\n            magFilter: this.magFilter,\r\n            minFilter: this.minFilter,\r\n            mipmapFilter: this.mipmapFilter,\r\n            lodMaxClamp: this.lodMaxClamp,\r\n            lodMinClamp: this.lodMinClamp,\r\n            maxAnisotropy: this.maxAnisotropy\r\n        };\r\n\r\n        // Add compare function when sampler is a compare sampler.\r\n        if (this.memoryLayout.samplerType === SamplerType.Comparison) {\r\n            if (!this.compare) {\r\n                throw new Exception(`No compare function is set for a comparison sampler.`, this);\r\n            }\r\n            lSamplerOptions.compare = this.compare;\r\n        }\r\n\r\n        return this.device.gpu.createSampler(lSamplerOptions);\r\n    }\r\n}\r\n\r\nexport enum TextureSamplerInvalidationType {\r\n    Layout = 'LayoutChange',\r\n    SamplerConfig = 'SamplerConfigChange'\r\n}","import { TextureDimension } from '../../constant/texture-dimension.enum';\r\nimport { GpuDevice } from '../gpu/gpu-device';\r\nimport { TextureMemoryLayout, TextureMemoryLayoutInvalidationType } from '../memory_layout/texture/texture-memory-layout';\r\nimport { BaseTexture } from './base-texture';\r\n\r\nexport class VideoTexture extends BaseTexture<VideoTextureInvalidationType> {\r\n    private mTexture: GPUTexture | null;\r\n    private readonly mVideo: HTMLVideoElement;\r\n\r\n    /**\r\n     * Texture height.\r\n     */\r\n    public get height(): number {\r\n        return this.mVideo.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * If video should be looped.\r\n     */\r\n    public get loop(): boolean {\r\n        return this.mVideo.loop;\r\n    } set loop(pValue: boolean) {\r\n        this.mVideo.loop = pValue;\r\n    }\r\n\r\n    /**\r\n     * Video source.\r\n     */\r\n    public get source(): string {\r\n        return this.mVideo.src;\r\n    } set source(pValue: string) {\r\n        this.mVideo.src = pValue;\r\n    }\r\n\r\n    /**\r\n     * Video element.\r\n     */\r\n    public get video(): HTMLVideoElement {\r\n        return this.mVideo;\r\n    }\r\n\r\n    /**\r\n     * Video width.\r\n     */\r\n    public get width(): number {\r\n        return this.mVideo.videoWidth;\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param pDevice - Device.\r\n     * @param pLayout - Texture memory layout.\r\n     * @param pDepth - Texture depth.\r\n     */\r\n    public constructor(pDevice: GpuDevice, pLayout: TextureMemoryLayout) {\r\n        super(pDevice, pLayout);\r\n\r\n        this.mTexture = null;\r\n\r\n        // Create video.\r\n        this.mVideo = new HTMLVideoElement();\r\n        this.mVideo.loop = false;\r\n        this.mVideo.muted = true; // Allways muted.\r\n\r\n        // Register change listener for layout changes.\r\n        pLayout.addInvalidationListener(() => {\r\n            this.invalidate(VideoTextureInvalidationType.Layout);\r\n        }, [TextureMemoryLayoutInvalidationType.Dimension, TextureMemoryLayoutInvalidationType.Format]);\r\n\r\n        // Update video texture on every frame.\r\n        this.device.addFrameChangeListener(() => {\r\n            if (this.mTexture) {\r\n                // TODO: Load current view image into texture.\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pause video.\r\n     */\r\n    public pause(): void {\r\n        this.mVideo.pause();\r\n    }\r\n\r\n    /**\r\n     * Play video.\r\n     */\r\n    public play(): void {\r\n        this.mVideo.play();\r\n    }\r\n\r\n    /**\r\n     * Destory texture object.\r\n     * @param _pNativeObject - Native canvas texture.\r\n     */\r\n    protected override destroyNative(_pNativeObject: GPUTextureView): void {\r\n        this.mTexture?.destroy();\r\n        this.mTexture = null;\r\n    }\r\n\r\n    /**\r\n     * Generate native canvas texture view.\r\n     */\r\n    protected override generateNative(): GPUTextureView {\r\n        // TODO: Validate format based on layout. Maybe replace used format.\r\n\r\n        // Generate gpu dimension from memory layout dimension.\r\n        const lGpuDimension: GPUTextureDimension = (() => {\r\n            switch (this.layout.dimension) {\r\n                case TextureDimension.OneDimension: {\r\n                    return '1d';\r\n                }\r\n                case TextureDimension.TwoDimension: {\r\n                    return '2d';\r\n                }\r\n                case TextureDimension.TwoDimensionArray: {\r\n                    return '2d';\r\n                }\r\n                case TextureDimension.Cube: {\r\n                    return '2d';\r\n                }\r\n                case TextureDimension.CubeArray: {\r\n                    return '2d';\r\n                }\r\n                case TextureDimension.ThreeDimension: {\r\n                    return '3d';\r\n                }\r\n            }\r\n        })();\r\n\r\n        // Create texture with set size, format and usage. Save it for destorying later.\r\n        this.mTexture = this.device.gpu.createTexture({\r\n            label: 'Frame-Buffer-Texture',\r\n            size: [this.width, this.height, 1],\r\n            format: this.layout.format as GPUTextureFormat,\r\n            usage: this.usage,\r\n            dimension: lGpuDimension\r\n        });\r\n\r\n        // TODO: View descriptor.\r\n        return this.mTexture.createView({\r\n            format: this.layout.format as GPUTextureFormat,\r\n            dimension: this.layout.dimension\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On usage extened. Triggers a texture rebuild.\r\n     */\r\n    protected override onUsageExtend(): void {\r\n        this.invalidate(VideoTextureInvalidationType.Usage);\r\n    }\r\n}\r\n\r\nexport enum VideoTextureInvalidationType {\r\n    Layout = 'LayoutChange',\r\n    Usage = 'UsageChange'\r\n}","export enum BufferUsage {\r\n    None = 0,\r\n    Index = GPUBufferUsage.INDEX,\r\n    Vertex = GPUBufferUsage.VERTEX,\r\n    Uniform = GPUBufferUsage.UNIFORM,\r\n    Storage = GPUBufferUsage.STORAGE,\r\n    Indirect = GPUBufferUsage.INDIRECT,\r\n    CopySource = GPUBufferUsage.COPY_SRC,\r\n    CopyDestination = GPUBufferUsage.COPY_DST,\r\n\r\n    // No public available\r\n    // MapWrite = GPUBufferUsage.MAP_WRITE,\r\n    // MapRead = GPUBufferUsage.MAP_READ,\r\n    // QueryResolve = GPUBufferUsage.QUERY_RESOLVE\r\n}","export enum CompareFunction {\r\n    Never = 'never',\r\n    Less = 'less',\r\n    Equal = 'equal',\r\n    LessEqual = 'less-equal',\r\n    Greater = 'greater',\r\n    NotEqual = 'not-equal',\r\n    GreaterEqual = 'greater-equal',\r\n    Allways = 'always'\r\n}","export enum ComputeStage {\r\n    None = 0,\r\n    Fragment = GPUShaderStage.FRAGMENT,\r\n    Vertex = GPUShaderStage.VERTEX,\r\n    Compute = GPUShaderStage.COMPUTE\r\n}\r\n","export enum FilterMode {\r\n    Nearest = 'nearest',\r\n    Linear = 'linear'\r\n}","export enum PrimitiveCullMode {\r\n    None = 'none',\r\n    Front = 'front',\r\n    Back = 'back'\r\n}","export enum PrimitiveFrontFace {\r\n    CounterClockWise = 'cw',\r\n    ClockWise = 'ccw'\r\n}","export enum PrimitiveTopology {\r\n    PointList = 'point-list',\r\n    LineList = 'line-list',\r\n    LineStrip = 'line-strip',\r\n    TriangleList = 'triangle-list',\r\n    TriangleStrip = 'triangle-strip'\r\n}","export enum SamplerType {\r\n    Filter = 'filtering',\r\n    NoneFiltering = 'non-filtering',\r\n    Comparison = 'comparison'\r\n}","export enum StorageBindingType {\r\n    None = 0,\r\n    Read = 1,\r\n    Write = 2,\r\n    ReadWrite = 4\r\n}","export enum TextureAspect {\r\n    Red = 'red',\r\n    Green = 'green',\r\n    Blue = 'blue',\r\n    Alpha = 'alpha',\r\n    Stencil = 'stencil',\r\n    Depth = 'depth',\r\n}","export enum TextureDimension {\r\n    OneDimension = '1d',\r\n    TwoDimension = '2d',\r\n    TwoDimensionArray = '2d-array',\r\n    Cube = 'cube',\r\n    CubeArray = 'cube-array',\r\n    ThreeDimension = '3d'\r\n}","export enum TextureFormat {\r\n    // 8-bit formats\r\n    R8unorm = 'r8unorm',\r\n    R8snorm = 'r8snorm',\r\n    R8uint = 'r8uint',\r\n    R8sint = 'r8sint',\r\n\r\n    // 16-bit formats\r\n    R16uint = 'r16uint',\r\n    R16sint = 'r16sint',\r\n    R16float = 'r16float',\r\n    Rg8unorm = 'rg8unorm',\r\n    Rg8snorm = 'rg8snorm',\r\n    Rg8uint = 'rg8uint',\r\n    Rg8sint = 'rg8sint',\r\n\r\n    // 32-bit formats\r\n    R32uint = 'r32uint',\r\n    R32sint = 'r32sint',\r\n    R32float = 'r32float',\r\n    Rg16uint = 'rg16uint',\r\n    Rg16sint = 'rg16sint',\r\n    Rg16float = 'rg16float',\r\n    Rgba8unorm = 'rgba8unorm',\r\n    Rgba8unormSrgb = 'rgba8unorm-srgb',\r\n    Rgba8snorm = 'rgba8snorm',\r\n    Rgba8uint = 'rgba8uint',\r\n    Rgba8sint = 'rgba8sint',\r\n    Bgra8unorm = 'bgra8unorm',\r\n    Bgra8unormSrgb = 'bgra8unorm-srgb',\r\n\r\n    // Packed 32-bit formats\r\n    Rgb9e5ufloat = 'rgb9e5ufloat',\r\n    Rgb10a2uint = 'rgb10a2uint',\r\n    Rgb10a2unorm = 'rgb10a2unorm',\r\n    Rg11b10ufloat = 'rg11b10ufloat',\r\n\r\n    // 64-bit formats\r\n    Rg32uint = 'rg32uint',\r\n    Rg32sint = 'rg32sint',\r\n    Rg32float = 'rg32float',\r\n    Rgba16uint = 'rgba16uint',\r\n    Rgba16sint = 'rgba16sint',\r\n    Rgba16float = 'rgba16float',\r\n\r\n    // 128-bit formats\r\n    Rgba32uint = 'rgba32uint',\r\n    Rgba32sint = 'rgba32sint',\r\n    Rgba32float = 'rgba32float',\r\n\r\n    // Depth/stencil formats\r\n    Stencil8 = 'stencil8',\r\n    Depth16unorm = 'depth16unorm',\r\n    Depth24plus = 'depth24plus',\r\n    Depth24plusStencil8 = 'depth24plusStencil8',\r\n    Depth32float = 'depth32float',\r\n\r\n    // \"depth32float-stencil8\" feature\r\n    Depth32floatStencil8 = 'depth32floatStencil8',\r\n\r\n    // BC compressed formats usable if \"texture-compression-bc\" is both\r\n    // supported by the device/user agent and enabled in requestDevice.\r\n    Bc1RgbaUnorm = 'bc1-rgba-unorm',\r\n    Bc1RgbaUnormSrgb = 'bc1-rgba-unorm-srgb',\r\n    Bc2RgbaUnorm = 'bc2-rgba-unorm',\r\n    Bc2RgbaUnormSrgb = 'bc2-rgba-unorm-srgb',\r\n    Bc3RgbaUnorm = 'bc3-rgba-unorm',\r\n    Bc3RgbaUnormSrgb = 'bc3-rgba-unorm-srgb',\r\n    Bc4Runorm = 'bc4-r-unorm',\r\n    Bc4Rsnorm = 'bc4-r-snorm',\r\n    Bc5RgUnorm = 'bc5-rg-unorm',\r\n    Bc5RgSnorm = 'bc5-rg-snorm',\r\n    Bc6hRgbUfloat = 'bc6h-rgb-ufloat',\r\n    Bc6hRgbFloat = 'bc6h-rgb-float',\r\n    Bc7RgbaUnorm = 'bc7-rgba-unorm',\r\n    Bc7RgbaUnormSrgb = 'bc7-rgba-unorm-srgb',\r\n\r\n    // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\r\n    // supported by the device/user agent and enabled in requestDevice.\r\n    Etc2Rgb8unorm = 'etc2-rgb8unorm',\r\n    Etc2Rgb8unormSrgb = 'etc2-rgb8unorm-srgb',\r\n    Etc2Rgb8a1unorm = 'etc2-rgb8a1unorm',\r\n    Etc2Rgb8a1unormSrgb = 'etc2-rgb8a1unorm-srgb',\r\n    Etc2Rgba8unorm = 'etc2-rgba8unorm',\r\n    Etc2Rgba8unormSrgb = 'etc2-rgba8unorm-srgb',\r\n    EacR11unorm = 'eac-r11unorm',\r\n    EacR11snorm = 'eac-r11snorm',\r\n    EacRg11unorm = 'eac-rg11unorm',\r\n    EacRg11snorm = 'eac-rg11snorm',\r\n\r\n    // ASTC compressed formats usable if \"texture-compression-astc\" is both\r\n    // supported by the device/user agent and enabled in requestDevice.\r\n    Astc4x4unorm = 'astc-4x4-unorm',\r\n    Astc4x4unormSrgb = 'astc-4x4-unorm-srgb',\r\n    Astc5x4unorm = 'astc-5x4-unorm',\r\n    Astc5x4unormSrgb = 'astc-5x4-unorm-srgb',\r\n    Astc5x5unorm = 'astc-5x5-unorm',\r\n    Astc5x5unormSrgb = 'astc-5x5-unorm-srgb',\r\n    Astc6x5unorm = 'astc-6x5-unorm',\r\n    Astc6x5unormSrgb = 'astc-6x5-unorm-srgb',\r\n    Astc6x6unorm = 'astc-6x6-unorm',\r\n    Astc6x6unormSrgb = 'astc-6x6-unorm-srgb',\r\n    Astc8x5unorm = 'astc-8x5-unorm',\r\n    Astc8x5unormSrgb = 'astc-8x5-unorm-srgb',\r\n    Astc8x6unorm = 'astc-8x6-unorm',\r\n    Astc8x6unormSrgb = 'astc-8x6-unorm-srgb',\r\n    Astc8x8unorm = 'astc-8x8-unorm',\r\n    Astc8x8unormSrgb = 'astc-8x8-unorm-srgb',\r\n    Astc10x5unorm = 'astc-10x5-unorm',\r\n    Astc10x5unormSrgb = 'astc-10x5-unorm-srgb',\r\n    Astc10x6unorm = 'astc-10x6-unorm',\r\n    Astc10x6unormSrgb = 'astc-10x6-unorm-srgb',\r\n    Astc10x8unorm = 'astc-10x8-unorm',\r\n    Astc10x8unormSrgb = 'astc-10x8-unorm-srgb',\r\n    Astc10x10unorm = 'astc-10x10-unorm',\r\n    Astc10x10unormSrgb = 'astc-10x10-unorm-srgb',\r\n    Astc12x10unorm = 'astc-12x10-unorm',\r\n    Astc12x10unormSrgb = 'astc-12x10-unorm-srgb',\r\n    Astc12x12unorm = 'astc-12x12-unorm',\r\n    Astc12x12unormSrgb = 'astc-12x12-unorm-srgb'\r\n}","export enum TextureOperation {\r\n    Keep = 'keep',\r\n    Clear = 'clear'\r\n}","export enum TextureSampleType {\r\n    Float = 'float',\r\n    SignedInteger = 'sint',\r\n    UnsignedInteger = 'uint',\r\n    UnfilterableFloat = 'unfilterable-float',\r\n    Depth = 'depth'\r\n}","export enum TextureUsage {\r\n    None = 0,\r\n    CopySource = GPUTextureUsage.COPY_SRC,\r\n    CopyDestination = GPUTextureUsage.COPY_DST,\r\n    TextureBinding = GPUTextureUsage.TEXTURE_BINDING,\r\n    Storage = GPUTextureUsage.STORAGE_BINDING,\r\n    RenderAttachment = GPUTextureUsage.RENDER_ATTACHMENT,\r\n}","export enum VertexParameterStepMode {\r\n    Vertex = 'vertex-step',\r\n    Index = 'index-step',\r\n    Instance = 'instance-step',\r\n}","export enum WrappingMode {\r\n    ClampToEdge = 'clamp-to-edge',\r\n    Repeat = 'repeat',\r\n    MirrorRepeat = 'mirror-repeat'\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};Object.defineProperty(exports,\"__esModule\",{value:true});var named_references_1=require(\"./named-references\");var numeric_unicode_map_1=require(\"./numeric-unicode-map\");var surrogate_pairs_1=require(\"./surrogate-pairs\");var allNamedReferences=__assign(__assign({},named_references_1.namedReferences),{all:named_references_1.namedReferences.html5});function replaceUsingRegExp(macroText,macroRegExp,macroReplacer){macroRegExp.lastIndex=0;var replaceMatch=macroRegExp.exec(macroText);var replaceResult;if(replaceMatch){replaceResult=\"\";var replaceLastIndex=0;do{if(replaceLastIndex!==replaceMatch.index){replaceResult+=macroText.substring(replaceLastIndex,replaceMatch.index)}var replaceInput=replaceMatch[0];replaceResult+=macroReplacer(replaceInput);replaceLastIndex=replaceMatch.index+replaceInput.length}while(replaceMatch=macroRegExp.exec(macroText));if(replaceLastIndex!==macroText.length){replaceResult+=macroText.substring(replaceLastIndex)}}else{replaceResult=macroText}return replaceResult}var encodeRegExps={specialChars:/[<>'\"&]/g,nonAscii:/[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,nonAsciiPrintable:/[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,nonAsciiPrintableOnly:/[\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g,extensive:/[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g};var defaultEncodeOptions={mode:\"specialChars\",level:\"all\",numeric:\"decimal\"};function encode(text,_a){var _b=_a===void 0?defaultEncodeOptions:_a,_c=_b.mode,mode=_c===void 0?\"specialChars\":_c,_d=_b.numeric,numeric=_d===void 0?\"decimal\":_d,_e=_b.level,level=_e===void 0?\"all\":_e;if(!text){return\"\"}var encodeRegExp=encodeRegExps[mode];var references=allNamedReferences[level].characters;var isHex=numeric===\"hexadecimal\";return replaceUsingRegExp(text,encodeRegExp,(function(input){var result=references[input];if(!result){var code=input.length>1?surrogate_pairs_1.getCodePoint(input,0):input.charCodeAt(0);result=(isHex?\"&#x\"+code.toString(16):\"&#\"+code)+\";\"}return result}))}exports.encode=encode;var defaultDecodeOptions={scope:\"body\",level:\"all\"};var strict=/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;var attribute=/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;var baseDecodeRegExps={xml:{strict:strict,attribute:attribute,body:named_references_1.bodyRegExps.xml},html4:{strict:strict,attribute:attribute,body:named_references_1.bodyRegExps.html4},html5:{strict:strict,attribute:attribute,body:named_references_1.bodyRegExps.html5}};var decodeRegExps=__assign(__assign({},baseDecodeRegExps),{all:baseDecodeRegExps.html5});var fromCharCode=String.fromCharCode;var outOfBoundsChar=fromCharCode(65533);var defaultDecodeEntityOptions={level:\"all\"};function getDecodedEntity(entity,references,isAttribute,isStrict){var decodeResult=entity;var decodeEntityLastChar=entity[entity.length-1];if(isAttribute&&decodeEntityLastChar===\"=\"){decodeResult=entity}else if(isStrict&&decodeEntityLastChar!==\";\"){decodeResult=entity}else{var decodeResultByReference=references[entity];if(decodeResultByReference){decodeResult=decodeResultByReference}else if(entity[0]===\"&\"&&entity[1]===\"#\"){var decodeSecondChar=entity[2];var decodeCode=decodeSecondChar==\"x\"||decodeSecondChar==\"X\"?parseInt(entity.substr(3),16):parseInt(entity.substr(2));decodeResult=decodeCode>=1114111?outOfBoundsChar:decodeCode>65535?surrogate_pairs_1.fromCodePoint(decodeCode):fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode]||decodeCode)}}return decodeResult}function decodeEntity(entity,_a){var _b=(_a===void 0?defaultDecodeEntityOptions:_a).level,level=_b===void 0?\"all\":_b;if(!entity){return\"\"}return getDecodedEntity(entity,allNamedReferences[level].entities,false,false)}exports.decodeEntity=decodeEntity;function decode(text,_a){var _b=_a===void 0?defaultDecodeOptions:_a,_c=_b.level,level=_c===void 0?\"all\":_c,_d=_b.scope,scope=_d===void 0?level===\"xml\"?\"strict\":\"body\":_d;if(!text){return\"\"}var decodeRegExp=decodeRegExps[level][scope];var references=allNamedReferences[level].entities;var isAttribute=scope===\"attribute\";var isStrict=scope===\"strict\";return replaceUsingRegExp(text,decodeRegExp,(function(entity){return getDecodedEntity(entity,references,isAttribute,isStrict)}))}exports.decode=decode;\n//# sourceMappingURL=./index.js.map","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};\n//# sourceMappingURL=./named-references.js.map","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};\n//# sourceMappingURL=./numeric-unicode-map.js.map","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;\n//# sourceMappingURL=./surrogate-pairs.js.map","export default \"// ------------------------- Object Values ---------------------- //\\r\\n@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\\r\\n@group(0) @binding(1) var<storage, read> instancePositions: array<vec4<f32>>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- World Values ---------------------- //\\r\\n@group(1) @binding(0) var<uniform> viewProjectionMatrix: mat4x4<f32>;\\r\\n@group(1) @binding(1) var<uniform> timestamp: f32;\\r\\n\\r\\nstruct AmbientLight {\\r\\n    color: vec4<f32>\\r\\n}\\r\\n@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\\r\\n\\r\\nstruct PointLight {\\r\\n    position: vec4<f32>,\\r\\n    color: vec4<f32>,\\r\\n    range: f32\\r\\n}\\r\\n@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\\r\\n\\r\\n@group(1) @binding(4) var<storage, read_write> debugValue: f32;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- User Inputs ------------------------ //\\r\\n@group(2) @binding(0) var cubeTextureSampler: sampler;\\r\\n@group(2) @binding(1) var cubeTexture: texture_2d_array<f32>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// --------------------- Light calculations --------------------- //\\r\\n\\r\\n/**\\r\\n * Calculate point light output.\\r\\n */\\r\\nfn calculatePointLights(fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\\r\\n    // Count of point lights.\\r\\n    let pointLightCount: u32 = arrayLength(&pointLights);\\r\\n\\r\\n    var lightResult: vec4<f32> = vec4<f32>(0, 0, 0, 1);\\r\\n\\r\\n    for (var index: u32 = 0; index < pointLightCount; index++) {\\r\\n        var pointLight: PointLight = pointLights[index];\\r\\n\\r\\n        // Calculate light strength based on angle of incidence.\\r\\n        let lightDirection: vec4<f32> = normalize(pointLight.position - fragmentPosition);\\r\\n        let diffuse: f32 = max(dot(normal, lightDirection), 0.0);\\r\\n\\r\\n        lightResult += pointLight.color * diffuse;\\r\\n    }\\r\\n\\r\\n    return lightResult;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Apply lights to fragment color.\\r\\n */\\r\\nfn applyLight(colorIn: vec4<f32>, fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\\r\\n    var lightColor: vec4<f32> = vec4<f32>(0, 0, 0, 1);\\r\\n\\r\\n    lightColor += ambientLight.color;\\r\\n    lightColor += calculatePointLights(fragmentPosition, normal);\\r\\n\\r\\n    return lightColor * colorIn;\\r\\n}\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\nfn hash(x: u32) -> u32\\r\\n{\\r\\n    var result: u32 = x;\\r\\n    result ^= result >> 16;\\r\\n    result *= 0x7feb352du;\\r\\n    result ^= result >> 15;\\r\\n    result *= 0x846ca68bu;\\r\\n    result ^= result >> 16;\\r\\n    return result;\\r\\n}\\r\\n\\r\\nstruct VertexOut {\\r\\n    @builtin(position) position: vec4<f32>,\\r\\n    @location(0) uv: vec2<f32>,\\r\\n    @location(1) normal: vec4<f32>,\\r\\n    @location(2) fragmentPosition: vec4<f32>,\\r\\n    @interpolate(flat) @location(3) textureLayer: u32\\r\\n}\\r\\n\\r\\nstruct VertexIn {\\r\\n    @builtin(instance_index) instanceId : u32,\\r\\n    @location(0) position: vec4<f32>,\\r\\n    @location(1) uv: vec2<f32>,\\r\\n    @location(2) normal: vec4<f32>\\r\\n}\\r\\n\\r\\noverride animationSeconds: f32 = 3; \\r\\n\\r\\n@vertex\\r\\nfn vertex_main(vertex: VertexIn) -> VertexOut {\\r\\n    let textureLayers: f32 = f32(textureNumLayers(cubeTexture));\\r\\n\\r\\n    var instancePosition: vec4<f32> = instancePositions[vertex.instanceId] + vertex.position;\\r\\n\\r\\n    // Generate 4 random numbers.\\r\\n    var hash1: u32 = hash(vertex.instanceId + 1);\\r\\n    var hash2: u32 = hash(hash1);\\r\\n    var hash3: u32 = hash(hash2);\\r\\n    var hash4: u32 = hash(hash3);\\r\\n\\r\\n    // Convert into normals.\\r\\n    var hashStartDisplacement: f32 = (f32(hash1) - pow(2, 31)) * 2 / pow(2, 32);\\r\\n    var randomNormalPosition: vec3<f32> = vec3<f32>(\\r\\n        (f32(hash2) - pow(2, 31)) * 2 / pow(2, 32),\\r\\n        (f32(hash3) - pow(2, 31)) * 2 / pow(2, 32),\\r\\n        (f32(hash4) - pow(2, 31)) * 2 / pow(2, 32)\\r\\n    );\\r\\n\\r\\n    // Calculate random position and animate a 100m spread. \\r\\n    var randPosition: vec4<f32> = instancePosition; // Current start.\\r\\n    randPosition += vec4<f32>(randomNormalPosition, 1) * 1000; // Randomise start spreading 1000m in all directsions.\\r\\n    randPosition += vec4<f32>(randomNormalPosition, 1) * sin((timestamp / animationSeconds) + (hashStartDisplacement * 100)) * 100;\\r\\n    randPosition[3] = 1; // Reset w coord.\\r\\n\\r\\n    var transformedInstancePosition: vec4<f32> = transformationMatrix * randPosition;\\r\\n\\r\\n    var textureLayer: u32 = u32(floor(f32(vertex.instanceId) % textureLayers));\\r\\n\\r\\n    var out: VertexOut;\\r\\n    out.position = viewProjectionMatrix * transformedInstancePosition;\\r\\n    out.uv = vertex.uv;\\r\\n    out.normal = vertex.normal;\\r\\n    out.fragmentPosition = transformedInstancePosition;\\r\\n    out.textureLayer = textureLayer;\\r\\n\\r\\n    return out;\\r\\n}\\r\\n\\r\\nstruct FragmentIn {\\r\\n    @location(0) uv: vec2<f32>,\\r\\n    @location(1) normal: vec4<f32>,\\r\\n    @location(2) fragmentPosition: vec4<f32>,\\r\\n    @interpolate(flat) @location(3) textureLayer: u32\\r\\n}\\r\\n\\r\\n@fragment\\r\\nfn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\\r\\n    return applyLight(textureSample(cubeTexture, cubeTextureSampler, fragment.uv, fragment.textureLayer), fragment.fragmentPosition, fragment.normal);\\r\\n}\";","export default \"// ------------------------- Object Values ---------------------- //\\r\\n@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\n\\r\\n// ------------------------- World Values ---------------------- //\\r\\n@group(1) @binding(0) var<uniform> viewProjectionMatrix: mat4x4<f32>;\\r\\n@group(1) @binding(1) var<uniform> timestamp: u32;\\r\\n\\r\\nstruct AmbientLight {\\r\\n    color: vec4<f32>\\r\\n}\\r\\n@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\\r\\n\\r\\nstruct PointLight {\\r\\n    position: vec4<f32>,\\r\\n    color: vec4<f32>,\\r\\n    range: f32\\r\\n}\\r\\n@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\\r\\n\\r\\n@group(1) @binding(4) var<storage, read_write> debugValue: f32;\\r\\n// -------------------------------------------------------------- //\\r\\n\\r\\nstruct VertexOut {\\r\\n    @builtin(position) position: vec4<f32>,\\r\\n    @location(0) color: vec4<f32>,\\r\\n}\\r\\n\\r\\nstruct VertexIn {\\r\\n    @builtin(instance_index) instanceId : u32,\\r\\n    @location(0) position: vec4<f32>,\\r\\n    @location(1) uv: vec2<f32>,\\r\\n    @location(2) normal: vec4<f32>\\r\\n}\\r\\n\\r\\n@vertex\\r\\nfn vertex_main(vertex: VertexIn) -> VertexOut {\\r\\n    var instanceLight: PointLight = pointLights[vertex.instanceId];\\r\\n\\r\\n    var out: VertexOut;\\r\\n    out.position = viewProjectionMatrix * transformationMatrix * (instanceLight.position + vertex.position);\\r\\n    out.color = instanceLight.color;\\r\\n\\r\\n    return out;\\r\\n}\\r\\n\\r\\nstruct FragmentIn {\\r\\n    @location(0) color: vec4<f32>,\\r\\n}\\r\\n\\r\\n@fragment\\r\\nfn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\\r\\n    return fragment.color;\\r\\n}\";","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { log } from \"../utils/log.js\";\nvar WebSocketClient = /*#__PURE__*/function () {\n  /**\n   * @param {string} url\n   */\n  function WebSocketClient(url) {\n    _classCallCheck(this, WebSocketClient);\n    this.client = new WebSocket(url);\n    this.client.onerror = function (error) {\n      log.error(error);\n    };\n  }\n\n  /**\n   * @param {(...args: any[]) => void} f\n   */\n  _createClass(WebSocketClient, [{\n    key: \"onOpen\",\n    value: function onOpen(f) {\n      this.client.onopen = f;\n    }\n\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onClose\",\n    value: function onClose(f) {\n      this.client.onclose = f;\n    }\n\n    // call f with the message string as the first argument\n    /**\n     * @param {(...args: any[]) => void} f\n     */\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(f) {\n      this.client.onmessage = function (e) {\n        f(e.data);\n      };\n    }\n  }]);\n  return WebSocketClient;\n}();\nexport { WebSocketClient as default };","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* global __resourceQuery, __webpack_hash__ */\n/// <reference types=\"webpack/module\" />\nimport webpackHotLog from \"webpack/hot/log.js\";\nimport stripAnsi from \"./utils/stripAnsi.js\";\nimport parseURL from \"./utils/parseURL.js\";\nimport socket from \"./socket.js\";\nimport { formatProblem, createOverlay } from \"./overlay.js\";\nimport { log, logEnabledFeatures, setLogLevel } from \"./utils/log.js\";\nimport sendMessage from \"./utils/sendMessage.js\";\nimport reloadApp from \"./utils/reloadApp.js\";\nimport createSocketURL from \"./utils/createSocketURL.js\";\n\n/**\n * @typedef {Object} OverlayOptions\n * @property {boolean | (error: Error) => boolean} [warnings]\n * @property {boolean | (error: Error) => boolean} [errors]\n * @property {boolean | (error: Error) => boolean} [runtimeErrors]\n * @property {string} [trustedTypesPolicyName]\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} hot\n * @property {boolean} liveReload\n * @property {boolean} progress\n * @property {boolean | OverlayOptions} overlay\n * @property {string} [logging]\n * @property {number} [reconnect]\n */\n\n/**\n * @typedef {Object} Status\n * @property {boolean} isUnloading\n * @property {string} currentHash\n * @property {string} [previousHash]\n */\n\n/**\n * @param {boolean | { warnings?: boolean | string; errors?: boolean | string; runtimeErrors?: boolean | string; }} overlayOptions\n */\nvar decodeOverlayOptions = function decodeOverlayOptions(overlayOptions) {\n  if (typeof overlayOptions === \"object\") {\n    [\"warnings\", \"errors\", \"runtimeErrors\"].forEach(function (property) {\n      if (typeof overlayOptions[property] === \"string\") {\n        var overlayFilterFunctionString = decodeURIComponent(overlayOptions[property]);\n\n        // eslint-disable-next-line no-new-func\n        var overlayFilterFunction = new Function(\"message\", \"var callback = \".concat(overlayFilterFunctionString, \"\\n        return callback(message)\"));\n        overlayOptions[property] = overlayFilterFunction;\n      }\n    });\n  }\n};\n\n/**\n * @type {Status}\n */\nvar status = {\n  isUnloading: false,\n  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n  // eslint-disable-next-line camelcase\n  currentHash: typeof __webpack_hash__ !== \"undefined\" ? __webpack_hash__ : \"\"\n};\n\n/** @type {Options} */\nvar options = {\n  hot: false,\n  liveReload: false,\n  progress: false,\n  overlay: false\n};\nvar parsedResourceQuery = parseURL(__resourceQuery);\nvar enabledFeatures = {\n  \"Hot Module Replacement\": false,\n  \"Live Reloading\": false,\n  Progress: false,\n  Overlay: false\n};\nif (parsedResourceQuery.hot === \"true\") {\n  options.hot = true;\n  enabledFeatures[\"Hot Module Replacement\"] = true;\n}\nif (parsedResourceQuery[\"live-reload\"] === \"true\") {\n  options.liveReload = true;\n  enabledFeatures[\"Live Reloading\"] = true;\n}\nif (parsedResourceQuery.progress === \"true\") {\n  options.progress = true;\n  enabledFeatures.Progress = true;\n}\nif (parsedResourceQuery.overlay) {\n  try {\n    options.overlay = JSON.parse(parsedResourceQuery.overlay);\n  } catch (e) {\n    log.error(\"Error parsing overlay options from resource query:\", e);\n  }\n\n  // Fill in default \"true\" params for partially-specified objects.\n  if (typeof options.overlay === \"object\") {\n    options.overlay = _objectSpread({\n      errors: true,\n      warnings: true,\n      runtimeErrors: true\n    }, options.overlay);\n    decodeOverlayOptions(options.overlay);\n  }\n  enabledFeatures.Overlay = true;\n}\nif (parsedResourceQuery.logging) {\n  options.logging = parsedResourceQuery.logging;\n}\nif (typeof parsedResourceQuery.reconnect !== \"undefined\") {\n  options.reconnect = Number(parsedResourceQuery.reconnect);\n}\n\n/**\n * @param {string} level\n */\nfunction setAllLogLevel(level) {\n  // This is needed because the HMR logger operate separately from dev server logger\n  webpackHotLog.setLogLevel(level === \"verbose\" || level === \"log\" ? \"info\" : level);\n  setLogLevel(level);\n}\nif (options.logging) {\n  setAllLogLevel(options.logging);\n}\nlogEnabledFeatures(enabledFeatures);\nself.addEventListener(\"beforeunload\", function () {\n  status.isUnloading = true;\n});\nvar overlay = typeof window !== \"undefined\" ? createOverlay(typeof options.overlay === \"object\" ? {\n  trustedTypesPolicyName: options.overlay.trustedTypesPolicyName,\n  catchRuntimeError: options.overlay.runtimeErrors\n} : {\n  trustedTypesPolicyName: false,\n  catchRuntimeError: options.overlay\n}) : {\n  send: function send() {}\n};\nvar onSocketMessage = {\n  hot: function hot() {\n    if (parsedResourceQuery.hot === \"false\") {\n      return;\n    }\n    options.hot = true;\n  },\n  liveReload: function liveReload() {\n    if (parsedResourceQuery[\"live-reload\"] === \"false\") {\n      return;\n    }\n    options.liveReload = true;\n  },\n  invalid: function invalid() {\n    log.info(\"App updated. Recompiling...\");\n\n    // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"Invalid\");\n  },\n  /**\n   * @param {string} hash\n   */\n  hash: function hash(_hash) {\n    status.previousHash = status.currentHash;\n    status.currentHash = _hash;\n  },\n  logging: setAllLogLevel,\n  /**\n   * @param {boolean} value\n   */\n  overlay: function overlay(value) {\n    if (typeof document === \"undefined\") {\n      return;\n    }\n    options.overlay = value;\n    decodeOverlayOptions(options.overlay);\n  },\n  /**\n   * @param {number} value\n   */\n  reconnect: function reconnect(value) {\n    if (parsedResourceQuery.reconnect === \"false\") {\n      return;\n    }\n    options.reconnect = value;\n  },\n  /**\n   * @param {boolean} value\n   */\n  progress: function progress(value) {\n    options.progress = value;\n  },\n  /**\n   * @param {{ pluginName?: string, percent: number, msg: string }} data\n   */\n  \"progress-update\": function progressUpdate(data) {\n    if (options.progress) {\n      log.info(\"\".concat(data.pluginName ? \"[\".concat(data.pluginName, \"] \") : \"\").concat(data.percent, \"% - \").concat(data.msg, \".\"));\n    }\n    sendMessage(\"Progress\", data);\n  },\n  \"still-ok\": function stillOk() {\n    log.info(\"Nothing changed.\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"StillOk\");\n  },\n  ok: function ok() {\n    sendMessage(\"Ok\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    reloadApp(options, status);\n  },\n  // TODO: remove in v5 in favor of 'static-changed'\n  /**\n   * @param {string} file\n   */\n  \"content-changed\": function contentChanged(file) {\n    log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {string} file\n   */\n  \"static-changed\": function staticChanged(file) {\n    log.info(\"\".concat(file ? \"\\\"\".concat(file, \"\\\"\") : \"Content\", \" from static directory was changed. Reloading...\"));\n    self.location.reload();\n  },\n  /**\n   * @param {Error[]} warnings\n   * @param {any} params\n   */\n  warnings: function warnings(_warnings, params) {\n    log.warn(\"Warnings while compiling.\");\n    var printableWarnings = _warnings.map(function (error) {\n      var _formatProblem = formatProblem(\"warning\", error),\n        header = _formatProblem.header,\n        body = _formatProblem.body;\n      return \"\".concat(header, \"\\n\").concat(stripAnsi(body));\n    });\n    sendMessage(\"Warnings\", printableWarnings);\n    for (var i = 0; i < printableWarnings.length; i++) {\n      log.warn(printableWarnings[i]);\n    }\n    var overlayWarningsSetting = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.warnings;\n    if (overlayWarningsSetting) {\n      var warningsToDisplay = typeof overlayWarningsSetting === \"function\" ? _warnings.filter(overlayWarningsSetting) : _warnings;\n      if (warningsToDisplay.length) {\n        overlay.send({\n          type: \"BUILD_ERROR\",\n          level: \"warning\",\n          messages: _warnings\n        });\n      }\n    }\n    if (params && params.preventReloading) {\n      return;\n    }\n    reloadApp(options, status);\n  },\n  /**\n   * @param {Error[]} errors\n   */\n  errors: function errors(_errors) {\n    log.error(\"Errors while compiling. Reload prevented.\");\n    var printableErrors = _errors.map(function (error) {\n      var _formatProblem2 = formatProblem(\"error\", error),\n        header = _formatProblem2.header,\n        body = _formatProblem2.body;\n      return \"\".concat(header, \"\\n\").concat(stripAnsi(body));\n    });\n    sendMessage(\"Errors\", printableErrors);\n    for (var i = 0; i < printableErrors.length; i++) {\n      log.error(printableErrors[i]);\n    }\n    var overlayErrorsSettings = typeof options.overlay === \"boolean\" ? options.overlay : options.overlay && options.overlay.errors;\n    if (overlayErrorsSettings) {\n      var errorsToDisplay = typeof overlayErrorsSettings === \"function\" ? _errors.filter(overlayErrorsSettings) : _errors;\n      if (errorsToDisplay.length) {\n        overlay.send({\n          type: \"BUILD_ERROR\",\n          level: \"error\",\n          messages: _errors\n        });\n      }\n    }\n  },\n  /**\n   * @param {Error} error\n   */\n  error: function error(_error) {\n    log.error(_error);\n  },\n  close: function close() {\n    log.info(\"Disconnected!\");\n    if (options.overlay) {\n      overlay.send({\n        type: \"DISMISS\"\n      });\n    }\n    sendMessage(\"Close\");\n  }\n};\nvar socketURL = createSocketURL(parsedResourceQuery);\nsocket(socketURL, onSocketMessage, options.reconnect);","/******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./client-src/modules/logger/SyncBailHookFake.js\":\n/*!*******************************************************!*\\\n  !*** ./client-src/modules/logger/SyncBailHookFake.js ***!\n  \\*******************************************************/\n/***/ (function(module) {\n\n\n\n/**\n * Client stub for tapable SyncBailHook\n */\nmodule.exports = function clientTapableSyncBailHook() {\n  return {\n    call: function call() {}\n  };\n};\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/Logger.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/Logger.js ***!\n  \\****************************************************/\n/***/ (function(__unused_webpack_module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar LogType = Object.freeze({\n  error: /** @type {\"error\"} */\"error\",\n  // message, c style arguments\n  warn: /** @type {\"warn\"} */\"warn\",\n  // message, c style arguments\n  info: /** @type {\"info\"} */\"info\",\n  // message, c style arguments\n  log: /** @type {\"log\"} */\"log\",\n  // message, c style arguments\n  debug: /** @type {\"debug\"} */\"debug\",\n  // message, c style arguments\n\n  trace: /** @type {\"trace\"} */\"trace\",\n  // no arguments\n\n  group: /** @type {\"group\"} */\"group\",\n  // [label]\n  groupCollapsed: /** @type {\"groupCollapsed\"} */\"groupCollapsed\",\n  // [label]\n  groupEnd: /** @type {\"groupEnd\"} */\"groupEnd\",\n  // [label]\n\n  profile: /** @type {\"profile\"} */\"profile\",\n  // [profileName]\n  profileEnd: /** @type {\"profileEnd\"} */\"profileEnd\",\n  // [profileName]\n\n  time: /** @type {\"time\"} */\"time\",\n  // name, time as [seconds, nanoseconds]\n\n  clear: /** @type {\"clear\"} */\"clear\",\n  // no arguments\n  status: /** @type {\"status\"} */\"status\" // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nvar LOG_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger raw log method\");\nvar TIMERS_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger times\");\nvar TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; })(\"webpack logger aggregated times\");\nvar WebpackLogger = /*#__PURE__*/function () {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n   */\n  function WebpackLogger(log, getChildLogger) {\n    _classCallCheck(this, WebpackLogger);\n    this[LOG_SYMBOL] = log;\n    this.getChildLogger = getChildLogger;\n  }\n  _createClass(WebpackLogger, [{\n    key: \"error\",\n    value: function error() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this[LOG_SYMBOL](LogType.warn, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this[LOG_SYMBOL](LogType.info, args);\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this[LOG_SYMBOL](LogType.log, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this[LOG_SYMBOL](LogType.debug, args);\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(assertion) {\n      if (!assertion) {\n        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          args[_key6 - 1] = arguments[_key6];\n        }\n        this[LOG_SYMBOL](LogType.error, args);\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this[LOG_SYMBOL](LogType.clear);\n    }\n  }, {\n    key: \"status\",\n    value: function status() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this[LOG_SYMBOL](LogType.status, args);\n    }\n  }, {\n    key: \"group\",\n    value: function group() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this[LOG_SYMBOL](LogType.group, args);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this[LOG_SYMBOL](LogType.groupCollapsed, args);\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this[LOG_SYMBOL](LogType.groupEnd, args);\n    }\n  }, {\n    key: \"profile\",\n    value: function profile(label) {\n      this[LOG_SYMBOL](LogType.profile, [label]);\n    }\n  }, {\n    key: \"profileEnd\",\n    value: function profileEnd(label) {\n      this[LOG_SYMBOL](LogType.profileEnd, [label]);\n    }\n  }, {\n    key: \"time\",\n    value: function time(label) {\n      this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n      this[TIMERS_SYMBOL].set(label, process.hrtime());\n    }\n  }, {\n    key: \"timeLog\",\n    value: function timeLog(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeLog()\"));\n      }\n      var time = process.hrtime(prev);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeEnd()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeAggregate\",\n    value: function timeAggregate(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeAggregate()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();\n      var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n      if (current !== undefined) {\n        if (time[1] + current[1] > 1e9) {\n          time[0] += current[0] + 1;\n          time[1] = time[1] - 1e9 + current[1];\n        } else {\n          time[0] += current[0];\n          time[1] += current[1];\n        }\n      }\n      this[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n    }\n  }, {\n    key: \"timeAggregateEnd\",\n    value: function timeAggregateEnd(label) {\n      if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n      var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n      if (time === undefined) return;\n      this[TIMERS_AGGREGATES_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }]);\n  return WebpackLogger;\n}();\nexports.Logger = WebpackLogger;\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/createConsoleLogger.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!\n  \\*****************************************************************/\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof (typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }) !== \"undefined\" && iter[(typeof Symbol !== \"undefined\" ? Symbol : function (i) { return i; }).iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar _require = __webpack_require__(/*! ./Logger */ \"./node_modules/webpack/lib/logging/Logger.js\"),\n  LogType = _require.LogType;\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n/** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n\n/** @typedef {function(string): boolean} FilterFunction */\n\n/**\n * @typedef {Object} LoggerConsole\n * @property {function(): void} clear\n * @property {function(): void} trace\n * @property {(...args: any[]) => void} info\n * @property {(...args: any[]) => void} log\n * @property {(...args: any[]) => void} warn\n * @property {(...args: any[]) => void} error\n * @property {(...args: any[]) => void=} debug\n * @property {(...args: any[]) => void=} group\n * @property {(...args: any[]) => void=} groupCollapsed\n * @property {(...args: any[]) => void=} groupEnd\n * @property {(...args: any[]) => void=} status\n * @property {(...args: any[]) => void=} profile\n * @property {(...args: any[]) => void=} profileEnd\n * @property {(...args: any[]) => void=} logTime\n */\n\n/**\n * @typedef {Object} LoggerOptions\n * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} level loglevel\n * @property {FilterTypes|boolean} debug filter for debug logging\n * @property {LoggerConsole} console the console to log to\n */\n\n/**\n * @param {FilterItemTypes} item an input item\n * @returns {FilterFunction} filter function\n */\nvar filterToFunction = function filterToFunction(item) {\n  if (typeof item === \"string\") {\n    var regExp = new RegExp(\"[\\\\\\\\/]\".concat(item.replace(\n    // eslint-disable-next-line no-useless-escape\n    /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\"), \"([\\\\\\\\/]|$|!|\\\\?)\"));\n    return function (ident) {\n      return regExp.test(ident);\n    };\n  }\n  if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n    return function (ident) {\n      return item.test(ident);\n    };\n  }\n  if (typeof item === \"function\") {\n    return item;\n  }\n  if (typeof item === \"boolean\") {\n    return function () {\n      return item;\n    };\n  }\n};\n\n/**\n * @enum {number}\n */\nvar LogLevel = {\n  none: 6,\n  false: 6,\n  error: 5,\n  warn: 4,\n  info: 3,\n  log: 2,\n  true: 2,\n  verbose: 1\n};\n\n/**\n * @param {LoggerOptions} options options object\n * @returns {function(string, LogTypeEnum, any[]): void} logging function\n */\nmodule.exports = function (_ref) {\n  var _ref$level = _ref.level,\n    level = _ref$level === void 0 ? \"info\" : _ref$level,\n    _ref$debug = _ref.debug,\n    debug = _ref$debug === void 0 ? false : _ref$debug,\n    console = _ref.console;\n  var debugFilters = typeof debug === \"boolean\" ? [function () {\n    return debug;\n  }] : /** @type {FilterItemTypes[]} */[].concat(debug).map(filterToFunction);\n  /** @type {number} */\n  var loglevel = LogLevel[\"\".concat(level)] || 0;\n\n  /**\n   * @param {string} name name of the logger\n   * @param {LogTypeEnum} type type of the log entry\n   * @param {any[]} args arguments of the log entry\n   * @returns {void}\n   */\n  var logger = function logger(name, type, args) {\n    var labeledArgs = function labeledArgs() {\n      if (Array.isArray(args)) {\n        if (args.length > 0 && typeof args[0] === \"string\") {\n          return [\"[\".concat(name, \"] \").concat(args[0])].concat(_toConsumableArray(args.slice(1)));\n        } else {\n          return [\"[\".concat(name, \"]\")].concat(_toConsumableArray(args));\n        }\n      } else {\n        return [];\n      }\n    };\n    var debug = debugFilters.some(function (f) {\n      return f(name);\n    });\n    switch (type) {\n      case LogType.debug:\n        if (!debug) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.debug === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.debug.apply(console, _toConsumableArray(labeledArgs()));\n        } else {\n          console.log.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.log:\n        if (!debug && loglevel > LogLevel.log) return;\n        console.log.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.info:\n        if (!debug && loglevel > LogLevel.info) return;\n        console.info.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.warn:\n        if (!debug && loglevel > LogLevel.warn) return;\n        console.warn.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.error:\n        if (!debug && loglevel > LogLevel.error) return;\n        console.error.apply(console, _toConsumableArray(labeledArgs()));\n        break;\n      case LogType.trace:\n        if (!debug) return;\n        console.trace();\n        break;\n      case LogType.groupCollapsed:\n        if (!debug && loglevel > LogLevel.log) return;\n        if (!debug && loglevel > LogLevel.verbose) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.groupCollapsed === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));\n          } else {\n            console.log.apply(console, _toConsumableArray(labeledArgs()));\n          }\n          break;\n        }\n      // falls through\n      case LogType.group:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.group === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.group.apply(console, _toConsumableArray(labeledArgs()));\n        } else {\n          console.log.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.groupEnd:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.groupEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.groupEnd();\n        }\n        break;\n      case LogType.time:\n        {\n          if (!debug && loglevel > LogLevel.log) return;\n          var ms = args[1] * 1000 + args[2] / 1000000;\n          var msg = \"[\".concat(name, \"] \").concat(args[0], \": \").concat(ms, \" ms\");\n          if (typeof console.logTime === \"function\") {\n            console.logTime(msg);\n          } else {\n            console.log(msg);\n          }\n          break;\n        }\n      case LogType.profile:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profile === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profile.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.profileEnd:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profileEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));\n        }\n        break;\n      case LogType.clear:\n        if (!debug && loglevel > LogLevel.log) return;\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.clear === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.clear();\n        }\n        break;\n      case LogType.status:\n        if (!debug && loglevel > LogLevel.info) return;\n        if (typeof console.status === \"function\") {\n          if (args.length === 0) {\n            console.status();\n          } else {\n            console.status.apply(console, _toConsumableArray(labeledArgs()));\n          }\n        } else {\n          if (args.length !== 0) {\n            console.info.apply(console, _toConsumableArray(labeledArgs()));\n          }\n        }\n        break;\n      default:\n        throw new Error(\"Unexpected LogType \".concat(type));\n    }\n  };\n  return logger;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/lib/logging/runtime.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/webpack/lib/logging/runtime.js ***!\n  \\*****************************************************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar SyncBailHook = __webpack_require__(/*! tapable/lib/SyncBailHook */ \"./client-src/modules/logger/SyncBailHookFake.js\");\nvar _require = __webpack_require__(/*! ./Logger */ \"./node_modules/webpack/lib/logging/Logger.js\"),\n  Logger = _require.Logger;\nvar createConsoleLogger = __webpack_require__(/*! ./createConsoleLogger */ \"./node_modules/webpack/lib/logging/createConsoleLogger.js\");\n\n/** @type {createConsoleLogger.LoggerOptions} */\nvar currentDefaultLoggerOptions = {\n  level: \"info\",\n  debug: false,\n  console: console\n};\nvar currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n\n/**\n * @param {string} name name of the logger\n * @returns {Logger} a logger\n */\nexports.getLogger = function (name) {\n  return new Logger(function (type, args) {\n    if (exports.hooks.log.call(name, type, args) === undefined) {\n      currentDefaultLogger(name, type, args);\n    }\n  }, function (childName) {\n    return exports.getLogger(\"\".concat(name, \"/\").concat(childName));\n  });\n};\n\n/**\n * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options\n * @returns {void}\n */\nexports.configureDefaultLogger = function (options) {\n  _extends(currentDefaultLoggerOptions, options);\n  currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);\n};\nexports.hooks = {\n  log: new SyncBailHook([\"origin\", \"type\", \"args\"])\n};\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t!function() {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = function(exports) {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n!function() {\n/*!********************************************!*\\\n  !*** ./client-src/modules/logger/index.js ***!\n  \\********************************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default export from named module */ webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__; }\n/* harmony export */ });\n/* harmony import */ var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/lib/logging/runtime.js */ \"./node_modules/webpack/lib/logging/runtime.js\");\n\n}();\nvar __webpack_export_target__ = exports;\nfor(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];\nif(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \"__esModule\", { value: true });\n/******/ })()\n;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n\nimport ansiHTML from \"ansi-html-community\";\nimport { encode } from \"html-entities\";\nimport { listenToRuntimeError, listenToUnhandledRejection, parseErrorToStacks } from \"./overlay/runtime-error.js\";\nimport createOverlayMachine from \"./overlay/state-machine.js\";\nimport { containerStyle, dismissButtonStyle, headerStyle, iframeStyle, msgStyles, msgTextStyle, msgTypeStyle } from \"./overlay/styles.js\";\nvar colors = {\n  reset: [\"transparent\", \"transparent\"],\n  black: \"181818\",\n  red: \"E36049\",\n  green: \"B3CB74\",\n  yellow: \"FFD080\",\n  blue: \"7CAFC2\",\n  magenta: \"7FACCA\",\n  cyan: \"C3C2EF\",\n  lightgrey: \"EBE7E3\",\n  darkgrey: \"6D7891\"\n};\nansiHTML.setColors(colors);\n\n/**\n * @param {string} type\n * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string; stack?: string[] }} item\n * @returns {{ header: string, body: string }}\n */\nfunction formatProblem(type, item) {\n  var header = type === \"warning\" ? \"WARNING\" : \"ERROR\";\n  var body = \"\";\n  if (typeof item === \"string\") {\n    body += item;\n  } else {\n    var file = item.file || \"\";\n    // eslint-disable-next-line no-nested-ternary\n    var moduleName = item.moduleName ? item.moduleName.indexOf(\"!\") !== -1 ? \"\".concat(item.moduleName.replace(/^(\\s|\\S)*!/, \"\"), \" (\").concat(item.moduleName, \")\") : \"\".concat(item.moduleName) : \"\";\n    var loc = item.loc;\n    header += \"\".concat(moduleName || file ? \" in \".concat(moduleName ? \"\".concat(moduleName).concat(file ? \" (\".concat(file, \")\") : \"\") : file).concat(loc ? \" \".concat(loc) : \"\") : \"\");\n    body += item.message || \"\";\n  }\n  if (Array.isArray(item.stack)) {\n    item.stack.forEach(function (stack) {\n      if (typeof stack === \"string\") {\n        body += \"\\r\\n\".concat(stack);\n      }\n    });\n  }\n  return {\n    header: header,\n    body: body\n  };\n}\n\n/**\n * @typedef {Object} CreateOverlayOptions\n * @property {string | null} trustedTypesPolicyName\n * @property {boolean | (error: Error) => void} [catchRuntimeError]\n */\n\n/**\n *\n * @param {CreateOverlayOptions} options\n */\nvar createOverlay = function createOverlay(options) {\n  /** @type {HTMLIFrameElement | null | undefined} */\n  var iframeContainerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var containerElement;\n  /** @type {HTMLDivElement | null | undefined} */\n  var headerElement;\n  /** @type {Array<(element: HTMLDivElement) => void>} */\n  var onLoadQueue = [];\n  /** @type {TrustedTypePolicy | undefined} */\n  var overlayTrustedTypesPolicy;\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {CSSStyleDeclaration} style\n   */\n  function applyStyle(element, style) {\n    Object.keys(style).forEach(function (prop) {\n      element.style[prop] = style[prop];\n    });\n  }\n\n  /**\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function createContainer(trustedTypesPolicyName) {\n    // Enable Trusted Types if they are available in the current browser.\n    if (window.trustedTypes) {\n      overlayTrustedTypesPolicy = window.trustedTypes.createPolicy(trustedTypesPolicyName || \"webpack-dev-server#overlay\", {\n        createHTML: function createHTML(value) {\n          return value;\n        }\n      });\n    }\n    iframeContainerElement = document.createElement(\"iframe\");\n    iframeContainerElement.id = \"webpack-dev-server-client-overlay\";\n    iframeContainerElement.src = \"about:blank\";\n    applyStyle(iframeContainerElement, iframeStyle);\n    iframeContainerElement.onload = function () {\n      var contentElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      containerElement = /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.createElement(\"div\");\n      contentElement.id = \"webpack-dev-server-client-overlay-div\";\n      applyStyle(contentElement, containerStyle);\n      headerElement = document.createElement(\"div\");\n      headerElement.innerText = \"Compiled with problems:\";\n      applyStyle(headerElement, headerStyle);\n      var closeButtonElement = document.createElement(\"button\");\n      applyStyle(closeButtonElement, dismissButtonStyle);\n      closeButtonElement.innerText = \"×\";\n      closeButtonElement.ariaLabel = \"Dismiss\";\n      closeButtonElement.addEventListener(\"click\", function () {\n        // eslint-disable-next-line no-use-before-define\n        overlayService.send({\n          type: \"DISMISS\"\n        });\n      });\n      contentElement.appendChild(headerElement);\n      contentElement.appendChild(closeButtonElement);\n      contentElement.appendChild(containerElement);\n\n      /** @type {Document} */\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.contentDocument.body.appendChild(contentElement);\n      onLoadQueue.forEach(function (onLoad) {\n        onLoad( /** @type {HTMLDivElement} */contentElement);\n      });\n      onLoadQueue = [];\n\n      /** @type {HTMLIFrameElement} */\n      iframeContainerElement.onload = null;\n    };\n    document.body.appendChild(iframeContainerElement);\n  }\n\n  /**\n   * @param {(element: HTMLDivElement) => void} callback\n   * @param {string | null} trustedTypesPolicyName\n   */\n  function ensureOverlayExists(callback, trustedTypesPolicyName) {\n    if (containerElement) {\n      containerElement.innerHTML = \"\";\n      // Everything is ready, call the callback right away.\n      callback(containerElement);\n      return;\n    }\n    onLoadQueue.push(callback);\n    if (iframeContainerElement) {\n      return;\n    }\n    createContainer(trustedTypesPolicyName);\n  }\n\n  // Successful compilation.\n  function hide() {\n    if (!iframeContainerElement) {\n      return;\n    }\n\n    // Clean up and reset internal state.\n    document.body.removeChild(iframeContainerElement);\n    iframeContainerElement = null;\n    containerElement = null;\n  }\n\n  // Compilation with errors (e.g. syntax error or missing modules).\n  /**\n   * @param {string} type\n   * @param {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n   * @param {string | null} trustedTypesPolicyName\n   * @param {'build' | 'runtime'} messageSource\n   */\n  function show(type, messages, trustedTypesPolicyName, messageSource) {\n    ensureOverlayExists(function () {\n      headerElement.innerText = messageSource === \"runtime\" ? \"Uncaught runtime errors:\" : \"Compiled with problems:\";\n      messages.forEach(function (message) {\n        var entryElement = document.createElement(\"div\");\n        var msgStyle = type === \"warning\" ? msgStyles.warning : msgStyles.error;\n        applyStyle(entryElement, _objectSpread(_objectSpread({}, msgStyle), {}, {\n          padding: \"1rem 1rem 1.5rem 1rem\"\n        }));\n        var typeElement = document.createElement(\"div\");\n        var _formatProblem = formatProblem(type, message),\n          header = _formatProblem.header,\n          body = _formatProblem.body;\n        typeElement.innerText = header;\n        applyStyle(typeElement, msgTypeStyle);\n        if (message.moduleIdentifier) {\n          applyStyle(typeElement, {\n            cursor: \"pointer\"\n          });\n          // element.dataset not supported in IE\n          typeElement.setAttribute(\"data-can-open\", true);\n          typeElement.addEventListener(\"click\", function () {\n            fetch(\"/webpack-dev-server/open-editor?fileName=\".concat(message.moduleIdentifier));\n          });\n        }\n\n        // Make it look similar to our terminal.\n        var text = ansiHTML(encode(body));\n        var messageTextNode = document.createElement(\"div\");\n        applyStyle(messageTextNode, msgTextStyle);\n        messageTextNode.innerHTML = overlayTrustedTypesPolicy ? overlayTrustedTypesPolicy.createHTML(text) : text;\n        entryElement.appendChild(typeElement);\n        entryElement.appendChild(messageTextNode);\n\n        /** @type {HTMLDivElement} */\n        containerElement.appendChild(entryElement);\n      });\n    }, trustedTypesPolicyName);\n  }\n  var overlayService = createOverlayMachine({\n    showOverlay: function showOverlay(_ref) {\n      var _ref$level = _ref.level,\n        level = _ref$level === void 0 ? \"error\" : _ref$level,\n        messages = _ref.messages,\n        messageSource = _ref.messageSource;\n      return show(level, messages, options.trustedTypesPolicyName, messageSource);\n    },\n    hideOverlay: hide\n  });\n  if (options.catchRuntimeError) {\n    /**\n     * @param {Error | undefined} error\n     * @param {string} fallbackMessage\n     */\n    var handleError = function handleError(error, fallbackMessage) {\n      var errorObject = error instanceof Error ? error : new Error(error || fallbackMessage);\n      var shouldDisplay = typeof options.catchRuntimeError === \"function\" ? options.catchRuntimeError(errorObject) : true;\n      if (shouldDisplay) {\n        overlayService.send({\n          type: \"RUNTIME_ERROR\",\n          messages: [{\n            message: errorObject.message,\n            stack: parseErrorToStacks(errorObject)\n          }]\n        });\n      }\n    };\n    listenToRuntimeError(function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    });\n    listenToUnhandledRejection(function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    });\n  }\n  return overlayService;\n};\nexport { formatProblem, createOverlay };","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * @typedef {Object} StateDefinitions\n * @property {{[event: string]: { target: string; actions?: Array<string> }}} [on]\n */\n\n/**\n * @typedef {Object} Options\n * @property {{[state: string]: StateDefinitions}} states\n * @property {object} context;\n * @property {string} initial\n */\n\n/**\n * @typedef {Object} Implementation\n * @property {{[actionName: string]: (ctx: object, event: any) => object}} actions\n */\n\n/**\n * A simplified `createMachine` from `@xstate/fsm` with the following differences:\n *\n *  - the returned machine is technically a \"service\". No `interpret(machine).start()` is needed.\n *  - the state definition only support `on` and target must be declared with { target: 'nextState', actions: [] } explicitly.\n *  - event passed to `send` must be an object with `type` property.\n *  - actions implementation will be [assign action](https://xstate.js.org/docs/guides/context.html#assign-action) if you return any value.\n *  Do not return anything if you just want to invoke side effect.\n *\n * The goal of this custom function is to avoid installing the entire `'xstate/fsm'` package, while enabling modeling using\n * state machine. You can copy the first parameter into the editor at https://stately.ai/viz to visualize the state machine.\n *\n * @param {Options} options\n * @param {Implementation} implementation\n */\nfunction createMachine(_ref, _ref2) {\n  var states = _ref.states,\n    context = _ref.context,\n    initial = _ref.initial;\n  var actions = _ref2.actions;\n  var currentState = initial;\n  var currentContext = context;\n  return {\n    send: function send(event) {\n      var currentStateOn = states[currentState].on;\n      var transitionConfig = currentStateOn && currentStateOn[event.type];\n      if (transitionConfig) {\n        currentState = transitionConfig.target;\n        if (transitionConfig.actions) {\n          transitionConfig.actions.forEach(function (actName) {\n            var actionImpl = actions[actName];\n            var nextContextValue = actionImpl && actionImpl(currentContext, event);\n            if (nextContextValue) {\n              currentContext = _objectSpread(_objectSpread({}, currentContext), nextContextValue);\n            }\n          });\n        }\n      }\n    }\n  };\n}\nexport default createMachine;","/**\n *\n * @param {Error} error\n */\nfunction parseErrorToStacks(error) {\n  if (!error || !(error instanceof Error)) {\n    throw new Error(\"parseErrorToStacks expects Error object\");\n  }\n  if (typeof error.stack === \"string\") {\n    return error.stack.split(\"\\n\").filter(function (stack) {\n      return stack !== \"Error: \".concat(error.message);\n    });\n  }\n}\n\n/**\n * @callback ErrorCallback\n * @param {ErrorEvent} error\n * @returns {void}\n */\n\n/**\n * @param {ErrorCallback} callback\n */\nfunction listenToRuntimeError(callback) {\n  window.addEventListener(\"error\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"error\", callback);\n  };\n}\n\n/**\n * @callback UnhandledRejectionCallback\n * @param {PromiseRejectionEvent} rejectionEvent\n * @returns {void}\n */\n\n/**\n * @param {UnhandledRejectionCallback} callback\n */\nfunction listenToUnhandledRejection(callback) {\n  window.addEventListener(\"unhandledrejection\", callback);\n  return function cleanup() {\n    window.removeEventListener(\"unhandledrejection\", callback);\n  };\n}\nexport { listenToRuntimeError, listenToUnhandledRejection, parseErrorToStacks };","import createMachine from \"./fsm.js\";\n\n/**\n * @typedef {Object} ShowOverlayData\n * @property {'warning' | 'error'} level\n * @property {Array<string  | { moduleIdentifier?: string, moduleName?: string, loc?: string, message?: string }>} messages\n * @property {'build' | 'runtime'} messageSource\n */\n\n/**\n * @typedef {Object} CreateOverlayMachineOptions\n * @property {(data: ShowOverlayData) => void} showOverlay\n * @property {() => void} hideOverlay\n */\n\n/**\n * @param {CreateOverlayMachineOptions} options\n */\nvar createOverlayMachine = function createOverlayMachine(options) {\n  var hideOverlay = options.hideOverlay,\n    showOverlay = options.showOverlay;\n  var overlayMachine = createMachine({\n    initial: \"hidden\",\n    context: {\n      level: \"error\",\n      messages: [],\n      messageSource: \"build\"\n    },\n    states: {\n      hidden: {\n        on: {\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayBuildError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          }\n        }\n      },\n      displayRuntimeError: {\n        on: {\n          DISMISS: {\n            target: \"hidden\",\n            actions: [\"dismissMessages\", \"hideOverlay\"]\n          },\n          RUNTIME_ERROR: {\n            target: \"displayRuntimeError\",\n            actions: [\"appendMessages\", \"showOverlay\"]\n          },\n          BUILD_ERROR: {\n            target: \"displayBuildError\",\n            actions: [\"setMessages\", \"showOverlay\"]\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      dismissMessages: function dismissMessages() {\n        return {\n          messages: [],\n          level: \"error\",\n          messageSource: \"build\"\n        };\n      },\n      appendMessages: function appendMessages(context, event) {\n        return {\n          messages: context.messages.concat(event.messages),\n          level: event.level || context.level,\n          messageSource: event.type === \"RUNTIME_ERROR\" ? \"runtime\" : \"build\"\n        };\n      },\n      setMessages: function setMessages(context, event) {\n        return {\n          messages: event.messages,\n          level: event.level || context.level,\n          messageSource: event.type === \"RUNTIME_ERROR\" ? \"runtime\" : \"build\"\n        };\n      },\n      hideOverlay: hideOverlay,\n      showOverlay: showOverlay\n    }\n  });\n  return overlayMachine;\n};\nexport default createOverlayMachine;","// styles are inspired by `react-error-overlay`\n\nvar msgStyles = {\n  error: {\n    backgroundColor: \"rgba(206, 17, 38, 0.1)\",\n    color: \"#fccfcf\"\n  },\n  warning: {\n    backgroundColor: \"rgba(251, 245, 180, 0.1)\",\n    color: \"#fbf5b4\"\n  }\n};\nvar iframeStyle = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  border: \"none\",\n  \"z-index\": 9999999999\n};\nvar containerStyle = {\n  position: \"fixed\",\n  boxSizing: \"border-box\",\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  fontSize: \"large\",\n  padding: \"2rem 2rem 4rem 2rem\",\n  lineHeight: \"1.2\",\n  whiteSpace: \"pre-wrap\",\n  overflow: \"auto\",\n  backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n  color: \"white\"\n};\nvar headerStyle = {\n  color: \"#e83b46\",\n  fontSize: \"2em\",\n  whiteSpace: \"pre-wrap\",\n  fontFamily: \"sans-serif\",\n  margin: \"0 2rem 2rem 0\",\n  flex: \"0 0 auto\",\n  maxHeight: \"50%\",\n  overflow: \"auto\"\n};\nvar dismissButtonStyle = {\n  color: \"#ffffff\",\n  lineHeight: \"1rem\",\n  fontSize: \"1.5rem\",\n  padding: \"1rem\",\n  cursor: \"pointer\",\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  backgroundColor: \"transparent\",\n  border: \"none\"\n};\nvar msgTypeStyle = {\n  color: \"#e83b46\",\n  fontSize: \"1.2em\",\n  marginBottom: \"1rem\",\n  fontFamily: \"sans-serif\"\n};\nvar msgTextStyle = {\n  lineHeight: \"1.5\",\n  fontSize: \"1rem\",\n  fontFamily: \"Menlo, Consolas, monospace\"\n};\nexport { msgStyles, iframeStyle, containerStyle, headerStyle, dismissButtonStyle, msgTypeStyle, msgTextStyle };","/* global __webpack_dev_server_client__ */\n\nimport WebSocketClient from \"./clients/WebSocketClient.js\";\nimport { log } from \"./utils/log.js\";\n\n// this WebsocketClient is here as a default fallback, in case the client is not injected\n/* eslint-disable camelcase */\nvar Client =\n// eslint-disable-next-line no-nested-ternary\ntypeof __webpack_dev_server_client__ !== \"undefined\" ? typeof __webpack_dev_server_client__.default !== \"undefined\" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n/* eslint-enable camelcase */\n\nvar retries = 0;\nvar maxRetries = 10;\n\n// Initialized client is exported so external consumers can utilize the same instance\n// It is mutable to enforce singleton\n// eslint-disable-next-line import/no-mutable-exports\nexport var client = null;\n\n/**\n * @param {string} url\n * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n * @param {number} [reconnect]\n */\nvar socket = function initSocket(url, handlers, reconnect) {\n  client = new Client(url);\n  client.onOpen(function () {\n    retries = 0;\n    if (typeof reconnect !== \"undefined\") {\n      maxRetries = reconnect;\n    }\n  });\n  client.onClose(function () {\n    if (retries === 0) {\n      handlers.close();\n    }\n\n    // Try to reconnect.\n    client = null;\n\n    // After 10 retries stop trying, to prevent logspam.\n    if (retries < maxRetries) {\n      // Exponentially increase timeout to reconnect.\n      // Respectfully copied from the package `got`.\n      // eslint-disable-next-line no-restricted-properties\n      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n      retries += 1;\n      log.info(\"Trying to reconnect...\");\n      setTimeout(function () {\n        socket(url, handlers, reconnect);\n      }, retryInMs);\n    }\n  });\n  client.onMessage(\n  /**\n   * @param {any} data\n   */\n  function (data) {\n    var message = JSON.parse(data);\n    if (handlers[message.type]) {\n      handlers[message.type](message.data, message.params);\n    }\n  });\n};\nexport default socket;","/**\n * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL\n * @returns {string}\n */\nfunction format(objURL) {\n  var protocol = objURL.protocol || \"\";\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  var auth = objURL.auth || \"\";\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, \":\");\n    auth += \"@\";\n  }\n  var host = \"\";\n  if (objURL.hostname) {\n    host = auth + (objURL.hostname.indexOf(\":\") === -1 ? objURL.hostname : \"[\".concat(objURL.hostname, \"]\"));\n    if (objURL.port) {\n      host += \":\".concat(objURL.port);\n    }\n  }\n  var pathname = objURL.pathname || \"\";\n  if (objURL.slashes) {\n    host = \"//\".concat(host || \"\");\n    if (pathname && pathname.charAt(0) !== \"/\") {\n      pathname = \"/\".concat(pathname);\n    }\n  } else if (!host) {\n    host = \"\";\n  }\n  var search = objURL.search || \"\";\n  if (search && search.charAt(0) !== \"?\") {\n    search = \"?\".concat(search);\n  }\n  var hash = objURL.hash || \"\";\n  if (hash && hash.charAt(0) !== \"#\") {\n    hash = \"#\".concat(hash);\n  }\n  pathname = pathname.replace(/[?#]/g,\n  /**\n   * @param {string} match\n   * @returns {string}\n   */\n  function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace(\"#\", \"%23\");\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}\n\n/**\n * @param {URL & { fromCurrentScript?: boolean }} parsedURL\n * @returns {string}\n */\nfunction createSocketURL(parsedURL) {\n  var hostname = parsedURL.hostname;\n\n  // Node.js module parses it as `::`\n  // `new URL(urlString, [baseURLString])` parses it as '[::]'\n  var isInAddrAny = hostname === \"0.0.0.0\" || hostname === \"::\" || hostname === \"[::]\";\n\n  // why do we need this check?\n  // hostname n/a for file protocol (example, when using electron, ionic)\n  // see: https://github.com/webpack/webpack-dev-server/pull/384\n  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf(\"http\") === 0) {\n    hostname = self.location.hostname;\n  }\n  var socketURLProtocol = parsedURL.protocol || self.location.protocol;\n\n  // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.\n  if (socketURLProtocol === \"auto:\" || hostname && isInAddrAny && self.location.protocol === \"https:\") {\n    socketURLProtocol = self.location.protocol;\n  }\n  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, \"ws\");\n  var socketURLAuth = \"\";\n\n  // `new URL(urlString, [baseURLstring])` doesn't have `auth` property\n  // Parse authentication credentials in case we need them\n  if (parsedURL.username) {\n    socketURLAuth = parsedURL.username;\n\n    // Since HTTP basic authentication does not allow empty username,\n    // we only include password if the username is not empty.\n    if (parsedURL.password) {\n      // Result: <username>:<password>\n      socketURLAuth = socketURLAuth.concat(\":\", parsedURL.password);\n    }\n  }\n\n  // In case the host is a raw IPv6 address, it can be enclosed in\n  // the brackets as the brackets are needed in the final URL string.\n  // Need to remove those as url.format blindly adds its own set of brackets\n  // if the host string contains colons. That would lead to non-working\n  // double brackets (e.g. [[::]]) host\n  //\n  // All of these web socket url params are optionally passed in through resourceQuery,\n  // so we need to fall back to the default if they are not provided\n  var socketURLHostname = (hostname || self.location.hostname || \"localhost\").replace(/^\\[(.*)\\]$/, \"$1\");\n  var socketURLPort = parsedURL.port;\n  if (!socketURLPort || socketURLPort === \"0\") {\n    socketURLPort = self.location.port;\n  }\n\n  // If path is provided it'll be passed in via the resourceQuery as a\n  // query param so it has to be parsed out of the querystring in order for the\n  // client to open the socket to the correct location.\n  var socketURLPathname = \"/ws\";\n  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {\n    socketURLPathname = parsedURL.pathname;\n  }\n  return format({\n    protocol: socketURLProtocol,\n    auth: socketURLAuth,\n    hostname: socketURLHostname,\n    port: socketURLPort,\n    pathname: socketURLPathname,\n    slashes: true\n  });\n}\nexport default createSocketURL;","/**\n * @returns {string}\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to find the current script,\n  // but is not supported in all browsers.\n  if (document.currentScript) {\n    return document.currentScript.getAttribute(\"src\");\n  }\n\n  // Fallback to getting all scripts running in the document.\n  var scriptElements = document.scripts || [];\n  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {\n    return element.getAttribute(\"src\");\n  });\n  if (scriptElementsWithSrc.length > 0) {\n    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];\n    return currentScript.getAttribute(\"src\");\n  }\n\n  // Fail as there was no script to use.\n  throw new Error(\"[webpack-dev-server] Failed to get current script source.\");\n}\nexport default getCurrentScriptSource;","import logger from \"../modules/logger/index.js\";\nvar name = \"webpack-dev-server\";\n// default level is set on the client side, so it does not need\n// to be set by the CLI or API\nvar defaultLevel = \"info\";\n\n// options new options, merge with old options\n/**\n * @param {false | true | \"none\" | \"error\" | \"warn\" | \"info\" | \"log\" | \"verbose\"} level\n * @returns {void}\n */\nfunction setLogLevel(level) {\n  logger.configureDefaultLogger({\n    level: level\n  });\n}\nsetLogLevel(defaultLevel);\nvar log = logger.getLogger(name);\nvar logEnabledFeatures = function logEnabledFeatures(features) {\n  var enabledFeatures = Object.keys(features);\n  if (!features || enabledFeatures.length === 0) {\n    return;\n  }\n  var logString = \"Server started:\";\n\n  // Server started: Hot Module Replacement enabled, Live Reloading enabled, Overlay disabled.\n  for (var i = 0; i < enabledFeatures.length; i++) {\n    var key = enabledFeatures[i];\n    logString += \" \".concat(key, \" \").concat(features[key] ? \"enabled\" : \"disabled\", \",\");\n  }\n  // replace last comma with a period\n  logString = logString.slice(0, -1).concat(\".\");\n  log.info(logString);\n};\nexport { log, logEnabledFeatures, setLogLevel };","import getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    var scriptSourceURL;\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {\n      // URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nexport default parseURL;","import hotEmitter from \"webpack/hot/emitter.js\";\nimport { log } from \"./log.js\";\n\n/** @typedef {import(\"../index\").Options} Options\n/** @typedef {import(\"../index\").Status} Status\n\n/**\n * @param {Options} options\n * @param {Status} status\n */\nfunction reloadApp(_ref, status) {\n  var hot = _ref.hot,\n    liveReload = _ref.liveReload;\n  if (status.isUnloading) {\n    return;\n  }\n  var currentHash = status.currentHash,\n    previousHash = status.previousHash;\n  var isInitial = currentHash.indexOf( /** @type {string} */previousHash) >= 0;\n  if (isInitial) {\n    return;\n  }\n\n  /**\n   * @param {Window} rootWindow\n   * @param {number} intervalId\n   */\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info(\"App updated. Reloading...\");\n    rootWindow.location.reload();\n  }\n  var search = self.location.search.toLowerCase();\n  var allowToHot = search.indexOf(\"webpack-dev-server-hot=false\") === -1;\n  var allowToLiveReload = search.indexOf(\"webpack-dev-server-live-reload=false\") === -1;\n  if (hot && allowToHot) {\n    log.info(\"App hot update...\");\n    hotEmitter.emit(\"webpackHotUpdate\", status.currentHash);\n    if (typeof self !== \"undefined\" && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(status.currentHash), \"*\");\n    }\n  }\n  // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload && allowToLiveReload) {\n    var rootWindow = self;\n\n    // use parent window for reload (in case we're in an iframe with no valid src)\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== \"about:\") {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n}\nexport default reloadApp;","/* global __resourceQuery WorkerGlobalScope */\n\n// Send messages to the outside, so plugins can consume it.\n/**\n * @param {string} type\n * @param {any} [data]\n */\nfunction sendMsg(type, data) {\n  if (typeof self !== \"undefined\" && (typeof WorkerGlobalScope === \"undefined\" || !(self instanceof WorkerGlobalScope))) {\n    self.postMessage({\n      type: \"webpack\".concat(type),\n      data: data\n    }, \"*\");\n  }\n}\nexport default sendMsg;","var ansiRegex = new RegExp([\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\"].join(\"|\"), \"g\");\n\n/**\n *\n * Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string.\n * Adapted from code originally released by Sindre Sorhus\n * Licensed the MIT License\n *\n * @param {string} string\n * @return {string}\n */\nfunction stripAnsi(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Expected a `string`, got `\".concat(typeof string, \"`\"));\n  }\n  return string.replace(ansiRegex, \"\");\n}\nexport default stripAnsi;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/* globals __webpack_hash__ */\nif (module.hot) {\n\t/** @type {undefined|string} */\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn /** @type {string} */ (lastHash).indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check(true)\n\t\t\t.then(function (updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot find update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot apply update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","var EventEmitter = require(\"events\");\nmodule.exports = new EventEmitter();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n/**\n * @param {(string | number)[]} updatedModules updated modules\n * @param {(string | number)[] | null} renewedModules renewed modules\n */\nmodule.exports = function (updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function (moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function (moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function (moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function (moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t'[HMR] Consider using the optimization.moduleIds: \"named\" for module names.'\n\t\t\t);\n\t}\n};\n","/** @typedef {\"info\" | \"warning\" | \"error\"} LogLevel */\n\n/** @type {LogLevel} */\nvar logLevel = \"info\";\n\nfunction dummy() {}\n\n/**\n * @param {LogLevel} level log level\n * @returns {boolean} true, if should log\n */\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\n/**\n * @param {(msg?: string) => void} logFn log function\n * @returns {(level: LogLevel, msg?: string) => void} function that logs when log level is sufficient\n */\nfunction logGroup(logFn) {\n\treturn function (level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\n/**\n * @param {LogLevel} level log level\n * @param {string|Error} msg message\n */\nmodule.exports = function (level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\n/**\n * @param {LogLevel} level log level\n */\nmodule.exports.setLogLevel = function (level) {\n\tlogLevel = level;\n};\n\n/**\n * @param {Error} err error\n * @returns {string} formatted error\n */\nmodule.exports.formatError = function (err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeState = exports.MyersDiff = void 0;\nclass MyersDiff {\n    /**\n     * Constructor.\n     * @param pCompareFunction - Compare function to compare two items.\n     */\n    constructor(pCompareFunction) {\n        this.mCompareFunction = pCompareFunction;\n    }\n    /**\n     * Get differences of the two item lists.\n     * @param pItemListA - Item list A.\n     * @param pItemListB - Item list B.\n     */\n    differencesOf(pItemListA, pItemListB) {\n        // Save farthest-right points with it histories.\n        const lFrontierList = { 1: { x: 0, history: [] } };\n        // \"Convert\" Zero index to One index.\n        const lOneIndex = (pId) => pId - 1;\n        const lLengthA = pItemListA.length;\n        const lLengthB = pItemListB.length;\n        let lHistoryList;\n        let lX;\n        for (let lD = 0; lD < lLengthA + lLengthB + 1; lD++) {\n            for (let lK = -lD; lK < lD + 1; lK += 2) {\n                // Check if next move goes down or right.\n                const lGoesDown = (lK === -lD || (lK !== lD && lFrontierList[lK - 1].x < lFrontierList[lK + 1].x));\n                // Get starting diagonal point.\n                if (lGoesDown) {\n                    const lNextFrontier = lFrontierList[lK + 1];\n                    lX = lNextFrontier.x;\n                    lHistoryList = lNextFrontier.history;\n                }\n                else {\n                    const lNextFrontier = lFrontierList[lK - 1];\n                    lX = lNextFrontier.x + 1;\n                    lHistoryList = lNextFrontier.history;\n                }\n                // Copy history list.\n                lHistoryList = lHistoryList.slice();\n                let lY = lX - lK;\n                // Only start tracking history on valid track. Staring point (0,0) should not be tracked.\n                if (1 <= lY && lY <= lLengthB && lGoesDown) {\n                    lHistoryList.push({ changeState: ChangeState.Insert, item: pItemListB[lOneIndex(lY)] });\n                }\n                else if (1 <= lX && lX <= lLengthA) {\n                    lHistoryList.push({ changeState: ChangeState.Remove, item: pItemListA[lOneIndex(lX)] });\n                }\n                // Move diagonal as long as possible.\n                while (lX < lLengthA && lY < lLengthB && this.mCompareFunction(pItemListA[lOneIndex(lX + 1)], pItemListB[lOneIndex(lY + 1)])) {\n                    lX += 1;\n                    lY += 1;\n                    lHistoryList.push({ changeState: ChangeState.Keep, item: pItemListA[lOneIndex(lX)] });\n                }\n                // Check if in the bottom right. If not save frontier.\n                if (lX >= lLengthA && lY >= lLengthB) {\n                    // Return found history.\n                    return lHistoryList;\n                }\n                else {\n                    lFrontierList[lK] = { x: lX, history: lHistoryList };\n                }\n            }\n        }\n        // Empty array for typescript. This area is never reached.\n        /* istanbul ignore next */\n        return new Array();\n    }\n}\nexports.MyersDiff = MyersDiff;\nvar ChangeState;\n(function (ChangeState) {\n    ChangeState[ChangeState[\"Remove\"] = 1] = \"Remove\";\n    ChangeState[ChangeState[\"Insert\"] = 2] = \"Insert\";\n    ChangeState[ChangeState[\"Keep\"] = 3] = \"Keep\";\n})(ChangeState || (exports.ChangeState = ChangeState = {}));\n//# sourceMappingURL=myers-diff.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionary = void 0;\nconst list_1 = require(\"./list\");\nconst exception_1 = require(\"../exception/exception\");\n/**\n * Wrapper for {@link Map}.\n * Extended by {@link Dictionary.add}, {@link Dictionary.getAllKeysOfValue}, {@link Dictionary.getOrDefault} and {@link Dictionary.map}.\n *\n * @typeParam TKey - Type of objects defined for keys.\n * @typeParam TValue - Type of objects defined for values.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map}\n *\n * @public\n */\nclass Dictionary extends Map {\n    /**\n     * Add value and key to dictionary.\n     * Throws {@link Exception}  for any added dublicate key.\n     *\n     * @param pKey - Key of item.\n     * @param pValue - value of item.\n     *\n     * @throws\n     * On any dublicate key set,\n     *\n     * @example Adding a new and existing key.\n     * ```TypeScript\n     * const dictionary = new Dictionary<string, number>();\n     * dictionary.add('a', 4); // => OK\n     * dictionary.add('a', 4); // => Fail: Dublicate key.\n     * ```\n     */\n    add(pKey, pValue) {\n        // Add value and key to containers.\n        if (!this.has(pKey)) {\n            this.set(pKey, pValue);\n        }\n        else {\n            throw new exception_1.Exception(\"Can't add dublicate key to dictionary.\", this);\n        }\n    }\n    /**\n     * Create new dicionary and add same keys and values.\n     * @see {@link ICloneable.clone}\n     *\n     * @returns cloned dictionary with shallow copied key and value refernces.\n     *\n     * @example Clone and compare dictionary and dictionary items.\n     * ```TypeScript\n     * const dictionary = new Dictionary<string, object>();\n     * dictionary.set('a', new Object());\n     *\n     * const clone = dictionary.clone();\n     *\n     * const areSame = dictionary === clone; // => False\n     * const itemSame = dictionary.get('a') === clone.get('a'); // => True\n     * ```\n     */\n    clone() {\n        return new Dictionary(this);\n    }\n    /**\n     * Get all keys that have the set value.\n     *\n     * @param pValue - Value.\n     *\n     * @returns all keys that hold the specified value.\n     *\n     * @example Get keys of a value.\n     * ```TypeScript\n     * const dictionary = new Dictionary<string, number>();\n     * dictionary.set('a', 1);\n     * dictionary.set('b', 2);\n     * dictionary.set('c', 1);\n     *\n     * const keys = dictionary.getAllKeysOfValue(1); // => ['a', 'c']\n     * ```\n     */\n    getAllKeysOfValue(pValue) {\n        // Add entries iterator to list and filter for pValue = Value\n        const lKeyValuesWithValue = [...this.entries()].filter((pItem) => {\n            return pItem[1] === pValue;\n        });\n        // Get only keys of key values.\n        const lKeysOfKeyValue = lKeyValuesWithValue.map((pItem) => {\n            return pItem[0];\n        });\n        return lKeysOfKeyValue;\n    }\n    /**\n     * Get item. If the key does not exists the default value gets returned.\n     * @param pKey - Key of item.\n     * @param pDefault - Default value if key was not found.\n     *\n     * @returns value of the key. If the key does not exists the default value gets returned.\n     *\n     * @example Get value or default from a existing and none existing key.\n     * ```TypeScript\n     * const dictionary = new Dictionary<string, number>();\n     * dictionary.set('a', 1);\n     *\n     * const keyA = dictionary.getOrDefault('a', 22); // => 1\n     * const keyZ = dictionary.getOrDefault('z', 22); // => 22\n     * ```\n     */\n    getOrDefault(pKey, pDefault) {\n        const lValue = this.get(pKey);\n        if (typeof lValue !== 'undefined') {\n            return lValue;\n        }\n        return pDefault;\n    }\n    /**\n     * Maps information into new list.\n     * @param pFunction - Mapping funktion.\n     *\n     * @typeParam T - Result type of mapping resolver function.\n     *\n     * @returns mapped data for each item.\n     *\n     * @example Remap all dictionary values by adding a number to all values.\n     * ```TypeScript\n     * const dictionary = new Dictionary<string, number>();\n     * dictionary.set('a', 1);\n     * dictionary.set('b', 2);\n     *\n     * const list = dictionary.map((key, value) => value + 1); //  => [2, 3]\n     * ```\n     */\n    map(pFunction) {\n        const lResultList = new list_1.List();\n        for (const lKeyValuePair of this) {\n            // Execute callback and add result to list.\n            const lMappingResult = pFunction(lKeyValuePair[0], lKeyValuePair[1]);\n            lResultList.push(lMappingResult);\n        }\n        return lResultList;\n    }\n}\nexports.Dictionary = Dictionary;\n//# sourceMappingURL=dictionary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.List = void 0;\n/**\n * Wrapper for {@link Array}.\n *\n * @typeParam T - Type of items of list.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array}\n *\n * @public\n */\nclass List extends Array {\n    /**\n     * Create list and add items.\n     * Prevents spread operator with number arrays to initialize array with length instead of item.\n     *\n     * @param pItemList - Items.\n     *\n     * @example Create new list with `newListWith` and failing creation with the native `Array` constructor.\n     * ```TypeScript\n     * const newList = List.newListWith<number>(...[3]); // => [3]\n     * const newListWrong = new List<number>(...[3]);    // => [undefined, undefined, undefined]\n     * ```\n     */\n    static newListWith(...pItemList) {\n        const lNewList = new List();\n        lNewList.push(...pItemList);\n        return lNewList;\n    }\n    /**\n     * Remove every item.\n     *\n     * @example Clear a list.\n     * ```TypeScript\n     * const list = List.newListWith<number>(1, 2, 3);\n     * list.clear();\n     *\n     * console.log(list.length); // => 0\n     * ```\n     */\n    clear() {\n        this.splice(0, this.length);\n    }\n    /**\n     * Create new list and add same items.\n     * @see {@link ICloneable.clone}\n     *\n     * @returns cloned list with shallow copied item refernces.\n     *\n     * @example Clone and compare list and list items.\n     * ```TypeScript\n     * const list = List.newListWith<object>(new Object());\n     *\n     * const clone = list.clone();\n     *\n     * const areSame = list === clone; // => False\n     * const itemSame = list[0] === list[0]; // => True\n     * ```\n     */\n    clone() {\n        return List.newListWith(...this);\n    }\n    /**\n     * Copy distinct values into new list.\n     *\n     * @returns new list instance with only distinct values.\n     *\n     * @example Create a new list with dublicates and create a new distinct list out of it.\n     * ```TypeScript\n     * const listWithDublicates = List.newListWith<number>(1, 1, 2, 3, 3);\n     * const distinctList = listWithDublicates.distinct(); // => [1, 2, 3]\n     * ```\n     */\n    distinct() {\n        return List.newListWith(...new Set(this));\n    }\n    /**\n     * Compares this array with the specified one.\n     * Compares length and every item by reference and order.\n     * Does only shallow compare item references.\n     *\n     * @param pArray - Array to compare.\n     *\n     * @returns true for equality.\n     *\n     * @example Compare two arrays with a list.\n     * ```TypeScript\n     * const list = List.newListWith<number>(1, 3, 2);\n     *\n     * const isEqual = list.equals([1, 3, 2]) // => True\n     * const isUnequal = list.equals([1, 2, 3]) // => False\n     * ```\n     */\n    equals(pArray) {\n        // Check if array are same, dont null and have same length.\n        if (this === pArray) {\n            return true;\n        }\n        else if (!pArray || this.length !== pArray.length) {\n            return false;\n        }\n        // Check each item.\n        for (let lIndex = 0; lIndex < this.length; ++lIndex) {\n            if (this[lIndex] !== pArray[lIndex]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Removes the first appearence of a value.\n     *\n     * @param pValue - Target value to remove.\n     *\n     * @returns removed element. When no element was removed, undefined is returned instead.\n     *\n     * @example Remove a existing and a none existing item of a list.\n     * ```TypeScript\n     * const list = List.newListWith<number>(1, 3, 2);\n     *\n     * const removedElement = list.remove(1); // => 1\n     * const noneExistingElement = list.remove(4); // => undefined\n     * ```\n     */\n    remove(pValue) {\n        const lFoundIndex = this.indexOf(pValue);\n        // Only remove if found.\n        if (lFoundIndex !== -1) {\n            return this.splice(lFoundIndex, 1)[0];\n        }\n        return undefined;\n    }\n    /**\n     * Replace first appearence of value.\n     *\n     * @param pOldValue - Target value to replace.\n     * @param pNewValue - Replacement value.\n     *\n     * @returns replaced element. When no element was replaced, undefined is returned instead.\n     *\n     * @example Replace a existing and a none existing item of a list.\n     * ```TypeScript\n     * const list = List.newListWith<number>(1, 5, 3);\n     *\n     * const removedElement = list.replace(5, 2); // => 5\n     * const noneExistingElement = list.replace(4, 3); // => undefined\n     *\n     * console.log(list); // => [1, 2, 3]\n     * ```\n     */\n    replace(pOldValue, pNewValue) {\n        const lFoundIndex = this.indexOf(pOldValue);\n        // Only replace if found.\n        if (lFoundIndex !== -1) {\n            // Save old value and replace it with new value.\n            const lOldValue = this[lFoundIndex];\n            this[lFoundIndex] = pNewValue;\n            return lOldValue;\n        }\n        return undefined;\n    }\n    /**\n     * Returns a string representation of this list.\n     * @override base objects {@link Array.toString}\n     *\n     * @returns string representation for this list.\n     *\n     * @example Output a string representation of a list.\n     * ```TypeScript\n     * const list = List.newListWith<number>(1, 2, 3);\n     * console.log(list.toString()); // => [1, 2, 3]\n     * ```\n     */\n    toString() {\n        return `[${super.join(', ')}]`;\n    }\n}\nexports.List = List;\n//# sourceMappingURL=list.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stack = void 0;\n/**\n * Simple and fast stack implementation based on references.\n *\n * @public\n */\nclass Stack {\n    /**\n     * Get current stack size.\n     */\n    get size() {\n        return this.mSize;\n    }\n    /**\n     * Current top item of stack.\n     * Returns undefined when no item is stacked.\n     */\n    get top() {\n        // Undefined when no item is stacked.\n        if (!this.mTopItem) {\n            return undefined;\n        }\n        return this.mTopItem.value;\n    }\n    /**\n     * Constructor.\n     */\n    constructor() {\n        this.mTopItem = null;\n        this.mSize = 0;\n    }\n    /**\n     * Clones the references of all stack items into a new one.\n     * Does only shallow copy.\n     *\n     * @returns The cloned stack.\n     */\n    clone() {\n        const lClonedStack = new Stack();\n        // Only thing that needs to be cloned is the current reference.\n        lClonedStack.mTopItem = this.mTopItem;\n        lClonedStack.mSize = this.mSize;\n        return lClonedStack;\n    }\n    /**\n     * Iterates over each stack entry in reversed (newest...oldest) order.\n     *\n     * @returns Generator.\n     */\n    *entries() {\n        let lCurrentItem = this.mTopItem;\n        while (lCurrentItem !== null) {\n            yield lCurrentItem.value;\n            lCurrentItem = lCurrentItem.previous;\n        }\n    }\n    /**\n     * Clear stack and get all stacked items in stack order.\n     *\n     * @returns All stacked values in top to down order.\n     *\n     * @example Flush Stack\n     * ``` Typescript\n     * const stack = new Stack<number>();\n     * stack.push(1);\n     * stack.push(2);\n     * stack.push(3);\n     *\n     * // Flush all items. Clears stack.\n     * const stackValues = stack.flush(); // => [3, 2, 1];\n     * console.log(stack.top); // => undefined\n     * ```\n     */\n    flush() {\n        const lValueList = new Array();\n        // Pop items as long as there are stack items.\n        // Don't check poped value as next indicator as it can contain undefined.\n        while (this.mTopItem) {\n            lValueList.push(this.pop());\n        }\n        return lValueList;\n    }\n    /**\n     * Removes the current top item of stack.\n     * When no item is stacked nothing happends and undefined is returned.\n     *\n     * @returns Current top item. When no item was stacked, undefined is returned instead.\n     *\n     * @example Pop current top item.\n     * ``` Typescript\n     * const stack = new Stack<number>();\n     * stack.push(1);\n     * stack.push(2);\n     * stack.push(3);\n     *\n     * // Check current stacked top item before and after poping.\n     * console.log(stack.top); // => 3\n     * const stackValues = stack.pop(); // => 3;\n     * console.log(stack.top); // => 2\n     * ```\n     */\n    pop() {\n        // Undefined when no item is stacked.\n        if (!this.mTopItem) {\n            return undefined;\n        }\n        // Buffer current top value.\n        const lCurrentTopValue = this.mTopItem.value;\n        // Replace current top item with previous stacked.\n        this.mTopItem = this.mTopItem.previous;\n        this.mSize--;\n        return lCurrentTopValue;\n    }\n    /**\n     * Push new value as top item of stack. Replaces the current top item.\n     * @param pValue - Next value placed on top.\n     *\n     * @example Push next top item.\n     * ``` Typescript\n     * const stack = new Stack<number>();\n     * stack.push(1);\n\n     *\n     * // Check current stacked top item before and after pushing.\n     * console.log(stack.top); // => 1\n     * stack.push(2);\n     * console.log(stack.top); // => 2\n     * ```\n     */\n    push(pValue) {\n        // Create new stack item with the current top item as reference. \n        const lNextItem = {\n            previous: this.mTopItem,\n            value: pValue\n        };\n        // Replace current top item with next.\n        this.mTopItem = lNextItem;\n        this.mSize++;\n    }\n    /**\n     * Converts this stack into an array.\n     * The first item in the array is the last item pushed into the stack.\n     *\n     * @returns The current stack as array.\n     *\n     * @example Stack into array.\n     * ``` Typescript\n     * const stack = new Stack<number>();\n     * stack.push(1);\n     * stack.push(2);\n     * stack.push(3);\n     *\n     * // Stack to array.\n     * console.log(stack.toArray()); // => [3, 2, 1]\n     * ```\n     */\n    toArray() {\n        // Convert genertor into array.\n        return [...this.entries()];\n    }\n}\nexports.Stack = Stack;\n//# sourceMappingURL=stack.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Exception = void 0;\n/**\n * Extends {@link Error} by a {@link Exception.target} reference.\n *\n * @typeParam T - Exception target type.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n *\n * @public\n */\nclass Exception extends Error {\n    /**\n     * Target of exception.\n     *\n     * @readonly\n     */\n    get target() {\n        return this.mTarget;\n    }\n    /**\n     * Constructor.\n     * @param pMessage - Messsage of exception.\n     * @param pTarget - Target of exception.\n     * @param pErrorOptions - Optional error options.\n     */\n    constructor(pMessage, pTarget, pErrorOptions) {\n        super(pMessage, pErrorOptions);\n        this.mTarget = pTarget;\n    }\n}\nexports.Exception = Exception;\n//# sourceMappingURL=exception.js.map","\"use strict\";\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MyersDiff = exports.ChangeState = exports.TypeUtil = exports.EnumUtil = exports.Stack = exports.Exception = exports.List = exports.Dictionary = void 0;\n/**\n * Library for data container and easier data access.\n *\n * @remarks\n * This package consists mostly of helper classes and storage types, aimed at reducing code redundance and improving clarity.\n *\n * @packageDocumentation\n */\n// Container.\nvar dictionary_1 = require(\"./data_container/dictionary\");\nObject.defineProperty(exports, \"Dictionary\", { enumerable: true, get: function () { return dictionary_1.Dictionary; } });\nvar list_1 = require(\"./data_container/list\");\nObject.defineProperty(exports, \"List\", { enumerable: true, get: function () { return list_1.List; } });\nvar exception_1 = require(\"./exception/exception\");\nObject.defineProperty(exports, \"Exception\", { enumerable: true, get: function () { return exception_1.Exception; } });\nvar stack_1 = require(\"./data_container/stack\");\nObject.defineProperty(exports, \"Stack\", { enumerable: true, get: function () { return stack_1.Stack; } });\n// Handler.\nvar enum_util_1 = require(\"./util/enum-util\");\nObject.defineProperty(exports, \"EnumUtil\", { enumerable: true, get: function () { return enum_util_1.EnumUtil; } });\nvar type_util_1 = require(\"./util/type-util\");\nObject.defineProperty(exports, \"TypeUtil\", { enumerable: true, get: function () { return type_util_1.TypeUtil; } });\n// Algorythms\nvar myers_diff_1 = require(\"./algorithm/myers-diff\");\nObject.defineProperty(exports, \"ChangeState\", { enumerable: true, get: function () { return myers_diff_1.ChangeState; } });\nObject.defineProperty(exports, \"MyersDiff\", { enumerable: true, get: function () { return myers_diff_1.MyersDiff; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumUtil = void 0;\n/**\n * Static helper type to read data from enum objects.\n *\n * @public\n */\nclass EnumUtil {\n    /**\n     * Infers value into enum type.\n     * When the values can not be infered into the specified enum, undefined is returned.\n     *\n     * @param pEnum - typeof Enum object.\n     * @param pValue - Value of enum.\n     *\n     * @typeParam T - Enum type the value should be infered into.\n     *\n     * @returns Infered `pValue` parameter or undefined when the value does not exists as the enums value.\n     *\n     * @example Try to cast two possible enum values.\n     * ``` Typescript\n     * enum MyEnum {\n     *     Entry1 = 1,\n     *     Entry2 = 2\n     * }\n     *\n     * const existingValue = EnumUtil.cast<MyEnum>(MyEnum, 1); // => MyEnum.Entry1\n     * const noneExistingValue = EnumUtil.cast<MyEnum>(MyEnum, 5); // => undefined\n     * ```\n     */\n    static cast(pEnum, pValue) {\n        // Thats it... :)\n        if (EnumUtil.exists(pEnum, pValue)) {\n            return pValue;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Check value existence on a enum object.\n     * Infers `pValue` parameter as enum type.\n     * @param pEnum - typeof Enum object.\n     * @param pValue - Value of enum.\n     *\n     * @typeParam T - Enum type the value should be infered into.\n     *\n     * @returns True when the value can be casted into enum.\n     *\n     * @example Check existence of one two possible enum values.\n     * ``` Typescript\n     * enum MyEnum {\n     *     Entry1 = 1,\n     *     Entry2 = 2\n     * }\n     *\n     * const existingValue = EnumUtil.exists(MyEnum, 1); // => True\n     * const noneExistingValue = EnumUtil.exists(MyEnum, 5); // => False\n     * ```\n     */\n    static exists(pEnum, pValue) {\n        return EnumUtil.valuesOf(pEnum).includes(pValue);\n    }\n    /**\n     * Return all keys of an enum as array.\n     *\n     * @param pEnum - typeof Enum object.\n     *\n     * @returns All enum key as array in defined order.\n     *\n     * @remarks\n     * Does only work for number enums and should fail for mixed or string enums.\n     *\n     * @example Read enum names from custom enum object.\n     * ``` Typescript\n     * enum MyEnum {\n     *     Entry1 = 1,\n     *     Entry2 = 2\n     * }\n     *\n     * const enumNames = EnumUtil.namesOf(MyEnum); // => ['Entry1', 'Entry2']\n     * ```\n     */\n    static namesOf(pEnum) {\n        // Convert enum to key array.\n        return Object.keys(pEnum).filter((pKey) => isNaN(Number(pKey)));\n    }\n    /**\n     * Return all values of an enum as array.\n     *\n     * @param pEnum - typeof Enum object.\n     *\n     * @typeParam T - Enum value type.\n     *\n     * @returns All enum values as array in defined order.\n     *\n     * @example Read enum values from custom enum object.\n     * ``` Typescript\n     * enum MyEnum {\n     *     Entry1 = 1,\n     *     Entry2 = 2\n     * }\n     *\n     * const enumValues = EnumUtil.valuesOf(MyEnum); // => [1, 2]\n     * ```\n     */\n    static valuesOf(pEnum) {\n        const lEnumValues = new Array();\n        // Convert enum to vaue array by iterating over all keys.\n        for (const lKey of EnumUtil.namesOf(pEnum)) {\n            lEnumValues.push(pEnum[lKey]);\n        }\n        return lEnumValues;\n    }\n}\nexports.EnumUtil = EnumUtil;\n//# sourceMappingURL=enum-util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeUtil = void 0;\n/**\n * Static helper type to read data from objects.\n *\n * @public\n */\nclass TypeUtil {\n    /**\n     * Get name of objects property.\n     * @param pName - Property name.\n     *\n     * @typeParam T - Object with any string key property.\n     *\n     * @returns the name of property.\n     *\n     * @remarks\n     * Acts more as a type safe way of accessing property names of a type.\n     *\n     * @example Read enum names from custom enum object.\n     * ``` Typescript\n     * class MyClass {\n     *    public myProperty: number = 1;\n     * }\n     *\n     * const propertyName = TypeUtil.nameOf<MyClass>('myProperty'); // => 'myProperty'\n     * ```\n     *\n     * @experimental @alpha\n     */\n    static nameOf(pName) {\n        return pName;\n    }\n}\nexports.TypeUtil = TypeUtil;\n//# sourceMappingURL=type-util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeviceConfiguration = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nclass DeviceConfiguration {\n    /**\n     * Get all key actions.\n     */\n    get keyActions() {\n        return this.mButtonActions.map((pKey, pValue) => {\n            return { name: pKey, buttons: [...pValue] };\n        });\n    }\n    /**\n     * Tolerance on wich buttons and axis are marked as pressed.\n     */\n    get triggerTolerance() {\n        return this.mTriggerTolerance;\n    }\n    set triggerTolerance(pTolerance) {\n        this.mTriggerTolerance = pTolerance;\n    }\n    /**\n     * Constructor.\n     */\n    constructor() {\n        this.mTriggerTolerance = 0;\n        this.mButtonActions = new core_1.Dictionary();\n        this.mActionsButtons = new core_1.Dictionary();\n    }\n    /**\n     * Add key actions.\n     * @param pName - Action name.\n     * @param pButtons - Buttons binded to action.\n     */\n    addAction(pName, pButtons) {\n        this.mButtonActions.set(pName, new Set(pButtons));\n        // Map keys to actions. \n        for (const lKey of pButtons) {\n            // Init action list.\n            if (!this.mActionsButtons.has(lKey)) {\n                this.mActionsButtons.set(lKey, new Set());\n            }\n            this.mActionsButtons.get(lKey).add(pName);\n        }\n    }\n    /**\n     * Clone device configuration.\n     */\n    clone() {\n        const lClone = new DeviceConfiguration();\n        // Trigger tolerance.\n        lClone.triggerTolerance = this.triggerTolerance;\n        // Copy actions.\n        for (const lAction of this.mButtonActions) {\n            lClone.addAction(lAction[0], [...lAction[1]]);\n        }\n        return lClone;\n    }\n    /**\n     * Get keys of actions.\n     * @param pActionName - Action name.\n     */\n    getActionButtons(pActionName) {\n        return [...(this.mButtonActions.get(pActionName) ?? [])];\n    }\n    /**\n     * Get all actions asigned to button.\n     * @param pButton - Button.\n     */\n    getActionOfButton(pButton) {\n        // Copy Set to array.\n        return [...(this.mActionsButtons.get(pButton) ?? [])];\n    }\n}\nexports.DeviceConfiguration = DeviceConfiguration;\n//# sourceMappingURL=device-configuration.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GamepadButtonMapping = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nconst button_value_type_enum_1 = require(\"../enum/button-value-type.enum\");\n/**\n * Gamepad mapping.\n */\nclass GamepadButtonMapping {\n    /**\n     * Constructor.\n     */\n    constructor(pMapping) {\n        this.mMapping = new core_1.Dictionary();\n        // Apply optional mapping.\n        if (pMapping) {\n            for (const lButton of Object.keys(pMapping)) {\n                const lButtonMapping = pMapping[lButton];\n                this.addMapping(lButton, lButtonMapping.type, lButtonMapping.index);\n            }\n        }\n    }\n    /**\n     * Add button mapping.\n     * @param pButton - Button.\n     * @param pButtonType - Type of button.\n     * @param pButtonIndex - Mapped index.\n     */\n    addMapping(pButton, pButtonType, pButtonIndex) {\n        this.mMapping.set(pButton, { type: pButtonType, index: pButtonIndex });\n    }\n    /**\n     * Get button value of mapped button.\n     * Unmapped buttons return allways zero.\n     * @param pButton - Button.\n     * @param pGamepad - Gamepad data.\n     */\n    executeMapping(pButton, pGamepad) {\n        const lButtonMapping = this.mMapping.get(pButton);\n        // Return unpressed value on all unmapped buttons. \n        if (!lButtonMapping) {\n            return 0;\n        }\n        // Access correct button array for axis or button  buttons.\n        if (lButtonMapping.type === button_value_type_enum_1.ButtonValueType.Button) {\n            return pGamepad.buttons[lButtonMapping.index]?.value ?? 0;\n        }\n        else { // Axis.   \n            return pGamepad.axes[lButtonMapping.index] ?? 0;\n        }\n    }\n}\nexports.GamepadButtonMapping = GamepadButtonMapping;\n//# sourceMappingURL=gamepad-button-mapping.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputConfiguration = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nconst button_value_type_enum_1 = require(\"../enum/button-value-type.enum\");\nconst gamepad_button_mapping_1 = require(\"./gamepad-button-mapping\");\nclass InputConfiguration {\n    /**\n     * Constructor.\n     */\n    constructor(pDefault) {\n        this.mGampadMappingList = new Array();\n        this.mDeviceSettings = new core_1.Dictionary();\n        this.mDefaultDevice = pDefault;\n        // Gamepad mapping.\n        this.mGampadMappingList = new Array();\n        this.mStandardGamepadMapping = new gamepad_button_mapping_1.GamepadButtonMapping({\n            clusterButtonBottom: { type: button_value_type_enum_1.ButtonValueType.Button, index: 0 },\n            clusterButtonRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 1 },\n            clusterButtonLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 2 },\n            clusterButtonTop: { type: button_value_type_enum_1.ButtonValueType.Button, index: 3 },\n            buttonLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 4 },\n            buttonRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 5 },\n            triggerLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 6 },\n            triggerRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 7 },\n            selectButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 8 },\n            startButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 9 },\n            homeButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 16 },\n            directionalPadTop: { type: button_value_type_enum_1.ButtonValueType.Button, index: 12 },\n            directionalPadBottom: { type: button_value_type_enum_1.ButtonValueType.Button, index: 13 },\n            directionalPadRight: { type: button_value_type_enum_1.ButtonValueType.Button, index: 15 },\n            directionalPadLeft: { type: button_value_type_enum_1.ButtonValueType.Button, index: 14 },\n            leftThumbStickButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 10 },\n            leftThumbStickXaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 0 },\n            leftThumbStickYaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 1 },\n            rightThumbStickButton: { type: button_value_type_enum_1.ButtonValueType.Button, index: 11 },\n            rightThumbStickXaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 2 },\n            rightThumbStickYaxis: { type: button_value_type_enum_1.ButtonValueType.Axis, index: 3 },\n        });\n    }\n    /**\n     * Add gamepad mapping by id matching.\n     * @param pIdAssignment - Regex for assigning to matching gamepad ids.\n     * @param pMapping - Gamepad mapping.\n     */\n    addGamepadMapping(pIdAssignment, pMapping) {\n        this.mGampadMappingList.push({ mapping: pMapping, idMatch: pIdAssignment });\n    }\n    /**\n     * Get device settings.\n     * @param pDeviceId - Device id.\n     */\n    deviceConfiguration(pDeviceId) {\n        // Init device with cloned default configuration.\n        if (!this.mDeviceSettings.has(pDeviceId)) {\n            const lDefaultClone = this.mDefaultDevice.clone();\n            this.mDeviceSettings.set(pDeviceId, lDefaultClone);\n        }\n        return this.mDeviceSettings.get(pDeviceId);\n    }\n    /**\n     * Get mapping of gamepad.\n     * @param pGamepadId - Manufacturer id of gamepad.\n     */\n    getGampadMapping(pGamepadId, pGamepadMappingType) {\n        for (const lMappingAssignment of this.mGampadMappingList) {\n            if (lMappingAssignment.idMatch.test(pGamepadId)) {\n                return lMappingAssignment.mapping;\n            }\n        }\n        // Map with gamepad mapping type.\n        if (pGamepadMappingType === 'standard') {\n            return this.mStandardGamepadMapping;\n        }\n        return this.mStandardGamepadMapping;\n    }\n}\nexports.InputConfiguration = InputConfiguration;\n//# sourceMappingURL=input-configuration.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GamepadConnector = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nconst gamepad_input_device_1 = require(\"../device/gamepad-input-device\");\n/**\n * Handles connect and disconnection of gamepads.\n */\nclass GamepadConnector {\n    static { this.mGamepads = new core_1.Dictionary(); }\n    /**\n     * Constructor.\n     * Initialize connecting and disconnecting gamepads.\n     */\n    init(pDevices) {\n        // Init connected gamepads.\n        window.addEventListener('gamepadconnected', (pEvent) => {\n            this.connectGamepad(pEvent.gamepad, pDevices);\n        });\n        // Deconstruct disconnected gamepads.\n        window.addEventListener('gamepaddisconnected', (pEvent) => {\n            this.disconnectGamepad(pEvent.gamepad, pDevices);\n        });\n        // Init gamepads that are connected before constructor call.\n        for (const lGamepad of globalThis.navigator.getGamepads()) {\n            if (lGamepad !== null) {\n                this.connectGamepad(lGamepad, pDevices);\n            }\n        }\n    }\n    /**\n     * Init gamepad.\n     * Applies gamepad button mapping.\n     * @param pGamepad - Gamepad\n     */\n    connectGamepad(pGamepad, pDevices) {\n        // Enable gamepad when already created.\n        if (GamepadConnector.mGamepads.has(pGamepad.index)) {\n            pDevices.registerDevice(GamepadConnector.mGamepads.get(pGamepad.index));\n            return;\n        }\n        // Try to find mappig by id assignment.\n        const lFoundMapping = pDevices.configuration.getGampadMapping(pGamepad.id, pGamepad.mapping);\n        // Build general gamepad information.\n        const lGamepadInformation = {\n            index: pGamepad.index,\n            id: pGamepad.id,\n            mapping: lFoundMapping\n        };\n        const lGamepadInput = new gamepad_input_device_1.GamepadInputDevice(lGamepadInformation, pDevices.configuration);\n        // Add GamepadGameInput to local store.\n        GamepadConnector.mGamepads.add(pGamepad.index, lGamepadInput);\n        // Add gamepad to global input devices.\n        pDevices.registerDevice(lGamepadInput);\n    }\n    /**\n     * Desconstruct gamepad.\n     * @param pGamepad - Gamepad.\n     */\n    disconnectGamepad(pGamepad, pDevices) {\n        // Only disconnect GamepadInput\n        if (GamepadConnector.mGamepads.has(pGamepad.index)) {\n            pDevices.unregisterDevice(GamepadConnector.mGamepads.get(pGamepad.index));\n        }\n    }\n}\nexports.GamepadConnector = GamepadConnector;\n//# sourceMappingURL=gamepad-connector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MouseKeyboardConnector = void 0;\nconst mouse_keyboard_input_device_1 = require(\"../device/mouse-keyboard-input-device\");\nclass MouseKeyboardConnector {\n    /**\n     * Init keyboard and mouse input devices.\n     */\n    init(pDevices) {\n        pDevices.registerDevice(new mouse_keyboard_input_device_1.MouseKeyboardInputDevice(pDevices.configuration));\n    }\n}\nexports.MouseKeyboardConnector = MouseKeyboardConnector;\n//# sourceMappingURL=mouse-keyboard-connector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseInputDevice = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nconst input_action_event_1 = require(\"../event/input-action-event\");\nconst input_button_event_1 = require(\"../event/input-button-event\");\nclass BaseInputDevice extends EventTarget {\n    /**\n     * Get connection state.\n     */\n    get connected() {\n        return this.mConnected;\n    }\n    set connected(pConnected) {\n        this.mConnected = pConnected;\n        // Call state change method.\n        this.onConnectionStateChange();\n    }\n    /**\n     * Device configuration.\n     */\n    get deviceConfiguration() {\n        return this.mDeviceConfiguration;\n    }\n    /**\n     * Device type.\n     */\n    get deviceType() {\n        return this.mDeviceType;\n    }\n    /**\n     * Unique game input id.\n     * Consistent on reconnect.\n     */\n    get id() {\n        return this.mId;\n    }\n    /**\n     * Constructor.s\n     * @param pId - Game input id.\n     */\n    constructor(pId, pDeviceType, pDeviceConfiguration) {\n        super();\n        this.mId = pId;\n        this.mConnected = false;\n        this.mDeviceType = pDeviceType;\n        this.mButtonState = new core_1.Dictionary();\n        this.mActionStates = new core_1.Dictionary();\n        this.mDeviceConfiguration = pDeviceConfiguration;\n    }\n    addEventListener(pType, pCallback, pOptions) {\n        super.addEventListener(pType, pCallback, pOptions);\n    }\n    /**\n     * Get float value of button state. Range between 0..1.\n     * @param pButton - Button\n     */\n    getButtonState(pButton) {\n        return this.mButtonState.get(pButton) ?? 0;\n    }\n    /**\n     * Check for button pressed.\n     * @param pButton - Button.\n     */\n    isPressed(pButton) {\n        return this.getButtonState(pButton) !== 0;\n    }\n    /**\n     * Set button state.\n     * Updates states of alias buttons.\n     * @param pButton - Target button.\n     * @param pValue - New state value of button.\n     */\n    setButtonState(pButton, pValue) {\n        // Exit when input is not connected.\n        if (!this.connected) {\n            return;\n        }\n        // Save current state.\n        const lLastButtonState = this.mButtonState.get(pButton) ?? 0;\n        // Apply tolerance. Absolute values for negative axis.\n        let lButtonState = pValue;\n        if (Math.abs(lButtonState) < this.mDeviceConfiguration.triggerTolerance) {\n            lButtonState = 0;\n        }\n        // Exit when values has not changed.\n        if (lLastButtonState === lButtonState) {\n            return;\n        }\n        // Set next target button state and trigger button change.\n        this.mButtonState.set(pButton, lButtonState);\n        this.dispatchButtonChangeEvent(pButton, lButtonState, lLastButtonState);\n        // Check all actions of this buttons.\n        for (const lAction of this.deviceConfiguration.getActionOfButton(pButton)) {\n            const lActionButtonList = this.deviceConfiguration.getActionButtons(lAction);\n            // Get lowest state of all alias buttons.\n            const lActionState = lActionButtonList.reduce((pCurrentValue, pNextValue) => {\n                const lNextValue = this.mButtonState.get(pNextValue) ?? 0;\n                // Save changes closer to zero.\n                if (Math.abs(lNextValue) < Math.abs(pCurrentValue)) {\n                    return lNextValue;\n                }\n                else {\n                    return pCurrentValue;\n                }\n            }, 999);\n            // Set highest state to alias target state.\n            const lActionLastState = this.mActionStates.get(lAction) ?? 0;\n            // Exit when values has not changed.\n            if (lActionLastState === lActionState) {\n                return;\n            }\n            // Update action state.\n            this.mActionStates.set(lAction, lActionState);\n            // Trigger events.\n            this.dispatchActionChangeEvent(lAction, lActionState, lActionLastState, lActionButtonList);\n        }\n    }\n    /**\n     * Dispatch action events based on changed state.\n     * @param pAction - Target action.\n     * @param pCurrentState - Current set state.\n     * @param pLastState - Last state.\n     */\n    dispatchActionChangeEvent(pAction, pCurrentState, pLastState, pAffectedButtons) {\n        // Trigger pressed event when last state was zero.\n        if (pLastState === 0) {\n            this.dispatchEvent(new input_action_event_1.InputActionEvent('actiondown', pAction, pCurrentState, pAffectedButtons));\n        }\n        else if (Math.abs(pLastState) > 0 && pCurrentState === 0) {\n            this.dispatchEvent(new input_action_event_1.InputActionEvent('actionup', pAction, pCurrentState, pAffectedButtons));\n        }\n        // Trigger value change event.\n        this.dispatchEvent(new input_action_event_1.InputActionEvent('actionstatechange', pAction, pCurrentState, pAffectedButtons));\n        return true;\n    }\n    /**\n     * Dispatch button events based on changed state.\n     * @param pButton - Target button.\n     * @param pCurrentState - Current set state.\n     * @param pLastState - Last state.\n     */\n    dispatchButtonChangeEvent(pButton, pCurrentState, pLastState) {\n        // Trigger pressed event when last state was zero.\n        if (pLastState === 0) {\n            this.dispatchEvent(new input_button_event_1.InputButtonEvent('buttondown', pButton, pCurrentState));\n        }\n        else if (Math.abs(pLastState) > 0 && pCurrentState === 0) {\n            this.dispatchEvent(new input_button_event_1.InputButtonEvent('buttonup', pButton, pCurrentState));\n        }\n        // Trigger value change event.\n        this.dispatchEvent(new input_button_event_1.InputButtonEvent('buttonstatechange', pButton, pCurrentState));\n        return true;\n    }\n}\nexports.BaseInputDevice = BaseInputDevice;\n//# sourceMappingURL=base-input-device.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GamepadInputDevice = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nconst gamepad_button_enum_1 = require(\"../enum/gamepad-button.enum\");\nconst input_device_enum_1 = require(\"../enum/input-device.enum\");\nconst base_input_device_1 = require(\"./base-input-device\");\nclass GamepadInputDevice extends base_input_device_1.BaseInputDevice {\n    /**\n     * Constructor.\n     * @param pGamepad - Gamepad object.\n     */\n    constructor(pGamepad, pConfiguration) {\n        const lDeviceId = `gamepad_${pGamepad.index}`;\n        const lDeviceConfiguration = pConfiguration.deviceConfiguration(lDeviceId);\n        super(lDeviceId, input_device_enum_1.InputDevice.Gamepad, lDeviceConfiguration);\n        this.mGamepadInformation = pGamepad;\n        this.mLoopRunning = false;\n    }\n    /**\n     * On connection state change.\n     */\n    onConnectionStateChange() {\n        if (this.connected && !this.mLoopRunning) {\n            this.startScanLoop();\n        }\n    }\n    /**\n     * Start scanning for pressed buttons.\n     */\n    startScanLoop() {\n        // Get all gamepad buttons.\n        const lGamepadButtonList = core_1.EnumUtil.valuesOf(gamepad_button_enum_1.GamepadButton);\n        const lLoop = () => {\n            // Only scan on connected gamepads.\n            if (this.connected) {\n                // Find connected gamepad. Gamepad does allways exists. Even after disconnect.\n                const lGamepad = globalThis.navigator.getGamepads().find((pGamepad) => {\n                    return pGamepad.index === this.mGamepadInformation.index;\n                });\n                // Scan each gamepad button.\n                for (const lButton of lGamepadButtonList) {\n                    // Read button value.\n                    const lButtonValue = this.mGamepadInformation.mapping.executeMapping(lButton, lGamepad);\n                    // Set button value.\n                    this.setButtonState(lButton, lButtonValue);\n                }\n            }\n            // Stop loop on disconnect.\n            if (this.connected) {\n                globalThis.requestAnimationFrame(lLoop);\n            }\n            else {\n                this.mLoopRunning = false;\n            }\n        };\n        // Request starting animation frame.\n        globalThis.requestAnimationFrame(lLoop);\n        this.mLoopRunning = true;\n    }\n}\nexports.GamepadInputDevice = GamepadInputDevice;\n//# sourceMappingURL=gamepad-input-device.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MouseKeyboardInputDevice = void 0;\nconst input_device_enum_1 = require(\"../enum/input-device.enum\");\nconst mouse_button_enum_1 = require(\"../enum/mouse-button.enum\");\nconst base_input_device_1 = require(\"./base-input-device\");\nclass MouseKeyboardInputDevice extends base_input_device_1.BaseInputDevice {\n    /**\n     * Constructor.\n     * @param pConfiguration - Iput configuration.\n     */\n    constructor(pConfiguration) {\n        const lDeviceId = 'KEYBOARD_MOUSE_1';\n        const lDeviceConfiguration = pConfiguration.deviceConfiguration(lDeviceId);\n        super(lDeviceId, input_device_enum_1.InputDevice.MouseKeyboard, lDeviceConfiguration);\n        this.mMovementX = 0;\n        this.mMovementY = 0;\n        this.mLoopRunning = false;\n        this.setupCaptureListener();\n    }\n    /**\n     * On connection state change.\n     */\n    onConnectionStateChange() {\n        if (this.connected && !this.mLoopRunning) {\n            this.startMouseMoveScanLoop();\n        }\n    }\n    /**\n     * Set value of mouse button.\n     * @param pButtonNumber - Button number of MouseEvent.button.\n     * @param pValue - Button values.\n     */\n    setMouseButtonValue(pButtonNumber, pValue) {\n        switch (pButtonNumber) {\n            case 0: {\n                this.setButtonState(mouse_button_enum_1.MouseButton.MainLeft, pValue);\n                break;\n            }\n            case 1: {\n                this.setButtonState(mouse_button_enum_1.MouseButton.MainMiddle, pValue);\n                break;\n            }\n            case 2: {\n                this.setButtonState(mouse_button_enum_1.MouseButton.MainRight, pValue);\n                break;\n            }\n            case 3: {\n                this.setButtonState(mouse_button_enum_1.MouseButton.SecondaryBack, pValue);\n                break;\n            }\n            case 4: {\n                this.setButtonState(mouse_button_enum_1.MouseButton.SecondaryForward, pValue);\n                break;\n            }\n        }\n    }\n    /**\n     * Setup event listener for keyboard and mouse events.\n     */\n    setupCaptureListener() {\n        // Capture mouse movement for next frame.\n        document.addEventListener('mousemove', (pMouseEvent) => {\n            this.mMovementX += pMouseEvent.movementX;\n            this.mMovementY += pMouseEvent.movementY;\n        });\n        // Mouse button events.\n        document.addEventListener('mouseup', (pMouseEvent) => {\n            this.setMouseButtonValue(pMouseEvent.button, 0);\n        });\n        document.addEventListener('mousedown', (pMouseEvent) => {\n            this.setMouseButtonValue(pMouseEvent.button, 1);\n        });\n        // Keyboard event.\n        document.addEventListener('keydown', (pKeyboardEvent) => {\n            const lInputKey = pKeyboardEvent.code;\n            this.setButtonState(lInputKey, 1);\n        });\n        document.addEventListener('keyup', (pKeyboardEvent) => {\n            const lInputKey = pKeyboardEvent.code;\n            this.setButtonState(lInputKey, 0);\n        });\n    }\n    /**\n     * Start scanning mouse movements.\n     */\n    startMouseMoveScanLoop() {\n        // Reset mouse movement.\n        this.mMovementX = 0;\n        this.mMovementY = 0;\n        const lMouseMoveReport = () => {\n            // Calculate to axis value by set base value to 10 pixels.\n            this.setButtonState(mouse_button_enum_1.MouseButton.Xaxis, this.mMovementX / 10);\n            this.setButtonState(mouse_button_enum_1.MouseButton.Yaxis, this.mMovementY / 10);\n            // Reset mouse movement.\n            this.mMovementX = 0;\n            this.mMovementY = 0;\n            if (this.connected) {\n                globalThis.requestAnimationFrame(lMouseMoveReport);\n            }\n            else {\n                this.mLoopRunning = false;\n            }\n        };\n        globalThis.requestAnimationFrame(lMouseMoveReport);\n        this.mLoopRunning = true;\n    }\n}\nexports.MouseKeyboardInputDevice = MouseKeyboardInputDevice;\n//# sourceMappingURL=mouse-keyboard-input-device.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ButtonValueType = void 0;\nvar ButtonValueType;\n(function (ButtonValueType) {\n    ButtonValueType[ButtonValueType[\"Button\"] = 1] = \"Button\";\n    ButtonValueType[ButtonValueType[\"Axis\"] = 2] = \"Axis\";\n})(ButtonValueType || (exports.ButtonValueType = ButtonValueType = {}));\n//# sourceMappingURL=button-value-type.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GamepadButton = void 0;\nvar GamepadButton;\n(function (GamepadButton) {\n    GamepadButton[\"ClusterButtonBottom\"] = \"clusterButtonBottom\";\n    GamepadButton[\"ClusterButtonRight\"] = \"clusterButtonRight\";\n    GamepadButton[\"ClusterButtonLeft\"] = \"clusterButtonLeft\";\n    GamepadButton[\"ClusterButtonTop\"] = \"clusterButtonTop\";\n    GamepadButton[\"ButtonLeft\"] = \"buttonLeft\";\n    GamepadButton[\"ButtonRight\"] = \"buttonRight\";\n    GamepadButton[\"TriggerLeft\"] = \"triggerLeft\";\n    GamepadButton[\"TriggerRight\"] = \"triggerRight\";\n    GamepadButton[\"SelectButton\"] = \"selectButton\";\n    GamepadButton[\"StartButton\"] = \"startButton\";\n    GamepadButton[\"HomeButton\"] = \"homeButton\";\n    GamepadButton[\"DirectionalPadTop\"] = \"directionalPadTop\";\n    GamepadButton[\"DirectionalPadBottom\"] = \"directionalPadBottom\";\n    GamepadButton[\"DirectionalPadRight\"] = \"directionalPadRight\";\n    GamepadButton[\"DirectionalPadLeft\"] = \"directionalPadLeft\";\n    GamepadButton[\"LeftThumbStickButton\"] = \"leftThumbStickButton\";\n    GamepadButton[\"LeftThumbStickXaxis\"] = \"leftThumbStickXaxis\";\n    GamepadButton[\"LeftThumbStickYaxis\"] = \"leftThumbStickYaxis\";\n    GamepadButton[\"RightThumbStickButton\"] = \"rightThumbStickButton\";\n    GamepadButton[\"RightThumbStickXaxis\"] = \"rightThumbStickXaxis\";\n    GamepadButton[\"RightThumbStickYaxis\"] = \"rightThumbStickYaxis\";\n})(GamepadButton || (exports.GamepadButton = GamepadButton = {}));\n//# sourceMappingURL=gamepad-button.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputDevice = void 0;\nvar InputDevice;\n(function (InputDevice) {\n    InputDevice[InputDevice[\"MouseKeyboard\"] = 1] = \"MouseKeyboard\";\n    InputDevice[InputDevice[\"Gamepad\"] = 2] = \"Gamepad\";\n})(InputDevice || (exports.InputDevice = InputDevice = {}));\n//# sourceMappingURL=input-device.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyboardButton = void 0;\nvar KeyboardButton;\n(function (KeyboardButton) {\n    // Letter keys.\n    KeyboardButton[\"KeyA\"] = \"KeyA\";\n    KeyboardButton[\"KeyB\"] = \"KeyB\";\n    KeyboardButton[\"KeyC\"] = \"KeyC\";\n    KeyboardButton[\"KeyD\"] = \"KeyD\";\n    KeyboardButton[\"KeyE\"] = \"KeyE\";\n    KeyboardButton[\"KeyF\"] = \"KeyF\";\n    KeyboardButton[\"KeyG\"] = \"KeyG\";\n    KeyboardButton[\"KeyH\"] = \"KeyH\";\n    KeyboardButton[\"KeyI\"] = \"KeyI\";\n    KeyboardButton[\"KeyJ\"] = \"KeyJ\";\n    KeyboardButton[\"KeyK\"] = \"KeyK\";\n    KeyboardButton[\"KeyL\"] = \"KeyL\";\n    KeyboardButton[\"KeyM\"] = \"KeyM\";\n    KeyboardButton[\"KeyN\"] = \"KeyN\";\n    KeyboardButton[\"KeyO\"] = \"KeyO\";\n    KeyboardButton[\"KeyP\"] = \"KeyP\";\n    KeyboardButton[\"KeyQ\"] = \"KeyQ\";\n    KeyboardButton[\"KeyR\"] = \"KeyR\";\n    KeyboardButton[\"KeyS\"] = \"KeyS\";\n    KeyboardButton[\"KeyT\"] = \"KeyT\";\n    KeyboardButton[\"KeyU\"] = \"KeyU\";\n    KeyboardButton[\"KeyV\"] = \"KeyV\";\n    KeyboardButton[\"KeyW\"] = \"KeyW\";\n    KeyboardButton[\"KeyX\"] = \"KeyX\";\n    KeyboardButton[\"KeyY\"] = \"KeyY\";\n    KeyboardButton[\"KeyZ\"] = \"KeyZ\";\n    // Digit keys.\n    KeyboardButton[\"Digit0\"] = \"Digit0\";\n    KeyboardButton[\"Digit1\"] = \"Digit1\";\n    KeyboardButton[\"Digit2\"] = \"Digit2\";\n    KeyboardButton[\"Digit3\"] = \"Digit3\";\n    KeyboardButton[\"Digit4\"] = \"Digit4\";\n    KeyboardButton[\"Digit5\"] = \"Digit5\";\n    KeyboardButton[\"Digit6\"] = \"Digit6\";\n    KeyboardButton[\"Digit7\"] = \"Digit7\";\n    KeyboardButton[\"Digit8\"] = \"Digit8\";\n    KeyboardButton[\"Digit9\"] = \"Digit9\";\n    // Numberpad key.\n    KeyboardButton[\"NumLock\"] = \"NumLock\";\n    KeyboardButton[\"Numpad0\"] = \"Numpad0\";\n    KeyboardButton[\"Numpad1\"] = \"Numpad1\";\n    KeyboardButton[\"Numpad2\"] = \"Numpad2\";\n    KeyboardButton[\"Numpad3\"] = \"Numpad3\";\n    KeyboardButton[\"Numpad4\"] = \"Numpad4\";\n    KeyboardButton[\"Numpad5\"] = \"Numpad5\";\n    KeyboardButton[\"Numpad6\"] = \"Numpad6\";\n    KeyboardButton[\"Numpad7\"] = \"Numpad7\";\n    KeyboardButton[\"Numpad8\"] = \"Numpad8\";\n    KeyboardButton[\"Numpad9\"] = \"Numpad9\";\n    KeyboardButton[\"NumpadAdd\"] = \"NumpadAdd\";\n    KeyboardButton[\"NumpadComma\"] = \"NumpadComma\";\n    KeyboardButton[\"NumpadDecimal\"] = \"NumpadDecimal\";\n    KeyboardButton[\"NumpadDivide\"] = \"NumpadDivide\";\n    KeyboardButton[\"NumpadEnter\"] = \"NumpadEnter\";\n    KeyboardButton[\"NumpadMultiply\"] = \"NumpadMultiply\";\n    KeyboardButton[\"NumpadSubtract\"] = \"NumpadSubtract\";\n    // Function keys.\n    KeyboardButton[\"F1\"] = \"F1\";\n    KeyboardButton[\"F2\"] = \"F2\";\n    KeyboardButton[\"F3\"] = \"F3\";\n    KeyboardButton[\"F4\"] = \"F4\";\n    KeyboardButton[\"F5\"] = \"F5\";\n    KeyboardButton[\"F6\"] = \"F6\";\n    KeyboardButton[\"F7\"] = \"F7\";\n    KeyboardButton[\"F8\"] = \"F8\";\n    KeyboardButton[\"F9\"] = \"F9\";\n    KeyboardButton[\"F10\"] = \"F10\";\n    KeyboardButton[\"F11\"] = \"F11\";\n    KeyboardButton[\"F12\"] = \"F12\";\n    KeyboardButton[\"F13\"] = \"F13\";\n    KeyboardButton[\"F14\"] = \"F14\";\n    KeyboardButton[\"F15\"] = \"F15\";\n    KeyboardButton[\"F16\"] = \"F16\";\n    KeyboardButton[\"F17\"] = \"F17\";\n    KeyboardButton[\"F18\"] = \"F18\";\n    KeyboardButton[\"F19\"] = \"F19\";\n    KeyboardButton[\"F20\"] = \"F20\";\n    KeyboardButton[\"F21\"] = \"F21\";\n    KeyboardButton[\"F22\"] = \"F22\";\n    KeyboardButton[\"F23\"] = \"F23\";\n    KeyboardButton[\"F24\"] = \"F24\";\n    // Arrow keys.\n    KeyboardButton[\"ArrowDown\"] = \"ArrowDown\";\n    KeyboardButton[\"ArrowLeft\"] = \"ArrowLeft\";\n    KeyboardButton[\"ArrowRight\"] = \"ArrowRight\";\n    KeyboardButton[\"ArrowUp\"] = \"ArrowUp\";\n    // Main metas\n    KeyboardButton[\"Escape\"] = \"Escape\";\n    KeyboardButton[\"AltLeft\"] = \"AltLeft\";\n    KeyboardButton[\"AltRight\"] = \"AltRight\";\n    KeyboardButton[\"CapsLock\"] = \"CapsLock\";\n    KeyboardButton[\"MetaLeft\"] = \"MetaLeft\";\n    KeyboardButton[\"MetaRight\"] = \"MetaRight\";\n    KeyboardButton[\"OsLeft\"] = \"OSLeft\";\n    KeyboardButton[\"OsRight\"] = \"OSRight\";\n    KeyboardButton[\"ShiftLeft\"] = \"ShiftLeft\";\n    KeyboardButton[\"ShiftRight\"] = \"ShiftRight\";\n    KeyboardButton[\"ControlLeft\"] = \"ControlLeft\";\n    KeyboardButton[\"ControlRight\"] = \"ControlRight\";\n    // White space key.s\n    KeyboardButton[\"Enter\"] = \"Enter\";\n    KeyboardButton[\"Space\"] = \"Space\";\n    KeyboardButton[\"Tab\"] = \"Tab\";\n    // Center meta\n    KeyboardButton[\"Delete\"] = \"Delete\";\n    KeyboardButton[\"End\"] = \"End\";\n    KeyboardButton[\"PageDown\"] = \"PageDown\";\n    KeyboardButton[\"PageUp\"] = \"PageUp\";\n    KeyboardButton[\"Insert\"] = \"Insert\";\n    KeyboardButton[\"ScrollLock\"] = \"ScrollLock\";\n    // Media keys.\n    KeyboardButton[\"AudioVolumeUp\"] = \"AudioVolumeUp\";\n    KeyboardButton[\"Home\"] = \"Home\";\n    KeyboardButton[\"ContextMenu\"] = \"ContextMenu\";\n    // Brackes, slash and dot keys.\n    KeyboardButton[\"Backquote\"] = \"Backquote\";\n    KeyboardButton[\"Backslash\"] = \"Backslash\";\n    KeyboardButton[\"Backspace\"] = \"Backspace\";\n    KeyboardButton[\"BracketLeft\"] = \"BracketLeft\";\n    KeyboardButton[\"BracketRight\"] = \"BracketRight\";\n    KeyboardButton[\"Comma\"] = \"Comma\";\n    KeyboardButton[\"IntlBackslash\"] = \"IntlBackslash\";\n    KeyboardButton[\"Period\"] = \"Period\";\n    KeyboardButton[\"Quote\"] = \"Quote\";\n    KeyboardButton[\"Semicolon\"] = \"Semicolon\";\n    KeyboardButton[\"Slash\"] = \"Slash\";\n    KeyboardButton[\"Minus\"] = \"Minus\";\n    KeyboardButton[\"Equal\"] = \"Equal\";\n})(KeyboardButton || (exports.KeyboardButton = KeyboardButton = {}));\n//# sourceMappingURL=keyboard-button.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MouseButton = void 0;\nvar MouseButton;\n(function (MouseButton) {\n    // Main trigger.\n    MouseButton[\"MainLeft\"] = \"mainLeft\";\n    MouseButton[\"MainRight\"] = \"mainRight\";\n    MouseButton[\"MainMiddle\"] = \"mainMiddle\";\n    MouseButton[\"SecondaryBack\"] = \"secondaryBack\";\n    MouseButton[\"SecondaryForward\"] = \"secondaryForward\";\n    // Axis.\n    MouseButton[\"Xaxis\"] = \"xAxis\";\n    MouseButton[\"Yaxis\"] = \"yAxis\";\n})(MouseButton || (exports.MouseButton = MouseButton = {}));\n//# sourceMappingURL=mouse-button.enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputActionEvent = void 0;\nclass InputActionEvent extends Event {\n    /**\n     * Triggered action.\n     */\n    get action() {\n        return this.mAction;\n    }\n    /**\n     * Action Buttons.\n     */\n    get buttons() {\n        return this.mButtons;\n    }\n    /**\n     * Button pressed state.\n     */\n    get isPressed() {\n        return this.mState > 0;\n    }\n    /**\n     * Button state.\n     */\n    get state() {\n        return this.mState;\n    }\n    /**\n     * Constructor.\n     * @param pType - Event type.\n     * @param pState - Button state.\n     */\n    constructor(pType, pAction, pState, pButtons) {\n        super(pType);\n        this.mAction = pAction;\n        this.mState = pState;\n        this.mButtons = pButtons;\n    }\n}\nexports.InputActionEvent = InputActionEvent;\n//# sourceMappingURL=input-action-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputButtonEvent = void 0;\nclass InputButtonEvent extends Event {\n    /**\n     * Button.\n     */\n    get button() {\n        return this.mButton;\n    }\n    /**\n     * Button pressed state.\n     */\n    get isPressed() {\n        return this.mState > 0;\n    }\n    /**\n     * Button state.\n     */\n    get state() {\n        return this.mState;\n    }\n    /**\n     * Constructor.\n     * @param pType - Event type.\n     * @param pState - Button state.\n     */\n    constructor(pType, pButton, pState) {\n        super(pType);\n        this.mState = pState;\n        this.mButton = pButton;\n    }\n}\nexports.InputButtonEvent = InputButtonEvent;\n//# sourceMappingURL=input-button-event.js.map","\"use strict\";\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GamepadButton = exports.MouseButton = exports.KeyboardButton = exports.InputButtonEvent = exports.InputActionEvent = exports.BaseInputDevice = exports.InputConfiguration = exports.InputDevices = exports.GamepadConnector = exports.MouseKeyboardConnector = exports.DeviceConfiguration = void 0;\nvar device_configuration_1 = require(\"./configuration/device-configuration\");\nObject.defineProperty(exports, \"DeviceConfiguration\", { enumerable: true, get: function () { return device_configuration_1.DeviceConfiguration; } });\nvar mouse_keyboard_connector_1 = require(\"./connector/mouse-keyboard-connector\");\nObject.defineProperty(exports, \"MouseKeyboardConnector\", { enumerable: true, get: function () { return mouse_keyboard_connector_1.MouseKeyboardConnector; } });\nvar gamepad_connector_1 = require(\"./connector/gamepad-connector\");\nObject.defineProperty(exports, \"GamepadConnector\", { enumerable: true, get: function () { return gamepad_connector_1.GamepadConnector; } });\nvar input_devices_1 = require(\"./input-devices\");\nObject.defineProperty(exports, \"InputDevices\", { enumerable: true, get: function () { return input_devices_1.InputDevices; } });\nvar input_configuration_1 = require(\"./configuration/input-configuration\");\nObject.defineProperty(exports, \"InputConfiguration\", { enumerable: true, get: function () { return input_configuration_1.InputConfiguration; } });\nvar base_input_device_1 = require(\"./device/base-input-device\");\nObject.defineProperty(exports, \"BaseInputDevice\", { enumerable: true, get: function () { return base_input_device_1.BaseInputDevice; } });\nvar input_action_event_1 = require(\"./event/input-action-event\");\nObject.defineProperty(exports, \"InputActionEvent\", { enumerable: true, get: function () { return input_action_event_1.InputActionEvent; } });\nvar input_button_event_1 = require(\"./event/input-button-event\");\nObject.defineProperty(exports, \"InputButtonEvent\", { enumerable: true, get: function () { return input_button_event_1.InputButtonEvent; } });\nvar keyboard_button_enum_1 = require(\"./enum/keyboard-button.enum\");\nObject.defineProperty(exports, \"KeyboardButton\", { enumerable: true, get: function () { return keyboard_button_enum_1.KeyboardButton; } });\nvar mouse_button_enum_1 = require(\"./enum/mouse-button.enum\");\nObject.defineProperty(exports, \"MouseButton\", { enumerable: true, get: function () { return mouse_button_enum_1.MouseButton; } });\nvar gamepad_button_enum_1 = require(\"./enum/gamepad-button.enum\");\nObject.defineProperty(exports, \"GamepadButton\", { enumerable: true, get: function () { return gamepad_button_enum_1.GamepadButton; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputDevices = void 0;\nconst core_1 = require(\"@kartoffelgames/core\");\nclass InputDevices {\n    /**\n     * Get input device configuration.\n     */\n    get configuration() {\n        return this.mConfiguration;\n    }\n    /**\n     * Get all input devices.\n     */\n    get devices() {\n        return [...this.mInputDevices.values()];\n    }\n    /**\n     * Constructor.\n     * @param pConfiguration - input configuration.\n     */\n    constructor(pConfiguration) {\n        this.mConnectionChangeListenerList = new Array();\n        this.mInputDevices = new core_1.Dictionary();\n        this.mConfiguration = pConfiguration;\n    }\n    /**\n     * On connection change.\n     * @param pListener - Connection change listener.\n     */\n    onConnectionChange(pListener) {\n        this.mConnectionChangeListenerList.push(pListener);\n    }\n    /**\n     * Register input connector.\n     * @param pConnector - Input connector.\n     */\n    registerConnector(pConnector) {\n        pConnector.init(this);\n    }\n    /**\n     * Register new device.\n     * @param pDevice - Device.\n     */\n    registerDevice(pDevice) {\n        let lDevice;\n        // Init new device or reconnect old.\n        if (this.mInputDevices.has(pDevice.id)) {\n            lDevice = this.mInputDevices.get(pDevice.id);\n        }\n        else {\n            this.mInputDevices.set(pDevice.id, pDevice);\n            lDevice = pDevice;\n        }\n        lDevice.connected = true;\n        this.dispatchConnectionChangeEvent(lDevice);\n    }\n    /**\n     * Unregister device.\n     * @param pDevice - Device.\n     */\n    unregisterDevice(pDevice) {\n        if (this.mInputDevices.has(pDevice.id)) {\n            const lDevice = this.mInputDevices.get(pDevice.id);\n            lDevice.connected = false;\n            this.dispatchConnectionChangeEvent(lDevice);\n        }\n    }\n    /**\n     * Call all connection change listener.\n     * @param pDevice - Changed device.\n     */\n    dispatchConnectionChangeEvent(pDevice) {\n        for (const lCallback of this.mConnectionChangeListenerList) {\n            lCallback.apply(this, [pDevice]);\n        }\n    }\n}\nexports.InputDevices = InputDevices;\n//# sourceMappingURL=input-devices.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\tmodule = execOptions.module;\n\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference all chunks\n__webpack_require__.hu = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".hot-update.js\";\n};","__webpack_require__.hmrF = () => (\"main.\" + __webpack_require__.h() + \".hot-update.json\");","__webpack_require__.h = () => (\"6dbc255f65efef3e73cd\")","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"Page:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var currentModuleData = {};\nvar installedModules = __webpack_require__.c;\n\n// module and require creation\nvar currentChildModule;\nvar currentParents = [];\n\n// status\nvar registeredStatusHandlers = [];\nvar currentStatus = \"idle\";\n\n// while downloading\nvar blockingPromises = 0;\nvar blockingPromisesWaiting = [];\n\n// The update info\nvar currentUpdateApplyHandlers;\nvar queuedInvalidatedModules;\n\n__webpack_require__.hmrD = currentModuleData;\n\n__webpack_require__.i.push(function (options) {\n\tvar module = options.module;\n\tvar require = createRequire(options.require, options.id);\n\tmodule.hot = createModuleHotObject(options.id, module);\n\tmodule.parents = currentParents;\n\tmodule.children = [];\n\tcurrentParents = [];\n\toptions.require = require;\n});\n\n__webpack_require__.hmrC = {};\n__webpack_require__.hmrI = {};\n\nfunction createRequire(require, moduleId) {\n\tvar me = installedModules[moduleId];\n\tif (!me) return require;\n\tvar fn = function (request) {\n\t\tif (me.hot.active) {\n\t\t\tif (installedModules[request]) {\n\t\t\t\tvar parents = installedModules[request].parents;\n\t\t\t\tif (parents.indexOf(moduleId) === -1) {\n\t\t\t\t\tparents.push(moduleId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentParents = [moduleId];\n\t\t\t\tcurrentChildModule = request;\n\t\t\t}\n\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\tme.children.push(request);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\trequest +\n\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\tmoduleId\n\t\t\t);\n\t\t\tcurrentParents = [];\n\t\t}\n\t\treturn require(request);\n\t};\n\tvar createPropertyDescriptor = function (name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn require[name];\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\trequire[name] = value;\n\t\t\t}\n\t\t};\n\t};\n\tfor (var name in require) {\n\t\tif (Object.prototype.hasOwnProperty.call(require, name) && name !== \"e\") {\n\t\t\tObject.defineProperty(fn, name, createPropertyDescriptor(name));\n\t\t}\n\t}\n\tfn.e = function (chunkId, fetchPriority) {\n\t\treturn trackBlockingPromise(require.e(chunkId, fetchPriority));\n\t};\n\treturn fn;\n}\n\nfunction createModuleHotObject(moduleId, me) {\n\tvar _main = currentChildModule !== moduleId;\n\tvar hot = {\n\t\t// private stuff\n\t\t_acceptedDependencies: {},\n\t\t_acceptedErrorHandlers: {},\n\t\t_declinedDependencies: {},\n\t\t_selfAccepted: false,\n\t\t_selfDeclined: false,\n\t\t_selfInvalidated: false,\n\t\t_disposeHandlers: [],\n\t\t_main: _main,\n\t\t_requireSelf: function () {\n\t\t\tcurrentParents = me.parents.slice();\n\t\t\tcurrentChildModule = _main ? undefined : moduleId;\n\t\t\t__webpack_require__(moduleId);\n\t\t},\n\n\t\t// Module API\n\t\tactive: true,\n\t\taccept: function (dep, callback, errorHandler) {\n\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\telse if (typeof dep === \"object\" && dep !== null) {\n\t\t\t\tfor (var i = 0; i < dep.length; i++) {\n\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function () {};\n\t\t\t\t\thot._acceptedErrorHandlers[dep[i]] = errorHandler;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thot._acceptedDependencies[dep] = callback || function () {};\n\t\t\t\thot._acceptedErrorHandlers[dep] = errorHandler;\n\t\t\t}\n\t\t},\n\t\tdecline: function (dep) {\n\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t},\n\t\tdispose: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\taddDisposeHandler: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\tremoveDisposeHandler: function (callback) {\n\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t},\n\t\tinvalidate: function () {\n\t\t\tthis._selfInvalidated = true;\n\t\t\tswitch (currentStatus) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\tcurrentUpdateApplyHandlers = [];\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetStatus(\"ready\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prepare\":\n\t\t\t\tcase \"check\":\n\t\t\t\tcase \"dispose\":\n\t\t\t\tcase \"apply\":\n\t\t\t\t\t(queuedInvalidatedModules = queuedInvalidatedModules || []).push(\n\t\t\t\t\t\tmoduleId\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// ignore requests in error states\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// Management API\n\t\tcheck: hotCheck,\n\t\tapply: hotApply,\n\t\tstatus: function (l) {\n\t\t\tif (!l) return currentStatus;\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\taddStatusHandler: function (l) {\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\tremoveStatusHandler: function (l) {\n\t\t\tvar idx = registeredStatusHandlers.indexOf(l);\n\t\t\tif (idx >= 0) registeredStatusHandlers.splice(idx, 1);\n\t\t},\n\n\t\t//inherit from previous dispose call\n\t\tdata: currentModuleData[moduleId]\n\t};\n\tcurrentChildModule = undefined;\n\treturn hot;\n}\n\nfunction setStatus(newStatus) {\n\tcurrentStatus = newStatus;\n\tvar results = [];\n\n\tfor (var i = 0; i < registeredStatusHandlers.length; i++)\n\t\tresults[i] = registeredStatusHandlers[i].call(null, newStatus);\n\n\treturn Promise.all(results).then(function () {});\n}\n\nfunction unblock() {\n\tif (--blockingPromises === 0) {\n\t\tsetStatus(\"ready\").then(function () {\n\t\t\tif (blockingPromises === 0) {\n\t\t\t\tvar list = blockingPromisesWaiting;\n\t\t\t\tblockingPromisesWaiting = [];\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlist[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction trackBlockingPromise(promise) {\n\tswitch (currentStatus) {\n\t\tcase \"ready\":\n\t\t\tsetStatus(\"prepare\");\n\t\t/* fallthrough */\n\t\tcase \"prepare\":\n\t\t\tblockingPromises++;\n\t\t\tpromise.then(unblock, unblock);\n\t\t\treturn promise;\n\t\tdefault:\n\t\t\treturn promise;\n\t}\n}\n\nfunction waitForBlockingPromises(fn) {\n\tif (blockingPromises === 0) return fn();\n\treturn new Promise(function (resolve) {\n\t\tblockingPromisesWaiting.push(function () {\n\t\t\tresolve(fn());\n\t\t});\n\t});\n}\n\nfunction hotCheck(applyOnUpdate) {\n\tif (currentStatus !== \"idle\") {\n\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t}\n\treturn setStatus(\"check\")\n\t\t.then(__webpack_require__.hmrM)\n\t\t.then(function (update) {\n\t\t\tif (!update) {\n\t\t\t\treturn setStatus(applyInvalidatedModules() ? \"ready\" : \"idle\").then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn setStatus(\"prepare\").then(function () {\n\t\t\t\tvar updatedModules = [];\n\t\t\t\tcurrentUpdateApplyHandlers = [];\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tObject.keys(__webpack_require__.hmrC).reduce(function (\n\t\t\t\t\t\tpromises,\n\t\t\t\t\t\tkey\n\t\t\t\t\t) {\n\t\t\t\t\t\t__webpack_require__.hmrC[key](\n\t\t\t\t\t\t\tupdate.c,\n\t\t\t\t\t\t\tupdate.r,\n\t\t\t\t\t\t\tupdate.m,\n\t\t\t\t\t\t\tpromises,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers,\n\t\t\t\t\t\t\tupdatedModules\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn promises;\n\t\t\t\t\t}, [])\n\t\t\t\t).then(function () {\n\t\t\t\t\treturn waitForBlockingPromises(function () {\n\t\t\t\t\t\tif (applyOnUpdate) {\n\t\t\t\t\t\t\treturn internalApply(applyOnUpdate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn setStatus(\"ready\").then(function () {\n\t\t\t\t\t\t\t\treturn updatedModules;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n}\n\nfunction hotApply(options) {\n\tif (currentStatus !== \"ready\") {\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow new Error(\n\t\t\t\t\"apply() is only allowed in ready status (state: \" +\n\t\t\t\t\tcurrentStatus +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t});\n\t}\n\treturn internalApply(options);\n}\n\nfunction internalApply(options) {\n\toptions = options || {};\n\n\tapplyInvalidatedModules();\n\n\tvar results = currentUpdateApplyHandlers.map(function (handler) {\n\t\treturn handler(options);\n\t});\n\tcurrentUpdateApplyHandlers = undefined;\n\n\tvar errors = results\n\t\t.map(function (r) {\n\t\t\treturn r.error;\n\t\t})\n\t\t.filter(Boolean);\n\n\tif (errors.length > 0) {\n\t\treturn setStatus(\"abort\").then(function () {\n\t\t\tthrow errors[0];\n\t\t});\n\t}\n\n\t// Now in \"dispose\" phase\n\tvar disposePromise = setStatus(\"dispose\");\n\n\tresults.forEach(function (result) {\n\t\tif (result.dispose) result.dispose();\n\t});\n\n\t// Now in \"apply\" phase\n\tvar applyPromise = setStatus(\"apply\");\n\n\tvar error;\n\tvar reportError = function (err) {\n\t\tif (!error) error = err;\n\t};\n\n\tvar outdatedModules = [];\n\tresults.forEach(function (result) {\n\t\tif (result.apply) {\n\t\t\tvar modules = result.apply(reportError);\n\t\t\tif (modules) {\n\t\t\t\tfor (var i = 0; i < modules.length; i++) {\n\t\t\t\t\toutdatedModules.push(modules[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn Promise.all([disposePromise, applyPromise]).then(function () {\n\t\t// handle errors in accept handlers and self accepted module load\n\t\tif (error) {\n\t\t\treturn setStatus(\"fail\").then(function () {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\n\t\tif (queuedInvalidatedModules) {\n\t\t\treturn internalApply(options).then(function (list) {\n\t\t\t\toutdatedModules.forEach(function (moduleId) {\n\t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n\t\t\t\t});\n\t\t\t\treturn list;\n\t\t\t});\n\t\t}\n\n\t\treturn setStatus(\"idle\").then(function () {\n\t\t\treturn outdatedModules;\n\t\t});\n\t});\n}\n\nfunction applyInvalidatedModules() {\n\tif (queuedInvalidatedModules) {\n\t\tif (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];\n\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\tqueuedInvalidatedModules.forEach(function (moduleId) {\n\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tqueuedInvalidatedModules = undefined;\n\t\treturn true;\n\t}\n}","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../dist/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\nvar currentUpdatedModulesList;\nvar waitingUpdateResolves = {};\nfunction loadUpdateChunk(chunkId, updatedModulesList) {\n\tcurrentUpdatedModulesList = updatedModulesList;\n\treturn new Promise((resolve, reject) => {\n\t\twaitingUpdateResolves[chunkId] = resolve;\n\t\t// start update chunk loading\n\t\tvar url = __webpack_require__.p + __webpack_require__.hu(chunkId);\n\t\t// create error before stack unwound to get useful stacktrace later\n\t\tvar error = new Error();\n\t\tvar loadingEnded = (event) => {\n\t\t\tif(waitingUpdateResolves[chunkId]) {\n\t\t\t\twaitingUpdateResolves[chunkId] = undefined\n\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\terror.message = 'Loading hot update chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\terror.type = errorType;\n\t\t\t\terror.request = realSrc;\n\t\t\t\treject(error);\n\t\t\t}\n\t\t};\n\t\t__webpack_require__.l(url, loadingEnded);\n\t});\n}\n\nself[\"webpackHotUpdatePage\"] = (chunkId, moreModules, runtime) => {\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\tcurrentUpdate[moduleId] = moreModules[moduleId];\n\t\t\tif(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\n\t\t}\n\t}\n\tif(runtime) currentUpdateRuntime.push(runtime);\n\tif(waitingUpdateResolves[chunkId]) {\n\t\twaitingUpdateResolves[chunkId]();\n\t\twaitingUpdateResolves[chunkId] = undefined;\n\t}\n};\n\nvar currentUpdateChunks;\nvar currentUpdate;\nvar currentUpdateRemovedChunks;\nvar currentUpdateRuntime;\nfunction applyHandler(options) {\n\tif (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;\n\tcurrentUpdateChunks = undefined;\n\tfunction getAffectedModuleEffects(updateModuleId) {\n\t\tvar outdatedModules = [updateModuleId];\n\t\tvar outdatedDependencies = {};\n\n\t\tvar queue = outdatedModules.map(function (id) {\n\t\t\treturn {\n\t\t\t\tchain: [id],\n\t\t\t\tid: id\n\t\t\t};\n\t\t});\n\t\twhile (queue.length > 0) {\n\t\t\tvar queueItem = queue.pop();\n\t\t\tvar moduleId = queueItem.id;\n\t\t\tvar chain = queueItem.chain;\n\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\tif (\n\t\t\t\t!module ||\n\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n\t\t\t)\n\t\t\t\tcontinue;\n\t\t\tif (module.hot._selfDeclined) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"self-declined\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (module.hot._main) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"unaccepted\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n\t\t\t\tvar parentId = module.parents[i];\n\t\t\t\tvar parent = __webpack_require__.c[parentId];\n\t\t\t\tif (!parent) continue;\n\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"declined\",\n\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n\t\t\t\t\tif (!outdatedDependencies[parentId])\n\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdelete outdatedDependencies[parentId];\n\t\t\t\toutdatedModules.push(parentId);\n\t\t\t\tqueue.push({\n\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\tid: parentId\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"accepted\",\n\t\t\tmoduleId: updateModuleId,\n\t\t\toutdatedModules: outdatedModules,\n\t\t\toutdatedDependencies: outdatedDependencies\n\t\t};\n\t}\n\n\tfunction addAllToSet(a, b) {\n\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\tvar item = b[i];\n\t\t\tif (a.indexOf(item) === -1) a.push(item);\n\t\t}\n\t}\n\n\t// at begin all updates modules are outdated\n\t// the \"outdated\" status can propagate to parents if they don't accept the children\n\tvar outdatedDependencies = {};\n\tvar outdatedModules = [];\n\tvar appliedUpdate = {};\n\n\tvar warnUnexpectedRequire = function warnUnexpectedRequire(module) {\n\t\tconsole.warn(\n\t\t\t\"[HMR] unexpected require(\" + module.id + \") to disposed module\"\n\t\t);\n\t};\n\n\tfor (var moduleId in currentUpdate) {\n\t\tif (__webpack_require__.o(currentUpdate, moduleId)) {\n\t\t\tvar newModuleFactory = currentUpdate[moduleId];\n\t\t\t/** @type {TODO} */\n\t\t\tvar result;\n\t\t\tif (newModuleFactory) {\n\t\t\t\tresult = getAffectedModuleEffects(moduleId);\n\t\t\t} else {\n\t\t\t\tresult = {\n\t\t\t\t\ttype: \"disposed\",\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\t/** @type {Error|false} */\n\t\t\tvar abortError = false;\n\t\t\tvar doApply = false;\n\t\t\tvar doDispose = false;\n\t\t\tvar chainInfo = \"\";\n\t\t\tif (result.chain) {\n\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n\t\t\t}\n\t\t\tswitch (result.type) {\n\t\t\t\tcase \"self-declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\t\t\tresult.parentId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unaccepted\":\n\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n\t\t\t\t\tif (!options.ignoreUnaccepted)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"accepted\":\n\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n\t\t\t\t\tdoApply = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disposed\":\n\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n\t\t\t\t\tdoDispose = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n\t\t\t}\n\t\t\tif (abortError) {\n\t\t\t\treturn {\n\t\t\t\t\terror: abortError\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (doApply) {\n\t\t\t\tappliedUpdate[moduleId] = newModuleFactory;\n\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n\t\t\t\t\tif (__webpack_require__.o(result.outdatedDependencies, moduleId)) {\n\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n\t\t\t\t\t\taddAllToSet(\n\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (doDispose) {\n\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentUpdate = undefined;\n\n\t// Store self accepted outdated modules to require them later by the module system\n\tvar outdatedSelfAcceptedModules = [];\n\tfor (var j = 0; j < outdatedModules.length; j++) {\n\t\tvar outdatedModuleId = outdatedModules[j];\n\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\tif (\n\t\t\tmodule &&\n\t\t\t(module.hot._selfAccepted || module.hot._main) &&\n\t\t\t// removed self-accepted modules should not be required\n\t\t\tappliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&\n\t\t\t// when called invalidate self-accepting is not possible\n\t\t\t!module.hot._selfInvalidated\n\t\t) {\n\t\t\toutdatedSelfAcceptedModules.push({\n\t\t\t\tmodule: outdatedModuleId,\n\t\t\t\trequire: module.hot._requireSelf,\n\t\t\t\terrorHandler: module.hot._selfAccepted\n\t\t\t});\n\t\t}\n\t}\n\n\tvar moduleOutdatedDependencies;\n\n\treturn {\n\t\tdispose: function () {\n\t\t\tcurrentUpdateRemovedChunks.forEach(function (chunkId) {\n\t\t\t\tdelete installedChunks[chunkId];\n\t\t\t});\n\t\t\tcurrentUpdateRemovedChunks = undefined;\n\n\t\t\tvar idx;\n\t\t\tvar queue = outdatedModules.slice();\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tvar moduleId = queue.pop();\n\t\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\t\tif (!module) continue;\n\n\t\t\t\tvar data = {};\n\n\t\t\t\t// Call dispose handlers\n\t\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n\t\t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n\t\t\t\t\tdisposeHandlers[j].call(null, data);\n\t\t\t\t}\n\t\t\t\t__webpack_require__.hmrD[moduleId] = data;\n\n\t\t\t\t// disable module (this disables requires from this module)\n\t\t\t\tmodule.hot.active = false;\n\n\t\t\t\t// remove module from cache\n\t\t\t\tdelete __webpack_require__.c[moduleId];\n\n\t\t\t\t// when disposing there is no need to call dispose handler\n\t\t\t\tdelete outdatedDependencies[moduleId];\n\n\t\t\t\t// remove \"parents\" references from all children\n\t\t\t\tfor (j = 0; j < module.children.length; j++) {\n\t\t\t\t\tvar child = __webpack_require__.c[module.children[j]];\n\t\t\t\t\tif (!child) continue;\n\t\t\t\t\tidx = child.parents.indexOf(moduleId);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tchild.parents.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove outdated dependency from module children\n\t\t\tvar dependency;\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tmodule = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tidx = module.children.indexOf(dependency);\n\t\t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tapply: function (reportError) {\n\t\t\t// insert new code\n\t\t\tfor (var updateModuleId in appliedUpdate) {\n\t\t\t\tif (__webpack_require__.o(appliedUpdate, updateModuleId)) {\n\t\t\t\t\t__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// run new runtime modules\n\t\t\tfor (var i = 0; i < currentUpdateRuntime.length; i++) {\n\t\t\t\tcurrentUpdateRuntime[i](__webpack_require__);\n\t\t\t}\n\n\t\t\t// call accept handlers\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tvar callbacks = [];\n\t\t\t\t\t\tvar errorHandlers = [];\n\t\t\t\t\t\tvar dependenciesForCallbacks = [];\n\t\t\t\t\t\tfor (var j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tvar acceptCallback =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedDependencies[dependency];\n\t\t\t\t\t\t\tvar errorHandler =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedErrorHandlers[dependency];\n\t\t\t\t\t\t\tif (acceptCallback) {\n\t\t\t\t\t\t\t\tif (callbacks.indexOf(acceptCallback) !== -1) continue;\n\t\t\t\t\t\t\t\tcallbacks.push(acceptCallback);\n\t\t\t\t\t\t\t\terrorHandlers.push(errorHandler);\n\t\t\t\t\t\t\t\tdependenciesForCallbacks.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var k = 0; k < callbacks.length; k++) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcallbacks[k].call(null, moduleOutdatedDependencies);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (typeof errorHandlers[k] === \"function\") {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\terrorHandlers[k](err, {\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k]\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Load self accepted modules\n\t\t\tfor (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {\n\t\t\t\tvar item = outdatedSelfAcceptedModules[o];\n\t\t\t\tvar moduleId = item.module;\n\t\t\t\ttry {\n\t\t\t\t\titem.require(moduleId);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (typeof item.errorHandler === \"function\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\titem.errorHandler(err, {\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\tmodule: __webpack_require__.c[moduleId]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\ttype: \"self-accept-errored\",\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn outdatedModules;\n\t\t}\n\t};\n}\n__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {\n\tif (!currentUpdate) {\n\t\tcurrentUpdate = {};\n\t\tcurrentUpdateRuntime = [];\n\t\tcurrentUpdateRemovedChunks = [];\n\t\tapplyHandlers.push(applyHandler);\n\t}\n\tif (!__webpack_require__.o(currentUpdate, moduleId)) {\n\t\tcurrentUpdate[moduleId] = __webpack_require__.m[moduleId];\n\t}\n};\n__webpack_require__.hmrC.jsonp = function (\n\tchunkIds,\n\tremovedChunks,\n\tremovedModules,\n\tpromises,\n\tapplyHandlers,\n\tupdatedModulesList\n) {\n\tapplyHandlers.push(applyHandler);\n\tcurrentUpdateChunks = {};\n\tcurrentUpdateRemovedChunks = removedChunks;\n\tcurrentUpdate = removedModules.reduce(function (obj, key) {\n\t\tobj[key] = false;\n\t\treturn obj;\n\t}, {});\n\tcurrentUpdateRuntime = [];\n\tchunkIds.forEach(function (chunkId) {\n\t\tif (\n\t\t\t__webpack_require__.o(installedChunks, chunkId) &&\n\t\t\tinstalledChunks[chunkId] !== undefined\n\t\t) {\n\t\t\tpromises.push(loadUpdateChunk(chunkId, updatedModulesList));\n\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t} else {\n\t\t\tcurrentUpdateChunks[chunkId] = false;\n\t\t}\n\t});\n\tif (__webpack_require__.f) {\n\t\t__webpack_require__.f.jsonpHmr = function (chunkId, promises) {\n\t\t\tif (\n\t\t\t\tcurrentUpdateChunks &&\n\t\t\t\t__webpack_require__.o(currentUpdateChunks, chunkId) &&\n\t\t\t\t!currentUpdateChunks[chunkId]\n\t\t\t) {\n\t\t\t\tpromises.push(loadUpdateChunk(chunkId));\n\t\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t\t}\n\t\t};\n\t}\n};\n\n__webpack_require__.hmrM = () => {\n\tif (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");\n\treturn fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {\n\t\tif(response.status === 404) return; // no update available\n\t\tif(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);\n\t\treturn response.json();\n\t});\n};\n\n// no on chunks loaded\n\n// no jsonp function","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__(\"../../node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=5500&pathname=%2Fws&logging=info&overlay=true&reconnect=10&hot=true&live-reload=true\");\n__webpack_require__(\"../../node_modules/webpack/hot/dev-server.js\");\nvar __webpack_exports__ = __webpack_require__(\"./page/source/index.ts\");\n",""],"names":["core_1","require","vector_1","AmbientLight","data","mColor","constructor","Vector","setColor","pRed","pGreen","pBlue","Exception","exports","Euler","x","mX","pValue","y","mY","z","mZ","Matrix","fromArray","pArray","pHeight","pWidth","lData","Array","lRowIndex","lRowData","lColumnIndex","push","identity","pSize","fill","mData","dataArray","width","height","length","pData","add","pAddData","adjoint","lMatrixData","lMatrixRow","lColumIndex","lDeterminant","omit","determinant","Math","pow","lCofactorMatrix","transpose","lIterationIndex","lSignedNumber","lDeterminantMatrix","inverse","lAdjoint","mult","pMultData","lProduct","lComponentIndex","pOmitRow","pOmitColumn","sub","vectorMult","lVectorComponent","lMutiplicatedMatrix","lVectorData","euler_1","matrix_1","Quaternion","fromRotation","pPitch","pYaw","pRoll","lPitchRadian","PI","lYawRadian","lRollRadian","lCosPitch","cos","lSinPitch","sin","lCosYaw","lSinYaw","lCosRoll","lSinRoll","lQuaternion","w","vectorForward","lSquareX","lSquareY","lProductXz","lProductYw","mW","lProductYz","lProductXw","lX","lY","lZ","vectorRight","lSquareZ","lProductXy","lProductZw","vectorUp","pW","pX","pY","pZ","addEulerRotation","asEuler","lEuler","lSinPitchCosYaw","lCosPitchCosYaw","atan2","lPitchDegree","sqrt","lYawDegree","lSinRollCosYaw","lCosRollCosYaw","lRollDegree","asMatrix","lMatrix","pQuaternion","lW","normalize","lLength","hypot","lIndex","lItem","multCross","pVector","multDot","pSubData","quaternion_1","Transform","pivotX","mPivot","pivotY","pivotZ","rotationPitch","mRotation","rotationRoll","rotationYaw","scaleDepth","mScale","scaleHeight","scaleWidth","translationX","mTranslation","translationY","translationZ","addRotation","addScale","pDepth","addTranslation","getMatrix","pType","TransformMatrix","Scale","Translation","Rotation","PivotRotation","lRotationMatrix","lPivotRotation","Transformation","lScale","lTranslation","lRotation","setRotation","lPitch","lYaw","lRoll","setScale","setTranslation","translateInDirection","pForward","pRight","pUp","lTranslationVector","lDirectionVector","PerspectiveProjection","angleOfView","mAngleOfView","mCacheProjectionMatrix","aspectRatio","mAspectRatio","far","mFar","near","mNear","projectionMatrix","createMatrix","lFar","lNear","lTop","tan","lBottom","lRight","lLeft","transform_1","ViewProjection","projection","mProjection","transformation","mTransformation","pProjection","CameraMatrix","Projection","View","lView","lProjection","CubeVertexPositionData","CubeVertexUvData","CubeVertexNormalData","CubeVertexIndices","bind_group_layout_1","gpu_device_1","primitive_buffer_format_enum_1","primitive_buffer_multiplier_enum_1","render_targets_1","compute_stage_enum_1","primitive_cullmode_enum_1","sampler_type_enum_1","storage_binding_type_enum_1","texture_dimension_enum_1","texture_format_enum_1","vertex_parameter_step_mode_enum_1","ambient_light_1","perspective_projection_1","view_projection_1","cube_mesh_1","cube_shader_wgsl_1","light_box_shader_wgsl_1","util_1","gAddCubeStep","_ref","_asyncToGenerator","pGpu","pRenderTargets","pRenderPass","pWorldGroup","lHeight","lWidth","lDepth","lWoodBoxShader","shader","default","setup","pShaderSetup","parameter","ComputeStage","Vertex","vertexEntryPoint","pVertexParameterSetup","buffer","PrimitiveBufferFormat","Float32","VertexParameterStepMode","Index","withParameter","PrimitiveBufferMultiplier","Vector4","Vector2","fragmentEntryPoint","addRenderTarget","group","BindGroupLayout","pBindGroupSetup","binding","withPrimitive","Matrix44","StorageBindingType","Read","withArray","layout","Fragment","withSampler","SamplerType","Filter","withTexture","TextureDimension","TwoDimensionArray","TextureFormat","Rgba8unorm","lWoodBoxRenderModule","createRenderModule","lWoodBoxTransformationGroup","getGroupLayout","create","lWoodBoxTransform","createBuffer","Float32Array","lCubeInstanceTransformationData","lWidthIndex","lHeightIndex","lDepthIndex","lWoodBoxUserGroup","createImage","createSampler","lMesh","vertexParameter","set","lWoodBoxPipeline","primitiveCullMode","PrimitiveCullMode","Front","setParameter","window","animationSpeed","pSeconds","addStep","_x","_x2","_x3","_x4","apply","arguments","gAddLightBoxStep","lLightBoxShader","lLightBoxRenderModule","lLightBoxTransformationGroup","lLightBoxTransform","lLightBoxPipeline","get","lGpu","GpuDevice","request","lCanvasTexture","canvas","document","getElementById","lRenderTargets","renderTargets","pSetup","addColor","r","g","b","a","use","addDepthStencil","new","Depth24plus","lCanvasWrapper","querySelector","ResizeObserver","lNewCanvasHeight","max","clientHeight","lNewCanvasWidth","clientWidth","resize","observe","lWorldGroupLayout","Single","withStruct","pStruct","property","asPrimitive","ReadWrite","lWorldGroup","lPerspectiveProjection","Number","MAX_SAFE_INTEGER","addInvalidationListener","RenderTargetsInvalidationType","Resize","lCamera","lAmbientLight","lTimestampBuffer","lDebugBuffer","debugBuffer","readRaw","then","pResulto","console","log","lRenderPass","renderPass","InitCameraControls","lRenderExecutor","executor","pExecutor","execute","lFpsLabel","lLastTime","lCurrentFps","lRender","pTime","startNewFrame","write","lFps","UpdateFpsDisplay","textContent","toFixed","requestAnimationFrame","web_game_input_1","pCanvas","pCamera","pCameraBuffer","lDefaultConfiguaration","DeviceConfiguration","addAction","KeyboardButton","KeyW","KeyS","KeyA","KeyD","ShiftLeft","ControlLeft","KeyQ","KeyE","MouseButton","Xaxis","Yaxis","triggerTolerance","lInputConfiguration","InputConfiguration","lInputDevices","InputDevices","registerConnector","MouseKeyboardConnector","lCurrentActionValue","Dictionary","lKeyboard","devices","addEventListener","pEvent","action","state","setInterval","lSpeed","writeRaw","requestPointerLock","lMaxFps","pFps","lCanvas","lCanvasContext","getContext","willReadFrequently","lLastFpsData","getImageData","lScaling","clearRect","lScalingSize","floor","putImageData","lRectHeight","fillStyle","fillRect","gpu_buffer_1","gpu_object_child_setup_1","base_buffer_memory_layout_1","sampler_memory_layout_1","texture_memory_layout_1","image_texture_1","texture_sampler_1","video_texture_1","BindGroupDataSetup","GpuObjectChildSetup","pLayout","pCurrentData","pSetupReference","pDataCallback","mCurrentData","mBindLayout","pDataOrType","pVariableSizeCount","BaseBufferMemoryLayout","lBufferFormat","Uint32Array","Uint32","Int32Array","Sint32","lVariableItemCount","variableSize","name","lBufferByteLength","BYTES_PER_ELEMENT","lItemCount","fixedSize","lBuffer","GpuBuffer","device","initialData","sendData","pSourceList","_this","TextureMemoryLayout","lTexture","ImageTexture","lImageLoading","load","SamplerMemoryLayout","TextureSampler","createVideo","pSource","lVideoTexture","VideoTexture","source","gpu_object_1","bind_group_1","bind_group_layout_setup_1","GpuObject","bindingNames","ensureSetup","mBindings","keys","bindings","lBindingList","lBinding","values","index","mName","native","pDevice","pName","BindGroup","getBind","has","pSetupCallback","generateNative","lEntryList","lEntry","lLayoutEntry","visibility","lBufferBindingType","storageType","None","type","minBindingSize","hasDynamicOffset","sampler","samplerType","lTextureFormatCapabilities","formatValidator","capabilityOf","format","texture","sampleType","sampleTypes","primary","multisampled","viewDimension","dimension","lStorageAccess","Write","storageTexture","access","gpu","createBindGroupLayout","label","entries","onSetup","pReferences","lBindingIndices","Set","lBindingName","invalidate","BindGroupLayoutInvalidationType","Layout","onSetupObjectCreate","BindGroupLayoutSetup","buffer_usage_enum_1","texture_usage_enum_1","base_texture_1","canvas_texture_1","frame_buffer_texture_1","bind_group_data_setup_1","mLayout","pBindGroupLayout","mBindData","BindGroupInvalidationType","BindGroupRebuild","pBindName","lBindLayout","lDataSetupReferences","inSetup","extendUsage","BufferUsage","Storage","Uniform","BaseTexture","TextureUsage","TextureBinding","lBindname","lBindData","lGroupEntry","resource","FrameBufferTexture","CanvasTexture","createBindGroup","PipelineLayout","groups","mBindGroupNames","pInitialGroups","mInitialBindGroups","mBindGroups","mBindGroupInvalidationListener","WeakMap","lGroupIndex","lGroup","lListener","PipelineLayoutInvalidationType","GroupChange","pGroupName","groupIndex","lBindGroupIndex","removePlaceholderGroup","lLastBindGroup","removeInvalidationListener","delete","replaceGroup","pBindGroup","lInitialGroup","lInitialBindingList","lReplacementBindingList","lBindingIndex","lInitialBinding","at","lReplacementBinding","GroupReplace","setPlaceholderGroup","pIndex","lPipelineLayoutDescriptor","bindGroupLayouts","lBindGroupLayout","size","createPipelineLayout","array_buffer_memory_layout_1","primitive_buffer_memory_layout_1","struct_buffer_memory_layout_1","BindGroupLayoutArrayMemoryLayoutSetup","setupReferences","pMemoryLayout","lLayout","ArrayBufferMemoryLayout","arraySize","innerType","pPrimitiveFormat","pPrimitiveMultiplier","PrimitiveBufferMemoryLayout","primitiveFormat","primitiveMultiplier","pSetupCall","StructBufferMemoryLayout","bind_group_layout_array_memory_layout_setup_1","BindGroupLayoutMemoryLayoutSetup","pSamplerType","pTextureDimension","pTextureFormat","pMultisampled","gpu_object_setup_1","bind_group_layout_memory_layout_setup_1","GpuObjectSetup","pVisibility","pStorageBinding","ensureThatInSetup","lBind","setupData","fillDefaultData","pDataReference","dataType","mDataType","mItemCount","bytePerElement","writeBufferLimitation","mWriteBuffer","limitation","pLimit","pDataType","mBufferUsage","ready","mReadBuffer","lByteSize","mInitialDataCallback","GpuBufferInvalidationType","BufferRebuild","pUsage","read","pLayoutPath","lLocation","locationOf","offset","pOffset","_this2","CopySource","lOffset","lSize","usage","GPUBufferUsage","MAP_READ","COPY_DST","mappedAtCreation","lCommandDecoder","createCommandEncoder","copyBufferToBuffer","queue","submit","finish","mapAsync","GPUMapMode","READ","lBufferReadResult","createTypedArray","getMappedRange","slice","unmap","_this3","_this4","CopyDestination","lNative","lStagingBuffer","MAP_WRITE","COPY_SRC","pop","lDataByteLength","writeBuffer","lBufferArray","WRITE","catch","destroy","destroyNative","pNativeObject","_pReason","lWriteBuffer","clear","lInitalData","lMappedBuffer","pArrayBuffer","lArrayBufferConstructor","GpuExecution","encoder","mEncoder","pExecution","mExecutionFunction","ComputePass","mInstructionList","pPipeline","pWorkGroupSizes","pBindData","lStep","id","Symbol","pipeline","bindData","workGroupSizes","lBindGroups","lBindGroup","lPipelineLayout","module","lGroupName","lBindDataGroup","lComputePassEncoder","beginComputePass","lPipeline","lBindGroupList","lHighestBindGroupListIndex","lInstruction","lLocalHighestBindGroupListIndex","lBindGroupName","lNewBindGroup","lCurrentBindGroup","setBindGroup","setPipeline","dispatchWorkgroups","end","removeStep","pInstructionId","lInstructionIndex","findIndex","pInstruction","splice","RenderPass","pStaticBundle","mRenderTargets","mBundleConfig","enabled","writeDepth","writeStencil","bundle","TextureFormatChange","DescriptorRebuild","MultisampleChange","pParameter","pInstanceCount","instanceCount","cachedExecute","directExecute","lRenderBundleEncoderDescriptor","colorFormats","colorTextures","map","pRenderTarget","sampleCount","multiSampleLevel","depthReadOnly","stencilReadOnly","depthTexture","depthStencilFormat","lRenderBundleEncoder","createRenderBundleEncoder","setRenderQueue","descriptor","lRenderPassEncoder","beginRenderPass","executeBundles","pEncoder","lVertexBufferList","lHighestVertexParameterListIndex","lLocalHighestVertexParameterListIndex","lBufferNames","bufferNames","lBufferIndex","lAttributeBufferName","lNewAttributeBuffer","setVertexBuffer","lVertexParameterBufferIndex","indexable","setIndexBuffer","indexBuffer","drawIndexed","draw","vertexCount","gpu_feature_enum_1","gpu_limit_enum_1","GpuCapabilities","mFeatures","lFeature","features","lGpuFeature","EnumUtil","cast","GpuFeature","mLimits","lLimitName","valuesOf","GpuLimit","limits","getLimit","hasFeature","pFeature","gpu_execution_1","compute_pass_1","render_pass_1","shader_1","texture_format_capabilities_1","gpu_capabilities_1","mAdapters","mDevices","pPerformance","lAdapter","navigator","requestAdapter","powerPreference","lDevice","requestDevice","capabilities","mCapabilities","mFormatValidator","frameCount","mFrameCounter","mGpuDevice","TextureFormatCapabilities","mFrameChangeListener","addFrameChangeListener","pListener","createElement","TwoDimension","preferredCanvasFormat","computePass","pOnExecute","RenderTargets","Shader","mSetupReference","mSetupCallback","GpuObjectInvalidationReasons","deconstruct","mDeconstruct","pDeconstruct","mReasons","pReason","any","gpu_object_invalidation_reasons_1","mDevice","isSetup","mIsSetup","readNative","mDeconstructed","mNativeObject","mUpdateListenerList","mInvalidationReasons","pAffected","pReasons","lReason","lInvalidationListener","lAffected","_pNative","_pReasons","_pCurrentNative","_pReferences","lSetupReferences","lSetupObject","updateNative","lUpdateSuccessfull","lCurrentNative","BaseMemoryLayout","alignment","mArraySize","ceil","mInnerType","pPathName","lPathName","lItemIndexString","shift","isNaN","lArrayItemSize","lArrayItemOffset","parseInt","lInnerLocation","base_memory_layout_1","mAlignment","mSize","Float16","Vector3","Matrix22","Matrix23","Matrix24","Matrix32","Matrix33","Matrix34","Matrix42","Matrix43","overrideSize","overrideAlignment","StructBufferMemoryLayoutPropertySetup","asArray","asStruct","struct_buffer_memory_layout_property_setup_1","StructBufferMemoryLayoutSetup","lProperty","orderIndex","properties","struct_buffer_memory_layout_setup_1","mFixedSize","mInnerProperties","pProperty","mVariableSize","lPropertyName","lPropertyOffset","lFoundProperty","lPropertyLocation","sort","pA","pB","lRawDataSize","lPropertyLayout","VertexBufferMemoryLayout","mFormat","formatByteCount","mFormatByteCount","lPrimitiveByteCount","lParameter","lParameterSize","mSamplerType","SamplerMemoryLayoutInvalidationType","mDimension","mMultisampled","TextureMemoryLayoutInvalidationType","ComputePipeline","mShaderModule","pShader","mParameter","ComputePipelineInvalidationType","pParameterName","lParameterUsage","lUsage","Parameter","lPipelineDescriptor","compute","entryPoint","constants","Compute","createComputePipeline","VertexParameterBufferLayoutSetup","pLocation","pMultiplier","pAdditionalOffset","location","multiplier","vertex_parameter_buffer_layout_setup_1","VertexParameterLayoutSetup","pBufferName","pFormat","pStepMode","stepMode","vertex_buffer_memory_layout_1","vertex_parameter_1","vertex_parameter_layout_setup_1","VertexParameterLayout","mBuffer","mIndexable","parameterNames","pIndexData","VertexParameter","parameterBuffer","lLayoutList","lParameterIndicies","lVertexAttributes","lCurrentByteLength","lByteMultiplier","split","reduce","pPreviousNumber","pCurrentValue","lCurrentNumber","lFormat","shaderLocation","lStepmode","Instance","arrayStride","attributes","lCanBeIndexed","lBufferSetupData","lParameterList","lParameterlayoutList","lParameterSetupData","lParameterLayout","bufferName","lBufferLayout","mIndexBuffer","mIndices","pVertexParameterLayout","pIndices","VertexParameterInvalidationType","Data","lIndexLayout","lIndexBufferLayout","lStepCount","lDataStart","lDataEnd","lVertexParameterItemCount","lParameterBuffer","texture_operation_enum_1","render_targets_texture_setup_1","RenderTargetsSetup","pLocationIndex","pKeepOnEnd","pClearValue","lTarget","clearValue","storeOperation","TextureOperation","Keep","Clear","colorTargets","RenderTargetTextureSetup","pTexture","pDepthKeepOnEnd","pDepthClearValue","pStencilKeepOnEnd","pStencilClearValue","depthStencil","depth","stencil","lMemoryLayout","texture_aspect_enum_1","render_targets_setup_1","lColorAttachmentList","lColorAttachment","mColorTextures","target","mDepthStencilTexture","multisampleLevel","stencilTexture","pMultisampleLevel","applyResize","lColorAttachments","lStoreOperation","lPassColorAttachment","view","storeOp","loadOp","resolve","resolveTarget","lDescriptor","colorAttachments","lDepthStencilTexture","depthStencilAttachment","depthClearValue","depthLoadOp","depthStoreOp","stencilClearValue","stencilLoadOp","stencilStoreOp","pReferenceData","RenderAttachment","setTextureInvalidationListener","lFormatCapability","aspects","TextureAspect","Depth","Stencil","lAttachmentLocations","lAttachment","pNative","lColorAttachmentIndex","lCurrentAttachment","ViewRebuild","FrameBufferTextureInvalidationType","FormatChange","CanvasTextureInvalidationType","compare_function_enum_1","primitive_front_face_enum_1","primitive_topology_enum_1","VertexFragmentPipeline","depthCompare","mDepthCompare","VertexFragmentPipelineInvalidationType","Config","mPrimitiveCullMode","primitiveFrontFace","mPrimitiveFrontFace","primitiveTopology","mPrimitiveTopology","mDepthWriteEnabled","pShaderRenderModule","CompareFunction","Less","PrimitiveTopology","TriangleList","Back","PrimitiveFrontFace","ClockWise","vertex","buffers","primitive","generatePrimitive","lFragmentTargetList","lRenderTarget","fragment","targets","depthWriteEnabled","multisample","count","createRenderPipeline","lStripIndexFormat","undefined","LineStrip","TriangleStrip","lPrimitiveState","topology","frontFace","cullMode","unclippedDepth","stripIndexFormat","ShaderComputeEntryPointSetup","ShaderFragmentEntryPointSetup","pDataFormat","pDataMultiplier","vertex_parameter_layout_1","shader_compute_entry_point_setup_1","shader_fragment_entry_point_setup_1","ShaderSetup","computeEntryPoint","lEntryPoint","workgroupDimension","computeEntrypoints","fragmentEntrypoints","pGroup","bindingGroups","pStageUsage","lVertexParameterLayout","vertexEntrypoints","compute_pipeline_1","ShaderComputeModule","mEntryPoint","mShader","workGroupSizeX","workGroupSizeY","workGroupSizeZ","pEntryPointName","ShaderComputeModuleInvalidationType","vertex_fragment_pipeline_1","ShaderRenderModule","mFragmentEntryPoint","mVertexEntryPoint","mVertexParameter","pVertexEntryPointName","pVertexParameter","pFragmentEntryPointName","ShaderRenderModuleInvalidationType","pipeline_layout_1","shader_setup_1","shader_compute_module_1","shader_render_module_1","mPipelineLayout","mSource","mEntryPoints","createComputeModule","pEntryName","static","pVertexEntryName","pFragmentEntryName","lVertexEntryPoint","lFragmentEntryPoint","lParameterType","lCompilationHints","lEntryName","createShaderModule","code","compilationHints","lFragmentEntry","lRenderTargetLocations","lVertexEntry","lComputeEntry","lInitialPipelineLayout","ShaderInvalidationType","mMemoryLayout","mTextureUsage","onUsageExtend","mCanvas","mContext","Format","_pNativeObject","lContextInvalid","UsageExtended","unconfigure","ContextRebuild","configure","alphaMode","getCurrentTexture","createView","mDepth","TextureRebuild","mHeight","mMultiSampleLevel","mWidth","mTexture","Dimension","pInvalidationReason","createTexture","texture_mip_generator_1","enableMips","mEnableMips","pEnable","images","mImageList","mMipGenerator","TextureMipGenerator","ImageTextureInvalidationType","lImageLoadPromiseList","lImage","Image","src","decode","naturalWidth","naturalHeight","createImageBitmap","Promise","all","ImageBinary","pInvalidationReasons","lTextureDimensions","OneDimension","textureDimension","clampedDimensions","Cube","CubeArray","ThreeDimension","lMipCount","log2","lLastTexture","mipLevelCount","lDestination","mipLevel","lSource","lLevelOneCopySize","min","depthOrArrayLayers","lCopyMipCount","lMipLevel","lMipCopySize","copyTextureToTexture","lImageIndex","lBitmap","copyExternalImageToTexture","origin","generateMips","Usage","texture_sample_type_enum_1","getPreferredCanvasFormat","lFloat32Filterable","TextureSampleType","UnfilterableFloat","Float32Filterable","Float","mFormatCapabilitys","R8unorm","aspect","types","Red","byteCost","dimensions","compressionLevel","textureBinding","renderAttachment","blendable","copy","textureSource","textureDestination","imageSource","imageDestination","storage","R8snorm","R8uint","UnsignedInteger","R8sint","SignedInteger","R16uint","R16sint","R16float","Rg8unorm","Green","Rg8snorm","Rg8uint","Rg8sint","R32uint","readonly","writeonly","readwrite","R32sint","R32float","Rg16uint","Rg16sint","Rg16float","Blue","Alpha","Rgba8unormSrgb","Rgba8snorm","Rgba8uint","Rgba8sint","Bgra8unorm","Bgra8unormStorage","Bgra8unormSrgb","Rgb9e5ufloat","Rgb10a2uint","Rgb10a2unorm","Rg11b10ufloat","Rg11b10ufloatRenderable","Rg32uint","Rg32sint","Rg32float","Rgba16uint","Rgba16sint","Rgba16float","Rgba32uint","Rgba32sint","Rgba32float","Stencil8","Depth16unorm","Depth24plusStencil8","Depth32float","Depth32floatStencil8","TextureCompressionBc","lBcTextureFormatCapability","pAspects","pByteOfAspect","TextureCompressionBcSliced3d","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4Runorm","Bc4Rsnorm","Bc5RgUnorm","Bc5RgSnorm","Bc6hRgbUfloat","Bc6hRgbFloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","TextureCompressionEtc2","lEtc2TextureFormatCapability","Etc2Rgb8unorm","Etc2Rgb8unormSrgb","Etc2Rgb8a1unorm","Etc2Rgb8a1unormSrgb","Etc2Rgba8unorm","Etc2Rgba8unormSrgb","EacR11unorm","EacR11snorm","EacRg11unorm","EacRg11snorm","TextureCompressionAstc","lAstcTextureFormatCapability","pCompressionLevel","Astc4x4unorm","Astc4x4unormSrgb","Astc5x4unorm","Astc5x4unormSrgb","Astc5x5unorm","Astc5x5unormSrgb","Astc6x5unorm","Astc6x5unormSrgb","Astc6x6unorm","Astc6x6unormSrgb","Astc8x5unorm","Astc8x5unormSrgb","Astc8x6unorm","Astc8x6unormSrgb","Astc8x8unorm","Astc8x8unormSrgb","Astc10x5unorm","Astc10x5unormSrgb","Astc10x6unorm","Astc10x6unormSrgb","Astc10x8unorm","Astc10x8unormSrgb","Astc10x10unorm","Astc10x10unormSrgb","Astc12x10unorm","Astc12x10unormSrgb","Astc12x12unorm","Astc12x12unormSrgb","lCapabilityDefinition","lTextureUsages","lSampleTypes","lAllSampleTypes","textureUsages","textureTarget","imageTarget","formatSuggestion","_pCapability","WORKGROUP_SIZE_PER_DIMENSION","mFormatBindGroupsLayouts2d","mFormatBindGroupsLayouts3d","mFormatPipelines2d","mFormatPipelines3d","lTextureCapability","initComputeShader2d","generateMipsWithCompute2d","pGpuDevice","lCommandEncoder","lComputePass","baseMipLevel","lMipMapDimensionX","lMipMapDimensionY","lWorkgroupCountForX","lWorkgroupCountForY","lSampleTypeName","lShader","GPUShaderStage","COMPUTE","filter_mode_enum_1","wrapping_mode_enum_1","compare","mCompare","TextureSamplerInvalidationType","SamplerConfig","lodMaxClamp","mLodMaxClamp","lodMinClamp","mLodMinClamp","magFilter","mMagFilter","maxAnisotropy","mMaxAnisotropy","memoryLayout","minFilter","mMinFilter","mipmapFilter","mMipmapFilter","wrapMode","mWrapMode","WrappingMode","ClampToEdge","FilterMode","Linear","lSamplerOptions","addressModeU","addressModeV","addressModeW","Comparison","mVideo","videoHeight","loop","video","videoWidth","HTMLVideoElement","muted","VideoTextureInvalidationType","pause","play","lGpuDimension","INDEX","VERTEX","UNIFORM","STORAGE","INDIRECT","FRAGMENT","GPUTextureUsage","TEXTURE_BINDING","STORAGE_BINDING","RENDER_ATTACHMENT"],"sourceRoot":""}