var l=(u,e)=>()=>(u&&(e=u(u=0)),e);var _,Mt=l(()=>{_=class u extends Array{static newListWith(...e){let t=new u;return t.push(...e),t}clear(){this.splice(0,this.length)}clone(){return u.newListWith(...this)}distinct(){return u.newListWith(...new Set(this))}equals(e){if(this===e)return!0;if(!e||this.length!==e.length)return!1;for(let t=0;t<this.length;++t)if(this[t]!==e[t])return!1;return!0}remove(e){let t=this.indexOf(e);if(t!==-1)return this.splice(t,1)[0]}replace(e,t){let r=this.indexOf(e);if(r!==-1){let i=this[r];return this[r]=t,i}}toString(){return`[${super.join(", ")}]`}}});var o,It=l(()=>{o=class extends Error{mTarget;get target(){return this.mTarget}constructor(e,t,r){super(e,r),this.mTarget=t}}});var x,rr=l(()=>{Mt();It();x=class u extends Map{add(e,t){if(!this.has(e))this.set(e,t);else throw new o("Can't add dublicate key to dictionary.",this)}clone(){return new u(this)}getAllKeysOfValue(e){return[...this.entries()].filter(i=>i[1]===e).map(i=>i[0])}getOrDefault(e,t){let r=this.get(e);return typeof r<"u"?r:t}map(e){let t=new _;for(let r of this){let i=e(r[0],r[1]);t.push(i)}return t}}});var ir=l(()=>{});var ar=l(()=>{});var le,nr=l(()=>{le=class u{static cast(e,t){if(u.exists(e,t))return t}static exists(e,t){return u.valuesOf(e).includes(t)}static namesOf(e){return Object.keys(e).filter(t=>isNaN(Number(t)))}static valuesOf(e){let t=new Array;for(let r of u.namesOf(e))t.push(e[r]);return t}}});var or=l(()=>{});var sr=l(()=>{});var B=l(()=>{rr();Mt();ir();It();ar();nr();or();sr()});var R,K=l(()=>{R=(m=>(m[m.None=0]="None",m[m.Index=GPUBufferUsage.INDEX]="Index",m[m.Vertex=GPUBufferUsage.VERTEX]="Vertex",m[m.Uniform=GPUBufferUsage.UNIFORM]="Uniform",m[m.Storage=GPUBufferUsage.STORAGE]="Storage",m[m.Indirect=GPUBufferUsage.INDIRECT]="Indirect",m[m.CopySource=GPUBufferUsage.COPY_SRC]="CopySource",m[m.CopyDestination=GPUBufferUsage.COPY_DST]="CopyDestination",m))(R||{})});var je,ur=l(()=>{B();je=class{mDeconstruct;mReasons;get deconstruct(){return this.mDeconstruct}set deconstruct(e){if(!e)throw new o("Deconstruct reason can not be reverted. Sadly.",this);this.mDeconstruct=e}constructor(){this.mReasons=new Set,this.mDeconstruct=!1}add(e){this.mReasons.add(e)}any(){return this.mReasons.size>0||this.mDeconstruct}clear(){this.mReasons.clear()}has(e){return this.mReasons.has(e)}}});var T,A=l(()=>{B();ur();T=class{mDeconstructed;mDevice;mInvalidationReasons;mIsSetup;mNativeObject;mUpdateListener;mUpdateListenerAffectedTyped;get device(){return this.mDevice}get isSetup(){return this.mIsSetup}get native(){return this.readNative()}constructor(e){this.mDevice=e,this.mIsSetup=!1,this.mDeconstructed=!1,this.mNativeObject=null,this.mUpdateListener=new x,this.mUpdateListenerAffectedTyped=new WeakMap,this.mInvalidationReasons=new je}addInvalidationListener(e,t,...r){if(this.mUpdateListenerAffectedTyped.has(e))throw new o("Invalidation listener can't be applied twice.",this);let i=[t,...r];for(let a of i)this.mUpdateListener.has(a)||this.mUpdateListener.set(a,new _),this.mUpdateListener.get(a).push(e);return this.mUpdateListenerAffectedTyped.set(e,i),this}deconstruct(){this.mInvalidationReasons.deconstruct=!0,this.mNativeObject!==null&&(this.destroyNative(this.mNativeObject,this.mInvalidationReasons),this.mNativeObject=null),this.mDeconstructed=!0}invalidate(...e){let t=r=>{if(this.mNativeObject!==null&&this.mInvalidationReasons.has(r))return;this.mInvalidationReasons.add(r);let i=this.mUpdateListener.get(r);if(!(!i||i.length===0))if(i.length===1)i[0](r);else for(let a of i)a(r)};if(e.length===1)t(e[0]);else for(let r of e)t(r)}removeInvalidationListener(e){let t=this.mUpdateListenerAffectedTyped.get(e);if(t){for(let r of t)this.mUpdateListener.get(r).remove(e);this.mUpdateListenerAffectedTyped.delete(e)}}destroyNative(e,t){}ensureSetup(){if(!this.mIsSetup)throw new o("Gpu object must be setup to access properties.",this)}generateNative(e,t){return null}onSetup(e){}onSetupObjectCreate(e){return null}setup(e){if(this.mIsSetup)throw new o("Render targets setup can't be called twice.",this);let t={inSetup:!0,device:this.mDevice,data:{}},r=this.onSetupObjectCreate(t);return r!==null&&(e&&e(r),this.onSetup(t.data)),t.inSetup=!1,this.mIsSetup=!0,this}updateNative(e,t){return!1}readNative(){if(this.mDeconstructed)throw new o("Native GPU object was deconstructed and can't be used again.",this);if(this.isSetup||this.setup(),this.mNativeObject!==null&&this.mInvalidationReasons.any()&&this.updateNative(this.mNativeObject,this.mInvalidationReasons)&&this.mInvalidationReasons.clear(),this.mNativeObject===null||this.mInvalidationReasons.any()){let e=this.mNativeObject;this.mNativeObject=this.generateNative(e,this.mInvalidationReasons),e!==null&&this.destroyNative(e,this.mInvalidationReasons),this.mInvalidationReasons.clear()}return this.mNativeObject}}});var W,Q=l(()=>{A();W=class extends T{mResourceUsage;get usage(){return this.mResourceUsage}constructor(e){super(e),this.mResourceUsage=0}extendUsage(e){return(this.mResourceUsage&e)===0&&(this.mResourceUsage=this.mResourceUsage|e,this.invalidate("ResourceRebuild")),this}}});var $,q=l(()=>{$=(D=>(D.MaxTextureDimension1D="maxTextureDimension1D",D.MaxTextureDimension2D="maxTextureDimension2D",D.MaxTextureDimension3D="maxTextureDimension3D",D.MaxTextureArrayLayers="maxTextureArrayLayers",D.MaxBindGroups="maxBindGroups",D.MaxBindGroupsPlusVertexBuffers="maxBindGroupsPlusVertexBuffers",D.MaxBindingsPerBindGroup="maxBindingsPerBindGroup",D.MaxDynamicUniformBuffersPerPipelineLayout="maxDynamicUniformBuffersPerPipelineLayout",D.MaxDynamicStorageBuffersPerPipelineLayout="maxDynamicStorageBuffersPerPipelineLayout",D.MaxSampledTexturesPerShaderStage="maxSampledTexturesPerShaderStage",D.MaxSamplersPerShaderStage="maxSamplersPerShaderStage",D.MaxStorageBuffersPerShaderStage="maxStorageBuffersPerShaderStage",D.MaxStorageTexturesPerShaderStage="maxStorageTexturesPerShaderStage",D.MaxUniformBuffersPerShaderStage="maxUniformBuffersPerShaderStage",D.MaxUniformBufferBindingSize="maxUniformBufferBindingSize",D.MaxStorageBufferBindingSize="maxStorageBufferBindingSize",D.MinUniformBufferOffsetAlignment="minUniformBufferOffsetAlignment",D.MinStorageBufferOffsetAlignment="minStorageBufferOffsetAlignment",D.MaxVertexBuffers="maxVertexBuffers",D.MaxBufferSize="maxBufferSize",D.MaxVertexAttributes="maxVertexAttributes",D.MaxVertexBufferArrayStride="maxVertexBufferArrayStride",D.MaxInterStageShaderVariables="maxInterStageShaderVariables",D.MaxColorAttachments="maxColorAttachments",D.MaxColorAttachmentBytesPerSample="maxColorAttachmentBytesPerSample",D.MaxComputeWorkgroupStorageSize="maxComputeWorkgroupStorageSize",D.MaxComputeInvocationsPerWorkgroup="maxComputeInvocationsPerWorkgroup",D.MaxComputeWorkgroupSizeX="maxComputeWorkgroupSizeX",D.MaxComputeWorkgroupSizeY="maxComputeWorkgroupSizeY",D.MaxComputeWorkgroupSizeZ="maxComputeWorkgroupSizeZ",D.MaxComputeWorkgroupsPerDimension="maxComputeWorkgroupsPerDimension",D))($||{})});var J=l(()=>{});var ke,mr=l(()=>{B();q();J();ke=class{mBuffer;mDynamicOffset;mLayout;mTypedArrayConstructor;get buffer(){return this.mBuffer}get dynamicOffsetIndex(){return this.mDynamicOffset/this.mLayout.fixedSize}get format(){return this.mTypedArrayConstructor}get length(){return this.mBuffer.size/this.mTypedArrayConstructor.BYTES_PER_ELEMENT}constructor(e,t,r,i=0,a=0){if(t.fixedSize>e.size)throw new o(`Buffer view fixed size (${t.fixedSize}) exceedes buffer size (${e.size}). Buffer must at least be the layouts fixed size.`,this);if(this.mDynamicOffset=0,i>0){if(t.variableSize>0)throw new o("Dynamic offsets can only be applied to fixed buffer layouts.",this);let n=a===0?e.device.capabilities.getLimit("minUniformBufferOffsetAlignment"):e.device.capabilities.getLimit("minStorageBufferOffsetAlignment"),s=Math.ceil(t.fixedSize/n)*n*(i+1);if(e.size<s)throw new o(`Buffer view offset size (${s}) exceedes buffer size ${e.size}.`,this);this.mDynamicOffset=Math.ceil(t.fixedSize/n)*n*i}this.mLayout=t,this.mBuffer=e,this.mTypedArrayConstructor=r}async read(e=[]){let t=this.mLayout.locationOf(e);return new this.mTypedArrayConstructor(await this.mBuffer.read(this.mDynamicOffset+t.offset,t.size))}async write(e,t=[]){let r=this.mLayout.locationOf(t),i=new this.mTypedArrayConstructor(e);return this.mBuffer.write(i.buffer,this.mDynamicOffset+r.offset)}}});var L,te=l(()=>{B();K();Q();mr();L=class extends W{mByteSize;mInitialData;mReadBuffer;mWriteBuffer;get native(){return super.native}get size(){return this.mByteSize}set size(e){this.mByteSize=e+3&-4,this.invalidate("ResourceRebuild")}get writeBufferLimitation(){return this.mWriteBuffer.limitation}set writeBufferLimitation(e){this.mWriteBuffer.limitation=e}constructor(e,t){super(e),this.mByteSize=t+3&-4,this.extendUsage(R.CopyDestination),this.extendUsage(R.CopySource),this.mWriteBuffer={limitation:Number.MAX_SAFE_INTEGER,ready:new Array,buffer:new Set},this.mReadBuffer=null,this.mInitialData=null}initialData(e){if(this.mInitialData!==null)throw new o("Initial callback can only be set once.",this);return this.mInitialData=e,this}async read(e,t){this.extendUsage(R.CopySource);let r=e??0,i=t??this.size-r;this.mReadBuffer===null&&(this.mReadBuffer=this.device.gpu.createBuffer({label:"ReadWaveBuffer",size:this.size,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST,mappedAtCreation:!1}));let a=this.device.gpu.createCommandEncoder();a.copyBufferToBuffer(this.native,r,this.mReadBuffer,r,i),this.device.gpu.queue.submit([a.finish()]),await this.mReadBuffer.mapAsync(GPUMapMode.READ,r,i);let n=this.mReadBuffer.getMappedRange().slice(0);return this.mReadBuffer.unmap(),n}view(e,t,r=0){return new ke(this,e,t,r)}async write(e,t){this.extendUsage(R.CopyDestination);let r=this.native,i=null;this.mWriteBuffer.ready.length===0?this.mWriteBuffer.buffer.size<this.mWriteBuffer.limitation&&(i=this.device.gpu.createBuffer({label:`RingBuffer-WriteWaveBuffer-${this.mWriteBuffer.buffer.size}`,size:this.size,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,mappedAtCreation:!0}),this.mWriteBuffer.buffer.add(i)):i=this.mWriteBuffer.ready.pop();let a=e;ArrayBuffer.isView(a)&&(a=a.buffer);let n=a.byteLength,s=t??0;if(!i){this.device.gpu.queue.writeBuffer(r,s,a,0,n);return}let m=i.getMappedRange(s,n);new Int8Array(m).set(new Int8Array(a)),i.unmap();let p=this.device.gpu.createCommandEncoder();p.copyBufferToBuffer(i,s,r,s,n),this.device.gpu.queue.submit([p.finish()]),i.mapAsync(GPUMapMode.WRITE).then(()=>{this.mWriteBuffer.buffer.has(i)&&this.mWriteBuffer.ready.push(i)}).catch(()=>{this.mWriteBuffer.buffer.delete(i),i.destroy()})}destroyNative(e){e.destroy();for(let t of this.mWriteBuffer.buffer)t.destroy();for(this.mWriteBuffer.buffer.clear();this.mWriteBuffer.ready.length>0;)this.mWriteBuffer.ready.pop()}generateNative(e){let t=this.device.gpu.createBuffer({label:"Ring-Buffer-Static-Buffer",size:this.size,usage:this.usage,mappedAtCreation:!!this.mInitialData});if(this.mInitialData){let r=this.mInitialData;ArrayBuffer.isView(r)&&(r=r.buffer);let i=t.getMappedRange();if(i.byteLength!==r.byteLength)throw new o(`Initial buffer data (byte-length: ${r.byteLength}) does not fit into buffer (length: ${i.byteLength}). `,this);new Int8Array(i).set(new Int8Array(r)),t.unmap(),this.mInitialData=void 0}if(e){let r=this.device.gpu.createCommandEncoder();r.copyBufferToBuffer(e,0,t,0,Math.min(e.size,t.size)),this.device.gpu.queue.submit([r.finish()])}return t}}});var de=l(()=>{});var De=l(()=>{});var Ft=l(()=>{});var w,ze=l(()=>{w=(i=>(i[i.None=0]="None",i[i.Fragment=GPUShaderStage.FRAGMENT]="Fragment",i[i.Vertex=GPUShaderStage.VERTEX]="Vertex",i[i.Compute=GPUShaderStage.COMPUTE]="Compute",i))(w||{})});var re,fe=l(()=>{re=(d=>(d.DepthClipControl="depth-clip-control",d.Depth32floatStencil8="depth32float-stencil8",d.TextureCompressionBc="texture-compression-bc",d.TextureCompressionBcSliced3d="texture-compression-bc-sliced-3d",d.TextureCompressionEtc2="texture-compression-etc2",d.TextureCompressionAstc="texture-compression-astc",d.TimestampQuery="timestamp-query",d.IndirectFirstInstance="indirect-first-instance",d.ShaderF16="shader-f16",d.Rg11b10ufloatRenderable="rg11b10ufloat-renderable",d.Bgra8unormStorage="bgra8unorm-storage",d.Float32Filterable="float32-filterable",d.ClipDistances="clip-distances",d.DualSourceBlendin="dual-source-blending",d))(re||{})});var Vt=l(()=>{});var Ot=l(()=>{});var Ut=l(()=>{});var Et=l(()=>{});var jt=l(()=>{});var ie=l(()=>{});var Ne=l(()=>{});var We,lr=l(()=>{A();We=class extends T{mExecutionFunction;constructor(e,t){super(e),this.mExecutionFunction=t}execute(){let e=this.device.gpu.createCommandEncoder({label:"Execution"});this.mExecutionFunction({commandEncoder:e}),this.device.gpu.queue.submit([e.finish()])}}});var $e,pr=l(()=>{B();K();$e=class{mComputeResourceBuffer;mEncoder;constructor(e){this.mEncoder=e,this.mComputeResourceBuffer={pipeline:null,pipelineDataGroupList:new Array,highestBindGroupListIndex:-1}}computeDirect(e,t,r=1,i=1,a=1){if(e.layout!==t.layout)throw new o("Pipline data not valid for set pipeline.",this);this.setupEncoderData(e,t)&&this.mEncoder.dispatchWorkgroups(r,i,a)}computeIndirect(e,t,r){if(e.layout!==t.layout)throw new o("Pipline data not valid for set pipeline.",this);if(r.extendUsage(R.Indirect),this.setupEncoderData(e,t))if(r.size===20)this.mEncoder.dispatchWorkgroupsIndirect(r.native,0);else throw new o("Indirect compute calls can only be done with 20 or 16 byte long buffers",this)}setupEncoderData(e,t){let r=e.native;if(r===null)return!1;let i=-1,a=t.data;for(let n=0;n<a.length;n++){let s=a[n],m=this.mComputeResourceBuffer.pipelineDataGroupList[n];n>i&&(i=n),(!m||s.bindGroup!==m.bindGroup||s.offsetId!==m.offsetId)&&(this.mComputeResourceBuffer.pipelineDataGroupList[n]=s,s.bindGroup.layout.hasDynamicOffset?this.mEncoder.setBindGroup(n,s.bindGroup.native,s.offsets):this.mEncoder.setBindGroup(n,s.bindGroup.native))}if(e!==this.mComputeResourceBuffer.pipeline){if(this.mComputeResourceBuffer.pipeline=e,this.mEncoder.setPipeline(r),this.mComputeResourceBuffer.highestBindGroupListIndex>i)for(let n=i+1;n<this.mComputeResourceBuffer.highestBindGroupListIndex+1;n++)this.mEncoder.setBindGroup(n,null);this.mComputeResourceBuffer.highestBindGroupListIndex=i}return!0}}});var Ye,cr=l(()=>{te();K();fe();A();pr();Ye=class extends T{mExecutionFunction;mQueries;constructor(e,t){super(e),this.mExecutionFunction=t,this.mQueries={}}execute(e){let t={};this.mQueries.timestamp&&(t.timestampWrites=this.mQueries.timestamp.query);let r=e.commandEncoder.beginComputePass(t);this.mExecutionFunction(new $e(r)),r.end(),this.mQueries.timestamp&&e.commandEncoder.resolveQuerySet(this.mQueries.timestamp.query.querySet,0,2,this.mQueries.timestamp.buffer.native,0)}async probeTimestamp(){if(!this.device.capabilities.hasFeature("timestamp-query"))return[0n,0n];if(!this.mQueries.timestamp){let e=this.device.gpu.createQuerySet({type:"timestamp",count:2}),t=new L(this.device,16);t.extendUsage(GPUBufferUsage.QUERY_RESOLVE),t.extendUsage(R.CopySource),this.mQueries.timestamp={query:{querySet:e,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},buffer:t,resolver:null}}return this.mQueries.timestamp.resolver?this.mQueries.timestamp.resolver:(this.mQueries.timestamp.resolver=this.mQueries.timestamp.buffer.read(0,16).then(e=>{this.mQueries.timestamp.resolver=null;let t=new BigUint64Array(e);return[t[0],t[1]]}),this.mQueries.timestamp.resolver)}}});var P,he=l(()=>{P=(n=>(n[n.None=0]="None",n[n.CopySource=GPUTextureUsage.COPY_SRC]="CopySource",n[n.CopyDestination=GPUTextureUsage.COPY_DST]="CopyDestination",n[n.TextureBinding=GPUTextureUsage.TEXTURE_BINDING]="TextureBinding",n[n.Storage=GPUTextureUsage.STORAGE_BINDING]="Storage",n[n.RenderAttachment=GPUTextureUsage.RENDER_ATTACHMENT]="RenderAttachment",n))(P||{})});var dr=l(()=>{});var fr=l(()=>{});var ae,kt=l(()=>{B();dr();Ot();fr();Q();ae=class extends W{mCompare;mLodMaxClamp;mLodMinClamp;mMagFilter;mMaxAnisotropy;mMemoryLayout;mMinFilter;mMipmapFilter;mWrapMode;get compare(){return this.mCompare}set compare(e){this.mCompare=e,this.invalidate("ResourceRebuild")}get lodMaxClamp(){return this.mLodMaxClamp}set lodMaxClamp(e){this.mLodMaxClamp=e,this.invalidate("ResourceRebuild")}get lodMinClamp(){return this.mLodMinClamp}set lodMinClamp(e){this.mLodMinClamp=e,this.invalidate("ResourceRebuild")}get magFilter(){return this.mMagFilter}set magFilter(e){this.mMagFilter=e,this.invalidate("ResourceRebuild")}get maxAnisotropy(){return this.mMaxAnisotropy}set maxAnisotropy(e){this.mMaxAnisotropy=e,this.invalidate("ResourceRebuild")}get memoryLayout(){return this.mMemoryLayout}get minFilter(){return this.mMinFilter}set minFilter(e){this.mMinFilter=e,this.invalidate("ResourceRebuild")}get mipmapFilter(){return this.mMipmapFilter}set mipmapFilter(e){this.mMipmapFilter=e,this.invalidate("ResourceRebuild")}get native(){return super.native}get wrapMode(){return this.mWrapMode}set wrapMode(e){this.mWrapMode=e,this.invalidate("ResourceRebuild")}constructor(e,t){super(e),this.mMemoryLayout=t,this.mCompare=null,this.mWrapMode="clamp-to-edge",this.mMagFilter="linear",this.mMinFilter="linear",this.mMipmapFilter="linear",this.mLodMinClamp=0,this.mLodMaxClamp=32,this.mMaxAnisotropy=16}generateNative(){let e={label:"Texture-Sampler",addressModeU:this.wrapMode,addressModeV:this.wrapMode,addressModeW:this.wrapMode,magFilter:this.magFilter,minFilter:this.minFilter,mipmapFilter:this.mipmapFilter,lodMaxClamp:this.lodMaxClamp,lodMinClamp:this.lodMinClamp,maxAnisotropy:this.maxAnisotropy};if(this.memoryLayout.samplerType==="comparison"){if(!this.compare)throw new o("No compare function is set for a comparison sampler.",this);e.compare=this.compare}return this.device.gpu.createSampler(e)}}});var ne=l(()=>{});var ee,He=l(()=>{A();ee=class extends T{constructor(e){super(e)}}});var M,oe=l(()=>{He();M=class extends ee{mAlignmentType;get alignmentType(){return this.mAlignmentType}constructor(e,t){super(e),this.mAlignmentType=t}}});var z,Re=l(()=>{B();ne();oe();z=class extends M{mAlignment;mArraySize;mInnerType;get alignment(){return this.mAlignment}get arraySize(){return this.mArraySize}get fixedSize(){return this.arraySize<1?0:this.arraySize*Math.ceil(this.innerType.fixedSize/this.innerType.alignment)*this.innerType.alignment}get innerType(){return this.mInnerType}get variableSize(){return this.arraySize>0?0:Math.ceil(this.innerType.fixedSize/this.innerType.alignment)*this.innerType.alignment}constructor(e,t){if(super(e,t.innerType.alignmentType),this.mArraySize=t.arraySize,this.mInnerType=t.innerType,this.mAlignment=(()=>{switch(t.innerType.alignmentType){case 1:return 1;case 3:return t.innerType.alignment;case 2:return Math.ceil(t.innerType.alignment/16)*16}})(),this.mInnerType.variableSize>0)throw new o("Array memory layout must be of fixed size.",this)}locationOf(e){let t=[...e],r=t.shift();if(!r){if(this.variableSize>0)throw new o("Getting the offset and size location for dynamic arrays is not supported.",this);return{size:this.fixedSize,offset:0}}if(isNaN(r))throw new o("Array index must be a number.",this);let i=Math.ceil(this.innerType.fixedSize/this.innerType.alignment)*this.innerType.alignment,a=parseInt(r)*i;if(t.length===0)return{size:i,offset:a};let n=this.innerType.locationOf(t);return{size:n.size,offset:a+n.offset}}}});var I,ge=l(()=>{B();ne();de();De();oe();I=class u extends M{static itemCountOfMultiplier(e){switch(e){case"x1":return 1;case"v2":return 2;case"v3":return 3;case"v4":return 4;case"m22":return 4;case"m23":return 6;case"m24":return 8;case"m32":return 6;case"m33":return 9;case"m34":return 12;case"m42":return 8;case"m43":return 0;case"m44":return 16}}static itemFormatByteCount(e){switch(e){case"float16":return 2;case"float32":return 4;case"uint32":return 4;case"sint32":return 4;case"uint8":return 1;case"sint8":return 1;case"uint16":return 2;case"sint16":return 2;case"unorm16":return 2;case"snorm16":return 2;case"unorm8":return 1;case"snorm8":return 1}}mAlignment;mFormatByteCount;mItemFormat;mItemMultiplier;mSize;get alignment(){return this.mAlignment}get fixedSize(){return this.mSize}get formatByteCount(){return this.mFormatByteCount}get itemFormat(){return this.mItemFormat}get itemMultiplier(){return this.mItemMultiplier}get variableSize(){return 0}constructor(e,t){if(super(e,t.alignmentType),this.mFormatByteCount=u.itemFormatByteCount(t.primitiveFormat),this.mItemFormat=t.primitiveFormat,this.mItemMultiplier=t.primitiveMultiplier,this.mSize=this.mFormatByteCount*u.itemCountOfMultiplier(t.primitiveMultiplier),this.mAlignment=(()=>{switch(t.primitiveMultiplier){case"x1":return this.mFormatByteCount;case"v2":return this.mFormatByteCount*2;case"v3":return this.mFormatByteCount*4;case"v4":return this.mFormatByteCount*4;case"m22":return this.mFormatByteCount*2;case"m23":return this.mFormatByteCount*4;case"m24":return this.mFormatByteCount*4;case"m32":return this.mFormatByteCount*2;case"m33":return this.mFormatByteCount*4;case"m34":return this.mFormatByteCount*4;case"m42":return this.mFormatByteCount*2;case"m43":return this.mFormatByteCount*4;case"m44":return this.mFormatByteCount*4}})(),t.overrideSize){if(this.mSize>t.overrideSize)throw new o("Overriden buffer byte size can not be lower than the actual byte size.",this);this.mAlignment=t.overrideSize}if(this.mAlignment=(()=>{switch(t.alignmentType){case 1:return 1;case 3:case 2:return this.mAlignment}})(),t.overrideAlignment){if(t.overrideAlignment%this.mAlignment!==0)throw new o("Overriden alignment must be dividable by its actual alignment value.",this);this.mAlignment=t.overrideAlignment}}locationOf(e){if(e.length!==0)throw new o("Simple buffer layout has no properties.",this);return{size:this.fixedSize,offset:0}}}});var F,se=l(()=>{B();F=class{mSetupReference;get device(){return this.mSetupReference.device}get setupData(){return this.mSetupReference.data}get setupReferences(){return this.mSetupReference}constructor(e){this.mSetupReference=e,this.fillDefaultData(e.data)}ensureThatInSetup(){if(!this.mSetupReference.inSetup)throw new o("Can only setup in a setup call.",this)}}});var G,Y=l(()=>{B();G=class{mSetupCallback;mSetupReference;get device(){return this.mSetupReference.device}get setupData(){return this.mSetupReference.data}get setupReferences(){return this.mSetupReference}constructor(e,t){this.mSetupReference=e,this.mSetupCallback=t}ensureThatInSetup(){if(!this.mSetupReference.inSetup)throw new o("Can only setup in a setup call.",this)}sendData(...e){this.mSetupCallback(...e)}}});var _e,hr=l(()=>{Y();Re();ge();Pe();_e=class u extends G{mAlignmentType;constructor(e,t,r){super(e,r),this.mAlignmentType=t}asArray(e=-1){return new u(this.setupReferences,this.mAlignmentType,t=>{let r=new z(this.device,{arraySize:e,innerType:t});this.sendData(r)})}asPrimitive(e,t,r=null){let i=new I(this.device,{alignmentType:this.mAlignmentType,primitiveFormat:e,primitiveMultiplier:t,overrideAlignment:r});this.sendData(i)}asStruct(e){let t=new H(this.device,this.mAlignmentType);t.setup(e),this.sendData(t)}}});var qe,gr=l(()=>{se();hr();qe=class extends F{mAlignmentType;constructor(e,t){super(e),this.mAlignmentType=t}property(e){let t={name:e,orderIndex:this.setupData.properties.length,layout:null};return this.setupData.properties.push(t),new _e(this.setupReferences,this.mAlignmentType,r=>{t.layout=r})}fillDefaultData(e){e.properties=new Array}}});var H,Pe=l(()=>{B();ne();oe();gr();H=class extends M{mAlignment;mFixedSize;mInnerProperties;mVariableSize;get alignment(){return this.ensureSetup(),this.mAlignment}get fixedSize(){return this.ensureSetup(),this.mFixedSize}get properties(){return this.ensureSetup(),[...this.mInnerProperties]}get variableSize(){return this.ensureSetup(),this.mVariableSize}constructor(e,t){super(e,t),this.mAlignment=0,this.mFixedSize=0,this.mVariableSize=0,this.mInnerProperties=new Array}locationOf(e){this.ensureSetup();let t=[...e],r=t.shift();if(!r){if(this.mVariableSize>0)throw new o("Can't read location of a memory layout with a variable size.",this);return{size:this.fixedSize,offset:0}}let i=0,a=null;for(let s of this.mInnerProperties){if(i=Math.ceil(i/s.layout.alignment)*s.layout.alignment,s.name===r){a=s;break}i+=s.layout.fixedSize}if(!a)throw new o(`Struct buffer layout property "${r}" not found.`,this);let n=a.layout.locationOf(t);return{size:n.size,offset:i+n.offset}}setup(e){return super.setup(e),this}onSetup(e){for(let r of e.properties){if(!r.layout)throw new o("Struct propery layout was not set.",this);this.mInnerProperties.push({orderIndex:r.orderIndex,name:r.name,layout:r.layout})}this.mInnerProperties=this.mInnerProperties.sort((r,i)=>r.orderIndex-i.orderIndex);let t=0;for(let r=0;r<this.mInnerProperties.length;r++){let i=this.mInnerProperties[r].layout;if(i.variableSize>0&&r!==this.mInnerProperties.length-1)throw new o("Only the last property of a struct memory layout can have a variable size.",this);t=Math.ceil(t/i.alignment)*i.alignment,t+=i.fixedSize,i.alignment>this.mAlignment&&(this.mAlignment=i.alignment),i.variableSize>0&&(this.mVariableSize=i.variableSize)}this.mFixedSize=Math.ceil(t/this.mAlignment)*this.mAlignment,this.mAlignment=(()=>{switch(this.alignmentType){case 1:return 1;case 3:return this.mAlignment;case 2:return Math.ceil(this.mAlignment/16)*16}})()}onSetupObjectCreate(e){return new qe(e,this.alignmentType)}}});var ye=l(()=>{});var ue,Nt=l(()=>{ie();Q();ue=class extends W{mArrayLayerEnd;mArrayLayerStart;mLayout;mMipLevelEnd;mMipLevelStart;mTexture;get arrayLayerEnd(){return this.mArrayLayerEnd}set arrayLayerEnd(e){this.mArrayLayerEnd=e,this.invalidate("ResourceRebuild")}get arrayLayerStart(){return this.mArrayLayerStart}set arrayLayerStart(e){this.mArrayLayerStart=e,this.invalidate("ResourceRebuild")}get layout(){return this.mLayout}get mipLevelEnd(){return this.mMipLevelEnd}set mipLevelEnd(e){this.mMipLevelEnd=e,this.invalidate("ResourceRebuild")}get mipLevelStart(){return this.mMipLevelStart}set mipLevelStart(e){this.mMipLevelStart=e,this.invalidate("ResourceRebuild")}get native(){return super.native}get texture(){return this.mTexture}constructor(e,t,r){super(e),this.mTexture=t,this.mLayout=r,this.mMipLevelStart=0,this.mMipLevelEnd=-1,this.mArrayLayerStart=0,this.mArrayLayerEnd=-1,t.addInvalidationListener(()=>{this.invalidate("ResourceRebuild")},"ResourceRebuild")}generateNative(){let e=this.mTexture.native,t=this.mMipLevelEnd<0?e.mipLevelCount-1:this.mMipLevelEnd,r=this.mArrayLayerEnd<0?e.depthOrArrayLayers-1:this.mArrayLayerEnd,i=(()=>{switch(this.mLayout.dimension){case"1d":case"2d":return 1;case"cube":return 6;case"cube-array":return Math.floor((r-this.mArrayLayerStart+1)/6)*6;case"2d-array":case"3d":return r-this.mArrayLayerStart+1;default:return 1}})();return e.createView({aspect:"all",format:this.mLayout.format,dimension:this.mLayout.dimension,baseMipLevel:this.mMipLevelStart,mipLevelCount:t-this.mMipLevelStart+1,baseArrayLayer:this.mArrayLayerStart,arrayLayerCount:i})}}});var U,be=l(()=>{He();U=class extends ee{mDimension;mFormat;mMultisampled;get dimension(){return this.mDimension}get format(){return this.mFormat}get multisampled(){return this.mMultisampled}constructor(e,t){super(e),this.mDimension=t.dimension,this.mFormat=t.format,this.mMultisampled=t.multisampled}}});var xe,Wt=l(()=>{B();q();ye();he();ie();Q();Nt();be();xe=class u extends W{mDepth;mDimension;mFormat;mHeight;mMipLevelCount;mMultisampled;mWidth;get depth(){return this.mDepth}set depth(e){this.mDepth=e,this.invalidate("ResourceRebuild")}get dimension(){return this.mDimension}get format(){return this.mFormat}get height(){return this.mHeight}set height(e){this.mHeight=e,this.invalidate("ResourceRebuild")}get mipCount(){return this.mMipLevelCount}set mipCount(e){this.mMipLevelCount=e,this.invalidate("ResourceRebuild")}get multiSampled(){return this.mMultisampled}get native(){return super.native}get width(){return this.mWidth}set width(e){this.mWidth=e,this.invalidate("ResourceRebuild")}constructor(e,t){super(e),this.extendUsage(P.CopyDestination),this.extendUsage(P.CopySource),this.mDimension=t.dimension,this.mFormat=t.format,this.mMultisampled=t.multisampled,this.mMipLevelCount=1,this.mDepth=1,this.mHeight=1,this.mWidth=1}copyFrom(...e){let t=new Array;for(let a=0;a<e.length;a++){let n=e[a];if(!("data"in n)){switch(!0){case n instanceof u:{t.push({data:n,mipLevel:0,external:!1,dimension:{width:n.width,height:n.height,depthOrArrayLayers:n.depth},sourceOrigin:{x:0,y:0,z:0},targetOrigin:{x:0,y:0,z:a}});continue}case n instanceof ImageBitmap:{t.push({data:n,mipLevel:0,external:!0,dimension:{width:n.width,height:n.height,depthOrArrayLayers:1},sourceOrigin:{x:0,y:0,z:0},targetOrigin:{x:0,y:0,z:a}});continue}}continue}let s=!(n instanceof u);t.push({data:n.data,external:s,mipLevel:n.mipLevel??0,dimension:{width:n.dimension?.width??n.data.width,height:n.dimension?.height??n.data.height,depthOrArrayLayers:n.dimension?.depth??("depth"in n.data?n.data.depth:1)},sourceOrigin:n.sourceOrigin??{x:0,y:0,z:0},targetOrigin:n.targetOrigin??{x:0,y:0,z:0}})}this.extendUsage(P.CopyDestination),this.extendUsage(P.RenderAttachment);let r={texture:this.native,aspect:"all"},i=this.device.gpu.createCommandEncoder();for(let a of t){if(r.texture.mipLevelCount<a.mipLevel)continue;r.origin=a.targetOrigin,r.mipLevel=a.mipLevel;let n={width:Math.floor(r.texture.width/Math.pow(2,r.mipLevel)),height:Math.floor(r.texture.height/Math.pow(2,r.mipLevel)),depthOrArrayLayers:r.texture.dimension==="3d"?Math.floor(r.texture.depthOrArrayLayers/Math.pow(2,r.mipLevel)):r.texture.depthOrArrayLayers},s={width:Math.min(n.width-a.targetOrigin.x,a.dimension.width-a.sourceOrigin.x),height:Math.min(n.height-a.targetOrigin.y,a.dimension.height-a.sourceOrigin.y),depthOrArrayLayers:Math.min(n.depthOrArrayLayers-a.targetOrigin.z,a.dimension.depthOrArrayLayers-a.sourceOrigin.z)};if(s.width<1||s.height<1||s.depthOrArrayLayers<1)continue;if(a.external){let p={source:a.data,origin:[a.sourceOrigin.x,a.sourceOrigin.y]};this.device.gpu.queue.copyExternalImageToTexture(p,r,s);continue}let m={texture:a.data.native,aspect:"all",origin:a.targetOrigin,mipLevel:0};i.copyTextureToTexture(m,r,s)}this.device.gpu.queue.submit([i.finish()])}useAs(e){let t=e??(()=>{switch(this.mDimension){case"1d":return"1d";case"2d":return"2d";case"3d":return"3d"}})(),r=new U(this.device,{format:this.mFormat,dimension:t,multisampled:this.mMultisampled});return new ue(this.device,this,r)}destroyNative(e){e.destroy()}generateNative(e){let t=(()=>{switch(this.mDimension){case"1d":{let a=this.device.capabilities.getLimit("maxTextureDimension1D");if(this.mWidth>a)throw new o(`Texture dimension exeeced for 1D Texture(${this.mWidth}).`,this);return{textureDimension:"1d",clampedDimensions:[this.mWidth,1,1]}}case"2d":{let a=this.device.capabilities.getLimit("maxTextureDimension1D");if(this.mWidth>a||this.mHeight>a)throw new o(`Texture dimension exeeced for 2D Texture(${this.mWidth}, ${this.mHeight}).`,this);let n=this.device.capabilities.getLimit("maxTextureArrayLayers");if(this.mDepth>n)throw new o(`Texture array layer exeeced for 2D Texture(${this.mDepth}).`,this);return{textureDimension:"2d",clampedDimensions:[this.mWidth,this.mHeight,this.mDepth]}}case"3d":{let a=this.device.capabilities.getLimit("maxTextureDimension3D");if(this.mWidth>a||this.mHeight>a||this.mDepth>a)throw new o(`Texture dimension exeeced for 3D Texture(${this.mWidth}, ${this.mHeight}, ${this.mDepth}).`,this);return{textureDimension:"3d",clampedDimensions:[this.mWidth,this.mHeight,this.mDepth]}}}})(),r;t.textureDimension==="3d"?r=1+Math.floor(Math.log2(Math.max(this.mWidth,this.mHeight,this.mDepth))):r=1+Math.floor(Math.log2(Math.max(this.mWidth,this.mHeight)));let i=this.device.gpu.createTexture({label:"GPU-Texture",size:t.clampedDimensions,format:this.mFormat,usage:this.usage,dimension:t.textureDimension,sampleCount:this.mMultisampled?4:1,mipLevelCount:Math.min(this.mMipLevelCount,r)});if(e!==null&&i.sampleCount===1){let a=this.device.gpu.createCommandEncoder(),n=Math.min(i.mipLevelCount,e.mipLevelCount);for(let s=0;s<n;s++){let m={texture:e,aspect:"all",origin:[0,0,0],mipLevel:s},p={texture:i,aspect:"all",origin:[0,0,0],mipLevel:s},c={width:Math.floor(i.width/Math.pow(2,s)),height:Math.floor(i.height/Math.pow(2,s)),depthOrArrayLayers:i.dimension==="3d"?Math.floor(i.depthOrArrayLayers/Math.pow(2,s)):i.depthOrArrayLayers},h={width:Math.floor(e.width/Math.pow(2,s)),height:Math.floor(e.height/Math.pow(2,s)),depthOrArrayLayers:e.dimension==="3d"?Math.floor(e.depthOrArrayLayers/Math.pow(2,s)):e.depthOrArrayLayers},v={width:Math.min(h.width,c.width),height:Math.min(h.height,c.height),depthOrArrayLayers:Math.min(h.depthOrArrayLayers,c.depthOrArrayLayers)};a.copyTextureToTexture(m,p,v)}this.device.gpu.queue.submit([a.finish()])}return i}}});var N,Ge=l(()=>{He();N=class extends ee{mSamplerType;get samplerType(){return this.mSamplerType}constructor(e,t){super(e),this.mSamplerType=t}}});var Ke,yr=l(()=>{B();te();Re();oe();ge();Pe();de();q();J();ye();ie();Y();Wt();Ge();be();kt();Ke=class extends G{mBindLayout;mCurrentData;constructor(e,t,r,i){super(r,i),this.mCurrentData=t,this.mBindLayout=e}asBufferView(e,t){let r=this.getRaw();if(!(r instanceof L))throw new o("Bind data can not be converted into a buffer view.",this);let i=this.mBindLayout.layout;return r.view(i,e,t)}createBuffer(e){let t;return Array.isArray(e)?t=this.createBufferFromArray(e):t=this.createEmptyBuffer(e),this.sendData(t),t}createBufferWithRawData(e){if(!(this.mBindLayout.layout instanceof M))throw new o("Bind data layout is not suitable for buffers.",this);let r=((()=>{if(this.mBindLayout.layout.variableSize===0)return 0;let n=(e.byteLength-this.mBindLayout.layout.fixedSize)/this.mBindLayout.layout.variableSize;if(n%1>0)throw new o(`Raw bind group data buffer data "${this.mBindLayout.name}" does not meet alignment.`,this);return n})()??0)*this.mBindLayout.layout.variableSize+this.mBindLayout.layout.fixedSize;if(this.mBindLayout.hasDynamicOffset){let a=this.mBindLayout.storageType===0?this.device.capabilities.getLimit("minUniformBufferOffsetAlignment"):this.device.capabilities.getLimit("minStorageBufferOffsetAlignment");r=Math.ceil(r/a)*a,r*=Math.floor(e.byteLength/r)}if(e.byteLength!==r)throw new o(`Raw bind group data buffer data "${this.mBindLayout.name}" does not meet data size (Should:${r} => Has:${e.byteLength}) requirements.`,this);let i=new L(this.device,r).initialData(e);return this.sendData(i),i}createSampler(){if(!(this.mBindLayout.layout instanceof N))throw new o("Bind data layout is not suitable for samplers.",this);let e=new ae(this.device,this.mBindLayout.layout);return this.sendData(e),e}createTexture(){if(!(this.mBindLayout.layout instanceof U))throw new o("Bind data layout is not suitable for image textures.",this);let e=(()=>{switch(this.mBindLayout.layout.dimension){case"1d":return"1d";case"2d-array":case"cube":case"cube-array":case"2d":return"2d";case"3d":return"3d"}})(),r=new xe(this.device,{dimension:e,format:this.mBindLayout.layout.format,multisampled:this.mBindLayout.layout.multisampled}).useAs(this.mBindLayout.layout.dimension);return this.sendData(r),r}getRaw(){if(!this.mCurrentData)throw new o("No binding data was set.",this);return this.mCurrentData}set(e){return this.sendData(e),e}createBufferFromArray(e){if(!(this.mBindLayout.layout instanceof M))throw new o("Bind data layout is not suitable for buffers.",this);let t=this.unwrapLayouts(this.mBindLayout.layout);if(t.fixedItemCount>e.length)throw new o(`Data has not enough numbers (count: ${e.length}) to fill fixed buffer data (count: ${t.fixedItemCount}).`,this);let r=0;if(t.variableItemCount>0&&(r=(e.length-t.fixedItemCount)/t.variableItemCount),r%1!==0)throw new o("Data has not the right alignment to fill variable spaces without null space.",this);let i=-1,a=1,n=(r??0)*this.mBindLayout.layout.variableSize+this.mBindLayout.layout.fixedSize;this.mBindLayout.hasDynamicOffset&&(i=this.mBindLayout.storageType===0?this.device.capabilities.getLimit("minUniformBufferOffsetAlignment"):this.device.capabilities.getLimit("minStorageBufferOffsetAlignment"),a=e.length/t.fixedItemCount,n=Math.ceil(n/i)*i,n*=a);let s=new ArrayBuffer(n),m=new DataView(s),p=0,c=0,h=(g,d=-1)=>{let f=d!==-1?d:g.alignment;if(c=Math.ceil(c/f)*f,Array.isArray(g.format)){let S=g.count!==-1?g.count:r;for(let V=0;V<S;V++)for(let y of g.format)h(y);return}for(let S=0;S<g.count;S++)this.setBufferData(m,c,g.format.itemFormat,e[p]),p++,c+=g.format.itemByteCount};for(let g=0;g<a;g++)h(t,i);return new L(this.device,s.byteLength).initialData(s)}createEmptyBuffer(e=null){if(!(this.mBindLayout.layout instanceof M))throw new o("Bind data layout is not suitable for buffers.",this);let r=((()=>{if(e!==null)return e;if(this.mBindLayout.layout.variableSize===0)return 0;throw new o(`For bind group data buffer "${this.mBindLayout.name}" a variable item count must be set.`,this)})()??0)*this.mBindLayout.layout.variableSize+this.mBindLayout.layout.fixedSize;if(this.mBindLayout.hasDynamicOffset){let a=this.mBindLayout.storageType===0?this.device.capabilities.getLimit("minUniformBufferOffsetAlignment"):this.device.capabilities.getLimit("minStorageBufferOffsetAlignment");r=Math.ceil(r/a)*a,r*=e??1}return new L(this.device,r)}setBufferData(e,t,r,i){switch(r){case"float32":{e.setFloat32(t,i,!0);break}case"uint32":{e.setUint32(t,i,!0);break}case"sint32":{e.setInt32(t,i,!0);break}case"uint8":case"sint8":case"uint16":case"sint16":case"float16":case"unorm16":case"snorm16":case"unorm8":case"snorm8":default:throw new o(`Currently "${r}" is not supported for uniform parameter.`,this)}}unwrapLayouts(e){if(e instanceof I){let t=I.itemCountOfMultiplier(e.itemMultiplier),r=e.itemFormat;return{fixedItemCount:t,variableItemCount:0,count:t,alignment:e.alignment,format:{itemFormat:r,itemByteCount:I.itemFormatByteCount(r)}}}if(e instanceof z){let t=this.unwrapLayouts(e.innerType);return{fixedItemCount:Math.max(e.arraySize,0)*t.fixedItemCount,variableItemCount:e.variableSize>0?t.fixedItemCount:0,count:e.fixedSize||-1,alignment:e.alignment,format:[t]}}if(e instanceof H){let t=0,r=0,i=new Array;for(let a of e.properties){let n=this.unwrapLayouts(a.layout);t+=n.fixedItemCount,r+=n.variableItemCount,i.push(n)}return{fixedItemCount:t,variableItemCount:r,count:1,alignment:e.alignment,format:i}}throw new o("Memory layout not suppored for bindings",this)}}});var Qe,$t=l(()=>{B();te();K();J();he();kt();yr();oe();A();Q();Nt();Ge();be();Qe=class extends T{mBindData;mDataInvalidationListener;mLayout;get layout(){return this.mLayout}get native(){return super.native}constructor(e,t){super(e),this.mLayout=t,this.mBindData=new x,this.mDataInvalidationListener=new WeakMap}data(e){let t=this.mLayout.getBind(e),r=this.mBindData.get(e)??null,i={device:this.device,inSetup:!0,data:null};return new Ke(t,r,i,a=>{switch(!0){case a instanceof L:{if(!(t.layout instanceof M))throw new o(`Buffer added to bind data "${e}" but binding does not expect a buffer.`,this);t.storageType!==0?a.extendUsage(R.Storage):a.extendUsage(R.Uniform);break}case a instanceof ae:{if(!(t.layout instanceof N))throw new o(`Texture sampler added to bind data "${e}" but binding does not expect a texture sampler.`,this);break}case a instanceof ue:{if(!(t.layout instanceof U))throw new o(`Texture added to bind data "${e}" but binding does not expect a texture.`,this);t.storageType!==0?a.texture.extendUsage(P.Storage):a.texture.extendUsage(P.TextureBinding);break}default:throw new o(`Unsupported resource added to bind data "${e}".`,this)}let n=this.mBindData.get(e);if(n){let s=this.mDataInvalidationListener.get(n);s&&n.removeInvalidationListener(s)}this.mBindData.set(e,a),a.addInvalidationListener(()=>{this.invalidate("NativeRebuild")},"ResourceRebuild"),this.invalidate("NativeRebuild")})}generateNative(){this.invalidate("NativeRebuild");let e=new Array;for(let t of this.layout.orderedBindingNames){let r=this.mBindData.get(t);if(!r)throw new o(`Data for binding "${t}" is not set.`,this);let i=this.layout.getBind(t),a={binding:i.index,resource:null};if(r instanceof L){a.resource={buffer:r.native},i.hasDynamicOffset&&(a.resource.size=i.layout.fixedSize),e.push(a);continue}if(r instanceof ae){a.resource=r.native,e.push(a);continue}if(r instanceof ue){a.resource=r.native,e.push(a);continue}throw new o(`Bind type for "${r}" not supported`,this)}return this.device.gpu.createBindGroup({label:"Bind-Group",layout:this.layout.native,entries:e})}}});var Je,br=l(()=>{Y();Je=class extends G{withOffset(e,t){return this.sendData({bindingName:e,offsetIndex:t}),this}}});var et,xr=l(()=>{B();br();se();et=class extends F{addGroup(e){let t={bindGroup:e,offsets:new x};return this.setupData.groups.push(t),new Je(this.setupReferences,r=>{t.offsets.set(r.bindingName,r.offsetIndex)})}fillDefaultData(e){e.groups=new Array}}});var tt,Yt=l(()=>{B();q();J();A();$t();xr();tt=class extends T{mBindData;mInvalidationListener;mLayout;mOrderedBindData;get data(){return this.ensureSetup(),this.mOrderedBindData}get layout(){return this.mLayout}constructor(e,t){super(e),this.mLayout=t,this.mBindData=new x,this.mInvalidationListener=()=>{this.invalidate("DataChange")},this.mOrderedBindData=new Array}deconstruct(){super.deconstruct();for(let e of this.mOrderedBindData)e.bindGroup.removeInvalidationListener(this.mInvalidationListener)}group(e){if(!this.mBindData.has(e))throw new o(`Bind group "${e}" does not exists in pipeline data.`,this);return this.mBindData.get(e)}setup(e){return super.setup(e)}onSetup(e){if(this.mLayout.groups.length!==e.groups.length){for(let t of this.mLayout.groups)if(!e.groups.find(i=>i.bindGroup.layout.name===t))throw new o(`Required bind group "${t}" not set.`,this)}for(let t of e.groups){let r=t.bindGroup.layout.name,i=this.mLayout.groupIndex(r),a=t.bindGroup;if(this.mOrderedBindData[i])throw new o(`Bind group "${r}" was added multiple times to render pass step.`,this);let n=this.mLayout.getGroupLayout(r);if(a.layout!==n)throw new o(`Source bind group layout for "${r}" does not match target layout.`,this);if(this.mBindData.has(r))throw new o(`Bind group "${r}" name already exists in pipeline data.`,this);let s={offsetId:"",bindGroup:a,offsets:new Array};if(n.hasDynamicOffset){for(let m of n.orderedBindingNames){let p=n.getBind(m);if(!p.hasDynamicOffset)continue;if(!t.offsets.has(m))throw new o(`Binding "${m}" of group "${r} requires a offset."`,this);let c=p.storageType===0?this.device.capabilities.getLimit("minUniformBufferOffsetAlignment"):this.device.capabilities.getLimit("minStorageBufferOffsetAlignment"),h=t.offsets.get(m),v=p.layout,g=Math.ceil(v.fixedSize/c)*c,d=a.data(m).getRaw().size;if(Math.floor(d/g)<=h)throw new o(`Binding "${m}" of group "${r} exceedes dynamic offset limits."`,this);s.offsets.push(g*h)}s.offsetId=s.offsets.join("-")}this.mBindData.set(r,s),this.mOrderedBindData[i]=s,a.addInvalidationListener(this.mInvalidationListener,"NativeRebuild")}}onSetupObjectCreate(e){return new et(e)}}});var vr=l(()=>{});var Sr=l(()=>{});var wr=l(()=>{});var rt=l(()=>{});var it,Tr=l(()=>{it=class{mCallback;mDataReference;constructor(e,t){this.mCallback=t,this.mDataReference=e}bias(e){return this.mDataReference.depthBias=e,this.mCallback(),this}biasClamp(e){return this.mDataReference.depthBiasClamp=e,this.mCallback(),this}biasSlopeScale(e){return this.mDataReference.depthBiasSlopeScale=e,this.mCallback(),this}compareWith(e){return this.mDataReference.depthCompare=e,this.mCallback(),this}enableWrite(e){return this.mDataReference.depthWriteEnabled=e,this.mCallback(),this}}});var at,Br=l(()=>{at=class{mCallback;mDataReference;constructor(e,t){this.mCallback=t,this.mDataReference=e}back(e,t,r,i){return this.mDataReference.stencilBack.compare=e,t&&(this.mDataReference.stencilBack.failOperation=t),r&&(this.mDataReference.stencilBack.passOperation=r),i&&(this.mDataReference.stencilBack.depthFailOperation=i),this.mCallback(),this}front(e,t,r,i){return this.mDataReference.stencilFront.compare=e,t&&(this.mDataReference.stencilFront.failOperation=t),r&&(this.mDataReference.stencilFront.passOperation=r),i&&(this.mDataReference.stencilFront.depthFailOperation=i),this.mCallback(),this}readMask(e){return this.mDataReference.stencilReadMask=e,this.mCallback(),this}writeMask(e){return this.mDataReference.stencilWriteMask=e,this.mCallback(),this}}});var nt,Dr=l(()=>{nt=class{mCallback;mDataReference;constructor(e,t){this.mCallback=t,this.mDataReference=e}alphaBlend(e,t,r){return this.mDataReference.alphaBlend={operation:e,sourceFactor:t,destinationFactor:r},this.mCallback(),this}colorBlend(e,t,r){return this.mDataReference.colorBlend={operation:e,sourceFactor:t,destinationFactor:r},this.mCallback(),this}writeMask(...e){return this.mDataReference.aspectWriteMask=new Set(e),this.mCallback(),this}}});var ot,Ht=l(()=>{B();Ft();ze();Vt();vr();Sr();wr();rt();Ut();Et();A();Tr();Br();Dr();ot=class extends T{mDepthConfiguration;mLoadedPipeline;mParameter;mPrimitiveCullMode;mPrimitiveFrontFace;mPrimitiveTopology;mRenderTargetConfig;mRenderTargets;mShaderModule;mStencilConfiguration;get layout(){return this.mShaderModule.shader.layout}get module(){return this.mShaderModule}get native(){return super.native}get primitiveCullMode(){return this.mPrimitiveCullMode}set primitiveCullMode(e){this.mPrimitiveCullMode=e,this.invalidate("NativeRebuild")}get primitiveFrontFace(){return this.mPrimitiveFrontFace}set primitiveFrontFace(e){this.mPrimitiveFrontFace=e,this.invalidate("NativeRebuild")}get primitiveTopology(){return this.mPrimitiveTopology}set primitiveTopology(e){this.mPrimitiveTopology=e,this.invalidate("NativeRebuild")}get renderTargets(){return this.mRenderTargets}constructor(e,t,r){super(e),this.mLoadedPipeline=null,this.mShaderModule=t,this.mRenderTargets=r,this.mRenderTargetConfig=new x,this.mParameter=new x,this.mDepthConfiguration={depthWriteEnabled:this.mRenderTargets.hasDepth,depthCompare:"less",depthBias:0,depthBiasSlopeScale:0,depthBiasClamp:0},this.mStencilConfiguration={stencilReadMask:0,stencilWriteMask:0,stencilBack:{compare:"always",failOperation:"keep",depthFailOperation:"keep",passOperation:"keep"},stencilFront:{compare:"always",failOperation:"keep",depthFailOperation:"keep",passOperation:"keep"}},this.mPrimitiveTopology="triangle-list",this.mPrimitiveCullMode="back",this.mPrimitiveFrontFace="ccw"}depthConfig(){return new it(this.mDepthConfiguration,()=>{this.invalidate("NativeRebuild")})}setParameter(e,t){let r=this.mShaderModule.shader.parameter(e);for(let i of r)this.mParameter.has(i)||this.mParameter.set(i,{}),this.mParameter.get(i)[e]=t;return this.invalidate("NativeRebuild"),this}stencilConfig(){return new at(this.mStencilConfiguration,()=>{this.invalidate("NativeRebuild")})}targetConfig(e){if(!this.mRenderTargets.hasColorTarget(e))throw new o(`Color target "${e}" does not exists.`,this);return this.mRenderTargetConfig.has(e)||this.mRenderTargetConfig.set(e,{colorBlend:{operation:"add",sourceFactor:"one",destinationFactor:"zero"},alphaBlend:{operation:"add",sourceFactor:"one",destinationFactor:"zero"},aspectWriteMask:new Set(["red","green","blue","alpha"])}),new nt(this.mRenderTargetConfig.get(e),()=>{this.invalidate("NativeRebuild")})}generateNative(e,t){if(this.mLoadedPipeline!==null&&!t.has("NativeRebuild")){let a=this.mLoadedPipeline;return this.mLoadedPipeline=null,a}let i={layout:this.mShaderModule.shader.layout.native,vertex:{module:this.mShaderModule.shader.native,entryPoint:this.mShaderModule.vertexEntryPoint,buffers:this.mShaderModule.vertexParameter.native,constants:this.mParameter.get(w.Vertex)??{}},primitive:this.generatePrimitive()};if(this.module.fragmentEntryPoint){let a=new Array;for(let n of this.mRenderTargets.colorTargetNames){let s=this.mRenderTargets.colorTarget(n);a.push({format:s.layout.format,blend:this.generateRenderTargetBlendState(n),writeMask:this.generateRenderTargetWriteMask(n)})}i.fragment={module:this.mShaderModule.shader.native,entryPoint:this.module.fragmentEntryPoint,targets:a,constants:this.mParameter.get(w.Fragment)??{}}}if(this.mRenderTargets.hasDepth||this.mRenderTargets.hasStencil){if(i.depthStencil={format:this.mRenderTargets.depthStencilTarget().layout.format},this.mRenderTargets.hasDepth&&(i.depthStencil.depthWriteEnabled=this.mDepthConfiguration.depthWriteEnabled,i.depthStencil.depthCompare=this.mDepthConfiguration.depthCompare,i.depthStencil.depthBias=this.mDepthConfiguration.depthBias,i.depthStencil.depthBiasSlopeScale=this.mDepthConfiguration.depthBiasSlopeScale,i.depthStencil.depthBiasClamp=this.mDepthConfiguration.depthBiasClamp,(this.mPrimitiveTopology==="line-list"||this.mPrimitiveTopology==="line-strip"||this.mPrimitiveTopology==="point-list")&&(i.depthStencil.depthBias!==0||i.depthStencil.depthBiasSlopeScale!==0||i.depthStencil.depthBiasClamp!==0)))throw new o(`Pipelines depth bias settings must be zero for "${this.mPrimitiveTopology}"-Topology`,this);this.mRenderTargets.hasStencil&&(i.depthStencil.stencilReadMask=this.mStencilConfiguration.stencilReadMask,i.depthStencil.stencilWriteMask=this.mStencilConfiguration.stencilWriteMask,i.depthStencil.stencilBack={compare:this.mStencilConfiguration.stencilBack.compare,failOp:this.mStencilConfiguration.stencilBack.failOperation,depthFailOp:this.mStencilConfiguration.stencilBack.depthFailOperation,passOp:this.mStencilConfiguration.stencilBack.passOperation},i.depthStencil.stencilFront={compare:this.mStencilConfiguration.stencilFront.compare,failOp:this.mStencilConfiguration.stencilFront.failOperation,depthFailOp:this.mStencilConfiguration.stencilFront.depthFailOperation,passOp:this.mStencilConfiguration.stencilFront.passOperation})}return this.mRenderTargets.multisampled&&(i.multisample={count:4}),this.device.gpu.createRenderPipelineAsync(i).then(a=>{this.mLoadedPipeline=a,this.invalidate("NativeLoaded")}),null}generatePrimitive(){let e;switch(this.primitiveTopology){case"line-strip":case"triangle-strip":{e="uint32";break}}let t={topology:this.primitiveTopology,frontFace:this.primitiveFrontFace,cullMode:this.primitiveCullMode,unclippedDepth:!1};return e&&(t.stripIndexFormat=e),t}generateRenderTargetBlendState(e){let t=this.mRenderTargetConfig.get(e),r={color:{operation:"add",srcFactor:"one",dstFactor:"zero"},alpha:{operation:"add",srcFactor:"one",dstFactor:"zero"}};return t&&(r.alpha={operation:t.alphaBlend.operation,srcFactor:t.alphaBlend.sourceFactor,dstFactor:t.alphaBlend.destinationFactor},r.color={operation:t.colorBlend.operation,srcFactor:t.colorBlend.sourceFactor,dstFactor:t.colorBlend.destinationFactor}),r}generateRenderTargetWriteMask(e){let t=this.mRenderTargetConfig.get(e),r=15;return t&&(r=0,t.aspectWriteMask.has("red")&&(r+=1),t.aspectWriteMask.has("green")&&(r+=2),t.aspectWriteMask.has("red")&&(r+=4),t.aspectWriteMask.has("alpha")&&(r+=8)),r}}});var st,Xt=l(()=>{B();te();ne();de();De();K();Ne();Re();ge();A();st=class extends T{mBuffer;mIndexBufferView;mIndices;mLayout;get indexBuffer(){return this.mIndexBufferView}get layout(){return this.mLayout}get vertexCount(){return this.mIndices.length}constructor(e,t,r){if(super(e),this.mLayout=t,this.mBuffer=new x,this.mIndices=r,this.mIndexBufferView=null,this.mLayout.indexable)if(r.length<Math.pow(2,16)){let i=new z(this.device,{arraySize:r.length,innerType:new I(this.device,{alignmentType:1,primitiveFormat:"uint16",primitiveMultiplier:"x1"})}),a=new L(e,r.length*2);a.extendUsage(R.Index),a.initialData(new Uint16Array(r).buffer),this.mIndexBufferView=a.view(i,Uint16Array)}else{let i=new z(this.device,{arraySize:r.length,innerType:new I(this.device,{alignmentType:1,primitiveFormat:"uint32",primitiveMultiplier:"x1"})}),a=new L(e,r.length*4);a.extendUsage(R.Index),a.initialData(new Uint32Array(r).buffer),this.mIndexBufferView=a.view(i,Uint32Array)}}create(e,t){let r=this.mLayout.parameterBuffer(e),i=new Array,a=0;for(let d of r.layout.properties){let f=d.layout,S=I.itemCountOfMultiplier(f.itemMultiplier),V=f.itemFormat;a+=S,i.push({count:S,format:V,alignment:f.alignment,itemByteCount:I.itemFormatByteCount(V)})}if(t.length%a!==0)throw new o("Vertex parameter buffer data does not align with layout.",this);let n=t;if(!this.mLayout.indexable&&r.stepMode==="index-step"){n=new Array;for(let d of this.mIndices){let f=d*a,S=f+a;n.push(...t.slice(f,S))}}let s=n.length/a;!this.mLayout.indexable&&r.stepMode==="index-step"&&(s=this.mIndices.length);let m=new ArrayBuffer(r.layout.fixedSize*s),p=new DataView(m),c=(d,f,S)=>{switch(f){case"float32":{p.setFloat32(d,S,!0);break}case"uint32":{p.setUint32(d,S,!0);break}case"sint32":{p.setInt32(d,S,!0);break}case"uint8":{p.setUint8(d,S);break}case"sint8":{p.setInt8(d,S);break}case"uint16":{p.setUint16(d,S,!0);break}case"sint16":{p.setInt16(d,S,!0);break}case"float16":case"unorm16":case"snorm16":case"unorm8":case"snorm8":default:throw new o(`Currently "${f}" is not supported for vertex parameter.`,this)}},h=0,v=0;for(let d=0;d<s;d++){for(let f of i){v=Math.ceil(v/f.alignment)*f.alignment;for(let S=0;S<f.count;S++)c(v,f.format,n[h]),h++,v+=f.itemByteCount}v=Math.ceil(v/r.layout.alignment)*r.layout.alignment}let g=new L(this.device,m.byteLength).initialData(m);return g.extendUsage(R.Vertex),this.mBuffer.set(e,g),this.invalidate("DataChange"),g}get(e){if(!this.mBuffer.has(e))throw new o(`Vertex parameter buffer for "${e}" not set.`,this);return this.mBuffer.get(e)}set(e,t){let r=this.mLayout.parameterBuffer(e);if(t.size%r.layout.fixedSize!==0)throw new o("Set vertex parameter buffer does not align with layout.",this);let i=t.size/r.layout.fixedSize;if(!this.mLayout.indexable&&r.stepMode==="index-step"&&(i=this.mIndices.length),t.size!==r.layout.fixedSize*i)throw new o(`Set vertex parameter buffer does not fit needed buffer size (Has:${t.size} => Should:${r.layout.fixedSize*i}).`,this);return t.extendUsage(R.Vertex),this.mBuffer.set(e,t),this.invalidate("DataChange"),t}}});var Ae,Pr=l(()=>{B();K();Ae=class{mEncoder;mRecordResources;mRenderResourceBuffer;mRenderTargets;mUsedResources;get usedResources(){return this.mUsedResources}constructor(e,t,r){this.mEncoder=e,this.mRenderTargets=t,this.mRecordResources=r,this.mUsedResources={parameter:new Set,indirectBuffer:new Set,pipelines:new Set,pipelineData:new Set},this.mRenderResourceBuffer={pipeline:null,vertexBuffer:new x,highestVertexParameterIndex:-1,pipelineDataGroupList:new Array,highestBindGroupListIndex:-1}}drawDirect(e,t,r,i=1,a=0){if(this.mRenderTargets!==e.renderTargets)throw new o("Pipelines render targets not valid for this render pass.",this);if(t.layout!==e.module.vertexParameter)throw new o("Vertex parameter not valid for set pipeline.",this);if(e.layout!==r.layout)throw new o("Pipline data not valid for set pipeline.",this);this.mRecordResources&&(this.mUsedResources.pipelines.has(e)||this.mUsedResources.pipelines.add(e),this.mUsedResources.parameter.has(t)||this.mUsedResources.parameter.add(t),this.mUsedResources.pipelineData.has(r)||this.mUsedResources.pipelineData.add(r)),this.setupEncoderData(e,t,r)&&this.executeDirectDraw(t,i,a)}drawIndirect(e,t,r,i){if(i.extendUsage(R.Indirect),this.mRenderTargets!==e.renderTargets)throw new o("Pipelines render targets not valid for this render pass.",this);if(t.layout!==e.module.vertexParameter)throw new o("Vertex parameter not valid for set pipeline.",this);if(e.layout!==r.layout)throw new o("Pipline data not valid for set pipeline.",this);this.mRecordResources&&(this.mUsedResources.pipelines.has(e)||this.mUsedResources.pipelines.add(e),this.mUsedResources.parameter.has(t)||this.mUsedResources.parameter.add(t),this.mUsedResources.pipelineData.has(r)||this.mUsedResources.pipelineData.add(r)),this.setupEncoderData(e,t,r)&&this.executeIndirectDraw(t,i)}setupEncoderData(e,t,r){let i=e.native;if(i===null)return!1;let a=-1,n=r.data;for(let p=0;p<n.length;p++){let c=n[p],h=this.mRenderResourceBuffer.pipelineDataGroupList[p];p>a&&(a=p),(!h||c.bindGroup!==h.bindGroup||c.offsetId!==h.offsetId)&&(this.mRenderResourceBuffer.pipelineDataGroupList[p]=c,c.bindGroup.layout.hasDynamicOffset?this.mEncoder.setBindGroup(p,c.bindGroup.native,c.offsets):this.mEncoder.setBindGroup(p,c.bindGroup.native))}let s=-1,m=e.module.vertexParameter.bufferNames;for(let p=0;p<m.length;p++){let c=m[p],h=t.get(c);p>s&&(s=p),h!==this.mRenderResourceBuffer.vertexBuffer.get(p)&&(this.mRenderResourceBuffer.vertexBuffer.set(p,h),this.mEncoder.setVertexBuffer(p,h.native))}if(e!==this.mRenderResourceBuffer.pipeline){if(this.mRenderResourceBuffer.pipeline=e,this.mEncoder.setPipeline(i),this.mRenderResourceBuffer.highestBindGroupListIndex>a)for(let p=a+1;p<this.mRenderResourceBuffer.highestBindGroupListIndex+1;p++)this.mEncoder.setBindGroup(p,null);if(this.mRenderResourceBuffer.highestBindGroupListIndex=a,this.mRenderResourceBuffer.highestVertexParameterIndex>s)for(let p=s+1;p<this.mRenderResourceBuffer.highestVertexParameterIndex+1;p++)this.mEncoder.setVertexBuffer(p,null);this.mRenderResourceBuffer.highestVertexParameterIndex=s}return!0}executeDirectDraw(e,t,r){e.layout.indexable?(e.indexBuffer.format===Uint16Array?this.mEncoder.setIndexBuffer(e.indexBuffer.buffer.native,"uint16"):this.mEncoder.setIndexBuffer(e.indexBuffer.buffer.native,"uint32"),this.mEncoder.drawIndexed(e.indexBuffer.length,t,0,0,r)):this.mEncoder.draw(e.vertexCount,t,0,r)}executeIndirectDraw(e,t){if(t.size===20){if(!e.layout.indexable)throw new o("Indirect indexed draw call failed, because parameter are not indexable",this);e.indexBuffer.format===Uint16Array?this.mEncoder.setIndexBuffer(e.indexBuffer.buffer.native,"uint16"):this.mEncoder.setIndexBuffer(e.indexBuffer.buffer.native,"uint32"),this.mEncoder.drawIndexedIndirect(t.native,0)}else if(t.size===16)this.mEncoder.drawIndirect(t.native,0);else throw new o("Indirect draw calls can only be done with 20 or 16 byte long buffers",this)}}});var ut,Lr=l(()=>{te();K();fe();A();Q();Yt();Ht();Xt();Pr();ut=class extends T{mBundleConfig;mExecutionFunction;mQueries;mRenderTargets;constructor(e,t,r,i){super(e),this.mExecutionFunction=i,this.mQueries={},this.mRenderTargets=t,this.mBundleConfig={enabled:r,bundle:null,descriptor:null,usedResources:{parameter:new Set,indirectBuffer:new Set,pipelines:new Set,pipelineData:new Set},resourceInvalidator:()=>{this.mBundleConfig.bundle=null}}}execute(e){let t=this.mRenderTargets.native;this.mQueries.timestamp&&(t.timestampWrites=this.mQueries.timestamp.query);let r=e.commandEncoder.beginRenderPass(t);this.mBundleConfig.enabled?this.cachedExecute(r):this.mExecutionFunction(new Ae(r,this.mRenderTargets,!1)),r.end(),this.mQueries.timestamp&&e.commandEncoder.resolveQuerySet(this.mQueries.timestamp.query.querySet,0,2,this.mQueries.timestamp.buffer.native,0),this.resolveCanvasTargets(e)}async probeTimestamp(){if(!this.device.capabilities.hasFeature("timestamp-query"))return[0n,0n];if(!this.mQueries.timestamp){let e=this.device.gpu.createQuerySet({type:"timestamp",count:2}),t=new L(this.device,16);t.extendUsage(GPUBufferUsage.QUERY_RESOLVE),t.extendUsage(R.CopySource),this.mQueries.timestamp={query:{querySet:e,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},buffer:t,resolver:null}}return this.mQueries.timestamp.resolver?this.mQueries.timestamp.resolver:(this.mQueries.timestamp.resolver=this.mQueries.timestamp.buffer.read(0,16).then(e=>{this.mQueries.timestamp.resolver=null;let t=new BigUint64Array(e);return[t[0],t[1]]}),this.mQueries.timestamp.resolver)}cachedExecute(e){if(!this.mBundleConfig.descriptor){let t={colorFormats:this.mRenderTargets.colorTargetNames.map(r=>this.mRenderTargets.colorTarget(r).layout.format),sampleCount:this.mRenderTargets.multisampled?4:1,depthReadOnly:!1,stencilReadOnly:!1};(this.mRenderTargets.hasDepth||this.mRenderTargets.hasStencil)&&(t.depthStencilFormat=this.mRenderTargets.depthStencilTarget().layout.format),this.mBundleConfig.descriptor=t}if(!this.mBundleConfig.bundle){for(let i of this.mBundleConfig.usedResources.parameter)i.removeInvalidationListener(this.mBundleConfig.resourceInvalidator);for(let i of this.mBundleConfig.usedResources.indirectBuffer)i.removeInvalidationListener(this.mBundleConfig.resourceInvalidator);for(let i of this.mBundleConfig.usedResources.pipelineData)i.removeInvalidationListener(this.mBundleConfig.resourceInvalidator);for(let i of this.mBundleConfig.usedResources.pipelines)i.removeInvalidationListener(this.mBundleConfig.resourceInvalidator);this.mBundleConfig.usedResources.indirectBuffer.clear(),this.mBundleConfig.usedResources.pipelineData.clear(),this.mBundleConfig.usedResources.pipelines.clear();let t=this.device.gpu.createRenderBundleEncoder(this.mBundleConfig.descriptor),r=new Ae(t,this.mRenderTargets,!0);this.mExecutionFunction(r),this.mBundleConfig.bundle=t.finish();for(let i of this.mBundleConfig.usedResources.parameter)i.addInvalidationListener(this.mBundleConfig.resourceInvalidator,"DataChange");for(let i of r.usedResources.indirectBuffer)this.mBundleConfig.usedResources.indirectBuffer.add(i),i.addInvalidationListener(this.mBundleConfig.resourceInvalidator,"ResourceRebuild");for(let i of r.usedResources.pipelineData)this.mBundleConfig.usedResources.pipelineData.add(i),i.addInvalidationListener(this.mBundleConfig.resourceInvalidator,"DataChange");for(let i of r.usedResources.pipelines)this.mBundleConfig.usedResources.pipelines.add(i),i.addInvalidationListener(this.mBundleConfig.resourceInvalidator,"NativeRebuild")}e.executeBundles([this.mBundleConfig.bundle])}resolveCanvasTargets(e){if(this.mRenderTargets.resolveCanvasList.length!==0)if(this.mRenderTargets.multisampled){let t=this.mRenderTargets.resolveCanvasList.map(r=>({view:r.source.native,resolveTarget:r.canvas.native.createView(),loadOp:"load",storeOp:"store"}));e.commandEncoder.beginRenderPass({colorAttachments:t}).end()}else for(let t of this.mRenderTargets.resolveCanvasList){let r={texture:t.source.texture.native,aspect:"all",mipLevel:t.source.mipLevelStart},i={texture:t.canvas.native,aspect:"all",mipLevel:0},a={width:this.mRenderTargets.width,height:this.mRenderTargets.height,depthOrArrayLayers:t.source.arrayLayerStart+1};e.commandEncoder.copyTextureToTexture(r,i,a)}}}});var _t=l(()=>{});var Me,Gr=l(()=>{ye();ie();Y();Wt();Me=class extends G{mMultisampled;constructor(e,t,r){super(e,r),this.mMultisampled=t}new(e,t=null){this.ensureThatInSetup();let i=new xe(this.device,{format:e,dimension:"2d",multisampled:this.mMultisampled}).useAs("2d");return this.sendData({view:i,resolveCanvas:t}),i}use(e,t=null){return this.ensureThatInSetup(),this.sendData({view:e,resolveCanvas:t}),e}}});var mt,Ar=l(()=>{B();_t();se();Gr();mt=class extends F{mMultisampled;constructor(e,t){super(e),this.mMultisampled=t}addColor(e,t,r=!0,i){this.ensureThatInSetup();let a={name:e,index:t,clearValue:i??null,storeOperation:r?"keep":"clear",textureView:null,resolveCanvas:null};return this.setupData.colorTargets.push(a),new Me(this.setupReferences,this.mMultisampled,n=>{a.textureView=n.view,a.resolveCanvas=n.resolveCanvas})}addDepthStencil(e=null,t=null,r=null,i=null){return this.ensureThatInSetup(),this.setupData.depthStencil={textureView:null},(e!==null||t!==null)&&(this.setupData.depthStencil.depth={clearValue:t??null,storeOperation:e?"keep":"clear"}),(r!==null||i!==null)&&(this.setupData.depthStencil.stencil={clearValue:i??null,storeOperation:r?"keep":"clear"}),new Me(this.setupReferences,this.mMultisampled,a=>{if(a.resolveCanvas)throw new o("Can't use a canvas texture as depth or stencil texture.",this);this.setupData.depthStencil.textureView=a.view})}fillDefaultData(e){e.colorTargets=new Array}}});var lt,qt=l(()=>{B();q();rt();_t();he();ie();A();Q();Ar();lt=class extends T{mColorTargetNames;mColorTargets;mDepthStencilTarget;mMultisampled;mResolveCanvasList;mSize;mTargetViewUpdateQueue;get colorTargetNames(){this.ensureSetup();let e=new Array;for(let t of this.mColorTargets.values())e[t.index]=t.name;return e}get hasDepth(){return this.ensureSetup(),!!this.mDepthStencilTarget?.depth}get hasStencil(){return this.ensureSetup(),!!this.mDepthStencilTarget?.stencil}get height(){return this.mSize.height}get multisampled(){return this.mMultisampled}get native(){return super.native}get resolveCanvasList(){return this.mResolveCanvasList}get width(){return this.mSize.width}constructor(e,t){super(e),this.mMultisampled=t,this.mSize={width:1,height:1},this.mDepthStencilTarget=null,this.mColorTargets=new Array,this.mColorTargetNames=new x,this.mTargetViewUpdateQueue=new Set,this.mResolveCanvasList=new Array}colorTarget(e){let t=this.mColorTargetNames.get(e)??null;if(t===null)throw new o(`Color target "${e}" does not exists.`,this);return this.mColorTargets[t].texture.target}depthStencilTarget(){if(this.ensureSetup(),!this.mDepthStencilTarget||!this.mDepthStencilTarget.depth)throw new o("Depth or stencil target does not exists.",this);return this.mDepthStencilTarget.target}hasColorTarget(e){return this.mColorTargetNames.has(e)}resize(e,t){return this.mSize.width=t,this.mSize.height=e,this.applyResize(),this.invalidate("Resize"),this}setup(e){return super.setup(e)}generateNative(){let e=new Array;for(let r of this.mColorTargets){let i=r.storeOperation==="keep"?"store":"discard",a={view:r.texture.target.native,storeOp:i,loadOp:"clear"};r.clearValue!==null?(a.clearValue=r.clearValue,a.loadOp="clear"):a.loadOp="load",e.push(a)}let t={colorAttachments:e};if(this.mDepthStencilTarget){let r=this.mDepthStencilTarget.target;t.depthStencilAttachment={view:r.native},this.mDepthStencilTarget.depth&&(this.mDepthStencilTarget.depth.clearValue!==null?(t.depthStencilAttachment.depthClearValue=this.mDepthStencilTarget.depth.clearValue,t.depthStencilAttachment.depthLoadOp="clear"):t.depthStencilAttachment.depthLoadOp="load",t.depthStencilAttachment.depthStoreOp=this.mDepthStencilTarget.depth.storeOperation==="keep"?"store":"discard"),this.mDepthStencilTarget.stencil&&(this.mDepthStencilTarget.stencil.clearValue!==null?(t.depthStencilAttachment.stencilClearValue=this.mDepthStencilTarget.stencil.clearValue,t.depthStencilAttachment.stencilLoadOp="clear"):t.depthStencilAttachment.stencilLoadOp="load",t.depthStencilAttachment.stencilStoreOp=this.mDepthStencilTarget.stencil.storeOperation==="keep"?"store":"discard")}return t}onSetup(e){let t=this.device.capabilities.getLimit("maxColorAttachments");if(e.colorTargets.length>t-1)throw new o("Max color targets count exeeced.",this);if(e.depthStencil){if(!e.depthStencil.textureView)throw new o("Depth/ stencil attachment defined but no texture was assigned.",this);if(e.depthStencil.textureView.layout.dimension!=="2d")throw new o("Color attachment can only two dimensional.",this);this.mDepthStencilTarget={target:e.depthStencil.textureView},e.depthStencil.textureView.texture.extendUsage(P.RenderAttachment),this.setTextureInvalidationListener(e.depthStencil.textureView,-1);let r=this.device.formatValidator.capabilityOf(e.depthStencil.textureView.layout.format);if(e.depthStencil.depth){if(!r.aspects.has("depth"))throw new o("Used texture for the depth texture attachment must have a depth aspect. ",this);this.mDepthStencilTarget.depth={clearValue:e.depthStencil.depth.clearValue,storeOperation:e.depthStencil.depth.storeOperation}}if(e.depthStencil.stencil){if(!r.aspects.has("stencil"))throw new o("Used texture for the stencil texture attachment must have a depth aspect. ",this);this.mDepthStencilTarget.stencil={clearValue:e.depthStencil.stencil.clearValue,storeOperation:e.depthStencil.stencil.storeOperation}}}for(let r of e.colorTargets.values()){if(!r.textureView)throw new o(`Color attachment "${r.name}" defined but no texture was assigned.`,this);if(this.mColorTargetNames.has(r.name))throw new o(`Color attachment name "${r.name}" can only be defined once.`,this);if(this.mColorTargets[r.index])throw new o(`Color attachment location index "${r.index}" can only be defined once.`,this);if(r.resolveCanvas&&r.resolveCanvas.format!==r.textureView.layout.format)throw new o("Color attachment can only be resolved into a canvas with the same texture format.",this);if(r.textureView.layout.dimension!=="2d")throw new o("Color attachment can only two dimensional.",this);if(r.textureView.mipLevelStart!==0)throw new o("Color attachment can only rendered into mip level 0.",this);this.setTextureInvalidationListener(r.textureView,r.index),r.textureView.texture.extendUsage(P.RenderAttachment),this.mColorTargetNames.set(r.name,r.index),r.resolveCanvas&&(r.textureView.texture.extendUsage(P.CopySource),this.mResolveCanvasList.push({source:r.textureView,canvas:r.resolveCanvas})),this.mColorTargets[r.index]={name:r.name,index:r.index,clearValue:r.clearValue,storeOperation:r.storeOperation,texture:{target:r.textureView,resolveCanvas:r.resolveCanvas}}}if(this.mColorTargetNames.size!==this.mColorTargets.length)throw new o("Color attachment locations must be in order.",this)}onSetupObjectCreate(e){return new mt(e,this.mMultisampled)}updateNative(e){this.mTargetViewUpdateQueue.has(-1)&&e.depthStencilAttachment&&(e.depthStencilAttachment.view=this.mDepthStencilTarget.target.native,this.mTargetViewUpdateQueue.delete(-1));for(let t of this.mTargetViewUpdateQueue){let r=e.colorAttachments[t],i=this.mColorTargets[t];r.view=i.texture.target.native}return this.mTargetViewUpdateQueue.clear(),!0}applyResize(){for(let e of this.mColorTargets)e.texture.target.texture.height=this.mSize.height,e.texture.target.texture.width=this.mSize.width,e.texture.resolveCanvas&&(e.texture.resolveCanvas.height=this.mSize.height,e.texture.resolveCanvas.width=this.mSize.width);this.mDepthStencilTarget&&(this.mDepthStencilTarget.target.texture.height=this.mSize.height,this.mDepthStencilTarget.target.texture.width=this.mSize.width)}setTextureInvalidationListener(e,t){e.addInvalidationListener(()=>{this.invalidate("NativeUpdate"),this.mTargetViewUpdateQueue.add(t)},"ResourceRebuild")}}});var pt,Mr=l(()=>{B();q();A();Yt();pt=class extends T{mBindGroupNames;mBindGroups;get groups(){return[...this.mBindGroupNames.keys()]}get native(){return super.native}constructor(e,t){super(e),this.mBindGroupNames=new x,this.mBindGroups=new x;let r={dynamicStorageBuffers:0,dynamicUniformBuffers:0,sampler:0,sampledTextures:0,storageTextures:0,uniformBuffers:0,storageBuffers:0},i=this.device.capabilities.getLimit("maxBindGroups");for(let[a,n]of t){if(a>i-1)throw new o(`Bind group limit exceeded with index: ${a} and group "${n.name}"`,this);if(this.mBindGroupNames.has(n.name))throw new o(`Can add group name "${n.name}" only once.`,this);if(this.mBindGroups.has(a))throw new o(`Can add group location index "${a}" only once.`,this);this.mBindGroupNames.set(n.name,a),this.mBindGroups.set(a,n),r.dynamicStorageBuffers+=n.resourceCounter.storageDynamicOffset,r.dynamicUniformBuffers+=n.resourceCounter.uniformDynamicOffset,r.sampler+=n.resourceCounter.sampler,r.sampledTextures+=n.resourceCounter.sampledTextures,r.storageTextures+=n.resourceCounter.storageTextures,r.uniformBuffers+=n.resourceCounter.uniformBuffers,r.storageBuffers+=n.resourceCounter.storageBuffers}if(r.dynamicStorageBuffers>this.device.capabilities.getLimit("maxDynamicStorageBuffersPerPipelineLayout"))throw new o(`Max dynamic storage buffer reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxDynamicStorageBuffersPerPipelineLayout")}" has "${r.dynamicStorageBuffers}"`,this);if(r.dynamicUniformBuffers>this.device.capabilities.getLimit("maxDynamicUniformBuffersPerPipelineLayout"))throw new o(`Max dynamic uniform buffer reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxDynamicUniformBuffersPerPipelineLayout")}" has "${r.dynamicUniformBuffers}"`,this);if(r.sampler>this.device.capabilities.getLimit("maxSamplersPerShaderStage"))throw new o(`Max sampler reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxSamplersPerShaderStage")}" has "${r.sampler}"`,this);if(r.sampledTextures>this.device.capabilities.getLimit("maxSampledTexturesPerShaderStage"))throw new o(`Max sampled textures reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxSampledTexturesPerShaderStage")}" has "${r.sampledTextures}"`,this);if(r.storageTextures>this.device.capabilities.getLimit("maxStorageTexturesPerShaderStage"))throw new o(`Max storage textures reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxStorageTexturesPerShaderStage")}" has "${r.storageTextures}"`,this);if(r.storageBuffers>this.device.capabilities.getLimit("maxStorageBuffersPerShaderStage"))throw new o(`Max storage buffers reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxStorageBuffersPerShaderStage")}" has "${r.storageBuffers}"`,this);if(r.uniformBuffers>this.device.capabilities.getLimit("maxUniformBuffersPerShaderStage"))throw new o(`Max uniform buffers reached pipeline. Max allowed "${this.device.capabilities.getLimit("maxUniformBuffersPerShaderStage")}" has "${r.uniformBuffers}"`,this)}getGroupLayout(e){let t=this.mBindGroupNames.get(e);if(typeof t>"u")throw new o(`Bind group layout (${e}) does not exists.`,this);return this.mBindGroups.get(t)}groupIndex(e){let t=this.mBindGroupNames.get(e);if(typeof t>"u")throw new o(`Pipeline does not contain a group with name "${e}".`,this);return t}withData(e){return new tt(this.device,this).setup(e)}generateNative(){let e={bindGroupLayouts:new Array};for(let[t,r]of this.mBindGroups)e.bindGroupLayouts[t]=r.native;if(this.mBindGroups.size!==e.bindGroupLayouts.length)throw new o("Bind group gap detected. Group not set.",this);return this.device.gpu.createPipelineLayout(e)}}});var ct,Ir=l(()=>{B();Re();ge();Pe();de();Y();ct=class u extends G{mAlignmentType;constructor(e,t,r){super(e,r),this.mAlignmentType=t}withArray(e=-1){return new u(this.setupReferences,this.mAlignmentType,t=>{let r=new z(this.device,{arraySize:e,innerType:t});this.sendData(r)})}withPrimitive(e,t){if(e!=="float32"&&e!=="uint32"&&e!=="sint32")throw new o("Uniform layout must be a 32bit format.",this);let r=new I(this.device,{alignmentType:this.mAlignmentType,primitiveFormat:e,primitiveMultiplier:t});this.sendData(r)}withStruct(e){let t=new H(this.device,this.mAlignmentType);t.setup(e),this.sendData(t)}}});var dt,Fr=l(()=>{Y();Ge();be();Ir();dt=class extends G{mAlignmentType;constructor(e,t,r){super(e,r),this.mAlignmentType=t}asBuffer(e=!1){return new ct(this.setupReferences,this.mAlignmentType,t=>{this.sendData({layout:t,hasDynamicOffset:e})})}asSampler(e){let t=new N(this.device,e);this.sendData({layout:t,hasDynamicOffset:!1})}asTexture(e,t){let r=new U(this.device,{dimension:e,format:t,multisampled:!1});this.sendData({layout:r,hasDynamicOffset:!1})}}});var ft,Vr=l(()=>{ne();J();se();Fr();ft=class extends F{binding(e,t,r,i){this.ensureThatInSetup();let a={name:t,index:e,visibility:r,layout:null,storageType:i??0,hasDynamicOffset:!1};this.setupData.bindings.push(a);let n=a.storageType===0?2:3;return new dt(this.setupReferences,n,s=>{a.layout=s.layout,a.hasDynamicOffset=s.hasDynamicOffset})}fillDefaultData(e){e.bindings=new Array}}});var ve,Zt=l(()=>{B();oe();q();J();A();Ge();be();$t();Vr();ve=class extends T{mBindings;mHasDynamicOffset;mName;mOrderedBindingNames;mResourceCounter;get hasDynamicOffset(){return this.mHasDynamicOffset}get name(){return this.mName}get native(){return super.native}get orderedBindingNames(){return this.ensureSetup(),this.mOrderedBindingNames}get resourceCounter(){return this.mResourceCounter}constructor(e,t){super(e),this.mName=t,this.mHasDynamicOffset=!1,this.mResourceCounter={storageDynamicOffset:0,uniformDynamicOffset:0,sampler:0,sampledTextures:0,storageTextures:0,storageBuffers:0,uniformBuffers:0},this.mBindings=new x,this.mOrderedBindingNames=new Array}create(){return this.ensureSetup(),new Qe(this.device,this)}getBind(e){if(this.ensureSetup(),!this.mBindings.has(e))throw new o(`Bind ${e} does not exist.`,this);return this.mBindings.get(e)}setup(e){return super.setup(e)}generateNative(){let e=new Array;for(let t of this.mBindings.values()){let r={visibility:t.visibility,binding:t.index};switch(!0){case t.layout instanceof M:{let i=(()=>{switch(t.storageType){case 0:return"uniform";case 1:return"read-only-storage";default:return"storage"}})();r.buffer={type:i,minBindingSize:0,hasDynamicOffset:t.hasDynamicOffset};break}case t.layout instanceof N:{r.sampler={type:t.layout.samplerType};break}case t.layout instanceof U:{if(t.storageType===0){let a=this.device.formatValidator.capabilityOf(t.layout.format);r.texture={sampleType:a.sampleTypes.primary,multisampled:t.layout.multisampled,viewDimension:t.layout.dimension};break}let i;switch(t.storageType){case 4:{i="read-write";break}case 2:{i="write-only";break}case 1:{i="read-only";break}}r.storageTexture={access:i,format:t.layout.format,viewDimension:t.layout.dimension}}}e.push(r)}return this.device.gpu.createBindGroupLayout({label:`BindGroupLayout-${this.mName}`,entries:e})}onSetup(e){let t=this.device.capabilities.getLimit("maxBindingsPerBindGroup");if(e.bindings.length>t-1)throw new o(`Bind group "${this.mName}" exceeds max binding count.`,this);let r=new Set,i=new Set;for(let a of e.bindings){if(!a.layout)throw new o(`Bind group binding "${a.name}" has no setup layout.`,this);if(a.hasDynamicOffset&&!(a.layout instanceof M))throw new o(`Bind group binding "${a.name}" must be a buffer binding to have dynamic offsets.`,this);if(a.hasDynamicOffset&&a.layout.variableSize>0)throw new o(`Bind group binding "${a.name}" must have a fixed buffer layout to have dynamic offsets.`,this);if(this.mBindings.set(a.name,{name:a.name,index:a.index,layout:a.layout,visibility:a.visibility,storageType:a.storageType,hasDynamicOffset:a.hasDynamicOffset}),a.hasDynamicOffset&&(this.mHasDynamicOffset=!0,a.storageType===0?this.mResourceCounter.uniformDynamicOffset++:this.mResourceCounter.storageDynamicOffset++),r.has(a.index)||i.has(a.name))throw new o(`Binding "${a.name}" with index "${a.index}" added twice.`,this);switch(r.add(a.index),i.add(a.name),this.mOrderedBindingNames[a.index]=a.name,!0){case a.layout instanceof N:{this.mResourceCounter.sampler++;break}case a.layout instanceof U:{a.storageType===0?this.mResourceCounter.sampledTextures++:this.mResourceCounter.storageTextures++;break}case a.layout instanceof M:{a.storageType===0?this.mResourceCounter.uniformBuffers++:this.mResourceCounter.storageBuffers++;break}}}}onSetupObjectCreate(e){return new ft(e)}}});var ht,Or=l(()=>{Y();ht=class extends G{withParameter(e,t,r,i,a=null){return this.sendData({name:e,location:t,format:r,multiplier:i,alignment:a}),this}}});var gt,Ur=l(()=>{se();Or();gt=class extends F{buffer(e,t){let r={name:e,stepMode:t,parameter:new Array};return this.setupData.buffer.push(r),new ht(this.setupReferences,i=>{r.parameter.push(i)})}fillDefaultData(e){e.buffer=new Array}}});var yt,Er=l(()=>{B();ge();Pe();ne();De();Ne();A();Xt();Ur();yt=class extends T{mBuffer;mIndexable;mParameter;get bufferNames(){return this.ensureSetup(),[...this.mBuffer.keys()]}get indexable(){return this.ensureSetup(),this.mIndexable}get native(){return super.native}get parameterNames(){return this.ensureSetup(),[...this.mParameter.keys()]}constructor(e){super(e),this.mIndexable=!1,this.mBuffer=new x,this.mParameter=new x}create(e){return new st(this.device,this,e)}parameter(e){let t=this.mParameter.get(e);if(!t)throw new o(`Vertex parameter "${e}" is not defined.`,this);return t}parameterBuffer(e){let t=this.mBuffer.get(e);if(!t)throw new o(`Vertex parameter buffer "${e}" is not defined.`,this);return t}setup(e){return super.setup(e)}generateNative(){let e=new Array;for(let t of this.mBuffer.values()){let r=0,i=new Array;for(let n of t.layout.properties){let s=n.layout,m=I.itemCountOfMultiplier(s.itemMultiplier),p=`${s.itemFormat}x${m}`;s.itemMultiplier==="x1"&&(p=s.itemFormat);let c=this.mParameter.get(n.name).location;i.push({format:p,offset:r,shaderLocation:c}),r=Math.ceil(r/s.alignment)*s.alignment,r+=s.fixedSize}let a="vertex";t.stepMode==="instance-step"&&(a="instance"),e.push({stepMode:a,arrayStride:t.layout.fixedSize,attributes:i})}return e}onSetup(e){let t=!0,r=new Set(["x1","v2","v3","v4"]),i=new Array;for(let a of e.buffer){let n=new H(this.device,1);n.setup(s=>{for(let m of a.parameter){if(i[m.location])throw new o(`Vertex parameter location "${m.location}" can't be defined twice.`,this);if(!r.has(m.multiplier))throw new o(`Vertex parameter item multiplier "${m.multiplier}" not supported.`,this);s.property(m.name).asPrimitive(m.format,m.multiplier,m.alignment),this.mParameter.set(m.name,{name:m.name,location:m.location}),i[m.location]=!0}}),this.mBuffer.set(a.name,{name:a.name,stepMode:a.stepMode,layout:n}),a.stepMode==="vertex-step"&&(t=!1)}if(i.length!==this.mParameter.size)throw new o("Vertex parameter locations need to be in continious order.",this);this.mIndexable=t}onSetupObjectCreate(e){return new gt(e)}}});var bt,jr=l(()=>{Y();bt=class extends G{size(e,t=1,r=1){this.ensureThatInSetup(),this.sendData(e,t,r)}}});var xt,kr=l(()=>{Y();xt=class extends G{addRenderTarget(e,t,r,i){this.ensureThatInSetup();let a={name:e,location:t,format:r,multiplier:i};return this.sendData(a),this}}});var vt,zr=l(()=>{se();Zt();Er();jr();kr();vt=class extends F{computeEntryPoint(e){this.ensureThatInSetup();let t={name:e,workgroupDimension:null};return this.setupData.computeEntrypoints.push(t),new bt(this.setupReferences,(r,i,a)=>{t.workgroupDimension={x:r,y:i,z:a}})}fragmentEntryPoint(e){this.ensureThatInSetup();let t={name:e,renderTargets:new Array};return this.setupData.fragmentEntrypoints.push(t),new xt(this.setupReferences,r=>{t.renderTargets.push(r)})}group(e,t,r){let i;return typeof t=="string"?i=new ve(this.device,t).setup(r):i=t,this.setupData.bindingGroups.push({index:e,group:i}),i}parameter(e,...t){return this.ensureThatInSetup(),this.setupData.parameter.push({name:e,usage:t}),this}vertexEntryPoint(e,t){this.ensureThatInSetup();let r=new yt(this.device).setup(t),i={name:e,parameter:r};return this.setupData.vertexEntrypoints.push(i),r}fillDefaultData(e){e.computeEntrypoints=new Array,e.fragmentEntrypoints=new Array,e.vertexEntrypoints=new Array,e.parameter=new Array,e.bindingGroups=new Array}}});var Se,Kt=l(()=>{B();ze();A();Se=class extends T{mLoadedPipeline;mParameter;mShaderModule;get layout(){return this.mShaderModule.shader.layout}get module(){return this.mShaderModule}get native(){return super.native}constructor(e,t){super(e),this.mShaderModule=t,this.mLoadedPipeline=null,this.mParameter=new x}setParameter(e,t){let r=this.mShaderModule.shader.parameter(e);for(let i of r)this.mParameter.has(i)||this.mParameter.set(i,{}),this.mParameter.get(i)[e]=t;return this.invalidate("NativeRebuild"),this}generateNative(e,t){if(this.mLoadedPipeline!==null&&!t.has("NativeRebuild")){let i=this.mLoadedPipeline;return this.mLoadedPipeline=null,i}let r={layout:this.mShaderModule.shader.layout.native,compute:{module:this.mShaderModule.shader.native,entryPoint:this.mShaderModule.entryPoint,constants:this.mParameter.get(w.Compute)??{}}};return this.device.gpu.createComputePipelineAsync(r).then(i=>{this.mLoadedPipeline=i,this.invalidate("NativeLoaded")}),null}}});var Ie,Nr=l(()=>{A();Kt();Ie=class extends T{mEntryPoint;mShader;mSize;get entryPoint(){return this.mEntryPoint}get layout(){return this.mShader.layout}get shader(){return this.mShader}get workGroupSizeX(){return this.mSize[0]}get workGroupSizeY(){return this.mSize[1]}get workGroupSizeZ(){return this.mSize[2]}constructor(e,t,r,i){super(e),this.mEntryPoint=r,this.mShader=t,this.mSize=i??[-1,-1,-1]}create(){return new Se(this.device,this)}}});var Fe,Wr=l(()=>{A();Ht();Fe=class extends T{mFragmentEntryPoint;mShader;mVertexEntryPoint;mVertexParameter;get fragmentEntryPoint(){return this.mFragmentEntryPoint}get layout(){return this.mShader.layout}get shader(){return this.mShader}get vertexEntryPoint(){return this.mVertexEntryPoint}get vertexParameter(){return this.mVertexParameter}constructor(e,t,r,i,a){super(e),this.mVertexEntryPoint=r,this.mVertexParameter=i,this.mFragmentEntryPoint=a??null,this.mShader=t}create(e){return new ot(this.device,this,e)}}});var St,$r=l(()=>{B();A();Mr();zr();Nr();Wr();St=class extends T{mEntryPoints;mParameter;mPipelineLayout;mSource;mSourceMap;get layout(){return this.ensureSetup(),this.mPipelineLayout}get native(){return super.native}constructor(e,t,r=null){super(e),this.mSource=t,this.mSourceMap=r,this.mParameter=new x,this.mPipelineLayout=null,this.mEntryPoints={compute:new x,vertex:new x,fragment:new x}}createComputeModule(e){this.ensureSetup();let t=this.mEntryPoints.compute.get(e);if(!t)throw new o(`Compute entry point "${e}" does not exists.`,this);return t.static?new Ie(this.device,this,e,[t.workgroupDimension.x??1,t.workgroupDimension.y??1,t.workgroupDimension.z??1]):new Ie(this.device,this,e)}createRenderModule(e,t){this.ensureSetup();let r=this.mEntryPoints.vertex.get(e);if(!r)throw new o(`Vertex entry point "${e}" does not exists.`,this);if(!t)return new Fe(this.device,this,e,r.parameter);if(!this.mEntryPoints.fragment.get(t))throw new o(`Fragment entry point "${t}" does not exists.`,this);return new Fe(this.device,this,e,r.parameter,t)}parameter(e){this.ensureSetup();let t=this.mParameter.get(e);if(!t)throw new o(`Shader has parameter "${e}" not defined.`,this);return new Set(t)}setup(e){return super.setup(e)}generateNative(){let e=this.mPipelineLayout.native,t=new Array;for(let r of[...this.mEntryPoints.vertex.keys(),...this.mEntryPoints.fragment.keys(),...this.mEntryPoints.compute.keys()])t.push({entryPoint:r,layout:e});return this.device.gpu.createShaderModule({code:this.mSource,compilationHints:t})}onSetup(e){for(let r of e.parameter){if(this.mParameter.has(r.name))throw new o(`Can't add parameter "${r.name}" more than once.`,this);this.mParameter.set(r.name,new Set(r.usage))}for(let r of e.fragmentEntrypoints){if(this.mEntryPoints.fragment.has(r.name))throw new o(`Fragment entry "${r.name}" was setup more than once.`,this);let i=new Set,a=new x;for(let n of r.renderTargets){if(a.has(n.name))throw new o(`Fragment entry "${r.name}" was has doublicate render attachment name "${n.name}".`,this);if(i.has(n.location))throw new o(`Fragment entry "${r.name}" was has doublicate render attachment location index "${n.location}".`,this);i.add(n.location),a.set(n.name,{name:n.name,location:n.location,format:n.format,multiplier:n.multiplier})}this.mEntryPoints.fragment.set(r.name,{renderTargets:a})}for(let r of e.vertexEntrypoints){if(this.mEntryPoints.vertex.has(r.name))throw new o(`Vertex entry "${r.name}" was setup more than once.`,this);this.mEntryPoints.vertex.set(r.name,{parameter:r.parameter})}for(let r of e.computeEntrypoints){if(this.mEntryPoints.compute.has(r.name))throw new o(`Vertex entry "${r.name}" was setup more than once.`,this);this.mEntryPoints.compute.set(r.name,{static:r.workgroupDimension!==null,workgroupDimension:{x:r.workgroupDimension?.x??null,y:r.workgroupDimension?.y??null,z:r.workgroupDimension?.z??null}})}let t=new x;for(let r of e.bindingGroups)t.set(r.index,r.group);this.mPipelineLayout=new pt(this.device,t)}onSetupObjectCreate(e){return new vt(e)}}});var wt,Yr=l(()=>{ye();he();A();wt=class extends T{mCanvas;mContext;mFrameListener;get canvas(){return this.mCanvas}get depth(){return 1}get dimension(){return"3d"}get format(){return this.device.formatValidator.preferredCanvasFormat}get height(){return this.mCanvas.height}set height(e){this.mCanvas.height=e}get mipCount(){return 1}get native(){return super.native}get width(){return this.mCanvas.width}set width(e){this.mCanvas.width=e}constructor(e,t){super(e),this.mCanvas=t,this.mContext=null,this.height=1,this.width=1,this.mFrameListener=()=>{this.invalidate("NativeRebuild")},this.device.addFrameChangeListener(this.mFrameListener)}destroyNative(e,t){t.deconstruct&&(this.device.removeFrameChangeListener(this.mFrameListener),this.mContext.unconfigure(),this.mContext=null)}generateNative(){this.mContext||(this.mContext=this.canvas.getContext("webgpu"),this.mContext.configure({device:this.device.gpu,format:this.device.formatValidator.preferredCanvasFormat,usage:P.CopyDestination|P.RenderAttachment,alphaMode:"opaque"}));let e=this.mContext.getCurrentTexture();return e.label="Canvas-Texture",e}}});var Tt,Hr=l(()=>{B();fe();q();Tt=class{mFeatures;mLimits;constructor(e){this.mFeatures=new Set;for(let t of e.features){let r=le.cast(re,t);r&&this.mFeatures.add(r)}this.mLimits=new x;for(let t of le.valuesOf($))this.mLimits.set(t,e.limits[t]??null)}getLimit(e){return this.mLimits.get(e)}hasFeature(e){return this.mFeatures.has(e)}}});var Xr=l(()=>{});var Bt,_r=l(()=>{B();fe();rt();ye();jt();Xr();he();Bt=class{mDevice;mFormatCapabilitys;get preferredCanvasFormat(){return globalThis.navigator.gpu.getPreferredCanvasFormat()}constructor(e){this.mDevice=e;let t=["unfilterable-float"];if(this.mDevice.capabilities.hasFeature("float32-filterable")&&t.push("float"),this.mFormatCapabilitys=new x,this.mFormatCapabilitys.set("r8unorm",{format:"r8unorm",aspect:{types:["red"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["r8unorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r8snorm",{format:"r8snorm",aspect:{types:["red"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:["r8snorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r8uint",{format:"r8uint",aspect:{types:["red"],byteCost:1},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["r8uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r8sint",{format:"r8sint",aspect:{types:["red"],byteCost:1},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["r8sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r16uint",{format:"r16uint",aspect:{types:["red"],byteCost:2},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["r16uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r16sint",{format:"r16sint",aspect:{types:["red"],byteCost:2},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["r16sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r16float",{format:"r16float",aspect:{types:["red"],byteCost:2},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["r16float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg8unorm",{format:"rg8unorm",aspect:{types:["red","green"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["rg8unorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg8snorm",{format:"rg8snorm",aspect:{types:["red","green"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:["rg8snorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg8uint",{format:"rg8uint",aspect:{types:["red","green"],byteCost:1},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rg8uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg8sint",{format:"rg8sint",aspect:{types:["red","green"],byteCost:1},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rg8sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("r32uint",{format:"r32uint",aspect:{types:["red"],byteCost:4},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["r32uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!0}}}),this.mFormatCapabilitys.set("r32sint",{format:"r32sint",aspect:{types:["red"],byteCost:4},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["r32sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!0}}}),this.mFormatCapabilitys.set("r32float",{format:"r32float",aspect:{types:["red"],byteCost:4},dimensions:["1d","2d","3d"],type:t,compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["r32float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!0}}}),this.mFormatCapabilitys.set("rg16uint",{format:"rg16uint",aspect:{types:["red","green"],byteCost:2},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rg16uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg16sint",{format:"rg16sint",aspect:{types:["red","green"],byteCost:2},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rg16sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg16float",{format:"rg16float",aspect:{types:["red","green"],byteCost:2},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["rg16float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rgba8unorm",{format:"rgba8unorm",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["rgba8unorm","rgba8unorm-srgb"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba8unorm-srgb",{format:"rgba8unorm-srgb",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["rgba8unorm-srgb","rgba8unorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rgba8snorm",{format:"rgba8snorm",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:["rgba8snorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba8uint",{format:"rgba8uint",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rgba8uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba8sint",{format:"rgba8sint",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rgba8sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("bgra8unorm",{format:"bgra8unorm",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["bgra8unorm","bgra8unorm-srgb"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:e.capabilities.hasFeature("bgra8unorm-storage"),writeonly:!1,readwrite:!1}}}),this.mFormatCapabilitys.set("bgra8unorm-srgb",{format:"bgra8unorm-srgb",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["bgra8unorm-srgb","bgra8unorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rgb9e5ufloat",{format:"rgb9e5ufloat",aspect:{types:["red","green","blue","alpha"],byteCost:1},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:["rgb9e5ufloat"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rgb10a2uint",{format:"rgb10a2uint",aspect:{types:["red","green","blue","alpha"],byteCost:2},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rgb10a2uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rgb10a2unorm",{format:"rgb10a2unorm",aspect:{types:["red","green","blue","alpha"],byteCost:2},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["rgb10a2unorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg11b10ufloat",{format:"rg11b10ufloat",aspect:{types:["red","green","blue","alpha"],byteCost:2},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:e.capabilities.hasFeature("rg11b10ufloat-renderable")?{resolveTarget:!0,blendable:!0,multisample:!0}:!1,copy:{compatible:["rg11b10ufloat"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("rg32uint",{format:"rg32uint",aspect:{types:["red","green"],byteCost:4},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["rg32uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rg32sint",{format:"rg32sint",aspect:{types:["red","green"],byteCost:4},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["rg32sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rg32float",{format:"rg32float",aspect:{types:["red","green"],byteCost:4},dimensions:["1d","2d","3d"],type:t,compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["rg32float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba16uint",{format:"rgba16uint",aspect:{types:["red","green","blue","alpha"],byteCost:2},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rgba16uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba16sint",{format:"rgba16sint",aspect:{types:["red","green","blue","alpha"],byteCost:2},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["rgba16sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba16float",{format:"rgba16float",aspect:{types:["red","green","blue","alpha"],byteCost:2},dimensions:["1d","2d","3d"],type:["float","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!0,blendable:!0,multisample:!0},copy:{compatible:["rgba16float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba32uint",{format:"rgba32uint",aspect:{types:["red","green","blue","alpha"],byteCost:4},dimensions:["1d","2d","3d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["rgba32uint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba32sint",{format:"rgba32sint",aspect:{types:["red","green","blue","alpha"],byteCost:4},dimensions:["1d","2d","3d"],type:["sint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["rgba32sint"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("rgba32float",{format:"rgba32float",aspect:{types:["red","green","blue","alpha"],byteCost:4},dimensions:["1d","2d","3d"],type:t,compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!1},copy:{compatible:["rgba32float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:{readonly:!0,writeonly:!0,readwrite:!1}}}),this.mFormatCapabilitys.set("stencil8",{format:"stencil8",aspect:{types:["stencil"],byteCost:1},dimensions:["1d","2d"],type:["uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["stencil8"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("depth16unorm",{format:"depth16unorm",aspect:{types:["depth"],byteCost:2},dimensions:["1d","2d"],type:["depth","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["depth16unorm"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}}),this.mFormatCapabilitys.set("depth24plus",{format:"depth24plus",aspect:{types:["depth"],byteCost:4},dimensions:["1d","2d"],type:["depth","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["depth24plus"],textureSource:!0,textureDestination:!0,imageSource:!1,imageDestination:!1},storage:!1}}),this.mFormatCapabilitys.set("depth24plusStencil8",{format:"depth24plusStencil8",aspect:{types:["depth","stencil"],byteCost:2},dimensions:["1d","2d"],type:["depth","unfilterable-float","uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["depth24plusStencil8"],textureSource:!0,textureDestination:!0,imageSource:!1,imageDestination:!1},storage:!1}}),this.mFormatCapabilitys.set("depth32float",{format:"depth32float",aspect:{types:["depth"],byteCost:4},dimensions:["1d","2d"],type:["depth","unfilterable-float"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["depth32float"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!1},storage:!1}}),e.capabilities.hasFeature("depth32float-stencil8")&&this.mFormatCapabilitys.set("depth32floatStencil8",{format:"depth32floatStencil8",aspect:{types:["depth","stencil"],byteCost:4},dimensions:["1d","2d"],type:["depth","unfilterable-float","uint"],compressionBlock:{width:1,height:1},usage:{textureBinding:!0,renderAttachment:{resolveTarget:!1,blendable:!1,multisample:!0},copy:{compatible:["depth32floatStencil8"],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!1},storage:!1}}),e.capabilities.hasFeature("texture-compression-bc")){let r=(i,a,n,s)=>{let m={format:i,aspect:{types:a,byteCost:n},dimensions:["1d","2d"],type:["unfilterable-float","float"],compressionBlock:{width:4,height:4},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:[i,...s],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}};return e.capabilities.hasFeature("texture-compression-bc-sliced-3d")&&m.dimensions.push("3d"),m};this.mFormatCapabilitys.set("bc1-rgba-unorm",r("bc1-rgba-unorm",["red","green","blue","alpha"],2,["bc1-rgba-unorm-srgb"])),this.mFormatCapabilitys.set("bc1-rgba-unorm-srgb",r("bc1-rgba-unorm-srgb",["red","green","blue","alpha"],2,["bc1-rgba-unorm"])),this.mFormatCapabilitys.set("bc2-rgba-unorm",r("bc2-rgba-unorm",["red","green","blue","alpha"],4,["bc2-rgba-unorm-srgb"])),this.mFormatCapabilitys.set("bc2-rgba-unorm-srgb",r("bc2-rgba-unorm-srgb",["red","green","blue","alpha"],4,["bc2-rgba-unorm"])),this.mFormatCapabilitys.set("bc3-rgba-unorm",r("bc3-rgba-unorm",["red","green","blue","alpha"],4,["bc3-rgba-unorm-srgb"])),this.mFormatCapabilitys.set("bc3-rgba-unorm-srgb",r("bc3-rgba-unorm-srgb",["red","green","blue","alpha"],4,["bc3-rgba-unorm"])),this.mFormatCapabilitys.set("bc4-r-unorm",r("bc4-r-unorm",["red"],8,[])),this.mFormatCapabilitys.set("bc4-r-snorm",r("bc4-r-snorm",["red"],8,[])),this.mFormatCapabilitys.set("bc5-rg-unorm",r("bc5-rg-unorm",["red","green"],8,[])),this.mFormatCapabilitys.set("bc5-rg-snorm",r("bc5-rg-snorm",["red","green"],8,[])),this.mFormatCapabilitys.set("bc6h-rgb-ufloat",r("bc6h-rgb-ufloat",["red","green","blue"],4,[])),this.mFormatCapabilitys.set("bc6h-rgb-float",r("bc6h-rgb-float",["red","green","blue"],4,[])),this.mFormatCapabilitys.set("bc7-rgba-unorm",r("bc7-rgba-unorm",["red","green","blue","alpha"],4,["bc7-rgba-unorm-srgb"])),this.mFormatCapabilitys.set("bc7-rgba-unorm-srgb",r("bc7-rgba-unorm-srgb",["red","green","blue","alpha"],4,["bc7-rgba-unorm"]))}if(e.capabilities.hasFeature("texture-compression-etc2")){let r=(i,a,n,s)=>({format:i,aspect:{types:a,byteCost:n},dimensions:["1d","2d"],type:["unfilterable-float","float"],compressionBlock:{width:4,height:4},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:[i,...s],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}});this.mFormatCapabilitys.set("etc2-rgb8unorm",r("etc2-rgb8unorm",["red","green","blue"],2,["etc2-rgb8unorm-srgb"])),this.mFormatCapabilitys.set("etc2-rgb8unorm-srgb",r("etc2-rgb8unorm-srgb",["red","green","blue"],2,["etc2-rgb8unorm"])),this.mFormatCapabilitys.set("etc2-rgb8a1unorm",r("etc2-rgb8a1unorm",["red","green","blue","alpha"],2,["etc2-rgb8a1unorm-srgb"])),this.mFormatCapabilitys.set("etc2-rgb8a1unorm-srgb",r("etc2-rgb8a1unorm-srgb",["red","green","blue","alpha"],2,["etc2-rgb8a1unorm"])),this.mFormatCapabilitys.set("etc2-rgba8unorm",r("etc2-rgba8unorm",["red","green","blue","alpha"],4,["etc2-rgba8unorm-srgb"])),this.mFormatCapabilitys.set("etc2-rgba8unorm-srgb",r("etc2-rgba8unorm-srgb",["red","green","blue","alpha"],4,["etc2-rgba8unorm"])),this.mFormatCapabilitys.set("eac-r11unorm",r("eac-r11unorm",["red"],8,[])),this.mFormatCapabilitys.set("eac-r11snorm",r("eac-r11snorm",["red"],8,[])),this.mFormatCapabilitys.set("eac-rg11unorm",r("eac-rg11unorm",["red","green"],8,[])),this.mFormatCapabilitys.set("eac-rg11snorm",r("eac-rg11snorm",["red","green"],8,[]))}if(e.capabilities.hasFeature("texture-compression-astc")){let r=(i,a,n)=>({format:i,aspect:{types:["red","green","blue","alpha"],byteCost:4},dimensions:["1d","2d"],type:["unfilterable-float","float"],compressionBlock:{width:a[0],height:a[1]},usage:{textureBinding:!0,renderAttachment:!1,copy:{compatible:[i,...n],textureSource:!0,textureDestination:!0,imageSource:!0,imageDestination:!0},storage:!1}});this.mFormatCapabilitys.set("astc-4x4-unorm",r("astc-4x4-unorm",[4,4],["astc-4x4-unorm-srgb"])),this.mFormatCapabilitys.set("astc-4x4-unorm-srgb",r("astc-4x4-unorm-srgb",[4,4],["astc-4x4-unorm"])),this.mFormatCapabilitys.set("astc-5x4-unorm",r("astc-5x4-unorm",[5,4],["astc-5x4-unorm-srgb"])),this.mFormatCapabilitys.set("astc-5x4-unorm-srgb",r("astc-5x4-unorm-srgb",[5,4],["astc-5x4-unorm"])),this.mFormatCapabilitys.set("astc-5x5-unorm",r("astc-5x5-unorm",[5,5],["astc-5x5-unorm-srgb"])),this.mFormatCapabilitys.set("astc-5x5-unorm-srgb",r("astc-5x5-unorm-srgb",[5,5],["astc-5x5-unorm"])),this.mFormatCapabilitys.set("astc-6x5-unorm",r("astc-6x5-unorm",[6,5],["astc-6x5-unorm-srgb"])),this.mFormatCapabilitys.set("astc-6x5-unorm-srgb",r("astc-6x5-unorm-srgb",[6,5],["astc-6x5-unorm"])),this.mFormatCapabilitys.set("astc-6x6-unorm",r("astc-6x6-unorm",[6,6],["astc-6x6-unorm-srgb"])),this.mFormatCapabilitys.set("astc-6x6-unorm-srgb",r("astc-6x6-unorm-srgb",[6,6],["astc-6x6-unorm"])),this.mFormatCapabilitys.set("astc-8x5-unorm",r("astc-8x5-unorm",[8,5],["astc-8x5-unorm-srgb"])),this.mFormatCapabilitys.set("astc-8x5-unorm-srgb",r("astc-8x5-unorm-srgb",[8,5],["astc-8x5-unorm"])),this.mFormatCapabilitys.set("astc-8x6-unorm",r("astc-8x6-unorm",[8,6],["astc-8x6-unorm-srgb"])),this.mFormatCapabilitys.set("astc-8x6-unorm-srgb",r("astc-8x6-unorm-srgb",[8,6],["astc-8x6-unorm"])),this.mFormatCapabilitys.set("astc-8x8-unorm",r("astc-8x8-unorm",[8,8],["astc-8x8-unorm-srgb"])),this.mFormatCapabilitys.set("astc-8x8-unorm-srgb",r("astc-8x8-unorm-srgb",[8,8],["astc-8x8-unorm"])),this.mFormatCapabilitys.set("astc-10x5-unorm",r("astc-10x5-unorm",[10,5],["astc-10x5-unorm-srgb"])),this.mFormatCapabilitys.set("astc-10x5-unorm-srgb",r("astc-10x5-unorm-srgb",[10,5],["astc-10x5-unorm"])),this.mFormatCapabilitys.set("astc-10x6-unorm",r("astc-10x6-unorm",[10,6],["astc-10x6-unorm-srgb"])),this.mFormatCapabilitys.set("astc-10x6-unorm-srgb",r("astc-10x6-unorm-srgb",[10,6],["astc-10x6-unorm"])),this.mFormatCapabilitys.set("astc-10x8-unorm",r("astc-10x8-unorm",[10,8],["astc-10x8-unorm-srgb"])),this.mFormatCapabilitys.set("astc-10x8-unorm-srgb",r("astc-10x8-unorm-srgb",[10,8],["astc-10x8-unorm"])),this.mFormatCapabilitys.set("astc-10x10-unorm",r("astc-10x10-unorm",[10,10],["astc-10x10-unorm-srgb"])),this.mFormatCapabilitys.set("astc-10x10-unorm-srgb",r("astc-10x10-unorm-srgb",[10,10],["astc-10x10-unorm"])),this.mFormatCapabilitys.set("astc-12x10-unorm",r("astc-12x10-unorm",[12,10],["astc-12x10-unorm-srgb"])),this.mFormatCapabilitys.set("astc-12x10-unorm-srgb",r("astc-12x10-unorm-srgb",[12,10],["astc-12x10-unorm"])),this.mFormatCapabilitys.set("astc-12x12-unorm",r("astc-12x12-unorm",[12,12],["astc-12x12-unorm-srgb"])),this.mFormatCapabilitys.set("astc-12x12-unorm-srgb",r("astc-12x12-unorm-srgb",[12,12],["astc-12x12-unorm"]))}}capabilityOf(e){let t=this.mFormatCapabilitys.get(e);if(!t)throw new o(`Format "${e}" has no capabilities.`,this);let r=new Set;t.usage.copy&&((t.usage.copy.imageSource||t.usage.copy.textureSource)&&r.add(P.CopySource),(t.usage.copy.imageDestination||t.usage.copy.textureDestination)&&r.add(P.CopyDestination)),t.usage.textureBinding&&r.add(P.TextureBinding),t.usage.storage&&r.add(P.Storage),t.usage.renderAttachment&&r.add(P.RenderAttachment);let i=(()=>{let a=new Set(t.type);return a.has("float")?[a,"float"]:a.has("uint")?[a,"uint"]:a.has("sint")?[a,"sint"]:a.has("sint")?[a,"sint"]:a.has("depth")?[a,"depth"]:[a,"unfilterable-float"]})();return{format:t.format,copyCompatible:new Set(t.usage.copy?t.usage.copy.compatible:[]),textureUsages:r,dimensions:new Set(t.dimensions),aspects:new Set(t.aspect.types),sampleTypes:{primary:i[1],all:i[0]},renderAttachment:{resolveTarget:t.usage.renderAttachment?t.usage.renderAttachment.resolveTarget:!1,multisample:t.usage.renderAttachment?t.usage.renderAttachment.multisample:!1,blendable:t.usage.renderAttachment?t.usage.renderAttachment.blendable:!1},storage:{readonly:t.usage.storage?t.usage.storage.readonly:!1,writeonly:t.usage.storage?t.usage.storage.writeonly:!1,readwrite:t.usage.storage?t.usage.storage.readwrite:!1},copy:{textureSource:t.usage.copy?t.usage.copy.textureSource:!1,textureTarget:t.usage.copy?t.usage.copy.textureDestination:!1,imageSource:t.usage.copy?t.usage.copy.imageSource:!1,imageTarget:t.usage.copy?t.usage.copy.imageDestination:!1}}}}});var Dt,qr=l(()=>{B();lr();cr();Lr();qt();$r();Yr();Hr();_r();Dt=class u{static async request(e,t){let r=await window.navigator.gpu.requestAdapter({powerPreference:e});if(!r)throw new o("Error requesting GPU adapter",u);let i=new Array,a={};if(t){if(t.features)for(let s of t.features){if(!r.features.has(s.name)){if(s.required)throw new o(`No Gpu found with the required feature "${s.name}"`,this);continue}i.push(s.name)}if(t.limits)for(let s of t.limits){let m=r.limits[s.name];if(typeof m>"u")throw new o(`Gpu does not support any "${s.name}" limit.`,this);let p=s.value;if(m<s.value){if(s.required)throw new o(`No Gpu found with the required limit "${s.name}" (has: ${m}, required: ${s.value})`,this);p=m}a[s.name]=p}}let n=await r.requestDevice({requiredFeatures:i,requiredLimits:a});if(!n)throw new o("Error requesting GPU device",u);return new u(n)}mCapabilities;mFormatValidator;mFrameChangeListener;mFrameCounter;mGpuDevice;get capabilities(){return this.mCapabilities}get formatValidator(){return this.mFormatValidator}get frameCount(){return this.mFrameCounter}get gpu(){return this.mGpuDevice}constructor(e){this.mGpuDevice=e,this.mCapabilities=new Tt(e),this.mFrameCounter=0,this.mFormatValidator=new Bt(this),this.mFrameChangeListener=new _}addFrameChangeListener(e){this.mFrameChangeListener.push(e)}canvas(e){let t=e??document.createElement("canvas");return new wt(this,t)}computePass(e){return new Ye(this,e)}executor(e){return new We(this,e)}removeFrameChangeListener(e){this.mFrameChangeListener.remove(e)}renderPass(e,t,r=!0){return new ut(this,e,r,t)}renderTargets(e=!1){return new lt(this,e)}shader(e){return new St(this,e)}startNewFrame(){this.mFrameCounter++;for(let e of this.mFrameChangeListener)e()}}});var j,Ve=l(()=>{B();j=class u{mData;get data(){return this.mData}get w(){return this.mData[3]}get x(){return this.mData[0]}get y(){return this.mData[1]}get z(){return this.mData[2]}constructor(e){this.mData=[...e]}add(e){let t=new Array;if(e instanceof u){if(this.mData.length!==e.data.length)throw new o("Vectors need to be the same length for calculation.",this);for(let r=0;r<this.mData.length;r++)t.push(this.mData[r]+e.data[r])}else for(let r of this.mData)t.push(r+e);return new u(t)}length(){return Math.hypot(...this.mData)}multCross(e){if(this.mData.length!==e.data.length&&this.mData.length!==3)throw new o("Vectors need to be the length of 3 for corss product calculation.",this);return new u([this.mData[1]*e.data[2]-this.mData[2]*e.data[1],this.mData[2]*e.data[0]-this.mData[0]*e.data[2],this.mData[0]*e.data[1]-this.mData[1]*e.data[0]])}multDot(e){if(this.mData.length!==e.data.length)throw new o("Vectors need to be the same length for calculation.",this);let t=0;for(let r=0;r<this.mData.length;r++)t+=this.mData[r]*e.data[r];return t}normalize(){let e=this.length(),t=new Array;for(let r of this.mData)t.push(r/e);return new u(t)}sub(e){let t=new Array;if(e instanceof u){if(this.mData.length!==e.data.length)throw new o("Vectors need to be the same length for calculation.",this);for(let r=0;r<this.mData.length;r++)t.push(this.mData[r]-e.data[r])}else for(let r of this.mData)t.push(r-e);return new u(t)}}});var Ct,Zr=l(()=>{B();Ve();Ct=class{mColor;get data(){return this.mColor.data}constructor(){this.mColor=new j([1,1,1,1])}setColor(e,t,r){if(e>1||e<0||t>1||t<0||r>1||r<0)throw new o(`Color values need to be in 0 to 1 range. (R:${e}, G:${t}, B:${r})`,this);this.mColor.data[0]=e,this.mColor.data[1]=t,this.mColor.data[2]=r}}});var X,Rt=l(()=>{B();Ve();X=class u{static fromArray(e,t,r){let i=new Array;for(let a=0;a<t;a++){let n=new Array(r);for(let s=0;s<r;s++)n[s]=e[s*t+a];i.push(n)}return new u(i)}static identity(e){let t=new Array;for(let r=0;r<e;r++){let i=new Array(e).fill(0);i[r]=1,t.push(i)}return new u(t)}mData;get data(){return this.mData}get dataArray(){let e=new Array;for(let t=0;t<this.width;t++)for(let r=0;r<this.height;r++)e.push(this.mData[r][t]);return e}get height(){return this.mData.length}get width(){return this.mData[0]?.length??0}constructor(e){this.mData=e}add(e){let t=new Array;if(e instanceof u){if(this.height!==e.height&&this.width!==e.width)throw new o("Matrices need to be the same size for calculation.",this);for(let r=0;r<this.height;r++){let i=new Array(this.width);for(let a=0;a<i.length;a++)i[a]=this.mData[r][a]+e.data[r][a];t.push(i)}}else for(let r=0;r<this.height;r++){let i=new Array(this.width);for(let a=0;a<i.length;a++)i[a]=this.mData[r][a]+e;t.push(i)}return new u(t)}adjoint(){let e=new Array;for(let r=0;r<this.height;r++){let i=new Array;for(let a=0;a<this.width;a++){let n=this.omit(r,a).determinant();n*=Math.pow(-1,r+1+(a+1)),i.push(n)}e.push(i)}return new u(e).transpose()}determinant(){if(this.height===1&&this.width===1)return this.data[0][0];let e=0;for(let t=0;t<this.width;t++){let r=this.data[0][t];if(r*=t%2?-1:1,r!==0){let i=this.omit(0,t);e+=r*i.determinant()}}return e}inverse(){let e=this.adjoint(),t=this.determinant();for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)e.data[i][r]/=t;return e}mult(e){let t=new Array;if(e instanceof u){if(this.width!==e.height)throw new o("Matrices A width and B height must match for multiplication.",this);for(let r=0;r<this.height;r++){let i=new Array(e.width);for(let a=0;a<i.length;a++){let n=0;for(let s=0;s<this.height;s++)n+=this.mData[r][s]*e.data[s][a];i[a]=n}t.push(i)}}else for(let r=0;r<this.height;r++){let i=new Array(this.width);for(let a=0;a<this.width;a++)i[a]=this.mData[r][a]*e;t.push(i)}return new u(t)}omit(e,t){let r=new Array;for(let i=0;i<this.height;i++)if(i!==e){let a=new Array;for(let n=0;n<this.width;n++)n!==t&&a.push(this.data[i][n]);r.push(a)}return new u(r)}sub(e){let t=new Array;if(e instanceof u){if(this.height!==e.height&&this.width!==e.width)throw new o("Matrices need to be the same size for calculation.",this);for(let r=0;r<this.height;r++){let i=new Array(this.width);for(let a=0;a<i.length;a++)i[a]=this.mData[r][a]-e.data[r][a];t.push(i)}}else for(let r=0;r<this.height;r++){let i=new Array(this.width);for(let a=0;a<i.length;a++)i[a]=this.mData[r][a]-e;t.push(i)}return new u(t)}transpose(){let e=new Array;for(let t=0;t<this.width;t++){let r=new Array;for(let i=0;i<this.height;i++)r.push(this.data[i][t]);e.push(r)}return new u(e)}vectorMult(e){if(this.width!==e.data.length)throw new o("Matrices A width and B height must match for multiplication.",this);let t=new Array;for(let a of e.data)t.push([a]);let r=this.mult(new u(t)),i=new Array;for(let a=0;a<r.height;a++)i.push(r.data[a][0]);return new j(i)}}});var Pt,Kr=l(()=>{Pt=class{mX;mY;mZ;get x(){return this.mX}set x(e){this.mX=e}get y(){return this.mY}set y(e){this.mY=e}get z(){return this.mZ}set z(e){this.mZ=e}constructor(){this.mX=0,this.mY=0,this.mZ=0}}});var we,Qr=l(()=>{Kr();Rt();Ve();we=class u{static fromRotation(e,t,r){let i=e%360*Math.PI/180,a=t%360*Math.PI/180,n=r%360*Math.PI/180,s=Math.cos(i*.5),m=Math.sin(i*.5),p=Math.cos(a*.5),c=Math.sin(a*.5),h=Math.cos(n*.5),v=Math.sin(n*.5),g=u.identity();return g.w=s*p*h+m*c*v,g.x=m*p*h-s*c*v,g.y=s*c*h+m*p*v,g.z=s*p*v-m*c*h,g}static identity(){return new u(1,0,0,0)}mW;mX;mY;mZ;get vectorForward(){let e=2*Math.pow(this.mX,2),t=2*Math.pow(this.mY,2),r=2*this.mX*this.mZ,i=2*this.mY*this.mW,a=2*this.mY*this.mZ,n=2*this.mX*this.mW,s=r+i,m=a-n,p=1-e-t;return new j([s,m,p])}get vectorRight(){let e=2*Math.pow(this.mY,2),t=2*Math.pow(this.mZ,2),r=2*this.mX*this.mY,i=2*this.mZ*this.mW,a=2*this.mY*this.mZ,n=2*this.mX*this.mW,s=1-e-t,m=r+i,p=a+n;return new j([s,m,p])}get vectorUp(){let e=2*Math.pow(this.mX,2),t=2*Math.pow(this.mZ,2),r=2*this.mX*this.mY,i=2*this.mZ*this.mW,a=2*this.mY*this.mZ,n=2*this.mX*this.mW,s=r-i,m=1-e-t,p=a+n;return new j([s,m,p])}get w(){return this.mW}set w(e){this.mW=e}get x(){return this.mX}set x(e){this.mX=e}get y(){return this.mY}set y(e){this.mY=e}get z(){return this.mZ}set z(e){this.mZ=e}constructor(e,t,r,i){this.mX=t,this.mY=r,this.mZ=i,this.mW=e}addEulerRotation(e,t,r){return this.mult(u.fromRotation(e,t,r))}asEuler(){let e=new Pt,t=2*(this.mW*this.mX+this.mY*this.mZ),r=1-2*(this.mX*this.mX+this.mY*this.mY),a=Math.atan2(t,r)*180/Math.PI%360;e.x=a<0?a+360:a;let n=Math.sqrt(1+2*(this.mW*this.mY-this.mX*this.mZ)),s=Math.sqrt(1-2*(this.mW*this.mY-this.mX*this.mZ)),p=(2*Math.atan2(n,s)-Math.PI/2)*180/Math.PI%360;e.y=p<0?p+360:p;let c=2*(this.mW*this.mZ+this.mX*this.mY),h=1-2*(this.mY*this.mY+this.mZ*this.mZ),g=Math.atan2(c,h)*180/Math.PI%360;return e.z=g<0?g+360:g,e}asMatrix(){let e=2*Math.pow(this.mX,2),t=2*Math.pow(this.mY,2),r=2*Math.pow(this.mZ,2),i=2*this.mX*this.mY,a=2*this.mZ*this.mW,n=2*this.mX*this.mZ,s=2*this.mY*this.mW,m=2*this.mY*this.mZ,p=2*this.mX*this.mW,c=X.identity(4);return c.data[0][0]=1-t-r,c.data[0][1]=i-a,c.data[0][2]=n+s,c.data[1][0]=i+a,c.data[1][1]=1-e-r,c.data[1][2]=m-p,c.data[2][0]=n-s,c.data[2][1]=m+p,c.data[2][2]=1-e-t,c}mult(e){let t=this.mW*e.w-this.mX*e.x-this.mY*e.y-this.mZ*e.z,r=this.mW*e.x+this.mX*e.w+this.mY*e.z-this.mZ*e.y,i=this.mW*e.y-this.mX*e.z+this.mY*e.w+this.mZ*e.x,a=this.mW*e.z+this.mX*e.y-this.mY*e.x+this.mZ*e.w;return new u(t,r,i,a)}normalize(){let e=Math.hypot(Math.pow(this.mW,2),Math.pow(this.mX,2),Math.pow(this.mY,2),Math.pow(this.mZ,2));return new u(this.mW/e,this.mX/e,this.mY/e,this.mZ/e)}}});var k,Qt=l(()=>{Rt();Qr();Ve();k=class{mPivot;mRotation;mScale;mTranslation;get pivotX(){return this.mPivot.data[0][3]}set pivotX(e){this.mPivot.data[0][3]=e}get pivotY(){return this.mPivot.data[1][3]}set pivotY(e){this.mPivot.data[1][3]=e}get pivotZ(){return this.mPivot.data[2][3]}set pivotZ(e){this.mPivot.data[2][3]=e}get rotationPitch(){return this.mRotation.asEuler().x}get rotationRoll(){return this.mRotation.asEuler().z}get rotationYaw(){return this.mRotation.asEuler().y}get scaleDepth(){return this.mScale.data[2][2]}get scaleHeight(){return this.mScale.data[1][1]}get scaleWidth(){return this.mScale.data[0][0]}get translationX(){return this.mTranslation.data[0][3]}get translationY(){return this.mTranslation.data[1][3]}get translationZ(){return this.mTranslation.data[2][3]}constructor(){this.mScale=X.identity(4),this.mTranslation=X.identity(4),this.mRotation=new we(1,0,0,0),this.mPivot=X.identity(4)}addEulerRotation(e,t,r){this.mRotation=this.mRotation.addEulerRotation(e,t,r)}addRotation(e,t,r){this.mRotation=we.fromRotation(e,t,r).mult(this.mRotation)}addScale(e,t,r){this.mScale.data[0][0]+=e,this.mScale.data[1][1]+=t,this.mScale.data[2][2]+=r}addTranslation(e,t,r){return this.mTranslation.data[0][3]+=e,this.mTranslation.data[1][3]+=t,this.mTranslation.data[2][3]+=r,this}getMatrix(e){switch(e){case 4:return this.mScale;case 3:return this.mTranslation;case 1:return this.mRotation.asMatrix();case 2:{let t=this.getMatrix(1),r;return this.pivotX!==0||this.pivotY!==0||this.pivotZ!==0?r=this.mPivot.inverse().mult(t).mult(this.mPivot):r=t,r}case 5:{let t=this.getMatrix(4),r=this.getMatrix(3),i=this.getMatrix(2);return r.mult(i).mult(t)}}}setRotation(e,t,r){let i=e??this.rotationPitch,a=t??this.rotationYaw,n=r??this.rotationRoll;this.mRotation=we.fromRotation(i,a,n)}setScale(e,t,r){return this.mScale.data[0][0]=e??this.scaleWidth,this.mScale.data[1][1]=t??this.scaleHeight,this.mScale.data[2][2]=r??this.scaleDepth,this}setTranslation(e,t,r){return this.mTranslation.data[0][3]=e??this.translationX,this.mTranslation.data[1][3]=t??this.translationY,this.mTranslation.data[2][3]=r??this.translationZ,this}translateInDirection(e,t,r){let i=new j([t,r,e,1]),a=this.getMatrix(1).vectorMult(i);this.addTranslation(a.x,a.y,a.z)}}});var Lt,Jr=l(()=>{Rt();Lt=class{mAngleOfView;mAspectRatio;mCacheProjectionMatrix;mFar;mNear;get angleOfView(){return this.mAngleOfView}set angleOfView(e){this.mAngleOfView=e,this.mCacheProjectionMatrix=null}get aspectRatio(){return this.mAspectRatio}set aspectRatio(e){this.mAspectRatio=e,this.mCacheProjectionMatrix=null}get far(){return this.mFar}set far(e){this.mFar=e,this.mCacheProjectionMatrix=null}get near(){return this.mNear}set near(e){this.mNear=e,this.mCacheProjectionMatrix=null}get projectionMatrix(){return this.mCacheProjectionMatrix===null&&(this.mCacheProjectionMatrix=this.createMatrix()),this.mCacheProjectionMatrix}constructor(){this.mAngleOfView=0,this.mNear=0,this.mFar=0,this.mAspectRatio=0,this.mCacheProjectionMatrix=null}createMatrix(){let e=X.identity(4);e.data[0][0]=0,e.data[1][1]=0,e.data[2][2]=0,e.data[3][3]=0;let t=this.mFar,r=this.mNear,i=this.mNear*Math.tan(this.angleOfView*Math.PI/180/2),a=-i,n=i*this.aspectRatio,s=-n;return e.data[0][0]=2*r/(n-s),e.data[0][2]=-(n+s)/(n-s),e.data[1][1]=2*r/(i-a),e.data[1][2]=-(i+a)/(i-a),e.data[2][2]=t/(t-r),e.data[2][3]=-(t*r)/(t-r),e.data[3][2]=1,e}}});var Gt,Jt=l(()=>{Qt();Gt=class{mProjection;mTransformation;get projection(){return this.mProjection}get transformation(){return this.mTransformation}constructor(e){this.mProjection=e,this.mTransformation=new k}getMatrix(e){switch(e){case 1:return this.mTransformation.getMatrix(3);case 2:return this.mTransformation.getMatrix(1);case 3:return this.mTransformation.getMatrix(2);case 4:return this.mProjection.projectionMatrix;case 5:{let t=this.getMatrix(1),r=this.getMatrix(2);return t.mult(r).inverse()}case 6:{let t=this.getMatrix(5);return this.getMatrix(4).mult(t)}}}}});var ti,ei=l(()=>{ti=`// ------------------------- Object Values ---------------------- //\r
@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\r
@group(0) @binding(1) var<uniform> color: vec4<f32>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
\r
// --------------------- Light calculations --------------------- //\r
\r
/**\r
 * Calculate point light output.\r
 */\r
fn calculatePointLights(fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\r
    // Count of point lights.\r
    let pointLightCount: u32 = arrayLength(&pointLights);\r
\r
    var lightResult: vec4<f32> = vec4<f32>(0, 0, 0, 1);\r
\r
    for (var index: u32 = 0; index < pointLightCount; index++) {\r
        var pointLight: PointLight = pointLights[index];\r
\r
        // Calculate light strength based on angle of incidence.\r
        let lightDirection: vec4<f32> = normalize(pointLight.position - fragmentPosition);\r
        let diffuse: f32 = max(dot(normal, lightDirection), 0.0);\r
\r
        lightResult += pointLight.color * diffuse;\r
    }\r
\r
    return lightResult;\r
}\r
\r
/**\r
 * Apply lights to fragment color.\r
 */\r
fn applyLight(colorIn: vec4<f32>, fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\r
    var lightColor: vec4<f32> = vec4<f32>(0, 0, 0, 1);\r
\r
    lightColor += ambientLight.color;\r
    lightColor += calculatePointLights(fragmentPosition, normal);\r
\r
    return lightColor * colorIn;\r
}\r
// -------------------------------------------------------------- //\r
\r
struct VertexOut {\r
    @builtin(position) position: vec4<f32>,\r
    @location(0) color: vec4<f32>,\r
    @location(1) normal: vec4<f32>,\r
    @location(2) fragmentPosition: vec4<f32>,\r
}\r
\r
struct VertexIn {\r
    @builtin(instance_index) instanceId : u32,\r
    @location(0) position: vec4<f32>,\r
    @location(1) normal: vec4<f32>\r
}\r
\r
@vertex\r
fn vertex_main(vertex: VertexIn) -> VertexOut {\r
    var worldposition: vec4<f32> = transformationMatrix * vertex.position;\r
\r
    var out: VertexOut;\r
    out.position = camera.viewProjection * worldposition;\r
    out.normal = vertex.normal;\r
    out.fragmentPosition = worldposition;\r
    out.color = color;\r
\r
    return out;\r
}\r
\r
struct FragmentIn {\r
    @location(0) color: vec4<f32>,\r
    @location(1) normal: vec4<f32>,\r
    @location(2) fragmentPosition: vec4<f32>,\r
}\r
\r
@fragment\r
fn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\r
    return applyLight(fragment.color, fragment.fragmentPosition, fragment.normal);\r
}`});var ii,ri=l(()=>{ii=`// ------------------------- Object Values ---------------------- //\r
@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\r
@group(0) @binding(1) var<storage, read> instancePositions: array<vec4<f32>>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- User Inputs ------------------------ //\r
@group(2) @binding(0) var cubeTextureSampler: sampler;\r
@group(2) @binding(1) var cubeTexture: texture_2d_array<f32>;\r
// -------------------------------------------------------------- //\r
\r
\r
// --------------------- Light calculations --------------------- //\r
\r
/**\r
 * Calculate point light output.\r
 */\r
fn calculatePointLights(fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\r
    // Count of point lights.\r
    let pointLightCount: u32 = arrayLength(&pointLights);\r
\r
    var lightResult: vec4<f32> = vec4<f32>(0, 0, 0, 1);\r
\r
    for (var index: u32 = 0; index < pointLightCount; index++) {\r
        var pointLight: PointLight = pointLights[index];\r
\r
        // Calculate light strength based on angle of incidence.\r
        let lightDirection: vec4<f32> = normalize(pointLight.position - fragmentPosition);\r
        let diffuse: f32 = max(dot(normal, lightDirection), 0.0);\r
\r
        lightResult += pointLight.color * diffuse;\r
    }\r
\r
    return lightResult;\r
}\r
\r
/**\r
 * Apply lights to fragment color.\r
 */\r
fn applyLight(colorIn: vec4<f32>, fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\r
    var lightColor: vec4<f32> = vec4<f32>(0, 0, 0, 1);\r
\r
    lightColor += ambientLight.color;\r
    lightColor += calculatePointLights(fragmentPosition, normal);\r
\r
    return lightColor * colorIn;\r
}\r
// -------------------------------------------------------------- //\r
\r
fn hash(x: u32) -> u32\r
{\r
    var result: u32 = x;\r
    result ^= result >> 16;\r
    result *= 0x7feb352du;\r
    result ^= result >> 15;\r
    result *= 0x846ca68bu;\r
    result ^= result >> 16;\r
    return result;\r
}\r
\r
struct VertexOut {\r
    @builtin(position) position: vec4<f32>,\r
    @location(0) uv: vec2<f32>,\r
    @location(1) normal: vec4<f32>,\r
    @location(2) fragmentPosition: vec4<f32>,\r
    @interpolate(flat) @location(3) textureLayer: u32\r
}\r
\r
struct VertexIn {\r
    @builtin(instance_index) instanceId : u32,\r
    @location(0) position: vec4<f32>,\r
    @location(1) uv: vec2<f32>,\r
    @location(2) normal: vec4<f32>\r
}\r
\r
override animationSeconds: f32 = 3; \r
\r
@vertex\r
fn vertex_main(vertex: VertexIn) -> VertexOut {\r
    let textureLayers: f32 = f32(textureNumLayers(cubeTexture));\r
\r
    var instancePosition: vec4<f32> = instancePositions[vertex.instanceId];\r
\r
    // Generate 4 random numbers.\r
    var hash1: u32 = hash(vertex.instanceId + 1);\r
    var hash2: u32 = hash(hash1);\r
    var hash3: u32 = hash(hash2);\r
    var hash4: u32 = hash(hash3);\r
\r
    // Convert into normals.\r
    var hashStartDisplacement: f32 = (f32(hash1) - pow(2, 31)) * 2 / pow(2, 32);\r
    var randomNormalPosition: vec4<f32> = vec4<f32>(\r
        (f32(hash2) - pow(2, 31)) * 2 / pow(2, 32),\r
        (f32(hash3) - pow(2, 31)) * 2 / pow(2, 32),\r
        (f32(hash4) - pow(2, 31)) * 2 / pow(2, 32),\r
        1\r
    );\r
\r
    // Calculate random position and animate a 100m spread. \r
    var randPosition: vec4<f32> = randomNormalPosition * 1000; // Randomise start spreading 1000m in all directsions.\r
    randPosition += randomNormalPosition * sin((time.timestamp / animationSeconds) + (hashStartDisplacement * 100)) * 100;\r
    randPosition.w = 1; // Reset w coord.\r
\r
    let randomPositionMatrix: mat4x4<f32> = mat4x4<f32>(\r
        1, 0, 0, 0,\r
        0, 1, 0, 0,\r
        0, 0, 1, 0,\r
        randPosition.x, randPosition.y, randPosition.z, 1\r
    );\r
\r
    let instancePositionMatrix: mat4x4<f32> = mat4x4<f32>(\r
        1, 0, 0, 0,\r
        0, 1, 0, 0,\r
        0, 0, 1, 0,\r
        instancePosition.x, instancePosition.y, instancePosition.z, 1\r
    );\r
\r
    var textureLayer: u32 = u32(floor(f32(vertex.instanceId) % textureLayers));\r
\r
    var worldposition: vec4<f32> = randomPositionMatrix * instancePositionMatrix * transformationMatrix * vertex.position;\r
\r
    var out: VertexOut;\r
    out.position = camera.viewProjection * worldposition;\r
    out.uv = vertex.uv;\r
    out.normal = vertex.normal;\r
    out.fragmentPosition = worldposition;\r
    out.textureLayer = textureLayer;\r
\r
    return out;\r
}\r
\r
struct FragmentIn {\r
    @location(0) uv: vec2<f32>,\r
    @location(1) normal: vec4<f32>,\r
    @location(2) fragmentPosition: vec4<f32>,\r
    @interpolate(flat) @location(3) textureLayer: u32\r
}\r
\r
@fragment\r
fn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\r
    return applyLight(textureSample(cubeTexture, cubeTextureSampler, fragment.uv, fragment.textureLayer), fragment.fragmentPosition, fragment.normal);\r
}`});var ni,ai=l(()=>{ni=`// ------------------------- Object Values ---------------------- //\r
struct Particle {\r
    position: vec3<f32>,\r
    rotation: vec3<f32>,\r
    velocity: vec3<f32>,\r
    lifetime: f32\r
}\r
@group(0) @binding(0) var<storage, read_write> particles: array<Particle>;\r
@group(0) @binding(1) var<storage, read_write> indirect: array<atomic<u32>, 4>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct CameraTransformation {\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>\r
}\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    translation: CameraTransformation,\r
    invertedTranslation: CameraTransformation,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
/**\r
 * PCG-Hash\r
 */\r
fn hash(input: u32) -> u32\r
{\r
    let state: u32 = input * 747796405u + 2891336453u;\r
    let word: u32 = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\r
    return (word >> 22u) ^ word;\r
}\r
\r
override animationSeconds: f32 = 3; \r
\r
struct ComputeParams {\r
    @builtin(global_invocation_id) globalInvocationId : vec3u\r
}\r
@compute @workgroup_size(64)\r
fn compute_main(params: ComputeParams) {\r
    const MAX_DISTANCE: f32 = 3;\r
    const MAX_LIFETIME: f32 = 9999;\r
\r
    let id = params.globalInvocationId.x;\r
    if(id >= arrayLength(&particles)) {\r
        return;\r
    }\r
\r
    var particle: Particle = particles[id];\r
\r
    // Atomic just in case\r
    atomicStore(&indirect[1], 600);\r
\r
    // Update time\r
    particle.lifetime -= time.delta;\r
\r
    // Mark particle to kill.\r
    let cameraDistance: f32 = distance(particle.position, camera.position);\r
    if(cameraDistance > MAX_DISTANCE && particle.lifetime > 1) {\r
        particle.lifetime = 0;\r
    }\r
\r
    // Recreate particle.\r
    if(particle.lifetime <= 0) {\r
        var hash1: u32 = hash(id * 10000  + u32(time.timestamp * 1000));\r
        var hash2: u32 = hash(hash1);\r
        var hash3: u32 = hash(hash2);\r
        var hash4: u32 = hash(hash3);\r
\r
        let radi: f32 = (f32(hash1) - pow(2, 31)) * 2 / pow(2, 32);\r
        let posX: f32 = (f32(hash2) - pow(2, 31)) * 2 / pow(2, 32);\r
        let posY: f32 = (f32(hash3) - pow(2, 31)) * 2 / pow(2, 32);\r
        let posZ: f32 = (f32(hash4) - pow(2, 31)) * 2 / pow(2, 32);\r
\r
        // Random normalized vector.\r
        var randomPosition: vec3<f32> =vec3<f32>(posX, posY, posZ);\r
        randomPosition = normalize(randomPosition);\r
\r
        // Flip Y when it is negative.\r
        randomPosition.y = abs(randomPosition.y);\r
\r
        // Scale ball by 10m\r
        randomPosition *= MAX_DISTANCE * 0.75;\r
\r
        particle.position = randomPosition + camera.position;\r
        particle.rotation = randomPosition;\r
        particle.lifetime = MAX_LIFETIME;\r
        particle.velocity = vec3<f32>(0.1, -0.2, 0);\r
    }\r
\r
    // Move by velocity.\r
    particle.position += particle.velocity * time.delta;\r
    particle.rotation += particle.velocity * time.delta * 8;\r
\r
    _ = animationSeconds;\r
\r
    particles[id] = particle;\r
}`});var si,oi=l(()=>{si=`// ------------------------- Object Values ---------------------- //\r
@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\r
struct Particle {\r
    position: vec3<f32>,\r
    rotation: vec3<f32>,\r
    velocity: vec3<f32>,\r
    lifetime: f32\r
}\r
@group(0) @binding(1) var<storage, read> particles: array<Particle>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct CameraTransformation {\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>\r
}\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    translation: CameraTransformation,\r
    invertedTranslation: CameraTransformation,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- User Inputs ------------------------ //\r
@group(2) @binding(0) var textureSampler: sampler;\r
@group(2) @binding(1) var texture: texture_2d<f32>;\r
// -------------------------------------------------------------- //\r
\r
struct VertexOut {\r
    @builtin(position) position: vec4<f32>,\r
    @location(0) uv: vec2<f32>,\r
    @location(1) fragmentPosition: vec4<f32>,\r
    @location(2) alpha: f32\r
}\r
\r
struct VertexIn {\r
    @builtin(instance_index) instanceId : u32,\r
    @location(0) position: vec4<f32>,\r
    @location(1) uv: vec2<f32>\r
}\r
\r
@vertex\r
fn vertex_main(vertex: VertexIn) -> VertexOut {\r
    const MAX_DISTANCE: f32 = 3;\r
    const MAX_LIFETIME: f32 = 9999;\r
\r
    var particle: Particle = particles[vertex.instanceId];\r
\r
    let positionMatrix: mat4x4<f32> = mat4x4<f32>(\r
        1, 0, 0, 0,\r
        0, 1, 0, 0,\r
        0, 0, 1, 0,\r
        particle.position.x, particle.position.y, particle.position.z, 1,\r
    );\r
\r
    let rotationMatrixX: mat4x4<f32> = mat4x4<f32>(\r
        1, 0, 0, 0,\r
        0, cos(particle.rotation.x), -sin(particle.rotation.x), 0,\r
        0, sin(particle.rotation.x), cos(particle.rotation.x), 0,\r
        0, 0, 0, 1\r
    );\r
\r
    let rotationMatrixY: mat4x4<f32> = mat4x4<f32>(\r
        cos(particle.rotation.y), 0, sin(particle.rotation.y), 0,\r
        0, 1, 0, 0,\r
        -sin(particle.rotation.y), 0, cos(particle.rotation.y), 0,\r
        0, 0, 0, 1\r
    );\r
\r
    let rotationMatrixZ: mat4x4<f32> = mat4x4<f32>(\r
        cos(particle.rotation.z), -sin(particle.rotation.z), 0, 0,\r
        sin(particle.rotation.z), cos(particle.rotation.z), 0, 0,\r
        0, 0, 1, 0,\r
        0, 0, 0, 1\r
    );\r
\r
    let rotationMatrix: mat4x4<f32> = rotationMatrixX * rotationMatrixY * rotationMatrixZ;\r
\r
    let distanceScale: f32 = (MAX_DISTANCE - distance(particle.position, camera.position)) / MAX_DISTANCE;\r
    let scalingMatrix: mat4x4<f32> = mat4x4<f32>(\r
        distanceScale, 0, 0, 0,\r
        0, distanceScale, 0, 0,\r
        0, 0, distanceScale, 0,\r
        0, 0, 0, 1,\r
    );\r
\r
    let worldPosition: vec4<f32> = positionMatrix * scalingMatrix * transformationMatrix * rotationMatrix * vertex.position;\r
\r
    var out: VertexOut;\r
    out.position = camera.viewProjection * worldPosition;\r
    out.uv = vertex.uv;\r
    out.fragmentPosition = worldPosition;\r
    out.alpha = clamp(particle.lifetime, 0, 1);\r
\r
    return out;\r
}\r
\r
struct FragmentIn {\r
    @location(0) uv: vec2<f32>,\r
    @location(1) fragmentPosition: vec4<f32>,\r
    @location(2) alpha: f32\r
}\r
\r
@fragment\r
fn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\r
    var color = textureSample(texture, textureSampler, fragment.uv);\r
    color.a *= fragment.alpha;\r
\r
    if(color.a == 0) {\r
        discard;\r
    }\r
\r
    return color;\r
}`});var mi,ui=l(()=>{mi=`// ------------------------- Object Values ---------------------- //\r
@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct CameraTransformation {\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>\r
}\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    translation: CameraTransformation,\r
    invertedTranslation: CameraTransformation,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
struct VertexOut {\r
    @builtin(position) position: vec4<f32>,\r
    @location(0) color: vec4<f32>,\r
}\r
\r
struct VertexIn {\r
    @builtin(instance_index) instanceId : u32,\r
    @location(0) position: vec4<f32>,\r
    @location(1) uv: vec2<f32>,\r
    @location(2) normal: vec4<f32>\r
}\r
\r
@vertex\r
fn vertex_main(vertex: VertexIn) -> VertexOut {\r
    var instanceLight: PointLight = pointLights[vertex.instanceId];\r
\r
    var out: VertexOut;\r
    out.position = camera.viewProjection * (instanceLight.position + vertex.position) * transformationMatrix;\r
    out.color = instanceLight.color;\r
\r
    return out;\r
}\r
\r
struct FragmentIn {\r
    @location(0) color: vec4<f32>,\r
}\r
\r
@fragment\r
fn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\r
    return fragment.color;\r
}`});var pi,li=l(()=>{pi=`// ------------------------- Object Values ---------------------- //\r
@group(0) @binding(0) var cubeTextureSampler: sampler;\r
@group(0) @binding(1) var cubeMap: texture_cube<f32>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct CameraTransformation {\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>\r
}\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    translation: CameraTransformation,\r
    invertedTranslation: CameraTransformation,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
struct VertexOut {\r
    @builtin(position) position: vec4<f32>,\r
    @location(1) fragmentPosition: vec4<f32>,\r
}\r
\r
struct VertexIn {\r
    @location(0) position: vec4<f32>,\r
}\r
\r
@vertex\r
fn vertex_main(vertex: VertexIn) -> VertexOut {\r
    var out: VertexOut;\r
    out.position = camera.projection * camera.invertedTranslation.rotation  * vertex.position;\r
    out.fragmentPosition = vertex.position;\r
\r
    return out;\r
}\r
\r
struct FragmentIn {\r
    @location(1) fragmentPosition: vec4<f32>,\r
}\r
\r
@fragment\r
fn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\r
  return textureSample(cubeMap, cubeTextureSampler, fragment.fragmentPosition.xyz);\r
}`});var di,ci=l(()=>{di=`// ------------------------- Object Values ---------------------- //\r
@group(0) @binding(0) var<uniform> transformationMatrix: mat4x4<f32>;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- World Values ---------------------- //\r
struct CameraTransformation {\r
    rotation: mat4x4<f32>,\r
    translation: mat4x4<f32>\r
}\r
struct Camera {\r
    viewProjection: mat4x4<f32>,\r
    view: mat4x4<f32>,\r
    projection: mat4x4<f32>,\r
    translation: CameraTransformation,\r
    invertedTranslation: CameraTransformation,\r
    position: vec3<f32>\r
}\r
@group(1) @binding(0) var<uniform> camera: Camera;\r
\r
struct TimeData {\r
    timestamp: f32,\r
    delta: f32\r
}\r
@group(1) @binding(1) var<uniform> time: TimeData;\r
\r
struct AmbientLight {\r
    color: vec4<f32>\r
}\r
@group(1) @binding(2) var<uniform> ambientLight: AmbientLight;\r
\r
struct PointLight {\r
    position: vec4<f32>,\r
    color: vec4<f32>,\r
    range: f32\r
}\r
@group(1) @binding(3) var<storage, read> pointLights: array<PointLight>;\r
\r
@group(1) @binding(4) var<storage, read_write> debugValue: f32;\r
// -------------------------------------------------------------- //\r
\r
\r
// ------------------------- User Inputs ------------------------ //\r
@group(2) @binding(0) var videoTextureSampler: sampler;\r
@group(2) @binding(1) var videoTexture: texture_2d<f32>;\r
// -------------------------------------------------------------- //\r
\r
\r
// --------------------- Light calculations --------------------- //\r
\r
/**\r
 * Calculate point light output.\r
 */\r
fn calculatePointLights(fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\r
    // Count of point lights.\r
    let pointLightCount: u32 = arrayLength(&pointLights);\r
\r
    var lightResult: vec4<f32> = vec4<f32>(0, 0, 0, 1);\r
\r
    for (var index: u32 = 0; index < pointLightCount; index++) {\r
        var pointLight: PointLight = pointLights[index];\r
\r
        // Calculate light strength based on angle of incidence.\r
        let lightDirection: vec4<f32> = normalize(pointLight.position - fragmentPosition);\r
        let diffuse: f32 = max(dot(normal, lightDirection), 0.0);\r
\r
        lightResult += pointLight.color * diffuse;\r
    }\r
\r
    return lightResult;\r
}\r
\r
/**\r
 * Apply lights to fragment color.\r
 */\r
fn applyLight(colorIn: vec4<f32>, fragmentPosition: vec4<f32>, normal: vec4<f32>) -> vec4<f32> {\r
    var lightColor: vec4<f32> = vec4<f32>(0, 0, 0, 1);\r
\r
    lightColor += ambientLight.color;\r
    lightColor += calculatePointLights(fragmentPosition, normal);\r
\r
    return lightColor * colorIn;\r
}\r
// -------------------------------------------------------------- //\r
struct VertexOut {\r
    @builtin(position) position: vec4<f32>,\r
    @location(0) uv: vec2<f32>,\r
    @location(1) normal: vec4<f32>,\r
    @location(2) fragmentPosition: vec4<f32>,\r
}\r
\r
struct VertexIn {\r
    @builtin(instance_index) instanceId : u32,\r
    @location(0) position: vec4<f32>,\r
    @location(1) uv: vec2<f32>,\r
    @location(2) normal: vec4<f32>\r
}\r
\r
@vertex\r
fn vertex_main(vertex: VertexIn) -> VertexOut {\r
    let translation: mat4x4<f32> = mat4x4(\r
        vec4<f32>(1, 0, 0, 0),\r
        vec4<f32>(0, 1, 0, 0),\r
        vec4<f32>(0, 0, 1, 0),\r
        transformationMatrix[3]\r
    );\r
\r
    let scaling: mat4x4<f32> = mat4x4(\r
        vec4<f32>(length(transformationMatrix[0].xyz), 0, 0, 0),\r
        vec4<f32>(0, length(transformationMatrix[1].xyz), 0, 0),\r
        vec4<f32>(0, 0, length(transformationMatrix[2].xyz), 0),\r
        vec4<f32>(0, 0, 0, 1),\r
    );\r
\r
    var transformedPosition: vec4<f32> = translation * camera.translation.rotation * scaling  * vertex.position;\r
\r
    var out: VertexOut;\r
    out.position = camera.viewProjection * transformedPosition;\r
    out.uv = vertex.uv;\r
    out.normal = camera.translation.rotation * vertex.normal;\r
    out.fragmentPosition = transformedPosition;\r
\r
    return out;\r
}\r
\r
struct FragmentIn {\r
    @location(0) uv: vec2<f32>,\r
    @location(1) normal: vec4<f32>,\r
    @location(2) fragmentPosition: vec4<f32>,\r
}\r
\r
@fragment\r
fn fragment_main(fragment: FragmentIn) -> @location(0) vec4<f32> {\r
    let videoColor: vec4<f32> = textureSample(videoTexture, videoTextureSampler, fragment.uv);\r
\r
    const red: f32 = 53;\r
    const green: f32 = 214;\r
    const blue: f32 = 19;\r
\r
    const redGreenRatio: f32 = red / green;\r
    const blueGreenRatio: f32 = blue / green;\r
\r
    const ratioTolerance: f32 = 0.5;\r
\r
    let curredRedGreenRatio: f32 = videoColor.r / videoColor.g;\r
    let curredBlueGreenRatio: f32 = videoColor.b / videoColor.g;\r
\r
    let compareRed: f32 = abs(curredRedGreenRatio - redGreenRatio);\r
    let compareBlue: f32 = abs(curredBlueGreenRatio - blueGreenRatio);\r
    \r
\r
    if(compareRed < ratioTolerance && compareBlue < ratioTolerance) {\r
        return vec4<f32>(videoColor.rgb, 0.0);\r
    }\r
\r
    return vec4<f32>(applyLight(videoColor, fragment.fragmentPosition, fragment.normal).rgb, (sin(fragment.uv.y * 750 + time.timestamp * 20) * 0.5 + 1) * 0.7);\r
}`});var fi,hi,gi,yi,bi=l(()=>{fi=[-1,1,0,1,1,1,0,1,1,-1,0,1,-1,-1,0,1],hi=[0,0,1,0,0,1,1,0,1,1,0,1],gi=[0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0],yi=[0,1,3,1,2,3]});var Oe,er,At,Ue,xi=l(()=>{Oe=[-1,1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,-1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,1],er=[.33333,.25,.66666,.25,.66666,.5,.33333,.25,.66666,.5,.33333,.5,.66666,1,.33333,1,.33333,.75,.66666,1,.33333,.75,.66666,.75,0,.25,.33333,.25,.33333,.5,0,.25,.33333,.5,0,.5,.66666,.25,1,.25,1,.5,.66666,.25,1,.5,.66666,.5,.33333,0,.66666,0,.66666,.25,.33333,0,.66666,.25,.33333,.25,.33333,.5,.66666,.5,.66666,.75,.33333,.5,.66666,.75,.33333,.75],At=[0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0],Ue=[4,5,6,4,6,7,1,0,3,1,3,2,0,4,7,0,7,3,5,1,2,5,2,6,0,1,5,0,5,4,7,6,2,7,2,3]});var vi,tr,Si=l(()=>{vi=[-1,.5,0,1,0,0,0,-.5,0,1,.5,1,-1,-.5,-.6,1,0,1,-1,.5,0,1,0,0,0,.5,0,1,.5,0,0,-.5,0,1,.5,1,0,.5,0,1,.5,0,1,-.5,-.6,1,1,1,0,-.5,0,1,.5,1,0,.5,0,1,.5,0,1,.5,-1.2,1,1,0,1,-.5,-.6,1,1,1],tr=[0,1,2,3,4,5,6,7,8,9,10,11]});var wi,Ti,Bi=l(()=>{B();Jt();wi=(u,e,t)=>{let r=new x;r.set("Forward",0),r.set("Back",0),r.set("Left",0),r.set("Right",0),r.set("Up",0),r.set("Down",0),r.set("RotateLeft",0),r.set("RotateRight",0),r.set("Yaw",0),r.set("Pitch",0),window.addEventListener("keydown",a=>{switch(a.code){case"KeyW":r.set("Forward",1);break;case"KeyS":r.set("Back",1);break;case"KeyA":r.set("Left",1);break;case"KeyD":r.set("Right",1);break;case"ShiftLeft":r.set("Up",1);break;case"ControlLeft":r.set("Down",1);break;case"KeyQ":r.set("RotateLeft",1);break;case"KeyE":r.set("RotateRight",1);break}}),window.addEventListener("keyup",a=>{switch(a.code){case"KeyW":r.set("Forward",0);break;case"KeyS":r.set("Back",0);break;case"KeyA":r.set("Left",0);break;case"KeyD":r.set("Right",0);break;case"ShiftLeft":r.set("Up",0);break;case"ControlLeft":r.set("Down",0);break;case"KeyQ":r.set("RotateLeft",0);break;case"KeyE":r.set("RotateRight",0);break}});let i=null;window.addEventListener("mousemove",a=>{let n=a.movementX,s=a.movementY,m=.5,p=Math.max(-1,Math.min(1,n*m)),c=Math.max(-1,Math.min(1,s*m));r.set("Yaw",p),r.set("Pitch",c),i!==null&&clearTimeout(i),i=setTimeout(()=>{r.set("Yaw",0),r.set("Pitch",0)},16)}),u.addEventListener("click",()=>{u.requestPointerLock()}),window.setInterval(()=>{r.get("Forward")>0&&e.transformation.translateInDirection(r.get("Forward")/50*10,0,0),r.get("Back")>0&&e.transformation.translateInDirection(-(r.get("Back")/50)*10,0,0),r.get("Right")>0&&e.transformation.translateInDirection(0,r.get("Right")/50*10,0),r.get("Left")>0&&e.transformation.translateInDirection(0,-(r.get("Left")/50)*10,0),r.get("Up")>0&&e.transformation.translateInDirection(0,0,r.get("Up")/50*10),r.get("Down")>0&&e.transformation.translateInDirection(0,0,-(r.get("Down")/50)*10),(r.get("Yaw")>0||r.get("Yaw")<0)&&e.transformation.addEulerRotation(0,r.get("Yaw"),0),(r.get("Pitch")>0||r.get("Pitch")<0)&&e.transformation.addEulerRotation(r.get("Pitch"),0,0),r.get("RotateLeft")>0&&e.transformation.addEulerRotation(0,0,r.get("RotateLeft")),r.get("RotateRight")>0&&e.transformation.addEulerRotation(0,0,-r.get("RotateRight")),t.write(e.getMatrix(6).dataArray,["viewProjection"]),t.write(e.getMatrix(5).dataArray,["view"]),t.write(e.getMatrix(4).dataArray,["projection"]),t.write([e.transformation.translationX,e.transformation.translationY,e.transformation.translationZ],["position"]),t.write(e.getMatrix(2).dataArray,["translation","rotation"]),t.write(e.getMatrix(1).dataArray,["translation","translation"]),t.write(e.getMatrix(2).inverse().dataArray,["invertedTranslation","rotation"]),t.write(e.getMatrix(1).inverse().dataArray,["invertedTranslation","translation"])},8)},Ti=(()=>{let u=0;return(e,t)=>{let r=document.getElementById("fps-display"),i=r.getContext("2d",{willReadFrequently:!0});if(t!==r.width&&(r.width=t,r.height=30),r.width<2)return;let a=i.getImageData(1,0,r.width-1,r.height),n=1;u<e&&(n=u/e,u=e),n===1?i.clearRect(r.width-1,0,1,r.height):i.clearRect(0,0,r.width,r.height);let s=Math.floor(r.height*n);i.putImageData(a,0,r.height-s,0,0,r.width-1,s);let m=e/u*r.height;i.fillStyle="#87beee",i.fillRect(r.width-1,r.height-m,1,m)}})()});var Zi={};var Wi,$i,Yi,Hi,Xi,_i,qi,Di=l(()=>{te();de();De();Ft();ze();fe();Vt();Ot();J();Ut();Et();jt();ie();Ne();qr();Zt();Kt();qt();Zr();Qt();Jr();Jt();ei();ri();ai();oi();ui();li();ci();bi();xi();Si();Bi();Wi=(u,e,t)=>{let s=u.shader(ii).setup(d=>{d.parameter("animationSeconds",w.Vertex),d.vertexEntryPoint("vertex_main",f=>{f.buffer("position","index-step").withParameter("position",0,"float32","v4"),f.buffer("uv","vertex-step").withParameter("uv",1,"float32","v2"),f.buffer("normal","vertex-step").withParameter("normal",2,"float32","v4")}),d.fragmentEntryPoint("fragment_main").addRenderTarget("main",0,"float32","v4"),d.group(0,"object",f=>{f.binding(0,"transformationMatrix",w.Vertex).asBuffer().withPrimitive("float32","m44"),f.binding(1,"instancePositions",w.Vertex,1).asBuffer().withArray().withPrimitive("float32","v4")}),d.group(1,t.layout),d.group(2,"user",f=>{f.binding(0,"cubeTextureSampler",w.Fragment).asSampler("filtering"),f.binding(1,"cubeTexture",w.Fragment|w.Vertex).asTexture("2d-array","rgba8unorm")})}).createRenderModule("vertex_main","fragment_main"),m=s.layout.getGroupLayout("object").create();m.data("transformationMatrix").createBuffer(new k().setScale(1,1,1).getMatrix(5).dataArray);let p=new Array;for(let d=0;d<50;d++)for(let f=0;f<50;f++)for(let S=0;S<50;S++)p.push(d*3,f*3,S*3,1);m.data("instancePositions").createBuffer(p);let c=s.layout.getGroupLayout("user").create(),h=c.data("cubeTexture").createTexture().texture;h.depth=3,h.mipCount=20,(async()=>{let d=["/source/game_objects/cube/texture_one/cube-texture.png","/source/game_objects/cube/texture_two/cube-texture.png","/source/game_objects/cube/texture_three/cube-texture.png"],f=0,S=0,V=new Array;for(let C=0;C<20;C++)V.push("#"+Math.floor(Math.random()*16777215).toString(16));let y=d.map(async(C,Ee)=>{let E=new Image;if(E.src=C,await E.decode(),(f===0||S===0)&&(S=E.naturalWidth,f=E.naturalHeight),f!==E.naturalHeight||S!==E.naturalWidth)throw new Error(`Texture image layers are not the same size. (${E.naturalWidth}, ${E.naturalHeight}) needs (${S}, ${f}).`);let Te=new Array,O=new Array;Te.push(createImageBitmap(E).then(Z=>{O.push({data:Z,mipLevel:0,targetOrigin:{x:0,y:0,z:Ee}})}));let Ci=1+Math.floor(Math.log2(Math.max(S,f)));for(let Z=1;Z<Ci;Z++){let me=new OffscreenCanvas(Math.max(1,Math.floor(S/Math.pow(2,Z))),Math.max(1,Math.floor(f/Math.pow(2,Z)))),Be=me.getContext("2d");Be.globalAlpha=1,Be.drawImage(E,0,0,S,f,0,0,me.width,me.height),Be.globalAlpha=.5,Be.fillStyle=V[Z],Be.fillRect(0,0,me.width,me.height),Te.push(createImageBitmap(me).then(Ri=>{O.push({data:Ri,mipLevel:Z,targetOrigin:{x:0,y:0,z:Ee}})}))}return await Promise.all(Te),O}).flat(),b=(await Promise.all(y)).flat();h.width=S,h.height=f,h.depth=d.length,h.copyFrom(...b),h.width=h.width*2,h.native,h.width=h.width/2})(),c.data("cubeTextureSampler").createSampler();let v=s.vertexParameter.create(Ue);v.create("position",Oe),v.create("uv",er),v.create("normal",At);let g=s.create(e);return g.primitiveCullMode="front",g.setParameter("animationSeconds",3),window.animationSpeed=d=>{g.setParameter("animationSeconds",d)},{pipeline:g,parameter:v,instanceCount:50*50*50,data:g.layout.withData(d=>{d.addGroup(m),d.addGroup(t),d.addGroup(c)})}},$i=(u,e,t)=>{let i=u.shader(ti).setup(m=>{m.vertexEntryPoint("vertex_main",p=>{p.buffer("position","index-step").withParameter("position",0,"float32","v4"),p.buffer("normal","vertex-step").withParameter("normal",1,"float32","v4")}),m.fragmentEntryPoint("fragment_main").addRenderTarget("main",0,"float32","v4"),m.group(0,"object",p=>{p.binding(0,"transformationMatrix",w.Vertex).asBuffer(!0).withPrimitive("float32","m44"),p.binding(1,"color",w.Vertex).asBuffer(!0).withPrimitive("float32","v4")}),m.group(1,t.layout)}).createRenderModule("vertex_main","fragment_main"),a=i.layout.getGroupLayout("object").create();a.data("transformationMatrix").createBuffer(3),a.data("transformationMatrix").asBufferView(Float32Array,0).write(new k().setScale(1,1,1).setTranslation(2,-30,5).getMatrix(5).dataArray),a.data("transformationMatrix").asBufferView(Float32Array,1).write(new k().setScale(1,1,1).setTranslation(0,-30,5).getMatrix(5).dataArray),a.data("transformationMatrix").asBufferView(Float32Array,2).write(new k().setScale(1,1,1).setTranslation(-2,-30,5).getMatrix(5).dataArray),a.data("color").createBuffer([.89,.74,0,1,.92,.48,.14,1]);let n=i.vertexParameter.create(Ue);n.create("position",Oe),n.create("normal",At);let s=i.create(e);return s.primitiveCullMode="front",[{pipeline:s,parameter:n,instanceCount:1,data:s.layout.withData(m=>{m.addGroup(a).withOffset("color",0).withOffset("transformationMatrix",0),m.addGroup(t)})},{pipeline:s,parameter:n,instanceCount:1,data:s.layout.withData(m=>{m.addGroup(a).withOffset("color",1).withOffset("transformationMatrix",1),m.addGroup(t)})},{pipeline:s,parameter:n,instanceCount:1,data:s.layout.withData(m=>{m.addGroup(a).withOffset("color",0).withOffset("transformationMatrix",2),m.addGroup(t)})}]},Yi=(u,e,t)=>{let r=u.shader(mi).setup(p=>{p.vertexEntryPoint("vertex_main",c=>{c.buffer("position","index-step").withParameter("position",0,"float32","v4"),c.buffer("uv","vertex-step").withParameter("uv",1,"float32","v2"),c.buffer("normal","vertex-step").withParameter("normal",2,"float32","v4")}),p.fragmentEntryPoint("fragment_main").addRenderTarget("main",0,"float32","v4"),p.group(0,"object",c=>{c.binding(0,"transformationMatrix",w.Vertex).asBuffer().withPrimitive("float32","m44")}),p.group(1,t.layout)}),i=r.createRenderModule("vertex_main","fragment_main"),a=r.layout.getGroupLayout("object").create();a.data("transformationMatrix").createBuffer(new k().setScale(1,1,1).getMatrix(5).dataArray);let n=i.create(e);n.primitiveCullMode="front";let s=i.vertexParameter.create(Ue);s.create("position",Oe),s.create("uv",er),s.create("normal",At);let m=t.data("pointLights").asBufferView(Float32Array);return{pipeline:n,parameter:s,instanceCount:m.length/12,data:n.layout.withData(p=>{p.addGroup(a),p.addGroup(t)})}},Hi=(u,e,t)=>{let r=u.shader(pi).setup(p=>{p.vertexEntryPoint("vertex_main",c=>{c.buffer("position","index-step").withParameter("position",0,"float32","v4")}),p.fragmentEntryPoint("fragment_main").addRenderTarget("main",0,"float32","v4"),p.group(0,"object",c=>{c.binding(0,"cubeTextureSampler",w.Fragment).asSampler("filtering"),c.binding(1,"cubeMap",w.Fragment).asTexture("cube","rgba8unorm")}),p.group(1,t.layout)}),i=r.createRenderModule("vertex_main","fragment_main"),a=r.layout.getGroupLayout("object").create(),n=a.data("cubeMap").createTexture().texture;n.depth=6,(async()=>{let p=["/source/game_objects/skybox/right.jpg","/source/game_objects/skybox/left.jpg","/source/game_objects/skybox/top.jpg","/source/game_objects/skybox/bottom.jpg","/source/game_objects/skybox/front.jpg","/source/game_objects/skybox/back.jpg"],c=0,h=0,v=p.map(async d=>{let f=new Image;if(f.src=d,await f.decode(),(c===0||h===0)&&(h=f.naturalWidth,c=f.naturalHeight),c!==f.naturalHeight||h!==f.naturalWidth)throw new Error(`Texture image layers are not the same size. (${f.naturalWidth}, ${f.naturalHeight}) needs (${h}, ${c}).`);return createImageBitmap(f)}),g=await Promise.all(v);n.width=h,n.height=c,n.depth=p.length,n.copyFrom(...g)})(),a.data("cubeTextureSampler").createSampler();let s=i.vertexParameter.create(Ue);s.create("position",Oe);let m=i.create(e);return m.primitiveCullMode="back",m.depthConfig().enableWrite(!1).compareWith("always"),{pipeline:m,parameter:s,instanceCount:1,data:m.layout.withData(p=>{p.addGroup(a),p.addGroup(t)})}},Xi=(u,e,t)=>{let i=u.shader(di).setup(v=>{v.vertexEntryPoint("vertex_main",g=>{g.buffer("position","index-step").withParameter("position",0,"float32","v4"),g.buffer("uv","vertex-step").withParameter("uv",1,"float32","v2"),g.buffer("normal","vertex-step").withParameter("normal",2,"float32","v4")}),v.fragmentEntryPoint("fragment_main").addRenderTarget("main",0,"float32","v4"),v.group(0,"object",g=>{g.binding(0,"transformationMatrix",w.Vertex).asBuffer().withPrimitive("float32","m44")}),v.group(1,t.layout),v.group(2,"user",g=>{g.binding(0,"videoTextureSampler",w.Fragment).asSampler("filtering"),g.binding(1,"videoTexture",w.Fragment).asTexture("2d","rgba8unorm")})}).createRenderModule("vertex_main","fragment_main"),a=i.layout.getGroupLayout("object").create();a.data("transformationMatrix").createBuffer(new k().addTranslation(-.5,-.5,100).setScale(15,8.4,0).getMatrix(5).dataArray);let n=i.layout.getGroupLayout("user").create(),s=n.data("videoTexture").createTexture().texture,m=document.createElement("video");m.preload="auto",m.loop=!0,m.muted=!0,m.src="/source/game_objects/video_canvas/earth.mp4",m.addEventListener("resize",()=>{s.height=Math.max(m.videoHeight,1),s.width=Math.max(m.videoWidth,1)}),m.play();let p=performance.now();u.addFrameChangeListener(()=>{if(m.readyState>1){let v=performance.now();createImageBitmap(m).then(g=>{v<p||(p=v,s.copyFrom(g))})}}),n.data("videoTextureSampler").createSampler();let c=i.vertexParameter.create(yi);c.create("position",fi),c.create("uv",hi),c.create("normal",gi);let h=i.create(e);return h.primitiveCullMode="none",h.depthConfig().enableWrite(!1),h.targetConfig("color").alphaBlend("add","one","one-minus-src-alpha").colorBlend("add","src-alpha","one-minus-src-alpha"),{pipeline:h,parameter:c,instanceCount:1,data:h.layout.withData(v=>{v.addGroup(a),v.addGroup(t),v.addGroup(n)})}},_i=(u,e,t)=>{let i=u.shader(si).setup(y=>{y.parameter("animationSeconds",w.Vertex),y.vertexEntryPoint("vertex_main",b=>{b.buffer("position-uv","index-step").withParameter("position",0,"float32","v4").withParameter("uv",1,"float32","v2")}),y.fragmentEntryPoint("fragment_main").addRenderTarget("main",0,"float32","v4"),y.computeEntryPoint("compute_main").size(64),y.group(0,"object",b=>{b.binding(0,"transformationMatrix",w.Vertex).asBuffer().withPrimitive("float32","m44"),b.binding(1,"particles",w.Vertex,1).asBuffer().withArray().withStruct(C=>{C.property("position").asPrimitive("float32","v3"),C.property("rotation").asPrimitive("float32","v3"),C.property("velocity").asPrimitive("float32","v3"),C.property("lifetime").asPrimitive("float32","x1")})}),y.group(1,t.layout),y.group(2,"user",b=>{b.binding(0,"textureSampler",w.Fragment).asSampler("filtering"),b.binding(1,"texture",w.Fragment).asTexture("2d","rgba8unorm")})}),a=i.createRenderModule("vertex_main","fragment_main"),n=a.layout.getGroupLayout("object").create();n.data("particles").createBuffer(18e3),n.data("transformationMatrix").createBuffer(new k().setScale(.02,.02,.02).getMatrix(5).dataArray);let s=i.layout.getGroupLayout("user").create(),m=s.data("texture").createTexture().texture;m.depth=6,(async()=>{let y=["/source/game_objects/leaf_particle/leaf.png"],b=0,C=0,Ee=y.map(async Te=>{let O=new Image;if(O.src=Te,await O.decode(),(b===0||C===0)&&(C=O.naturalWidth,b=O.naturalHeight),b!==O.naturalHeight||C!==O.naturalWidth)throw new Error(`Texture image layers are not the same size. (${O.naturalWidth}, ${O.naturalHeight}) needs (${C}, ${b}).`);return createImageBitmap(O)}),E=await Promise.all(Ee);m.width=C,m.height=b,m.depth=y.length,m.copyFrom(...E)})(),s.data("textureSampler").createSampler();let p=a.vertexParameter.create(tr);p.create("position-uv",vi);let c=a.create(e);c.primitiveCullMode="none",c.depthConfig().enableWrite(!0).compareWith("less"),c.targetConfig("color").alphaBlend("add","one","one-minus-src-alpha").colorBlend("add","src-alpha","one-minus-src-alpha");let h=new L(u,4*4).initialData(new Uint32Array([tr.length,0,0,0]).buffer),v={pipeline:c,parameter:p,instanceCount:0,data:c.layout.withData(y=>{y.addGroup(s),y.addGroup(t),y.addGroup(n)}),indirectBuffer:h},d=u.shader(ni).setup(y=>{y.parameter("animationSeconds",w.Vertex),y.computeEntryPoint("compute_main").size(64),y.group(0,"object",b=>{b.binding(0,"particles",w.Compute,4).asBuffer().withArray().withStruct(C=>{C.property("position").asPrimitive("float32","v3"),C.property("rotation").asPrimitive("float32","v3"),C.property("velocity").asPrimitive("float32","v3"),C.property("lifetime").asPrimitive("float32","x1")}),b.binding(1,"indirect",w.Compute,4).asBuffer().withPrimitive("uint32","v4")}),y.group(1,t.layout)}).createComputeModule("compute_main"),f=new Se(u,d);f.setParameter("animationSeconds",30);let S=d.layout.getGroupLayout("object").create();S.data("particles").set(n.data("particles").getRaw()),S.data("indirect").set(h);let V={pipeline:f,data:f.layout.withData(y=>{y.addGroup(S),y.addGroup(t)}),dimensions:{x:Math.ceil(18e3/(d.workGroupSizeX*d.workGroupSizeY*d.workGroupSizeZ)),y:1,z:1}};return[v,V]},qi=u=>{let t=new ve(u,"world").setup(a=>{a.binding(0,"camera",w.Vertex|w.Compute).asBuffer().withStruct(n=>{n.property("viewProjection").asPrimitive("float32","m44"),n.property("view").asPrimitive("float32","m44"),n.property("projection").asPrimitive("float32","m44"),n.property("translation").asStruct(s=>{s.property("rotation").asPrimitive("float32","m44"),s.property("translation").asPrimitive("float32","m44")}),n.property("invertedTranslation").asStruct(s=>{s.property("rotation").asPrimitive("float32","m44"),s.property("translation").asPrimitive("float32","m44")}),n.property("position").asPrimitive("float32","v3")}),a.binding(1,"timestamp",w.Vertex|w.Fragment|w.Compute).asBuffer().withStruct(n=>{n.property("timestamp").asPrimitive("float32","x1"),n.property("delta").asPrimitive("float32","x1")}),a.binding(2,"ambientLight",w.Fragment).asBuffer().withStruct(n=>{n.property("color").asPrimitive("float32","v4")}),a.binding(3,"pointLights",w.Fragment|w.Vertex,1).asBuffer().withArray().withStruct(n=>{n.property("position").asPrimitive("float32","v4"),n.property("color").asPrimitive("float32","v4"),n.property("range").asPrimitive("float32","x1")}),a.binding(4,"debugValue",w.Fragment|w.Compute,4).asBuffer().withPrimitive("float32","x1")}).create();t.data("camera").createBuffer();let r=new Ct;r.setColor(.3,.3,.3),t.data("ambientLight").createBuffer(r.data),t.data("pointLights").createBuffer([1,1,1,1,1,0,0,1,200,10,10,10,1,0,0,1,1,200,-10,10,10,1,0,1,0,1,200]),t.data("timestamp").createBuffer(),t.data("debugValue").createBuffer();let i=t.data("debugValue").asBufferView(Float32Array);return window.debugBuffer=()=>{i.read().then(a=>{console.log(a)})},t};(async()=>{let u=await Dt.request("high-performance",{features:[{name:"timestamp-query",required:!0}]}),e=u.canvas(document.getElementById("canvas")),t=u.renderTargets(!0).setup(y=>{y.addColor("color",0,!0,{r:0,g:1,b:0,a:0}).new("bgra8unorm",e),y.addDepthStencil(!0,1).new("depth24plus")});(()=>{let y=document.querySelector(".canvas-wrapper");new ResizeObserver(()=>{let b=Math.max(0,y.clientHeight-20),C=Math.max(y.clientWidth-20,0);t.resize(b,C)}).observe(y)})();let r=new Lt;r.aspectRatio=t.width/t.height,r.angleOfView=72,r.near=.1,r.far=Number.MAX_SAFE_INTEGER,t.addInvalidationListener(()=>{r.aspectRatio=t.width/t.height},"Resize");let i=new Gt(r);i.transformation.setTranslation(0,0,-4);let a=qi(u),n=a.data("timestamp").asBufferView(Float32Array),[s,m]=_i(u,t,a),p=[Hi(u,t,a),Wi(u,t,a),Yi(u,t,a),Xi(u,t,a),...$i(u,t,a),s],c=u.renderPass(t,y=>{for(let b of p)b.indirectBuffer?y.drawIndirect(b.pipeline,b.parameter,b.data,b.indirectBuffer):y.drawDirect(b.pipeline,b.parameter,b.data,b.instanceCount)});window.renderpassRuntime=()=>{c.probeTimestamp().then(([y,b])=>{console.log("Runtime:",Number(b-y)/1e6,"ms")})};let h=[m],v=u.computePass(y=>{for(let b of h)y.computeDirect(b.pipeline,b.data,b.dimensions.x,b.dimensions.y,b.dimensions.z)});window.computepassRuntime=()=>{v.probeTimestamp().then(([y,b])=>{console.log("Runtime:",Number(b-y)/1e6,"ms")})},wi(e.canvas,i,a.data("camera").asBufferView(Float32Array));let g=u.executor(y=>{v.execute(y),c.execute(y)}),d=document.getElementById("fpsCounter"),f=0,S=0,V=y=>{u.startNewFrame();let b=1e3/(y-f);S=(1-.05)*S+.05*b,n.write([y/1e3,(y-f)/1e3]),f=y,g.execute(),Ti(b,t.width),d.textContent=S.toFixed(0),requestAnimationFrame(V)};requestAnimationFrame(V)})()});(()=>{let u=new WebSocket("ws://127.0.0.1:8088");u.addEventListener("open",()=>{console.log("Refresh connection established")}),u.addEventListener("message",e=>{console.log("Bundle finished. Start refresh"),e.data==="REFRESH"&&window.location.reload()})})();Promise.resolve().then(()=>Di());
//# sourceMappingURL=page.js.map
